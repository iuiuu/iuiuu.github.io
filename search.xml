<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MySQL多表更新（关联表更新）</title>
    <url>/2019/08/18/mysql-update-multiple-tables-with-one-query/</url>
    <content><![CDATA[<p>在开发过程中，有时会遇到需要将某张表的字段值根据条件动态地更新到另一张表字段的问题，即通过一张表的字段修改另一张关联表中的内容。比如，存在两张表A（表名：test_a）、B（表名：test_b），他们的表结构如下：</p>
<span id="more"></span>
<p><strong>表A（test_a）：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>id</th>
<th>user_id</th>
<th>dept_id</th>
<th>update_time</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>34242</td>
<td>313</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>35322</td>
<td>320</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>35639</td>
<td>321</td>
</tr>
</tbody>
</table>
</div>
<p><strong>表B（test_b）：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>id</th>
<th>user_id</th>
<th>patient_id</th>
<th>dept_id</th>
<th>create_time</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>34242</td>
<td>342</td>
<td>0</td>
<td>2018-05-23 09:33:45</td>
</tr>
<tr>
<td>2</td>
<td>35322</td>
<td>365</td>
<td>0</td>
<td>2018-05-24 00:13:05</td>
</tr>
<tr>
<td>3</td>
<td>35639</td>
<td>398</td>
<td>0</td>
<td>2018-05-24 00:43:18</td>
</tr>
</tbody>
</table>
</div>
<p>现在我们需要将表A的 <em>dept_id</em> 字段值根据 <em>user_id</em> 字段同步到表B的 <em>dept_id</em> 字段中，即用表A中的 <em>dept_id</em> 字段数据去更新表B中的 <em>dept_id</em> 字段，条件是表A的 <em>user_id</em> 字段值与表B的 <em>user_id</em> 字段值相等时进行更新。</p>
<p>在MySQL中我们有几种方法可以做到：</p>
<p>方法一：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> test_a a, test_b b </span><br><span class="line"><span class="keyword">SET</span> b.dept_id <span class="operator">=</span> a.dept_id </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	b.user_id <span class="operator">=</span> a.user_id;</span><br></pre></td></tr></table></figure>
<p>方法二：（通过 INNER JOIN）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> test_a a</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> test_b b <span class="keyword">ON</span> a.user_id <span class="operator">=</span> b.user_id </span><br><span class="line"><span class="keyword">SET</span> b.dept_id <span class="operator">=</span> a.dept_id;</span><br></pre></td></tr></table></figure>
<p>方法三：（通过 LEFT JOIN）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> test_a a</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> test_b b <span class="keyword">ON</span> a.user_id <span class="operator">=</span> b.user_id </span><br><span class="line"><span class="keyword">SET</span> b.dept_id <span class="operator">=</span> a.dept_id;</span><br></pre></td></tr></table></figure>
<p>方法四：（通过子查询）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> test_b b </span><br><span class="line"><span class="keyword">SET</span> dept_id <span class="operator">=</span> ( <span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> test_a <span class="keyword">WHERE</span> user_id <span class="operator">=</span> b.user_id );</span><br></pre></td></tr></table></figure>
<p>上面的代码片断都是在两张表之间做关联，但只更新其中一张表的数据。其实，除了更新其中一张表的数据外，方法一、方法二和方法三是可以同时更新两张表的数据，如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 以下代码无实际意义，目的是方便记录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法一</span></span><br><span class="line"><span class="keyword">UPDATE</span> test_a a, test_b b </span><br><span class="line"><span class="keyword">SET</span> b.dept_id <span class="operator">=</span> a.dept_id, a.update_time <span class="operator">=</span> b.create_time</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	b.user_id <span class="operator">=</span> a.user_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法二：（通过 INNER JOIN）</span></span><br><span class="line"><span class="keyword">UPDATE</span> test_a a</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> test_b b <span class="keyword">ON</span> a.user_id <span class="operator">=</span> b.user_id </span><br><span class="line"><span class="keyword">SET</span> b.dept_id <span class="operator">=</span> a.dept_id, a.update_time <span class="operator">=</span> b.create_time;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法三：（通过 LEFT JOIN）</span></span><br><span class="line"><span class="keyword">UPDATE</span> test_a a</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> test_b b</span><br><span class="line"><span class="keyword">ON</span> a.user_id <span class="operator">=</span> b.user_id</span><br><span class="line"><span class="keyword">SET</span> b.dept_id <span class="operator">=</span> a.dept_id, a.update_time <span class="operator">=</span> b.create_time;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7下安装JDK1.8</title>
    <url>/2019/08/30/how-to-install-jdk-1-8-on-centos-7/</url>
    <content><![CDATA[<h2 id="安装Java-幵发工具包（JDK）"><a href="#安装Java-幵发工具包（JDK）" class="headerlink" title="安装Java 幵发工具包（JDK）"></a>安装Java 幵发工具包（JDK）</h2><span id="more"></span>
<ol>
<li><p>从 Oracle 官网下载 1.8 版本的<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">安装包 </a>（网速慢的同学请移步<a href="https://pan.baidu.com/s/13-dtHfGUxb9c2aFzHOqqwg">国内镜像</a>，提取码为 <strong>rjqx</strong>），本次安装的JDK版本为 <code>jdk-8u221-linux-x64.tar.gz</code>；</p>
</li>
<li><p>上传至服务器（系统为 CentOS7.3），存放目录为 <code>/home</code>；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp ~/Downloads/jdk-8u221-linux-x64.tar.gz root@192.168.3.67:/home</span><br></pre></td></tr></table></figure>
</li>
<li><p>新建JDK安装目录 <code>/usr/local/java</code>，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /usr/local/java</span><br></pre></td></tr></table></figure>
</li>
<li><p>解压文件 <code>jdk-8u221-linux-x64.tar.gz</code> 至安装目录 <code>/usr/local/java</code>，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u221-linux-x64.tar.gz -C /usr/local/java/</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装完成之后需要配置环境变量，将以下代码追加到文件 <code>profile</code> 末尾；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">JAVA_HOME为JDK安装目录</span></span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_221</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure>
<p>具体操作如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[johnson@localhost home]# vim /etc/profile</span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_221</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行命令 <code>source /etc/profile</code> 使刚刚新加的环境变量生效；</p>
</li>
<li><p>执行命令 <code>java -version</code> 检测安装是否成功，若安装并配置成功，可以看到以输出；如果得到诸如“-bash: java: 未找到命令 ”就需要退回去反复检査安装和配置步骤是否正确。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[johnson@localhost home]# java -version</span><br><span class="line">java version &quot;1.8.0_221&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_221-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p>如果 CentOS 系统中集成了 OpenJDK，那么需要先卸载自带的 OpenJDK 才能安装标准版 JDK，卸载具体步骤如下：</p>
<ol>
<li><p>系统终端输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep java</span><br></pre></td></tr></table></figure>
<p>若系统中集成了 OpenJDK，会出现 xxxx_openjdk_xxxx 的信息；</p>
</li>
<li><p>删除 OpenJDK，在终端输入以下命令即可删除成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -e –-nodeps xxxx_openjdk_xxxx </span><br></pre></td></tr></table></figure>
<p>也可以把上面两条命令合并成一条命令，一次性删除成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rpm -e --nodeps rpm -qa | grep java</span><br></pre></td></tr></table></figure>
<p>或者使用以下卸载命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y remove xxxx_openjdk_xxxx</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Java-术语说明"><a href="#Java-术语说明" class="headerlink" title="Java 术语说明"></a>Java 术语说明</h2><p>表 2-1 Java 术语</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>术语名</th>
<th>缩写</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>Java Development Kit</td>
<td>JDK</td>
<td>编写 Java 程序的程序员使用的软件</td>
</tr>
<tr>
<td>Java Runtime Environment</td>
<td>JRE</td>
<td>运行 Java 程序的用户使用的软件</td>
</tr>
<tr>
<td>Server JRE</td>
<td>—</td>
<td>在服务器上运行 Java 程序的软件</td>
</tr>
<tr>
<td>Standard Edition</td>
<td>SE</td>
<td>用于桌面或简单服务器应用的 Java 平台</td>
</tr>
<tr>
<td>Enterprise Edition</td>
<td>EE</td>
<td>用于复杂服务器应用的 Java 平台</td>
</tr>
<tr>
<td>Micro Edition</td>
<td>ME</td>
<td>用于手机和其他小型设备的 Java 平台</td>
</tr>
<tr>
<td>Java FX</td>
<td>—</td>
<td>用于图形化用户界面的一个替代工具包，在 Oracle 的 Java SE 发布版本中提供</td>
</tr>
<tr>
<td>OpenJDK</td>
<td>—</td>
<td>JavaSE的一个免费幵源实现，不包含浏览器集成或JavaFX</td>
</tr>
<tr>
<td>Java 2</td>
<td>J2</td>
<td>一个过时的术语，用于描述 1998 年 〜 2006 年之间的 Java 版本</td>
</tr>
<tr>
<td>Software Development Kit</td>
<td>SDK</td>
<td>一个过时的术语， 用于描述 1998 年 ~ 2006 年之间的 JDK</td>
</tr>
<tr>
<td>Update</td>
<td>u</td>
<td>Oracle 的术语， 表示 bug 修正版本</td>
</tr>
<tr>
<td>NetBeans</td>
<td>—</td>
<td>Oracle 的集成开发环境</td>
</tr>
</tbody>
</table>
</div>
<p>摘至《Java核心技术 卷I 基础知识（原书第十版）》</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis根据通配符批量删除Key</title>
    <url>/2019/09/03/redis-batch-delete/</url>
    <content><![CDATA[<p>Redis 目前还不支持根据通配符批量删除 Key 的命令，但我们可以借助 Redis 的 <code>del</code> 命令、Linux 管道和 xargs 指令来完成。</p>
<blockquote>
<p>Redis的 <code>del</code> 命令支持删除给定的一个或多个 key，并返回被删除 key 的数量。如命令 <code>del key1 key2 key3</code>。</p>
</blockquote>
<p>比如要删除所有以 WxMpSessionKey 开头的 Key，可以使用如下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[redis@iztz9ploifbvce ~]# redis-cli -h 192.168.182.227 -p 1379 keys &quot;WxMpSessionKey*&quot; |xargs redis-cli -h 192.168.182.227 -p 1379 del</span><br><span class="line">(integer) 2674</span><br></pre></td></tr></table></figure>
<p>如果连接 Redis 的 HOST 为 127.0.0.1，端口号也为默认的 6379，则以上的命令可以简写为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">redis-cli keys &quot;WxMpSessionKey*&quot; |xargs redis-cli del</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot 2.x 集成Jpa示例</title>
    <url>/2019/12/25/spring-boot-2_x-jpa/</url>
    <content><![CDATA[<h2 id="一、如何集成"><a href="#一、如何集成" class="headerlink" title="一、如何集成"></a>一、如何集成</h2><p>首先，在 pom 文件新增 redis 依赖：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<p>接着修改项目配置文件 application.properties，增加 redis 配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis host</span></span><br><span class="line">spring.redis.host=172.24.58.226</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis port</span></span><br><span class="line">spring.redis.port=6379</span><br></pre></td></tr></table></figure>
<p>经过上面简单的两步，即可在项目中使用 <code>StringRedisTemplate</code> 和 <code>RedisTemplate&lt;Object,Object&gt;</code>，因为从 Spring Boot 2.0 开始，Spring 容器是自动生成了这两个实例，可以直接注入使用。如以下代码片段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;Object, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 通过 StringRedisTemplate 保存</span></span><br><span class="line">stringRedisTemplate.opsForValue().set(<span class="string">&quot;strRedisTemplate&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 RedisTemplate&lt;Object, Object&gt; 保存</span></span><br><span class="line">tagRedisTemplate.opsForValue().set(<span class="string">&quot;tagRedisTemplate&quot;</span>, <span class="number">232</span>);</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="二、存储的-value-类型为字符串"><a href="#二、存储的-value-类型为字符串" class="headerlink" title="二、存储的 value 类型为字符串"></a>二、存储的 value 类型为字符串</h2><p>在实际使用中，若保存的 value 类型为字符串，可以直接通过注入 <code>StringRedisTemplate</code> 进行读写，如</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/redis&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">set</span><span class="params">(String name)</span> &#123;</span><br><span class="line">  <span class="comment">// 通过 StringRedisTemplate 写入 redis</span></span><br><span class="line">  stringRedisTemplate.opsForValue().set(<span class="string">&quot;iuiuu&quot;</span>, name);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过 StringRedisTemplate 获取</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">v</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;iuiuu&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">  map.iuiuu(<span class="string">&quot;tag&quot;</span>, v);</span><br><span class="line">  <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="三、存储的-value-是一个对象"><a href="#三、存储的-value-是一个对象" class="headerlink" title="三、存储的 value 是一个对象"></a>三、存储的 value 是一个对象</h2><p>这种情况，也可以通过 <code>StringRedisTemplate</code> 进行读写。不过，在写入之前先将对象序列化为 JSON 字符串，然后再写入 redis。读取的时候，从 redis 获取到的是是一个 JSON 字符串，需要反序列化相应的对象。如以下代码片段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/redis&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">set</span><span class="params">(String name)</span> &#123;</span><br><span class="line">  <span class="type">Tag</span> <span class="variable">tag</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tag</span>()</span><br><span class="line">    .setTagId(<span class="number">10001</span>)</span><br><span class="line">    .setTagName(name)</span><br><span class="line">    .setCount(<span class="number">20</span>)</span><br><span class="line">    .setStatus(<span class="number">1</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 序列化为 JSON 字符串</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> JsonUtil.toJson(tag);</span><br><span class="line">  <span class="comment">// 写入 redis</span></span><br><span class="line">  stringRedisTemplate.opsForValue().set(<span class="string">&quot;iuiuu&quot;</span>, str);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从 redis 读取</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;iuiuu&quot;</span>);</span><br><span class="line">  <span class="comment">// 反序列化为 Tag 对象</span></span><br><span class="line">  <span class="type">Tag</span> <span class="variable">t</span> <span class="operator">=</span> JsonUtil.fromJson(json, Tag.class);</span><br><span class="line">  </span><br><span class="line">  Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">  map.put(<span class="string">&quot;tag&quot;</span>, t);</span><br><span class="line">  <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面这种方式在读取或写入的时候，需要进行序列化与反序列化，会有点繁琐。我们还可以通过另一种简洁的方式——<code>RedisTemplate&lt;Object, Object&gt;</code>，不过在实际项目中，大多数情况下，我们不会直接使用 <code>RedisTemplate&lt;Object, Object&gt;</code>，而是会对 key，value 进行序列化，所以我们还需要新增一个配置类。以下示例新了配置类 <code>RedisConfig</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Redis 配置类</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/12/18 11:24 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean(&quot;tagRedisTemplate&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;String, Tag&gt; <span class="title function_">tagRedisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span>&#123;</span><br><span class="line">        RedisTemplate&lt;String, Tag&gt; template = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">        Jackson2JsonRedisSerializer&lt;Tag&gt; serializer = <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>&lt;&gt;(Tag.class);</span><br><span class="line">        template.setValueSerializer(serializer);</span><br><span class="line">        template.setHashValueSerializer(serializer);</span><br><span class="line">        template.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        template.setHashKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 标签类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/12/18 11:08 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tag</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签Id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> tagId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String tagName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签状态：1-正常 2-暂不显示</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签文章数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> count;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//省略 get、set</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 省略其它代码...</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(&quot;tagRedisTemplate&quot;)</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;String, Tag&gt; tagRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/redis&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">set</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="type">Tag</span> <span class="variable">tag</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tag</span>()</span><br><span class="line">            .setTagId(<span class="number">10001</span>)</span><br><span class="line">            .setTagName(name)</span><br><span class="line">            .setCount(<span class="number">20</span>)</span><br><span class="line">            .setStatus(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 通过 RedisTemplate&lt;String, Tag&gt; 保存 Tag 实体类</span></span><br><span class="line">    tagRedisTemplate.opsForValue().set(<span class="string">&quot;tagRedisTemplate&quot;</span>, tag);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 RedisTemplate&lt;String, Tag&gt; 获取 Tag 实体类</span></span><br><span class="line">    <span class="type">Tag</span> <span class="variable">newTag</span> <span class="operator">=</span> tagRedisTemplate.opsForValue().get(<span class="string">&quot;tagRedisTemplate&quot;</span>);</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;newTag&quot;</span>, newTag);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="四、StringRedisTemplate-RedisTemplate读写Redis示例"><a href="#四、StringRedisTemplate-RedisTemplate读写Redis示例" class="headerlink" title="四、StringRedisTemplate/RedisTemplate读写Redis示例"></a>四、StringRedisTemplate/RedisTemplate读写Redis示例</h2><p>示例代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/compared&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">compared</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="comment">// 通过 StringRedisTemplate 保存 name</span></span><br><span class="line">    stringRedisTemplate.opsForValue().set(<span class="string">&quot;strRedisTemplate&quot;</span>, name);</span><br><span class="line"></span><br><span class="line">    <span class="type">Tag</span> <span class="variable">tag</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tag</span>()</span><br><span class="line">            .setTagId(<span class="number">10002</span>)</span><br><span class="line">            .setTagName(name)</span><br><span class="line">            .setCount(<span class="number">20</span>)</span><br><span class="line">            .setStatus(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 RedisTemplate&lt;String, Tag&gt; 保存 Tag 实体类</span></span><br><span class="line">    tagRedisTemplate.opsForValue().set(<span class="string">&quot;key_tag&quot;</span>, tag);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 StringRedisTemplate 保存 Tag 实体，需先序列化为 JSON 字符串</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> JsonUtil.toJson(tag);</span><br><span class="line">    stringRedisTemplate.opsForValue().set(<span class="string">&quot;key_str&quot;</span>, str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 RedisTemplate&lt;String, Tag&gt; 获取 Tag 实体类</span></span><br><span class="line">    <span class="type">Tag</span> <span class="variable">t1</span> <span class="operator">=</span> tagRedisTemplate.opsForValue().get(<span class="string">&quot;key_tag&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 通过 StringRedisTemplate 获取，需要反序列为对象</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;key_str&quot;</span>);</span><br><span class="line">    <span class="type">Tag</span> <span class="variable">t2</span> <span class="operator">=</span> JsonUtil.fromJson(json, Tag.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;succeed&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 redis 中的值如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[iuiuu@226 ~]$ redis-cli </span><br><span class="line">127.0.0.1:6379&gt; get key_tag</span><br><span class="line">&quot;&#123;\&quot;tagId\&quot;:10002,\&quot;tagName\&quot;:\&quot;History\&quot;,\&quot;status\&quot;:1,\&quot;count\&quot;:20&#125;&quot;</span><br><span class="line">127.0.0.1:6379&gt; get key_str</span><br><span class="line">&quot;&#123;\&quot;tagId\&quot;:10002,\&quot;tagName\&quot;:\&quot;History\&quot;,\&quot;status\&quot;:1,\&quot;count\&quot;:20&#125;&quot;</span><br><span class="line">127.0.0.1:6379&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以看到，这两种方式将对象写入到 redis 后，存储的值其实是一样的，都为 JSON 字符串。</p>
<p>本文示例代码见 <a href="https://github.com/iuiuu/spring-boot-demos/tree/master/spring-boot-demos-redis">https://github.com/iuiuu/spring-boot-demos/tree/master/spring-boot-demos-redis</a></p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Jpa</tag>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot 2.x 集成Redis示例</title>
    <url>/2019/12/19/spring-boot-2_x-redis/</url>
    <content><![CDATA[<h2 id="一、如何集成"><a href="#一、如何集成" class="headerlink" title="一、如何集成"></a>一、如何集成</h2><p>首先，在 pom 文件新增 redis 依赖：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<p>接着修改项目配置文件 application.properties，增加 redis 配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis host</span></span><br><span class="line">spring.redis.host=172.24.58.226</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">redis port</span></span><br><span class="line">spring.redis.port=6379</span><br></pre></td></tr></table></figure>
<p>经过上面简单的两步，即可在项目中使用 <code>StringRedisTemplate</code> 和 <code>RedisTemplate&lt;Object,Object&gt;</code>，因为从 Spring Boot 2.0 开始，Spring 容器是自动生成了这两个实例，可以直接注入使用。如以下代码片段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;Object, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 通过 StringRedisTemplate 保存</span></span><br><span class="line">stringRedisTemplate.opsForValue().set(<span class="string">&quot;strRedisTemplate&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 RedisTemplate&lt;Object, Object&gt; 保存</span></span><br><span class="line">tagRedisTemplate.opsForValue().set(<span class="string">&quot;tagRedisTemplate&quot;</span>, <span class="number">232</span>);</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="二、存储的-value-类型为字符串"><a href="#二、存储的-value-类型为字符串" class="headerlink" title="二、存储的 value 类型为字符串"></a>二、存储的 value 类型为字符串</h2><p>在实际使用中，若保存的 value 类型为字符串，可以直接通过注入 <code>StringRedisTemplate</code> 进行读写，如</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/redis&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">set</span><span class="params">(String name)</span> &#123;</span><br><span class="line">  <span class="comment">// 通过 StringRedisTemplate 写入 redis</span></span><br><span class="line">  stringRedisTemplate.opsForValue().set(<span class="string">&quot;iuiuu&quot;</span>, name);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过 StringRedisTemplate 获取</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">v</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;iuiuu&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">  map.iuiuu(<span class="string">&quot;tag&quot;</span>, v);</span><br><span class="line">  <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="三、存储的-value-是一个对象"><a href="#三、存储的-value-是一个对象" class="headerlink" title="三、存储的 value 是一个对象"></a>三、存储的 value 是一个对象</h2><p>这种情况，也可以通过 <code>StringRedisTemplate</code> 进行读写。不过，在写入之前先将对象序列化为 JSON 字符串，然后再写入 redis。读取的时候，从 redis 获取到的是是一个 JSON 字符串，需要反序列化相应的对象。如以下代码片段：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/redis&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">set</span><span class="params">(String name)</span> &#123;</span><br><span class="line">  <span class="type">Tag</span> <span class="variable">tag</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tag</span>()</span><br><span class="line">    .setTagId(<span class="number">10001</span>)</span><br><span class="line">    .setTagName(name)</span><br><span class="line">    .setCount(<span class="number">20</span>)</span><br><span class="line">    .setStatus(<span class="number">1</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 序列化为 JSON 字符串</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> JsonUtil.toJson(tag);</span><br><span class="line">  <span class="comment">// 写入 redis</span></span><br><span class="line">  stringRedisTemplate.opsForValue().set(<span class="string">&quot;iuiuu&quot;</span>, str);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从 redis 读取</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;iuiuu&quot;</span>);</span><br><span class="line">  <span class="comment">// 反序列化为 Tag 对象</span></span><br><span class="line">  <span class="type">Tag</span> <span class="variable">t</span> <span class="operator">=</span> JsonUtil.fromJson(json, Tag.class);</span><br><span class="line">  </span><br><span class="line">  Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">  map.put(<span class="string">&quot;tag&quot;</span>, t);</span><br><span class="line">  <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面这种方式在读取或写入的时候，需要进行序列化与反序列化，会有点繁琐。我们还可以通过另一种简洁的方式——<code>RedisTemplate&lt;Object, Object&gt;</code>，不过在实际项目中，大多数情况下，我们不会直接使用 <code>RedisTemplate&lt;Object, Object&gt;</code>，而是会对 key，value 进行序列化，所以我们还需要新增一个配置类。以下示例新了配置类 <code>RedisConfig</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Redis 配置类</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/12/18 11:24 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean(&quot;tagRedisTemplate&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;String, Tag&gt; <span class="title function_">tagRedisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span>&#123;</span><br><span class="line">        RedisTemplate&lt;String, Tag&gt; template = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">        Jackson2JsonRedisSerializer&lt;Tag&gt; serializer = <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>&lt;&gt;(Tag.class);</span><br><span class="line">        template.setValueSerializer(serializer);</span><br><span class="line">        template.setHashValueSerializer(serializer);</span><br><span class="line">        template.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        template.setHashKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 标签类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/12/18 11:08 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tag</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签Id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> tagId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String tagName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签状态：1-正常 2-暂不显示</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标签文章数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> count;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//省略 get、set</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 省略其它代码...</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(&quot;tagRedisTemplate&quot;)</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;String, Tag&gt; tagRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/redis&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">set</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="type">Tag</span> <span class="variable">tag</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tag</span>()</span><br><span class="line">            .setTagId(<span class="number">10001</span>)</span><br><span class="line">            .setTagName(name)</span><br><span class="line">            .setCount(<span class="number">20</span>)</span><br><span class="line">            .setStatus(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 通过 RedisTemplate&lt;String, Tag&gt; 保存 Tag 实体类</span></span><br><span class="line">    tagRedisTemplate.opsForValue().set(<span class="string">&quot;tagRedisTemplate&quot;</span>, tag);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 RedisTemplate&lt;String, Tag&gt; 获取 Tag 实体类</span></span><br><span class="line">    <span class="type">Tag</span> <span class="variable">newTag</span> <span class="operator">=</span> tagRedisTemplate.opsForValue().get(<span class="string">&quot;tagRedisTemplate&quot;</span>);</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;newTag&quot;</span>, newTag);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="四、StringRedisTemplate-RedisTemplate读写Redis示例"><a href="#四、StringRedisTemplate-RedisTemplate读写Redis示例" class="headerlink" title="四、StringRedisTemplate/RedisTemplate读写Redis示例"></a>四、StringRedisTemplate/RedisTemplate读写Redis示例</h2><p>示例代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/compared&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">compared</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="comment">// 通过 StringRedisTemplate 保存 name</span></span><br><span class="line">    stringRedisTemplate.opsForValue().set(<span class="string">&quot;strRedisTemplate&quot;</span>, name);</span><br><span class="line"></span><br><span class="line">    <span class="type">Tag</span> <span class="variable">tag</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tag</span>()</span><br><span class="line">            .setTagId(<span class="number">10002</span>)</span><br><span class="line">            .setTagName(name)</span><br><span class="line">            .setCount(<span class="number">20</span>)</span><br><span class="line">            .setStatus(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 RedisTemplate&lt;String, Tag&gt; 保存 Tag 实体类</span></span><br><span class="line">    tagRedisTemplate.opsForValue().set(<span class="string">&quot;key_tag&quot;</span>, tag);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 StringRedisTemplate 保存 Tag 实体，需先序列化为 JSON 字符串</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> JsonUtil.toJson(tag);</span><br><span class="line">    stringRedisTemplate.opsForValue().set(<span class="string">&quot;key_str&quot;</span>, str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 RedisTemplate&lt;String, Tag&gt; 获取 Tag 实体类</span></span><br><span class="line">    <span class="type">Tag</span> <span class="variable">t1</span> <span class="operator">=</span> tagRedisTemplate.opsForValue().get(<span class="string">&quot;key_tag&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 通过 StringRedisTemplate 获取，需要反序列为对象</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;key_str&quot;</span>);</span><br><span class="line">    <span class="type">Tag</span> <span class="variable">t2</span> <span class="operator">=</span> JsonUtil.fromJson(json, Tag.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;succeed&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 redis 中的值如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[iuiuu@226 ~]$ redis-cli </span><br><span class="line">127.0.0.1:6379&gt; get key_tag</span><br><span class="line">&quot;&#123;\&quot;tagId\&quot;:10002,\&quot;tagName\&quot;:\&quot;History\&quot;,\&quot;status\&quot;:1,\&quot;count\&quot;:20&#125;&quot;</span><br><span class="line">127.0.0.1:6379&gt; get key_str</span><br><span class="line">&quot;&#123;\&quot;tagId\&quot;:10002,\&quot;tagName\&quot;:\&quot;History\&quot;,\&quot;status\&quot;:1,\&quot;count\&quot;:20&#125;&quot;</span><br><span class="line">127.0.0.1:6379&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以看到，这两种方式将对象写入到 redis 后，存储的值其实是一样的，都为 JSON 字符串。</p>
<p>本文示例代码见 <a href="https://github.com/iuiuu/spring-boot-demos/tree/master/spring-boot-demos-redis">https://github.com/iuiuu/spring-boot-demos/tree/master/spring-boot-demos-redis</a></p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Redis</tag>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>【Git常用命令】查看/修改远程仓库地址</title>
    <url>/2019/10/07/git-how-to-change-the-url-for-a-remote-git-repository/</url>
    <content><![CDATA[<h2 id="Git查看远程仓库地址"><a href="#Git查看远程仓库地址" class="headerlink" title="Git查看远程仓库地址"></a>Git查看远程仓库地址</h2><p>命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>
<p>e.g.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看远程仓库地址</span></span><br><span class="line">git remote -v</span><br><span class="line">origin	http://gogs.linjiangxiong.com/ljx/devops-doc.git (fetch)</span><br><span class="line">origin	http://gogs.linjiangxiong.com/ljx/devops-doc.git (push)</span><br></pre></td></tr></table></figure>
<h2 id="Git修改远程仓库地址"><a href="#Git修改远程仓库地址" class="headerlink" title="Git修改远程仓库地址"></a>Git修改远程仓库地址</h2><p>命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git remote set-url origin new.git.url/here</span><br></pre></td></tr></table></figure>
<p>e.g.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将远程仓库地址改为 HTTPS 协议</span></span><br><span class="line">git remote set-url origin https://gogs.linjiangxiong.com/ljx/devops-doc.git</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看修改后的地址</span></span><br><span class="line">git remote -v</span><br><span class="line">origin	https://gogs.linjiangxiong.com/ljx/devops-doc.git (fetch)</span><br><span class="line">origin	https://gogs.linjiangxiong.com/ljx/devops-doc.git (push)</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>【ZooKeeper启动失败】Error: Could not find or load main class org.apache.zookeeper.server.quorum.QuorumPeerMain</title>
    <url>/2019/12/12/zookeeper-problem-1/</url>
    <content><![CDATA[<p>在 CentOS 7 系统中安装好 ZooKeeper 后，进入安装目录 <code>/usr/local/zookeeper/apache-zookeeper-3.5.6/bin/</code>，使用命令 <code>./zkServer.sh start</code> 启动，发现启动失败：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[zookeeperu@202 bin]$ ./zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zookeeper/apache-zookeeper-3.5.6/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... FAILED TO START</span><br></pre></td></tr></table></figure>
<p>进入目录 <code>/usr/local/zookeeper/apache-zookeeper-3.5.6/logs</code>，查看日志文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[zookeeperu@202 bin]$ cd /usr/local/zookeeper/apache-zookeeper-3.5.6/logs</span><br><span class="line">[zookeeperu@202 bin]$ vim ./zookeeper-jump-server-202.out</span><br></pre></td></tr></table></figure>
<p>可看到以下错误信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Error: Could not find or load main class org.apache.zookeeper.server.quorum.QuorumPeerMain</span><br></pre></td></tr></table></figure>
<p>出现 <code>Error: Could not find or load main class org.apache.zookeeper.server.quorum.QuorumPeerMain</code> 错误，是因为我在安装时，选用了 <code>apache-zookeeper-&#123;version&#125;.tar.gz</code> 包而不是 <code>apache-zookeeper-&#123;version&#125;-bin.tar.gz</code> 包，后面使用 <code>apache-zookeeper-3.5.6-bin.tar.gz</code> （<strong>文件名包含bin</strong>）重新安装后，解决了问题：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[zookeeperu@202 bin]$ ./zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zookeeper/apache-zookeeper-3.5.6-bin/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>ZooKeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>用Markdown优雅地编写接口文档（排版示例）</title>
    <url>/2019/07/24/markdown-api-document/</url>
    <content><![CDATA[<blockquote>
<p>本排版示例整理于两年前，当时是用来在公司推广使用 Markdown 编写开发文档的，现在稍微作了些修改，去掉一些与公司接口相关的信息。希望该示例能够对小伙伴们在以后编写文档时有所帮助，也希望能够得到大家关于文档排版方面的建议。<br>使用 Markdown 编写接口文档最主要的好处，一个是可以让你更专注于内容本身，另外一个是 Markdown编写的文档能用代码管理工具（Git、SVN等）进行有效的版本管理（如版本对比）。</p>
</blockquote>
<span id="more"></span>
<p>本示例显示效果如下：（<a href="https://github.com/iuiuu/markdown-api-document">源文件链接：https://github.com/iuiuu/markdown-api-document</a>）</p>
<h1 id="AA公司BC平台接口文档-v3-2-0"><a href="#AA公司BC平台接口文档-v3-2-0" class="headerlink" title="AA公司BC平台接口文档 v3.2.0"></a>AA公司BC平台接口文档 v3.2.0</h1><h2 id="1-规范说明"><a href="#1-规范说明" class="headerlink" title="1 规范说明"></a>1 规范说明</h2><h3 id="1-1-通信协议"><a href="#1-1-通信协议" class="headerlink" title="1.1 通信协议"></a>1.1 通信协议</h3><p>HTTPS协议</p>
<h3 id="1-2-请求方法"><a href="#1-2-请求方法" class="headerlink" title="1.2 请求方法"></a>1.2 请求方法</h3><p>所有接口只支持POST方法发起请求。</p>
<h3 id="1-3-字符编码"><a href="#1-3-字符编码" class="headerlink" title="1.3 字符编码"></a>1.3 字符编码</h3><p>HTTP通讯及报文BASE64编码均采用UTF-8字符集编码格式。</p>
<h3 id="1-4-格式说明"><a href="#1-4-格式说明" class="headerlink" title="1.4 格式说明"></a>1.4 格式说明</h3><p>元素出现要求说明：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">R</td>
<td style="text-align:left">报文中该元素必须出现（Required）</td>
</tr>
<tr>
<td style="text-align:center">O</td>
<td style="text-align:left">报文中该元素可选出现（Optional）</td>
</tr>
<tr>
<td style="text-align:center">C</td>
<td style="text-align:left">报文中该元素在一定条件下出现（Conditional）</td>
</tr>
</tbody>
</table>
</div>
<h3 id="1-5-报文规范说明"><a href="#1-5-报文规范说明" class="headerlink" title="1.5 报文规范说明"></a>1.5 报文规范说明</h3><ol>
<li><p>报文规范仅针对交易请求数据进行描述；  </p>
</li>
<li><p>报文规范中请求报文的内容为Https请求报文中RequestData值的明文内容；</p>
</li>
<li><p>报文规范分为请求报文和响应报文。请求报文描述由发起方，响应报文由报文接收方响应。</p>
</li>
</ol>
<h3 id="1-6-请求报文结构"><a href="#1-6-请求报文结构" class="headerlink" title="1.6 请求报文结构"></a>1.6 请求报文结构</h3><p>接口只接收两个参数 <strong>RequestData</strong> 和 <strong>SignData</strong> ，其中RequestData的值为请求内容，SignData的值为签名内容。</p>
<h4 id="1-6-1-参数说明"><a href="#1-6-1-参数说明" class="headerlink" title="1.6.1 参数说明"></a>1.6.1 参数说明</h4><p><strong>RequestData（请求内容）：</strong> 其明文为每次请求的具体参数，采用 JSON 格式，依次经过 DES 加密（以UTF-8编码、BASE64编码输出结果）和 URLEncode 后，作为 RequestData 的值。  </p>
<p><strong>SignData（签名内容）：</strong> 请求参数（明文）的MD5加密字符串，用于校验RequestData是否合法。</p>
<h4 id="1-6-2-请求内容（RequestData）明文结构说明"><a href="#1-6-2-请求内容（RequestData）明文结构说明" class="headerlink" title="1.6.2 请求内容（RequestData）明文结构说明"></a>1.6.2 请求内容（RequestData）明文结构说明</h4><p>采用JSON格式，其中包含Header（公有参数）、Body（私有参数）节点：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">描述</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">公共参数</td>
<td style="text-align:left">每个接口都包含的通用参数，以JSON格式存放在Header属性</td>
<td style="text-align:left">详见以下公共参数说明</td>
</tr>
<tr>
<td style="text-align:left">私有参数</td>
<td style="text-align:left">每个接口特有的参数，以JSON格式存放在Body属性</td>
<td style="text-align:left">详见每个接口定义</td>
</tr>
</tbody>
</table>
</div>
<p><strong>公共参数说明：</strong></p>
<p>公共参数（Header）是用于标识产品及接口鉴权的参数，每次请求均需要携带这些参数：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">参数名称</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">出现要求</th>
<th style="text-align:left">描述  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Token</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">用户登录后token，没有登录则为空字符串</td>
</tr>
<tr>
<td style="text-align:left">Version</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">接口版本号</td>
</tr>
<tr>
<td style="text-align:left">SystemId</td>
<td style="text-align:left">int</td>
<td style="text-align:left">R</td>
<td style="text-align:left">机构号，请求的系统Id</td>
</tr>
<tr>
<td style="text-align:left">Timestamp</td>
<td style="text-align:left">long</td>
<td style="text-align:left">R</td>
<td style="text-align:left">当前UNIX时间戳</td>
</tr>
</tbody>
</table>
</div>
<h4 id="1-6-3-校验流程："><a href="#1-6-3-校验流程：" class="headerlink" title="1.6.3 校验流程："></a>1.6.3 校验流程：</h4><p>服务端接收到请求后首先对RequestData进行DES解密出JSON字符串，然后对JSON字符串进行MD5加密，加密后的值与请求中的SignData值进行对比，如对比通过，视为合法请求，否则视为非法请求。</p>
<p><strong>DES加密/解密函数示例：</strong></p>
<p>C#版：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 进行DES加密。</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;decryptString&quot;&gt;要加密的字符串。&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;secretKey&quot;&gt;密钥，且必须为8位。&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;以Base64格式返回的加密字符串。&lt;/returns&gt;</span><br><span class="line">public static string DesEncrypt(string decryptString, string secretKey)</span><br><span class="line">&#123;</span><br><span class="line">    using (DESCryptoServiceProvider des = new DESCryptoServiceProvider())</span><br><span class="line">    &#123;</span><br><span class="line">        byte[] inputByteArray = Encoding.UTF8.GetBytes(decryptString);</span><br><span class="line">        des.Key = Encoding.ASCII.GetBytes(secretKey);</span><br><span class="line">        des.IV = Encoding.ASCII.GetBytes(secretKey);</span><br><span class="line">        MemoryStream ms = new MemoryStream();</span><br><span class="line">        using (CryptoStream cs = new CryptoStream(ms, des.CreateEncryptor(), CryptoStreamMode.Write))</span><br><span class="line">        &#123;</span><br><span class="line">            cs.Write(inputByteArray, 0, inputByteArray.Length);</span><br><span class="line">            cs.FlushFinalBlock();</span><br><span class="line">            cs.Close();</span><br><span class="line">        &#125;</span><br><span class="line">        string str = Convert.ToBase64String(ms.ToArray());</span><br><span class="line">        ms.Close();</span><br><span class="line">        return str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 进行DES解密。</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;encryptedString&quot;&gt;要解密的以Base64&lt;/param&gt;</span><br><span class="line">/// &lt;param name=&quot;secretKey&quot;&gt;密钥，且必须为8位。&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;已解密的字符串。&lt;/returns&gt;</span><br><span class="line">public static string DesDecrypt(string encryptedString, string secretKey)</span><br><span class="line">&#123;</span><br><span class="line">    byte[] inputByteArray = Convert.FromBase64String(encryptedString);</span><br><span class="line">    using (DESCryptoServiceProvider des = new DESCryptoServiceProvider())</span><br><span class="line">    &#123;</span><br><span class="line">        des.Key = Encoding.ASCII.GetBytes(secretKey);</span><br><span class="line">        des.IV = Encoding.ASCII.GetBytes(secretKey);</span><br><span class="line">        MemoryStream ms = new MemoryStream();</span><br><span class="line">        using (CryptoStream cs = new CryptoStream(ms, des.CreateDecryptor(), CryptoStreamMode.Write))</span><br><span class="line">        &#123;</span><br><span class="line">            cs.Write(inputByteArray, 0, inputByteArray.Length);</span><br><span class="line">            cs.FlushFinalBlock();</span><br><span class="line">            cs.Close();</span><br><span class="line">        &#125;</span><br><span class="line">        string str = Encoding.UTF8.GetString(ms.ToArray());</span><br><span class="line">        ms.Close();</span><br><span class="line">        return str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>JAVA版：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* DES解密 */</span><br><span class="line">public static String decrypt(String message, String key) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">    byte[] bytesrc = Base64.decode(message);</span><br><span class="line">    //convertHexString(message);</span><br><span class="line">    Cipher cipher = Cipher.getInstance(&quot;DES/CBC/PKCS5Padding&quot;);</span><br><span class="line">    DESKeySpec desKeySpec = new DESKeySpec(key.getBytes(&quot;UTF-8&quot;));</span><br><span class="line">    SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(&quot;DES&quot;);</span><br><span class="line">    SecretKey secretKey = keyFactory.generateSecret(desKeySpec);</span><br><span class="line">    IvParameterSpec iv = new IvParameterSpec(key.getBytes(&quot;UTF-8&quot;));</span><br><span class="line">    cipher.init(Cipher.DECRYPT_MODE, secretKey, iv);</span><br><span class="line">    byte[] retByte = cipher.doFinal(bytesrc);</span><br><span class="line">    return new String(retByte);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* DES加密 */</span><br><span class="line">public static byte[] encrypt(String message, String key) throws Exception &#123;</span><br><span class="line">    Cipher cipher = Cipher.getInstance(&quot;DES/CBC/PKCS5Padding&quot;);</span><br><span class="line">    DESKeySpec desKeySpec = new DESKeySpec(key.getBytes(&quot;UTF-8&quot;));</span><br><span class="line">    SecretKeyFactory keyFactory = SecretKeyFactory.getInstance(&quot;DES&quot;);</span><br><span class="line">    SecretKey secretKey = keyFactory.generateSecret(desKeySpec);</span><br><span class="line">    IvParameterSpec iv = new IvParameterSpec(key.getBytes(&quot;UTF-8&quot;));</span><br><span class="line">    cipher.init(Cipher.ENCRYPT_MODE, secretKey, iv);</span><br><span class="line">    return cipher.doFinal(message.getBytes(&quot;UTF-8&quot;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="1-6-4-DES密钥"><a href="#1-6-4-DES密钥" class="headerlink" title="1.6.4 DES密钥"></a>1.6.4 DES密钥</h4><p>测试环境：az2ih1uY</p>
<p>生产环境：另外提供。</p>
<h4 id="1-6-5-请求报文示例"><a href="#1-6-5-请求报文示例" class="headerlink" title="1.6.5 请求报文示例"></a>1.6.5 请求报文示例</h4><p>请求内容明文：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Header&quot;:&#123;</span><br><span class="line">        &quot;Token&quot;:&quot;2366CF921FAD44CCBB07FF9CD02FC90E&quot;,</span><br><span class="line">        &quot;Version&quot;:&quot;3.2.0&quot;,</span><br><span class="line">        &quot;SystemId&quot;:100,</span><br><span class="line">        &quot;Timestamp&quot;:1502870664</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Body&quot;:&#123;</span><br><span class="line">        &quot;Mobile&quot;:&quot;18520322032&quot;,</span><br><span class="line">        &quot;Password&quot;:&quot;acb000000&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>请求报文示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url?RequestData=UFAYIRF21XzGoaAaEU54qoDBYaFkT2KbRpWxKZuqqltApdIneF7AjlEArPLsg3%2Fo1Pu7FHFmsKZn%0A9KJb%2BGuwx0P%2F3jzv2TgwUpVtgwEdfd0vIRfqEF4jCouldaxxVBjbHvd%2F08pUoYJDNZJLvNrJ%2BsK4%0A79de92T0Cyu4hKNMUPtVI7Tp0IC%2BBw%3D%3D&amp;SignData=0865c7d625f90d3bb5457f5d9ac3725d</span><br></pre></td></tr></table></figure>
<h3 id="1-7-响应报文结构"><a href="#1-7-响应报文结构" class="headerlink" title="1.7 响应报文结构"></a>1.7 响应报文结构</h3><h4 id="1-7-1-结构说明"><a href="#1-7-1-结构说明" class="headerlink" title="1.7.1 结构说明"></a>1.7.1 结构说明</h4><p>所有接口响应均采用JSON格式，如无特殊说明，每次请求的返回值中，都包含下列字段：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">参数名称</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">出现要求</th>
<th style="text-align:left">描述  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Code</td>
<td style="text-align:left">int</td>
<td style="text-align:left">R</td>
<td style="text-align:left">响应码，代码定义请见“附录A 响应吗说明”</td>
</tr>
<tr>
<td style="text-align:left">Msg</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">响应描述</td>
</tr>
<tr>
<td style="text-align:left">Data</td>
<td style="text-align:left">object</td>
<td style="text-align:left">R</td>
<td style="text-align:left">每个接口特有的参数，详见每个接口定义</td>
</tr>
</tbody>
</table>
</div>
<h4 id="1-7-2-响应报文示例"><a href="#1-7-2-响应报文示例" class="headerlink" title="1.7.2 响应报文示例"></a>1.7.2 响应报文示例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Code&quot;:200,</span><br><span class="line">    &quot;Msg&quot;:&quot;调用成功&quot;,</span><br><span class="line">    &quot;Data&quot;:&#123;</span><br><span class="line">        &quot;Channel&quot;:&quot;A10086&quot;,</span><br><span class="line">        &quot;Type&quot;:7004</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-接口定义"><a href="#2-接口定义" class="headerlink" title="2. 接口定义"></a>2. 接口定义</h2><h3 id="2-1-密码登录"><a href="#2-1-密码登录" class="headerlink" title="2.1 密码登录"></a>2.1 密码登录</h3><ul>
<li><strong>接口说明：</strong> 密码登录</li>
<li><strong>接口地址：</strong> /account/signin</li>
</ul>
<h4 id="2-1-1-请求参数"><a href="#2-1-1-请求参数" class="headerlink" title="2.1.1 请求参数"></a>2.1.1 请求参数</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">参数名称</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">出现要求</th>
<th style="text-align:left">描述  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Header</td>
<td style="text-align:left">&nbsp;</td>
<td style="text-align:left">R</td>
<td style="text-align:left">请求报文头</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Token</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">用户登录后token，没有登录则为空字符串</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Version</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">接口版本号</td>
</tr>
<tr>
<td style="text-align:left">&emsp;SystemId</td>
<td style="text-align:left">int</td>
<td style="text-align:left">R</td>
<td style="text-align:left">机构号，请求的系统Id</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Timestamp</td>
<td style="text-align:left">long</td>
<td style="text-align:left">R</td>
<td style="text-align:left">当前UNIX时间戳</td>
</tr>
<tr>
<td style="text-align:left">Body</td>
<td style="text-align:left">&nbsp;</td>
<td style="text-align:left">R</td>
<td style="text-align:left">&nbsp;</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Mobile</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">手机号</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Password</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">密码</td>
</tr>
</tbody>
</table>
</div>
<p>请求示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Header&quot;:&#123;</span><br><span class="line">        &quot;Token&quot;:&quot;&quot;,</span><br><span class="line">        &quot;Version&quot;:&quot;3.2.0&quot;,</span><br><span class="line">        &quot;SystemId&quot;:100,</span><br><span class="line">        &quot;Timestamp&quot;:1502870664</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Body&quot;:&#123;</span><br><span class="line">        &quot;Mobile&quot;:&quot;18520322032&quot;,</span><br><span class="line">        &quot;Password&quot;:&quot;acb000000&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="2-1-2-返回结果"><a href="#2-1-2-返回结果" class="headerlink" title="2.1.2 返回结果"></a>2.1.2 返回结果</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">参数名称</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">出现要求</th>
<th style="text-align:left">描述  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Code</td>
<td style="text-align:left">int</td>
<td style="text-align:left">R</td>
<td style="text-align:left">响应码，代码定义请见“附录A 响应吗说明”</td>
</tr>
<tr>
<td style="text-align:left">Msg</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">&nbsp;</td>
</tr>
<tr>
<td style="text-align:left">Data</td>
<td style="text-align:left">object</td>
<td style="text-align:left">R</td>
<td style="text-align:left">&nbsp;</td>
</tr>
<tr>
<td style="text-align:left">&emsp;UserId</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">用户Id</td>
</tr>
</tbody>
</table>
</div>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Code&quot;:200,</span><br><span class="line">    &quot;Msg&quot;:&quot;登录成功&quot;,</span><br><span class="line">    &quot;Data&quot;:&#123;</span><br><span class="line">        &quot;UserId&quot;:&quot;7D916C7283434955A235C17DD9B71C64&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-2-获取登录用户信息"><a href="#2-2-获取登录用户信息" class="headerlink" title="2.2 获取登录用户信息"></a>2.2 获取登录用户信息</h3><ul>
<li><strong>接口说明：</strong> 获取登录用户信息</li>
<li><strong>接口地址：</strong> /account/profile</li>
</ul>
<h4 id="2-2-1-请求参数"><a href="#2-2-1-请求参数" class="headerlink" title="2.2.1 请求参数"></a>2.2.1 请求参数</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">参数名称</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">出现要求</th>
<th style="text-align:left">描述  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Header</td>
<td style="text-align:left">&nbsp;</td>
<td style="text-align:left">R</td>
<td style="text-align:left">请求报文头</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Token</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">用户登录后token，没有登录则为空字符串</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Version</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">接口版本号</td>
</tr>
<tr>
<td style="text-align:left">&emsp;SystemId</td>
<td style="text-align:left">int</td>
<td style="text-align:left">R</td>
<td style="text-align:left">机构号，请求的系统Id</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Timestamp</td>
<td style="text-align:left">long</td>
<td style="text-align:left">R</td>
<td style="text-align:left">当前UNIX时间戳</td>
</tr>
<tr>
<td style="text-align:left">Body</td>
<td style="text-align:left">&nbsp;</td>
<td style="text-align:left">R</td>
<td style="text-align:left">&nbsp;</td>
</tr>
</tbody>
</table>
</div>
<p>请求示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;Header&quot;:&#123;</span><br><span class="line">        &quot;Token&quot;:&quot;CA64A439E7C344B0BA7F5C825E17C7AB&quot;,</span><br><span class="line">        &quot;Version&quot;:&quot;3.2.0&quot;,</span><br><span class="line">        &quot;SystemId&quot;:100,</span><br><span class="line">        &quot;Timestamp&quot;:1502870664</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Body&quot;:null</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="2-2-2-返回结果"><a href="#2-2-2-返回结果" class="headerlink" title="2.2.2 返回结果"></a>2.2.2 返回结果</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">参数名称</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">出现要求</th>
<th style="text-align:left">描述  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Code</td>
<td style="text-align:left">int</td>
<td style="text-align:left">R</td>
<td style="text-align:left">响应码，代码定义请见“附录A 响应吗说明”</td>
</tr>
<tr>
<td style="text-align:left">Msg</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">&nbsp;</td>
</tr>
<tr>
<td style="text-align:left">Data</td>
<td style="text-align:left">object</td>
<td style="text-align:left">R</td>
<td style="text-align:left">&nbsp;</td>
</tr>
<tr>
<td style="text-align:left">&emsp;UserId</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">用户Id</td>
</tr>
<tr>
<td style="text-align:left">&emsp;RealName</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">姓名</td>
</tr>
<tr>
<td style="text-align:left">&emsp;ImageUrl</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">头像</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Score</td>
<td style="text-align:left">int</td>
<td style="text-align:left">R</td>
<td style="text-align:left">积分</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Nickname</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">昵称</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Sex</td>
<td style="text-align:left">int</td>
<td style="text-align:left">R</td>
<td style="text-align:left">性别：0-未知、1-男、2-女</td>
</tr>
<tr>
<td style="text-align:left">&emsp;Title</td>
<td style="text-align:left">string</td>
<td style="text-align:left">R</td>
<td style="text-align:left">头衔</td>
</tr>
</tbody>
</table>
</div>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Code&quot;:200,</span><br><span class="line">    &quot;Msg&quot;:&quot;处理成功&quot;,</span><br><span class="line">    &quot;Data&quot;:&#123;</span><br><span class="line">        &quot;UserId&quot;:&quot;7D916C7283434955A235C17DD9B71C64&quot;,</span><br><span class="line">        &quot;RealName&quot;:&quot;张三&quot;,</span><br><span class="line">        &quot;ImageUrl&quot;:&quot;https://img.xx.net/afdicew8751.png&quot;,</span><br><span class="line">        &quot;Score&quot;:4732,</span><br><span class="line">        &quot;Nickname&quot;:&quot;张冠李戴&quot;,</span><br><span class="line">        &quot;Sex&quot;:1,</span><br><span class="line">        &quot;Title&quot;:&quot;侠客Lv4&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-附录A-响应码说明"><a href="#3-附录A-响应码说明" class="headerlink" title="3 附录A 响应码说明"></a>3 附录A 响应码说明</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">响应码</th>
<th style="text-align:left">说明  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">200</td>
<td style="text-align:left">处理成功</td>
</tr>
<tr>
<td style="text-align:left">301</td>
<td style="text-align:left">解析报文错误</td>
</tr>
<tr>
<td style="text-align:left">302</td>
<td style="text-align:left">无效调用凭证</td>
</tr>
<tr>
<td style="text-align:left">303</td>
<td style="text-align:left">参数不正确</td>
</tr>
<tr>
<td style="text-align:left">500</td>
<td style="text-align:left">系统内部错误</td>
</tr>
<tr>
<td style="text-align:left">999</td>
<td style="text-align:left">处理失败</td>
</tr>
</tbody>
</table>
</div>
<h2 id="4-附录B-币种"><a href="#4-附录B-币种" class="headerlink" title="4 附录B 币种"></a>4 附录B 币种</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">币种</th>
<th style="text-align:left">说明  </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">RMB</td>
<td style="text-align:left">人民币</td>
</tr>
<tr>
<td style="text-align:left">HKD</td>
<td style="text-align:left">港币</td>
</tr>
<tr>
<td style="text-align:left">JPY</td>
<td style="text-align:left">日元</td>
</tr>
<tr>
<td style="text-align:left">TWD</td>
<td style="text-align:left">新台币</td>
</tr>
<tr>
<td style="text-align:left">USD</td>
<td style="text-align:left">美元</td>
</tr>
<tr>
<td style="text-align:left">VND</td>
<td style="text-align:left">越南盾</td>
</tr>
<tr>
<td style="text-align:left">THB</td>
<td style="text-align:left">泰铢</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>接口文档</tag>
      </tags>
  </entry>
  <entry>
    <title>在CentOS7系统安装和配置ZooKeeper</title>
    <url>/2019/12/12/how-to-install-zookeeper-on-centos7/</url>
    <content><![CDATA[<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol>
<li><p>下载安装包，命令如下，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.5.6/apache-zookeeper-3.5.6-bin.tar.gz</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">当前目录为 /home/software</span></span><br><span class="line">[jump@205 software]$ wget http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.5.6/apache-zookeeper-3.5.6-bin.tar.gz</span><br><span class="line">--2019-12-12 16:43:27--  http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.5.6/apache-zookeeper-3.5.6-bin.tar.gz</span><br><span class="line">Resolving mirror.bit.edu.cn (mirror.bit.edu.cn)... 219.143.204.117, 202.204.80.77, 2001:da8:204:1205::22</span><br><span class="line">Connecting to mirror.bit.edu.cn (mirror.bit.edu.cn)|219.143.204.117|:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 9230052 (8.8M) [application/octet-stream]</span><br><span class="line">Saving to: ‘apache-zookeeper-3.5.6-bin.tar.gz’</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">100%</span><span class="language-bash">[===========================================================================================================================================&gt;] 9,230,052   1.08MB/s   <span class="keyword">in</span> 7.5s</span>   </span><br><span class="line"></span><br><span class="line">2019-12-12 16:43:34 (1.17 MB/s) - ‘apache-zookeeper-3.5.6-bin.tar.gz’ saved [9230052/9230052]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>
</li>
<li><p>新建 ZooKeeper 安装目录，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /usr/local/zookeeper</span><br></pre></td></tr></table></figure>
<p>修改该目录权限（<em>可选</em>）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[jump@205 software]$ sudo chown -R jump.jump /usr/local/zookeeper/</span><br></pre></td></tr></table></figure>
</li>
<li><p>ZooKeeper解压至目录 <code>/usr/local/zookeeper</code>，输出结果见附录A，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[jump@205 software]$ tar -zxvf apache-zookeeper-3.5.6-bin.tar.gz -C /usr/local/zookeeper</span><br></pre></td></tr></table></figure>
<p>至此，已成功下载并安装好 ZooKeeper，命令序列如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">当前目录为 /home/software</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">步骤一</span></span><br><span class="line">wget http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.5.6/apache-zookeeper-3.5.6-bin.tar.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">步骤二</span></span><br><span class="line">sudo mkdir -p /usr/local/zookeeper</span><br><span class="line">sudo chown -R jump.jump /usr/local/zookeeper/	#可选</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">步骤三</span></span><br><span class="line">tar -zxvf apache-zookeeper-3.5.6-bin.tar.gz -C /usr/local/zookeeper</span><br></pre></td></tr></table></figure>
<p>接下来，是配置 ZooKeeper。</p>
</li>
<li><p>进入 ZooKeeper 的配置目录，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[jump@205 apache-zookeeper-3.5.6-bin]$ cd /usr/local/zookeeper/apache-zookeeper-3.5.6-bin/conf/</span><br><span class="line"></span><br><span class="line">[jump@205 conf]$ ll</span><br><span class="line">-rw-r--r-- 1 jump jump  535 Oct  5 19:27 configuration.xsl</span><br><span class="line">-rw-r--r-- 1 jump jump 2712 Oct  5 19:27 log4j.properties</span><br><span class="line">-rw-r--r-- 1 jump jump  922 Oct  9 04:14 zoo_sample.cfg</span><br></pre></td></tr></table></figure>
</li>
<li><p>复制 <code>zoo_sample.cfg</code> 并重命名为 <code>zoo.cfg</code>，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[jump@205 conf]$ cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建 ZooKeeper 保存数据目录和保存日志目录，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[jump@205 conf]$ mkdir -p /usr/local/zookeeper/apache-zookeeper-3.5.6-bin/data /usr/local/zookeeper/apache-zookeeper-3.5.6-bin/logs</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改配置文件 <code>zoo.cfg</code>，修改内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dataDir=/usr/local/zookeeper/apache-zookeeper-3.5.6-bin/data </span><br><span class="line">dataLogDir=/usr/local/zookeeper/apache-zookeeper-3.5.6-bin/logs</span><br></pre></td></tr></table></figure>
<p>保存并退出文件修改。</p>
</li>
<li><p>进入 ZooKeeper 的 <code>bin</code> 目录，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[jump@205 conf]$ cd /usr/local/zookeeper/apache-zookeeper-3.5.6-bin/bin/</span><br></pre></td></tr></table></figure>
<p>启动 ZooKeeper，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[jump@205 bin]$ ./zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /usr/local/zookeeper/apache-zookeeper-3.5.6-bin/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="附录A-解压缩包输出"><a href="#附录A-解压缩包输出" class="headerlink" title="附录A 解压缩包输出"></a>附录A 解压缩包输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[jump@205 software]$ tar -zxvf apache-zookeeper-3.5.6-bin.tar.gz -C /usr/local/zookeeper</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/zkcomponents.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/zkperfRW-3.2.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/zkservice.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/bk-overview.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/zkperfRW.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/state_dia.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/state_dia.dia</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/zkarch.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/zkperfreliability.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/favicon.ico</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/hadoop-logo.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/2pc.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/zknamespace.jpg</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/images/zookeeper_small.gif</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperOver.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperObservers.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperHierarchicalQuorums.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/recipes.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperTutorial.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/releasenotes.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperInternals.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperStarted.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/javaExample.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperReconfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperProgrammers.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperJMX.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperOtherInfo.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperQuotas.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/zookeeperAdmin.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/index.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/current.gif</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/header_white_line.gif</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/printer.gif</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/basic.css</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/prototype.js</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/init.js</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/getMenu.js</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/getBlank.js</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/profile.css</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/chapter_open.gif</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/instruction_arrow.png</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/print.css</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/page.gif</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/screen.css</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/menu.js</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/skin/chapter.gif</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/persistence/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/persistence/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/help-doc.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/deprecated-list.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/index-all.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/serialized-form.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/package-list</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/stylesheet.css</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/overview-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/allclasses-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/script.js</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/constant-values.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SetWatches.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetMaxChildrenRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/CreateTTLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/ConnectResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetChildren2Request.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SetWatches.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetMaxChildrenRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/CreateTTLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/ConnectResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetChildren2Request.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetSASLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/ConnectRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SetDataRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/WatcherEvent.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetDataResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/AuthPacket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetChildrenRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SetSASLResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SyncResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/DeleteRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SetDataResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/ReplyHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/ExistsResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetACLResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetMaxChildrenResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetDataRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/CheckVersionRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetACLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/Create2Response.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetChildrenResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/MultiHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SetSASLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/ExistsRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SetMaxChildrenRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/CreateResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/ReconfigRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SyncRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/ErrorResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/CreateRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SetACLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/CheckWatchesRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/GetChildren2Response.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/RemoveWatchesRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/SetACLResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/class-use/RequestHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetSASLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/ConnectRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SetDataRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/WatcherEvent.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetDataResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/AuthPacket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetChildrenRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SetSASLResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SyncResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/DeleteRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SetDataResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/ReplyHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/ExistsResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetACLResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetMaxChildrenResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetDataRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/CheckVersionRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetACLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/Create2Response.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetChildrenResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/MultiHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SetSASLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/ExistsRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SetMaxChildrenRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/CreateResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/ReconfigRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SyncRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/ErrorResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/CreateRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SetACLRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/CheckWatchesRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/GetChildren2Response.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/RemoveWatchesRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/SetACLResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/proto/RequestHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/class-use/StatPersisted.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/class-use/Stat.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/class-use/Id.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/class-use/ACL.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/StatPersisted.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/Stat.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/Id.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/data/ACL.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/persistence/FileHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/persistence/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/persistence/class-use/FileHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/persistence/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/persistence/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/persistence/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/class-use/LearnerInfo.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/class-use/QuorumAuthPacket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/class-use/QuorumPacket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/LearnerInfo.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/QuorumAuthPacket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/server/quorum/QuorumPacket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/ErrorTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/SetACLTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/ErrorTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/SetACLTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/MultiTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/SetDataTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/CreateSessionTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/CreateTTLTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/Txn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/CreateContainerTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/CheckVersionTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/DeleteTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/CreateTxnV0.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/SetMaxChildrenTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/TxnHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/class-use/CreateTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/MultiTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/SetDataTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/CreateSessionTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/CreateTTLTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/Txn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/CreateContainerTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/CheckVersionTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/DeleteTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/CreateTxnV0.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/SetMaxChildrenTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/TxnHeader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/zookeeper/txn/CreateTxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JField.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JBoolean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JDouble.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JString.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JVector.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JMap.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JField.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JBoolean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JDouble.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JString.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JVector.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JMap.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JRecord.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JBuffer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/CSharpGenerator.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JByte.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JInt.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JFloat.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JFile.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/class-use/JLong.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JRecord.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JBuffer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/CSharpGenerator.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JByte.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/class-use/RccConstants.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/class-use/Rcc.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/class-use/TokenMgrError.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/class-use/RccTokenManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/class-use/SimpleCharStream.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/class-use/Token.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/class-use/ParseException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/RccConstants.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/Rcc.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/TokenMgrError.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/RccTokenManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/SimpleCharStream.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/Token.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/generated/ParseException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JInt.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JFloat.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JFile.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/compiler/JLong.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/Utils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/Utils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/OutputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/InputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/RecordReader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/BinaryOutputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/BinaryInputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/CsvOutputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/RecordWriter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/Record.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/class-use/Index.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/OutputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/InputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/RecordReader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/BinaryOutputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/BinaryInputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/CsvOutputArchive.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/RecordWriter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/Record.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/org/apache/jute/Index.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/overview-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/overview-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/allclasses-noframe.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-jute/index.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/admin/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/admin/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/class-use/</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/help-doc.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/deprecated-list.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/index-all.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/serialized-form.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/package-list</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/stylesheet.css</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/overview-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/allclasses-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/script.js</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/constant-values.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.AuthFailedException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.ACLCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Op.Create.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.ChildrenCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.RequestTimeoutException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Shell.ShellCommandExecutor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZooDefs.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.NoNodeException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/SaslClientCallbackHandler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Op.Check.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.NotEmptyException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.CodeDeprecated.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.EphemeralOnLocalSessionException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.ConnectionLossException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/WatchedEvent.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.AuthFailedException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.ACLCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Op.Create.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.ChildrenCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.RequestTimeoutException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Shell.ShellCommandExecutor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZooDefs.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.NoNodeException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/SaslClientCallbackHandler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Op.Check.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.NotEmptyException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.CodeDeprecated.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.EphemeralOnLocalSessionException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.ConnectionLossException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/WatchedEvent.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.NoWatcherException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.Code.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Watcher.WatcherType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ClientCnxnSocketNIO.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.SystemErrorException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.ReconfigInProgress.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Op.SetData.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Login.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.BadVersionException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Watcher.Event.KeeperState.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.Create2Callback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.Children2Callback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ServerAdminClient.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Environment.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZKUtil.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.OperationTimeoutException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.UnimplementedException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.NoChildrenForEphemeralsException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.DataInconsistencyException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.RuntimeInconsistencyException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.NotReadOnlyException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ClientCnxnSocketNetty.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/WatchDeregistration.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.NewConfigNoQuorum.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.SessionExpiredException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZooKeeper.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/OpResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZooDefs.Ids.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/MultiTransactionRecord.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.MultiCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.APIErrorException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.DataCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.NodeExistsException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZooDefs.Perms.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.NoAuthException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.StringCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.ReconfigDisabledException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/SaslServerPrincipal.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZooKeeper.States.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZooKeeperMain.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Op.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.InvalidACLException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.StatCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Watcher.Event.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Quotas.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/OpResult.CheckResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/OpResult.SetDataResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.MarshallingErrorException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Shell.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/CreateMode.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Testable.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/MultiResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ClientCnxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.InvalidCallbackException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/OpResult.DeleteResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Shell.ExitCodeException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Version.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/AsyncCallback.VoidCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZooKeeper.WatchRegistration.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ZooDefs.OpCode.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Watcher.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/OpResult.ErrorResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.UnknownSessionException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/ClientWatchManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Op.Delete.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/StatsTrack.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Watcher.Event.EventType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Environment.Entry.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/OpResult.CreateResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Op.CreateTTL.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.BadArgumentsException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/KeeperException.SessionMovedException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/class-use/Transaction.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.NoWatcherException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/Info.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/class-use/Info.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/class-use/VerGen.Version.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/class-use/VerGen.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/VerGen.Version.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/VerGen.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/version/util/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.Code.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/ZooKeeperSaslClient.ServerSaslResponseCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/ZooKeeperSaslClient.ServerSaslResponseCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/StaticHostProvider.Resolver.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/FourLetterWordMain.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/HostProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/ZooKeeperSaslClient.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/StaticHostProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/ZooKeeperSaslClient.SaslState.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/ConnectStringParser.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/class-use/ZKClientConfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/StaticHostProvider.Resolver.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/FourLetterWordMain.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/HostProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/ZooKeeperSaslClient.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/StaticHostProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/ZooKeeperSaslClient.SaslState.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/ConnectStringParser.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/client/ZKClientConfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Watcher.WatcherType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ClientCnxnSocketNIO.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.SystemErrorException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.ReconfigInProgress.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Op.SetData.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Login.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.BadVersionException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Watcher.Event.KeeperState.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.Create2Callback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.Children2Callback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ServerAdminClient.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Environment.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZKUtil.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.OperationTimeoutException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.UnimplementedException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.NoChildrenForEphemeralsException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.DataInconsistencyException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/SetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/SetAclCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/StatPrinter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/CommandNotFoundException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/GetAclCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/SetQuotaCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/StatCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/GetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/SetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/SetAclCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/StatPrinter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/CommandNotFoundException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/GetAclCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/SetQuotaCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/StatCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/GetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/CliException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/GetConfigCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/Ls2Command.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/ListQuotaCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/ReconfigCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/AclParser.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/MalformedCommandException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/AddAuthCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/LsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/SyncCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/DeleteAllCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/RemoveWatchesCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/CliWrapperException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/DeleteCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/DelQuotaCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/CliParseException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/CliCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/CloseCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/MalformedPathException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/class-use/CreateCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/CliException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/GetConfigCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/Ls2Command.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/ListQuotaCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/ReconfigCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/AclParser.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/MalformedCommandException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/AddAuthCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/LsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/SyncCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/DeleteAllCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/RemoveWatchesCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/CliWrapperException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/DeleteCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/DelQuotaCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/CliParseException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/CliCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/CloseCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/MalformedPathException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/cli/CreateCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.RuntimeInconsistencyException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.NotReadOnlyException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ClientCnxnSocketNetty.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/WatchDeregistration.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.NewConfigNoQuorum.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.SessionExpiredException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZooKeeper.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/OpResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZooDefs.Ids.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/MultiTransactionRecord.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.MultiCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.APIErrorException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.DataCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.NodeExistsException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZooDefs.Perms.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.NoAuthException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.StringCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.ReconfigDisabledException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/SaslServerPrincipal.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/StringUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/PathUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/StringUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/PathUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/ZKConfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/X509Util.ClientAuth.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/FileKeyStoreLoaderBuilderProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/ZKTrustManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/Time.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/NettyUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/SSLContextAndOptions.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/X509Util.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/QuorumX509Util.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/PathTrie.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/X509Exception.SSLContextException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/FileChangeWatcher.State.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/AtomicFileWritingIdiom.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/X509Exception.KeyManagerException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/FileChangeWatcher.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/ClientX509Util.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/IOUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/AtomicFileWritingIdiom.OutputStreamStatement.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/NetUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/AtomicFileOutputStream.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/AtomicFileWritingIdiom.WriterStatement.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/KeyStoreFileType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/X509Exception.TrustManagerException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/class-use/X509Exception.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/ZKConfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/X509Util.ClientAuth.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/FileKeyStoreLoaderBuilderProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/ZKTrustManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/Time.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/NettyUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/SSLContextAndOptions.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/X509Util.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/QuorumX509Util.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/PathTrie.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/X509Exception.SSLContextException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/FileChangeWatcher.State.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/AtomicFileWritingIdiom.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/X509Exception.KeyManagerException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/FileChangeWatcher.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/ClientX509Util.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/IOUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/AtomicFileWritingIdiom.OutputStreamStatement.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/NetUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/AtomicFileOutputStream.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/AtomicFileWritingIdiom.WriterStatement.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/KeyStoreFileType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/X509Exception.TrustManagerException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/common/X509Exception.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZooKeeper.States.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZooKeeperMain.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Op.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.InvalidACLException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.StatCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Watcher.Event.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Quotas.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ServerCnxn.CloseRequestException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperCriticalThread.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/FinalRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ExitCode.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/TraceFormatter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/DataNode.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/PrepRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/NIOServerCnxnFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/RequestProcessor.RequestProcessorException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/WorkerService.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FileTxnLog.FileTxnIterator.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FileTxnSnapLog.DatadirException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/TxnLog.TxnIterator.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FileTxnLog.FileTxnIterator.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FileTxnSnapLog.DatadirException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/TxnLog.TxnIterator.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FileTxnSnapLog.PlayBackListener.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/SnapShot.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FileTxnSnapLog.SnapDirContentCheckException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FileSnap.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FileTxnSnapLog.LogDirContentCheckException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/TxnLogToolkit.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/Util.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FileTxnLog.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/TxnLog.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FileTxnSnapLog.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/class-use/FilePadding.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FileTxnSnapLog.PlayBackListener.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/SnapShot.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FileTxnSnapLog.SnapDirContentCheckException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FileSnap.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FileTxnSnapLog.LogDirContentCheckException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/TxnLogToolkit.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/Util.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FileTxnLog.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/TxnLog.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FileTxnSnapLog.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/persistence/FilePadding.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooTrace.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ServerCnxn.CloseRequestException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperCriticalThread.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/FinalRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ExitCode.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/TraceFormatter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/DataNode.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/PrepRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/NIOServerCnxnFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/RequestProcessor.RequestProcessorException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/WorkerService.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooTrace.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperServerMain.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/SessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/SyncRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/DataTree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/SessionTracker.SessionExpirer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/LogFormatter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/TxnLogProposalIterator.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperServerListener.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/WatchesSummary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/DatadirCleanupManager.PurgeTaskStatus.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ByteBufferInputStream.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ServerCnxnFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/SessionTrackerImpl.SessionImpl.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/EphemeralTypeEmulate353.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/WorkerService.WorkRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ServerConfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperServer.MissingSessionException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperServerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperServerConf.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperServerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ServerCnxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ReferenceCountedACLCache.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ConnectionBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/Request.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/WatchesReport.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/DatadirCleanupManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperServer.State.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperThread.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/EphemeralType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/DataTree.ProcessTxnResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ConnectionMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ServerStats.Provider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ExpiryQueue.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ByteBufferOutputStream.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ServerCnxn.EndOfStreamException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/SnapshotFormatter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/PurgeTxnLog.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/WatchesPathReport.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/NettyServerCnxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/RateLogger.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/UnimplementedRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZKDatabase.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ZooKeeperSaslServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ServerStats.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/NettyServerCnxnFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/SessionTrackerImpl.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ContainerManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/DataTreeBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/NIOServerCnxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/ObserverBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/SessionTracker.Session.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/RequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/class-use/DataTreeMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperServerMain.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/SessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/SyncRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/DataTree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/SessionTracker.SessionExpirer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/LogFormatter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/KerberosName.NoMatchingRule.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/SASLAuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/IPAuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/DigestLoginModule.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/DigestAuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/KerberosName.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/KerberosName.BadFormatString.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/X509AuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/AuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/ProviderRegistry.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/class-use/SaslServerCallbackHandler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/KerberosName.NoMatchingRule.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/IPAuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/DigestLoginModule.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/KerberosName.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/KerberosName.BadFormatString.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/X509AuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/AuthenticationProvider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/ProviderRegistry.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/TxnLogProposalIterator.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperServerListener.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/WatchesSummary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/DatadirCleanupManager.PurgeTaskStatus.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ByteBufferInputStream.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ServerCnxnFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/SessionTrackerImpl.SessionImpl.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/SnapshotThrottleException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/FastLeaderElection.Messenger.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/Observer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/Leader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/FastLeaderElection.ToSend.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LearnerSyncRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/SnapshotThrottleException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/FastLeaderElection.Messenger.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/Observer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/Leader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/FastLeaderElection.ToSend.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LearnerSyncRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ObserverZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LocalPeerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/UnifiedServerSocket.UnifiedSocket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/CommitProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ServerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumPeer.AddressTuple.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumCnxManager.InitialMessage.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/FollowerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/RemotePeerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumPeer.ServerState.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/FollowerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ServerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/SendAckRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/StateSummary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumCnxManager.Listener.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/Leader.XidRolloverException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LocalSessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ReadOnlyBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/UpgradeableSessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumPeer.QuorumServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/PrependableSocket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ObserverRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LearnerSnapshot.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ReadOnlyRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/Election.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/FollowerZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/Follower.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderElection.ElectionResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumCnxManager.InitialMessage.InitialMessageException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ProposalRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/AuthFastLeaderElection.Notification.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LearnerZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LearnerSessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderElectionBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/FastLeaderElection.Notification.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/FastLeaderElection.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/UnifiedServerSocket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumPeerConfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumCnxManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/Learner.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumPeerMain.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/SyncedLearnerTracker.QuorumVerifierAcksetPair.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ReadOnlyZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderSessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/RemotePeerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/ObserverMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderElection.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/Vote.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumPeer.LearnerType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumStats.Provider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/SyncedLearnerTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/Leader.Proposal.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderElectionMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumCnxManager.Message.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/AuthFastLeaderElection.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumPeerConfig.ConfigException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LocalPeerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LearnerSnapshotThrottler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LeaderMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/FollowerRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumPeer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/BufferStats.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/AuthFastLeaderElection.ToSend.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/LearnerHandler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/class-use/QuorumStats.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LocalPeerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/UnifiedServerSocket.UnifiedSocket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/CommitProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ServerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeer.AddressTuple.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumCnxManager.InitialMessage.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/SaslQuorumServerCallbackHandler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/NullQuorumAuthLearner.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/NullQuorumAuthServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/SaslQuorumAuthServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/QuorumAuth.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/SaslQuorumAuthLearner.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/QuorumAuthServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/QuorumAuthLearner.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/class-use/QuorumAuth.Status.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/NullQuorumAuthLearner.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/NullQuorumAuthServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/QuorumAuth.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/QuorumAuthServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/QuorumAuthLearner.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/auth/QuorumAuth.Status.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/FollowerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/RemotePeerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeer.ServerState.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/FollowerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ServerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/SendAckRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/StateSummary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumCnxManager.Listener.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/Leader.XidRolloverException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LocalSessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ReadOnlyBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/UpgradeableSessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeer.QuorumServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/PrependableSocket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LearnerSnapshot.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/Election.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/Follower.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderElection.ElectionResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumCnxManager.InitialMessage.InitialMessageException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ProposalRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/AuthFastLeaderElection.Notification.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/class-use/QuorumHierarchical.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/class-use/QuorumMaj.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/class-use/QuorumVerifier.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/QuorumVerifier.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/flexible/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LearnerSessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderElectionBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/FastLeaderElection.Notification.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/FastLeaderElection.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/UnifiedServerSocket.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeerConfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumCnxManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/Learner.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeerMain.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/SyncedLearnerTracker.QuorumVerifierAcksetPair.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderSessionTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/RemotePeerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/ObserverMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderElection.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/Vote.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeer.LearnerType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumStats.Provider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/SyncedLearnerTracker.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/Leader.Proposal.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderElectionMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumCnxManager.Message.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/AuthFastLeaderElection.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeerConfig.ConfigException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LocalPeerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LearnerSnapshotThrottler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LeaderMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/BufferStats.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/AuthFastLeaderElection.ToSend.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/LearnerHandler.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumStats.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/EphemeralTypeEmulate353.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/WorkerService.WorkRequest.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ServerConfig.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperServer.MissingSessionException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperServerMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperServerConf.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperServerBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ServerCnxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ReferenceCountedACLCache.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ConnectionBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/Request.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/WatchesReport.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/DatadirCleanupManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperServer.State.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperThread.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/EphemeralType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/DataTree.ProcessTxnResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ConnectionMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ServerStats.Provider.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ExpiryQueue.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ByteBufferOutputStream.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ServerCnxn.EndOfStreamException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/SnapshotFormatter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/PurgeTxnLog.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/WatchesPathReport.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/NettyServerCnxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/RateLogger.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.ConsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/DummyAdminServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.MonitorCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.ConsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/DummyAdminServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.MonitorCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/CommandOutputter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/JsonOutputter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.CnxnStatResetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.WatchCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.WatchesByPathCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.DirsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Command.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/AdminServerFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.StatCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.IsroCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.EnvCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/AdminServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.StatResetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/AdminServer.AdminServerException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/JettyAdminServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.WatchSummaryCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.SetTraceMaskCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.ConfCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.DumpCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.GetTraceMaskCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/CommandBase.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.SrvrCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/Commands.RuokCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/class-use/CommandResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/CommandOutputter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/JsonOutputter.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.CnxnStatResetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.WatchCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.WatchesByPathCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.DirsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Command.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/AdminServerFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.StatCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.IsroCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.EnvCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/AdminServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.StatResetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/AdminServer.AdminServerException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/JettyAdminServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.WatchSummaryCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.SetTraceMaskCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.ConfCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.DumpCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.GetTraceMaskCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/CommandBase.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.SrvrCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/Commands.RuokCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/admin/CommandResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/UnimplementedRequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZKDatabase.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ZooKeeperSaslServer.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ServerStats.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/NettyServerCnxnFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/SessionTrackerImpl.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ContainerManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/CnxnStatResetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/ConfCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/StatCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/CnxnStatResetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/ConfCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/StatCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/NopCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/TraceMaskCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/ConsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/MonitorCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/DumpCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/CommandExecutor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/AbstractFourLetterCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/WatchCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/SetTraceMaskCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/FourLetterCommands.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/RuokCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/DirsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/StatResetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/EnvCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/class-use/IsroCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/NopCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/TraceMaskCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/ConsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/MonitorCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/DumpCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/CommandExecutor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/AbstractFourLetterCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/WatchCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/SetTraceMaskCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/FourLetterCommands.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/RuokCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/DirsCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/StatResetCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/EnvCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/command/IsroCommand.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/DataTreeBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/class-use/SerializeUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/class-use/ConfigUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/class-use/VerifyingFileFactory.Builder.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/class-use/ZxidUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/class-use/VerifyingFileFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/class-use/KerberosUtil.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/class-use/OSMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/SerializeUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/ConfigUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/VerifyingFileFactory.Builder.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/ZxidUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/VerifyingFileFactory.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/KerberosUtil.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/util/OSMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/NIOServerCnxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/ObserverBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/SessionTracker.Session.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/RequestProcessor.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/server/DataTreeMXBean.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/OpResult.CheckResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/OpResult.SetDataResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.MarshallingErrorException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Shell.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/CreateMode.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Testable.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/MultiResponse.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ClientCnxn.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.InvalidCallbackException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/OpResult.DeleteResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Shell.ExitCodeException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Version.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/AsyncCallback.VoidCallback.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZooKeeper.WatchRegistration.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ZooDefs.OpCode.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Watcher.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/OpResult.ErrorResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.UnknownSessionException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/ClientWatchManager.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Op.Delete.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/StatsTrack.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Watcher.Event.EventType.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/admin/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/admin/class-use/ZooKeeperAdmin.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/admin/ZooKeeperAdmin.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/admin/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/admin/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/admin/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Environment.Entry.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/OpResult.CreateResult.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Op.CreateTTL.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.BadArgumentsException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/KeeperException.SessionMovedException.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/class-use/CommonNames.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/class-use/MBeanRegistry.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/class-use/ManagedUtil.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/class-use/ZKMBeanInfo.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/CommonNames.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/MBeanRegistry.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/ManagedUtil.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/jmx/ZKMBeanInfo.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/Transaction.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/package-frame.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/class-use/SecurityUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/class-use/PemReader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/SecurityUtils.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/package-use.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/package-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/package-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/org/apache/zookeeper/util/PemReader.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/overview-tree.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/overview-summary.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/allclasses-noframe.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/docs/apidocs/zookeeper-server/index.html</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-handler-4.1.42.Final.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-common-4.1.42.Final.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/json-simple-1.1.1.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-transport-native-unix-common-4.1.42.Final.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-transport-4.1.42.Final.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/slf4j-1.7.25.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-transport-native-epoll-4.1.42.Final.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-codec-4.1.42.Final.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jline-2.11.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/log4j-1.2.17.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-resolver-4.1.42.Final.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-buffer-4.1.42.Final.LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/README_packaging.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/LICENSE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/README.md</span><br><span class="line">apache-zookeeper-3.5.6-bin/NOTICE.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/conf/</span><br><span class="line">apache-zookeeper-3.5.6-bin/conf/configuration.xsl</span><br><span class="line">apache-zookeeper-3.5.6-bin/conf/zoo_sample.cfg</span><br><span class="line">apache-zookeeper-3.5.6-bin/conf/log4j.properties</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkTxnLogToolkit.cmd</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkServer.sh</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkCleanup.sh</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkTxnLogToolkit.sh</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkEnv.sh</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkCli.sh</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkCli.cmd</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkServer.cmd</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkEnv.cmd</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/README.txt</span><br><span class="line">apache-zookeeper-3.5.6-bin/bin/zkServer-initialize.sh</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/zookeeper-jute-3.5.6.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/audience-annotations-0.5.0.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/zookeeper-3.5.6.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-handler-4.1.42.Final.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-common-4.1.42.Final.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-buffer-4.1.42.Final.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-transport-4.1.42.Final.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-resolver-4.1.42.Final.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-codec-4.1.42.Final.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-transport-native-epoll-4.1.42.Final.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/netty-transport-native-unix-common-4.1.42.Final.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/slf4j-api-1.7.25.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/slf4j-log4j12-1.7.25.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/log4j-1.2.17.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/commons-cli-1.2.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jetty-server-9.4.17.v20190418.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/javax.servlet-api-3.1.0.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jetty-http-9.4.17.v20190418.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jetty-util-9.4.17.v20190418.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jetty-io-9.4.17.v20190418.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jetty-servlet-9.4.17.v20190418.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jetty-security-9.4.17.v20190418.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jackson-databind-2.9.10.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jackson-annotations-2.9.10.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jackson-core-2.9.10.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/json-simple-1.1.1.jar</span><br><span class="line">apache-zookeeper-3.5.6-bin/lib/jline-2.11.jar</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>ZooKeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>关于MySQL数据库自增主键，说几个容易被忽略的点</title>
    <url>/2019/10/12/mysql-auto-increment-id/</url>
    <content><![CDATA[<h2 id="自增主键是什么"><a href="#自增主键是什么" class="headerlink" title="自增主键是什么"></a>自增主键是什么</h2><p>自增主键是指在自增列上定义的主键。自增主键可以让主键索引尽量地保持递增顺序插入，避免了页分裂，索引也更紧凑。</p>
<p>在建表语句中一般是这么定义的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NOT NULL PRIMARY KEY AUTO_INCREMENT</span><br></pre></td></tr></table></figure>
<p>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `t` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `step` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="自增值保存在哪里"><a href="#自增值保存在哪里" class="headerlink" title="自增值保存在哪里"></a>自增值保存在哪里</h2><p>不同的数据库引擎对于自增值的保存策略不同：</p>
<ul>
<li>MyISAM 引擎：自增值保存在数据文件中；</li>
<li>InnoDB引擎：<ul>
<li>在 MySQL 5.7 及之前的版本，自增值保存在内存里，并没有持久化。每次重启后，第一次打开表的时候，都会去找自增值的最大值 <code>max(id)</code>，然后将 <code>max(id)+1</code> 作为这个表当前的自增值。﻿</li>
<li>在 MySQL 8.0 版本，将自增值的变更记录在了 redo log 中，重启的时候依靠 redo log 恢复重启之前的值。</li>
</ul>
</li>
</ul>
<h2 id="自增值修改机制"><a href="#自增值修改机制" class="headerlink" title="自增值修改机制"></a>自增值修改机制</h2><p>假设数据表当前的自增值是 Y，在插入一行数据的时候，数据库的执行情况如下：</p>
<ul>
<li>如果插入数据时自增字段指定了具体的值 X，就直接使用值 X 填到该自增字段，该表的自增值是否修改的判断如下：<ul>
<li>若 X&lt;Y，则该表的自增值不变；</li>
<li>若 X≥Y，则需要修改该表的自增值为 X + auto_increment_increment（步长）。</li>
</ul>
</li>
<li>如果插入数据时自增字段未指定值或指定为 0、null，则把该表当前的自增值（即 Y）填到自增字段，并修改该表的自增值为 Y + auto_increment_increment（步长）。</li>
</ul>
<p>实际上，MySQL 维护着两个系统参数：auto_increment_offset 和 auto_increment_increment，分别用来表示自增的初始值和步长，默认值都为 1。<strong>MySQL 修改数据表自增值是从 auto_increment_offset 开始，以 auto_increment_increment 为步长，持续叠加，直到找到第一个大于 X 的值，作为新的自增值。</strong></p>
<blockquote>
<p>在双 M 的主备结构里要求双写的时候，我们就可能会设置成 auto_increment_increment=2，让一个库的自增 id 都是奇数，另一个库的自增 id 都是偶数，避免两个库生成的主键发生冲突。</p>
</blockquote>
<h2 id="自增值的修改时机"><a href="#自增值的修改时机" class="headerlink" title="自增值的修改时机"></a>自增值的修改时机</h2><p><strong>数据表的自增值修改实际上是在真正插入数据的操作之前。如果没有插入成功，MySQL 也不会将自增值再改回去。也就是说，自增主键有可能会出现不连续的情况。</strong>比如在插入数据时出错（如违反唯一键约束），或者事务回滚的情况下，都会导致自增主键不连续。</p>
<p>可通过以下步骤验证：</p>
<ol>
<li><p>创建表 t_auto，包含主键、手机号和姓名三个字段，其中主键自增，手机号限制唯一。表结构如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `t_auto` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `mobile` varchar(11) DEFAULT NULL,</span><br><span class="line">  `name` varchar(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `m` (`mobile`)</span><br><span class="line">) ENGINE=InnoDB;</span><br></pre></td></tr></table></figure>
</li>
<li><p>插入一条记录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into t_auto values(null, &#x27;18500009999&#x27;, &#x27;小明&#x27;); </span><br></pre></td></tr></table></figure>
</li>
<li><p>执行 <code>show create table</code> 命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table t_auto \G;</span><br></pre></td></tr></table></figure>
<p>输出结果如下，可以看到 AUTO_INCREMENT=2，表示下一次插入数据时，如果需要自动生成自增值，会生成 id=2。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t_auto</span><br><span class="line">Create Table: CREATE TABLE `t_auto` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `mobile` varchar(11) COLLATE utf8_bin DEFAULT NULL,</span><br><span class="line">  `name` varchar(20) COLLATE utf8_bin DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `m` (`mobile`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COLLATE=utf8_bin</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure>
<p>查询表数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from t_auto;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<p>| id   | mobile      | name |<br>| —— | —————- | —— |<br>| 1    | 18500009999 | 小明 |</p>
</li>
<li><p>再插入一条数据，手机号和上一条数据一样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into t_auto values(null, &#x27;18500009999&#x27;, &#x27;小红&#x27;); </span><br></pre></td></tr></table></figure>
<p>因为碰到唯一键 m 冲突（手机号要求唯一），所以 id=2 这一行并没有插入成功，错误信息如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ERROR 1062 (23000): Duplicate entry &#x27;18500009999&#x27; for key &#x27;m&#x27;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这个语句的执行流程就是：</p>
<ol>
<li>执行器调用 InnoDB 引擎接口写入一行，传入的这一行的值是 (0, ‘18500009999’, ‘小红’);</li>
<li>InnoDB 发现用户没有指定自增 id 的值，获取表 t 当前的自增值 2；</li>
<li>将传入的行的值改成 (2, ‘18500009999’, ‘小红’);</li>
<li>将表的自增值改成 3；</li>
<li>继续执行插入数据操作，由于已经存在 mobile=18500009999 的记录，所以报 Duplicate key error，语句返回。</li>
</ol>
</blockquote>
</li>
<li><p>执行 <code>show create table</code> 命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table t_auto \G;</span><br></pre></td></tr></table></figure>
<p>输出结果如下，可以看到 AUTO_INCREMENT=3，MySQL 没有将自增值再改回去：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t_auto</span><br><span class="line">Create Table: CREATE TABLE `t_auto` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `mobile` varchar(11) COLLATE utf8_bin DEFAULT NULL,</span><br><span class="line">  `name` varchar(20) COLLATE utf8_bin DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `m` (`mobile`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_bin</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改手机号，再重新插入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into t_auto values(null, &#x27;18500009998&#x27;, &#x27;小红&#x27;); </span><br></pre></td></tr></table></figure>
<p>此时查询表数据，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from t_auto;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<p>| id   | mobile      | name |<br>| —— | —————- | —— |<br>| 1    | 18500009999 | 小明 |<br>| 3    | 18500009998 | 小红 |</p>
<p>也就是说，出现了自增主键不连续的情况。</p>
</li>
</ol>
<p>同样地，<strong>事务回滚也会出现自增主键不连续的情况。</strong>比如，</p>
<ol>
<li><p>先执行以下事务：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">begin;</span><br><span class="line">insert into t_auto values(null, &#x27;18500009997&#x27;, &#x27;小江&#x27;);</span><br><span class="line">rollback;</span><br></pre></td></tr></table></figure>
</li>
<li><p>再执行 <code>how create table</code> 命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table t_auto \G;</span><br></pre></td></tr></table></figure>
<p>输出结果如下，可以看到 AUTO_INCREMENT=5，MySQL 没有将自增值改回去：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: t_auto</span><br><span class="line">Create Table: CREATE TABLE `t_auto` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `mobile` varchar(11) COLLATE utf8_bin DEFAULT NULL,</span><br><span class="line">  `name` varchar(20) COLLATE utf8_bin DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `m` (`mobile`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_bin</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure>
</li>
<li><p>再插入数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into t_auto values(null, &#x27;18500009996&#x27;, &#x27;小青&#x27;);</span><br></pre></td></tr></table></figure>
<p>查询数据表，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from t_auto;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<p>| id   | mobile      | name |<br>| —— | —————- | —— |<br>| 1    | 18500009999 | 小明 |<br>| 3    | 18500009998 | 小红 |<br>| 5    | 18500009996 | 小青 |</p>
</li>
</ol>
<blockquote>
<p>在数据插入失败时，MySQL 不将自增值改回去是为了提升性能。在申请自增值时，为避免多个并行执行的事务申请到同一个自增 id，在申请的过程中会加锁，然后按顺序执行。自增 id 锁并不是一个事务锁，而是每次申请完就马上释放，以便允许别的事务再申请。</p>
<p>继续以上述的表 t_auto 为例，此时表当前自增值为 6：</p>
<ol>
<li>假设现在有两个并行执行的事务 A 和 B，其中事务 A 申请到了 id=6，事务 B 申请到了 id=7，这时数据表的自增值是 8（即 AUTO_INCREMENT=8），继续执行；</li>
<li>事务 B 正确提交，但事务 A 提交失败，比如出现唯一键冲突；</li>
<li>如果允许自增 id 回退的话，表 t_auto 会把当前的自增值改为 6，此时会出现表的自增值为 6，但表中却存在 id=7 的数据；</li>
<li>接下来其他事务申请自增值就会申请到 id=6，然后再申请到 id=7，这时就会出现插入语句报错“主键冲突”。</li>
</ol>
<p>解决这个主键冲突，有两种方法：一种是每次申请 id 时，判断这个 id 是否已经存在于表中，若存在，则跳过这个 id；另一种是把自增 id 的锁范围扩大，必须等到事务完成提交，再释放锁，下一个事务才能再申请自增 id。这两种方法都存在性能问题：一个是每次申请 id 都要去主键索引树判断 id 是否存在，另一个是锁的粒度太大，导致系统并发能力大大下降。</p>
<p>因此，<strong>为保证 MySQL 的性能，InnoDB 放弃了这个设计，语句执行失败也不回退自增 id。也正是因为这样，所以才只保证了自增 id 是递增的，但不保证是连续的。</strong></p>
</blockquote>
<h2 id="自增锁的优化"><a href="#自增锁的优化" class="headerlink" title="自增锁的优化"></a>自增锁的优化</h2><p>自增 id 锁不是事务锁，在每次申请完就立马释放，以便允许其他事务可以申请。</p>
<p>其实，在 MySQL 5.0 版本的时候，自增锁的范围是语句级别，即一个语句申请了表自增锁，这个锁要等到该语句执行完以后才释放，在此之前其他需要申请表自增锁的语句会被阻塞。此举虽然保证了数据一致性，但是降低了并发度。</p>
<p>在 MySQL 5.1.22 版本引入了一个新策略，新增参数 innodb_autoinc_lock_mode，用户可根据实际情况定制锁策略，该参数有如下值 （默认值是 1）：</p>
<ul>
<li><p>值为 0（Traditional，传统）时，采用传统锁模式，即采用之前 MySQL 5.0 版本的策略，所有 insert 操作都要申请自增锁，语句执行结束后才释放锁；</p>
</li>
<li><p>值为 1（Consecutive，连续）时：</p>
<ul>
<li>普通 insert 语句，自增锁在申请之后就马上释放；</li>
<li>批量 insert 语句，类似 insert … select、replace…select 这样的批量插入数据的语句，自增锁还是要等语句结束后才被释放；</li>
</ul>
</li>
<li><p>值为 2（Interleaved，交错）时，所有的申请自增主键的动作都是申请后就释放锁。</p>
</li>
</ul>
<p>在普通的 insert 语句里面包含多个 value 值的情况下，如以下的 insert 语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO `t_auto` (`mobile`, `name`)</span><br><span class="line">VALUES</span><br><span class="line">	(&#x27;13987890987&#x27;, &#x27;王朝&#x27;),</span><br><span class="line">	(&#x27;13987890988&#x27;, &#x27;马汉&#x27;),</span><br><span class="line">	(&#x27;13987890989&#x27;, &#x27;展昭&#x27;);</span><br></pre></td></tr></table></figure>
<p>因为这类语句在申请自增 id 的时候，是可以精确计算出需要多少个 id 的，然后一次性申请，申请完成后锁就可以释放了。</p>
<p>而对于批量插入数据的语句（select … insert，replace … select 和 load data 语句），MySQL 有一个批量申请自增 id 的策略（<strong>注：该策略是导致自增 id 不连续的第三种原因。</strong>）：</p>
<ol>
<li>语句执行过程中，第一次申请自增 id，会分配 1 个；</li>
<li>1 个用完以后，这个语句第二次申请自增 id，会分配 2 个；</li>
<li>2 个用完以后，还是这个语句，第三次申请自增 id，会分配 4 个；</li>
<li>依此类推，同一个语句去申请自增 id，每次申请到的自增 id 个数都是上一次的两倍。</li>
</ol>
<p>我们可以通过以下这个语句序列验证：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建表step_log</span><br><span class="line">CREATE TABLE `step_log` (</span><br><span class="line">  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `step` int(11) NOT NULL DEFAULT 1 COMMENT &#x27;步长&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- 插入数据</span><br><span class="line">insert into step_log values(null, 1);</span><br><span class="line">insert into step_log values(null, 2);</span><br><span class="line">insert into step_log values(null, 3);</span><br><span class="line">insert into step_log values(null, 4);</span><br><span class="line"></span><br><span class="line">-- 创建表step_log_2，其结构与表step_log相同</span><br><span class="line">create table step_log_2 like step_log;</span><br><span class="line"></span><br><span class="line">-- 批量插入数据</span><br><span class="line">insert into step_log_2(step) select step from step_log;</span><br><span class="line"></span><br><span class="line">-- 插入数据</span><br><span class="line">insert into step_log_2 values(null, 5);</span><br><span class="line"></span><br><span class="line">-- 查询此时表step_log_2数据：</span><br><span class="line">select * from step_log_2;</span><br><span class="line"></span><br><span class="line">-- 输出如下，id=5、id=6、id=7 就被跳过了：</span><br><span class="line">+----+------+</span><br><span class="line">| id | step |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 |    1 |</span><br><span class="line">|  2 |    2 |</span><br><span class="line">|  3 |    3 |</span><br><span class="line">|  4 |    4 |</span><br><span class="line">|  8 |    5 |</span><br><span class="line">+----+------+</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>引申：为什么默认设置下，insert … select 要使用语句级的锁？为什么这个参数的默认值不是 2？</strong></p>
<p>这么设计还是为了数据的一致性。</p>
<p>新建数据表 step_log，一起来看一下这个场景：往表 step_log 中插入了 4 行数据，然后创建了一个相同结构的表 step_log_2，然后两个 session 同时执行向表 step_log_2 中插入数据的操作。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `step_log` (</span><br><span class="line">  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `step` int(11) NOT NULL DEFAULT 1 COMMENT &#x27;步长&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>session A</th>
<th>session B</th>
</tr>
</thead>
<tbody>
<tr>
<td>insert into step_log values(null, 1);<br/>insert into step_log values(null, 2);<br/>insert into step_log values(null, 3);<br/>insert into step_log values(null, 4);</td>
<td></td>
</tr>
<tr>
<td></td>
<td>create table step_log_2 like step_log;</td>
</tr>
<tr>
<td>insert into step_log values(null, 5);</td>
<td>insert into step_log_2(step) select step from step_log;</td>
</tr>
</tbody>
</table>
</div>
<p>设想一下，如果 session B 是申请了自增值以后马上就释放自增锁，那么就可能出现这样的情况：</p>
<ul>
<li>session B 先插入了两个记录，(1,1,1)、(2,2,2)；</li>
<li>然后，session A 来申请自增 id 得到 id=3，插入了（3,5,5)；</li>
<li>之后，session B 继续执行，插入两条记录 (4,3,3)、 (5,4,4)。</li>
</ul>
<p>你可能会说，这也没关系吧，毕竟 session B 的语义本身就没有要求表 t2 的所有行的数据都跟 session A 相同。</p>
<p>是的，从数据逻辑上看是对的。但是，如果我们现在的 binlog_format=statement，你可以设想下，binlog 会怎么记录呢？</p>
<p>由于两个 session 是同时执行插入数据命令的，所以 binlog 里面对表 t2 的更新日志只有两种情况：要么先记 session A 的，要么先记 session B 的。</p>
<p>但不论是哪一种，这个 binlog 拿去从库执行，或者用来恢复临时实例，备库和临时实例里面，session B 这个语句执行出来，生成的结果里面，id 都是连续的。这时，这个库就发生了数据不一致。</p>
<p>你可以分析一下，出现这个问题的原因是什么？</p>
<p>其实，这是因为原库 session B 的 insert 语句，生成的 id 不连续。这个不连续的 id，用 statement 格式的 binlog 来串行执行，是执行不出来的。</p>
<p>而要解决这个问题，有两种思路：</p>
<ol>
<li>一种思路是，让原库的批量插入数据语句，固定生成连续的 id 值。所以，自增锁直到语句执行结束才释放，就是为了达到这个目的。</li>
<li>另一种思路是，在 binlog 里面把插入数据的操作都如实记录进来，到备库执行的时候，不再依赖于自增主键去生成。这种情况，其实就是 innodb_autoinc_lock_mode 设置为 2，同时 binlog_format 设置为 row。</li>
</ol>
<p>因此，<strong>在生产上，尤其是有 insert … select 这种批量插入数据的场景时，从并发插入数据性能的角度考虑，我建议你这样设置：innodb_autoinc_lock_mode=2 ，并且 binlog_format=row</strong>. 这样做，既能提升并发性，又不会出现数据一致性问题。</p>
<p>需要注意的是，我这里说的<strong>批量插入数据，包含的语句类型是 insert … select、replace … select 和 load data 语句。</strong></p>
</blockquote>
<h2 id="五、自增值达到上限的逻辑"><a href="#五、自增值达到上限的逻辑" class="headerlink" title="五、自增值达到上限的逻辑"></a>五、自增值达到上限的逻辑</h2><p>表定义的自增值达到上限后的逻辑是：<strong>再申请下一个 id 时，得到的值保持不变。</strong></p>
<p>可通过以下步骤验证：</p>
<ol>
<li><p>创建表 t，其中只包括一个主增主键，并设置 auto_increment=4294967295</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table t(id int unsigned auto_increment primary key) auto_increment=4294967295;</span><br></pre></td></tr></table></figure>
</li>
<li><p>插入一行数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into t values(null);</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看此时表 t 的创建语句:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table t;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `t` (</span><br><span class="line">  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4294967295 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;</span><br></pre></td></tr></table></figure>
</li>
<li><p>再插入一行数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into t values(null);</span><br></pre></td></tr></table></figure>
<p>则提示错误信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ERROR 1062 (23000): Duplicate entry &#x27;4294967295&#x27; for key &#x27;PRIMARY&#x27;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>可以看到，第一次插入数据成功后，这个表的 AUTO_INCREMENT 没有改变（还是 4294967295），导致了第二次插入的时候又拿到相同的自增 id 值，再试图执行时，报主键冲突错误。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>罗马数字（上）——拼写规则</title>
    <url>/2019/06/26/rules-of-reading-and-writing-roman-numerals/</url>
    <content><![CDATA[<h3 id="罗马数字符号"><a href="#罗马数字符号" class="headerlink" title="罗马数字符号"></a>罗马数字符号</h3><p>罗马数字是总共由 7 个字母符号表示：<strong>I（1）、V（5）、X（10）、L（50）、C（100）、D（500）和 M（1000）。</strong></p>
<span id="more"></span>
<p>表一：罗马数字对应的阿拉伯数字</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">罗马数字</th>
<th style="text-align:center">阿拉伯数字</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">I</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">V</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td style="text-align:center">X</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">L</td>
<td style="text-align:center">50</td>
</tr>
<tr>
<td style="text-align:center">C</td>
<td style="text-align:center">100</td>
</tr>
<tr>
<td style="text-align:center">D</td>
<td style="text-align:center">500</td>
</tr>
<tr>
<td style="text-align:center">M</td>
<td style="text-align:center">1000</td>
</tr>
</tbody>
</table>
</div>
<p>他们按照以下 4 个规则可以组合成表示任意的正整数。</p>
<h3 id="规则-1"><a href="#规则-1" class="headerlink" title="规则 1"></a>规则 1</h3><p><strong>一个罗马数字重复多少次，就表示这个数多少倍</strong>，比如罗马数字 I 表示的是数字 1，重复两次，即 II，表示的数字是 2，同理，III 表示数字 3，XX 表示数字 20，CC 表示数字 200 等；</p>
<p>需要注意的是，<strong>同一个罗马数字最多只能连续重复 3 次</strong>，如数字 400 就不能表示为 CCCC（重复了 4 次），而是要用 CD 来表示，数字40不能表示为 XXXX（同样重复了 4 次），而要表示为 XL 等。</p>
<p>但有一种特殊情况，因为古罗马人用 IV 作为古罗马神话主神朱庇特（IVPITER，古罗马字母里没有 J 和 U）名字的简写，他们不希望神的名字看上去像个数字，因此<strong>有时用 IIII 代替 IV</strong>。</p>
<p>另外，<strong>符号 D、L 和 V 不可以连续重复出现</strong>，比如用 DD 表示 1000 的写法是错误的，正确的是要用 M，表示 1500 的罗马数字是 MD，而不是 DDD。</p>
<h3 id="规则-2"><a href="#规则-2" class="headerlink" title="规则 2"></a>规则 2</h3><p><strong>如果在较大的罗马数字后面（右边）放置较小的罗马数字，表示的数字为这些数字相加得到的数</strong>，如较大的罗马数字 V 后面放置较小的罗马数字 I，即 VI，表示的数字则为 V 与 I 相加得到数 6。</p>
<p>同理，<br>VII = 7 (5 + 2 = 7)<br>LXXX = 80 (50 + 10 + 10 + 10 = 80)<br>MC = 1100 (1000 + 100 = 1100)</p>
<h3 id="规则-3"><a href="#规则-3" class="headerlink" title="规则 3"></a>规则 3</h3><p><strong>如果在较大的罗马数字前面（左边）放置在较小的罗马数字，表示的数是用较大的数减去较小的数所得到的值</strong>，如较大的罗马数字 V 前面或左边放置较小的罗马数字 I，即 IV，表示的数字则为 V 减去 I 得到的数 4。</p>
<p>同理，<br>IX = 9 (10 – 1 = 9)<br>XC = 90 (100 – 10 = 90)</p>
<p>用这种方式来表示罗马数字时，有以下几点需要注意：</p>
<p><strong>i) 充当减数的只能是 I，C 或 X</strong>，不能是 L 或 V，即罗马数字对应的数是 10 的 n 次幂才能充当减数。另外，由于 M 在罗马字母中表示的数最大，也不能充当减数（罗马数字没有 0 或负整数）。</p>
<blockquote>
<p>被减数 - 减数 = 差，<br>如 32 - 10 = 22，<br>被减数是 32，减数是 10，差是 22。</p>
</blockquote>
<p>表二：被减数的只能是 I，C 或 X</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>罗马数字</th>
<th>阿拉伯数字</th>
<th>10 的 n 次幂</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>I</td>
<td>1</td>
<td>$10^0 = 1$</td>
<td>10的0次幂</td>
</tr>
<tr>
<td>X</td>
<td>10</td>
<td>$10^1 = 10$</td>
<td>10的1次幂</td>
</tr>
<tr>
<td>C</td>
<td>100</td>
<td>$10^2 = 100$</td>
<td>10的2次幂</td>
</tr>
</tbody>
</table>
</div>
<p>比如数字 45，<br>不能写成 VL（50 - 5），<br>而是要写成 XLV（XL + V，即 40 + 5）；</p>
<p><strong>ii) 只能从一个罗马数字中减去另一个罗马数字，而不能减去两个或两个以上的罗马数字</strong>，比如说数字 8，<br>不能写成 IIX（X - I - I，即 10 - 1 - 1 = 8），<br>而是要写成 VIII（V + I + I + I，即 5 + 1 + 1 + 1 = 8）；</p>
<p><strong>iii) 从一个罗马数字（设为 a）中减去另一个罗马数字（设为 b）所得的差（设为 c），不能超过减数（即 b）的 10 倍以上。</strong><br>例如，<br>你可以从数字 10 中减去 1，<br>因为 10 - 1 = 9，9 比 1 的 10 倍（10）小；<br>但是不能从数字 100 中减去 1，<br>因为 100 - 1 = 99，99 比 1 的 10 倍（10）大。<br>所以，<br>数字 9 可以用 IX 来表示，<br>但数字 100 不能用 IC 来表示，<br>而是要用 XCIX（XC + IX，即 90 + 9 = 99）来表示。</p>
<p><strong><em>总结第 i) 点和第 iii) 点，可以得到以下规则：</em></strong><br><strong><em>符号 I 只能出现在符号 V 或 X 的前面（左边）；</em></strong><br><strong><em>符号 X 只能出现在符号 L 或 C 的前面（左边）；</em></strong><br><strong><em>符号 C 只能出现在符号 D 或 M 的前面（左边）。</em></strong></p>
<h3 id="规则-4"><a href="#规则-4" class="headerlink" title="规则 4"></a>规则 4</h3><p><strong>如果在罗马数字上方加一条横线，表示将该数值乘以 1000，即原数的 1000 倍，如果上方有两条横线，表示的数字是原数的 1, 000, 000 倍。</strong></p>
<p>如：</p>
<p>$\overline{M}=1, 000, 000$</p>
<p>$\overline{V}=5, 000$</p>
<p>$\overline{\overline{X}} = 10, 000, 000 $</p>
<hr>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>尝试应用上述规则，写出以下阿拉伯数字对应的罗马数字<br>35，<br>65，<br>99</p>
<p>求解过程如下：<br>35 = 10 + 10 + 10 + 5，即 X + X + X + V（XXXV），所以 35 = XXXV；<br>65 = 50 + 10 + 5，即 L + X + V（LXV），所以 65 = LXV；<br>99 = （100 - 10）+（10 - 1），即 XC + IX（XCIX）所以 99 = XCIX 。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>罗马数字</tag>
      </tags>
  </entry>
  <entry>
    <title>通过yum方式在CentOS7系统安装MySQL8</title>
    <url>/2019/12/28/how-to-install-mysql8-on-centos7/</url>
    <content><![CDATA[<h2 id="一、添加-MySQL-YUM-源"><a href="#一、添加-MySQL-YUM-源" class="headerlink" title="一、添加 MySQL YUM 源"></a>一、添加 MySQL YUM 源</h2><p>根据自己的操作系统版本选择合适的安装源（<a href="https://dev.mysql.com/downloads/repo/yum/">https://dev.mysql.com/downloads/repo/yum/</a>），这里选择的是 CentOS 7，MySQL 8。点击 Download 按钮，进入下载页。可以直接下载 rpm 文件，再上传到 CentOS 7 系统，也可以通过复制链接地址（地址为：<a href="https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm），进入">https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm），进入</a> CentOS 7 系统，通过 <code>wget</code> 命令下载。</p>
<span id="more"></span>
<p><img src="/image/20191228194455039.png" alt="CentOS 7 &amp; MySQL "></p>
<p>这里以进入 CentOS 7 系统，通过 <code>wget</code> 命令下载为例，展示如何添加 MySQL yum 源，相关命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入存放 rpm 文件的目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /homw/software</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载 rpm 文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过 rpm -Uvh 安装</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> rpm -Uvh mysql80-community-release-el7-3.noarch.rpm</span> </span><br></pre></td></tr></table></figure>
<h2 id="二、安装MySQL"><a href="#二、安装MySQL" class="headerlink" title="二、安装MySQL"></a>二、安装MySQL</h2><p>安装好 yum 源后，直接通过以下命令即可安装 MySQL，非常简单，安装过程中会有两次让你确认下载或安装，直接输入 y 即可。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 MySQL</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> yum install mysql-community-server</span></span><br></pre></td></tr></table></figure>
<h2 id="三、启动MySQL"><a href="#三、启动MySQL" class="headerlink" title="三、启动MySQL"></a>三、启动MySQL</h2><p>启动 MySQL 命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl start mysqld</span></span><br></pre></td></tr></table></figure>
<p>可通过如下命令查看 MySQL 运行状态：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl status mysqld</span></span><br></pre></td></tr></table></figure>
<p>若输出以下的信息，则说明 MySQL 已经在运行中了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[mysqlu@202 software]$ sudo systemctl status mysqld</span><br><span class="line">● mysqld.service - MySQL Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Fri 2019-12-27 15:48:33 CST; 11s ago</span><br><span class="line">     Docs: man:mysqld(8)</span><br><span class="line">           http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">  Process: 22383 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 22459 (mysqld)</span><br><span class="line">   Status: &quot;Server is operational&quot;</span><br><span class="line">   CGroup: /system.slice/mysqld.service</span><br><span class="line">           └─22459 /usr/sbin/mysqld</span><br><span class="line"></span><br><span class="line">Dec 27 15:48:25 202 systemd[1]: Starting MySQL Server...</span><br><span class="line">Dec 27 15:48:33 202 systemd[1]: Started MySQL Server.</span><br></pre></td></tr></table></figure>
<h2 id="四、MySQL-8-root-用户默认登录密码问题"><a href="#四、MySQL-8-root-用户默认登录密码问题" class="headerlink" title="四、MySQL 8 root 用户默认登录密码问题"></a>四、MySQL 8 root 用户默认登录密码问题</h2><p>在 CentOS 7 系统中，通过 yum 方式安装 MySQL 8，需要使用以下命令查看 root 用户的默认密码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> grep <span class="string">&quot;temporary password&quot;</span> /var/log/mysqld.log</span></span><br></pre></td></tr></table></figure>
<p>返回结果最后冒号后面的字符串就是root的默认密码。</p>
<blockquote>
<p>如果提示不存在 /var/log/mysqld.log 文件，请确保您已经通过步骤三，启动过一次 MySQL 服务。这里再提下 MySQL服务的启动命令是：<strong><em>systemctl start mysqld.service</em></strong></p>
</blockquote>
<p>如以下的输出，root 用户的登录密码为 <strong>Eea*eoqoI9:I</strong>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[mysqlu@202 software]$ sudo grep &quot;temporary password&quot; /var/log/mysqld.log</span><br><span class="line">[sudo] password for mysqlu: </span><br><span class="line">2019-12-27T07:48:29.009116Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: Eea*eoqoI9:I</span><br></pre></td></tr></table></figure>
<h2 id="五、登录MySQL，并修改默认密码"><a href="#五、登录MySQL，并修改默认密码" class="headerlink" title="五、登录MySQL，并修改默认密码"></a>五、登录MySQL，并修改默认密码</h2><p>知道 MySQL 的 root 用户密码后，即可登录 MySQL 了：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysql -uroot -p</span> </span><br><span class="line">Enter password: # 这里输入密码</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 17</span><br><span class="line">Server version: 8.0.18</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span></span><br></pre></td></tr></table></figure>
<p>进入 MySQL 后，还不能做其他操作，会一直提示你修改默认密码，比如切换到 <code>mysql</code> 数据库：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"> use mysql;</span></span><br><span class="line">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br></pre></td></tr></table></figure>
<p>修改默认密码的命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ALTER user &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;新密码&#x27;;</span><br></pre></td></tr></table></figure>
<p>其中 <strong>MySQL 8 以上的密码策略限制必须要包含大小写字母、数字和特殊符号。</strong>如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">ALTER user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;2020Super_Star&#x27;</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>至此，你再执行其他命令，而不会提示你需要修改密码了。</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>罗马数字（中）——起源与用途</title>
    <url>/2019/07/01/history-of-roman-numerals/</url>
    <content><![CDATA[<h2 id="一、罗马数字的诞生与进化"><a href="#一、罗马数字的诞生与进化" class="headerlink" title="一、罗马数字的诞生与进化"></a>一、罗马数字的诞生与进化</h2><p>罗马数字起源于古罗马帝国，拥有一个漫长而复杂的历史，始于公元前 8 世纪至 9 世纪，与古罗马帝国在帕兰丁山（Palantine Hill）周围建立的时间大致相同。不过，罗马数字的盛行时间比帝国本身还要长，直到 14 世纪前仍被广泛使用。</p>
<span id="more"></span>
<p>在设计上，罗马数字存在一些缺陷：</p>
<p>1) 没有表示零（0）的符号；</p>
<p>2) 也没有用于计数超过几千数值的实际方法，只有通过在数字符号上方添加横线来表示它们的值的倍数来修正。</p>
<p>复杂的社会、经济管理，建造像斗兽场和君士坦丁大拱门这样的大型纪念碑，都离不开大量的数学技能。而罗马数字的这些缺陷并没有阻止古罗马的学者和建筑师们建立一个伟大的帝国。</p>
<p>在公元 11 世纪时，阿拉伯数字传入欧洲。阿拉伯数字始创于印度，采用 0、1、2、3、4、5、6、7、8、9 共 10 个计数符号。采取位值法，高位在左，低位在右，从左往右书写。借助一些简单的数学符号（小数点、负号等），阿拉伯数字可以明确的表示所有的有理数。这是对罗马数字的一个很大的改进。</p>
<p>于是，人们开始逐渐使用阿拉伯数字作为日常生活中的记数系统，而罗马数字的使用更是随着创造它的帝国的崩溃而减少。到公元 14 世纪时，罗马数字已被阿拉伯数字所取代，成为在欧洲被广泛使用的记数系统。现在阿拉伯数字已成为目前使用最广泛的记数系统，通行于全世界。</p>
<h2 id="二、罗马数字的现代用途"><a href="#二、罗马数字的现代用途" class="headerlink" title="二、罗马数字的现代用途"></a>二、罗马数字的现代用途</h2><p>从某种角度上，可以说罗马数字经受住了时间的考验，并没有随着罗马帝国的消亡而结束。它的优雅感和复古风格确保了它不会在未来某个时候消失。今天，我们仍然使用罗马数字来表达某些东西，如：</p>
<p>在天文学领域中，用于为卫星编号，如木卫一，木卫二，木卫三。<br>在化学领域中，用于表示元素周期表中的元素组：IA族，IIA族，IIIA族，IVA族，VA族，VIA族，VIIA族，IB族，IIB族，IIIB族，IVB族，VB族，VIB族，VIIB族，VIII族。<br>钟表表盘符号：Ⅰ、Ⅱ、Ⅲ、Ⅳ（IIII）、Ⅴ、Ⅵ、Ⅶ、Ⅷ、Ⅸ、Ⅹ、Ⅺ、Ⅻ。<br>有序列表（ordered list）的编号（多用小写字母），例如：<br>i) 第一项<br>ii) 第二项<br>iii) 第三项<br>书籍和章节标题<br>君王的名字，如 Louis XIV（路易十四）、Charles II（查理二世）。<br>教皇的名字，如 Alexander VIII（亚历山大八世）、John Paul II（约翰·保罗二世）。<br>其他命名，如 iPhone X，氨酚伪麻美芬片（Ⅱ）。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>罗马数字</tag>
      </tags>
  </entry>
  <entry>
    <title>具有产品思维的工程师具备什么特点，如何才能变得更加具有产品思维？</title>
    <url>/2021/07/05/the-product-minded-software-engineer/</url>
    <content><![CDATA[<p>近日在网上读到一篇标题为<a href="https://blog.pragmaticengineer.com/the-product-minded-engineer">《The Product-Minded Software Engineer》</a>的文章，该文讲述了具有产品思维的软件工程师都具备哪些特点，在文末也给出了如何成为具有产品思维的软件工程师的秘诀。读完很有感触，身处现如今的互联网环境，工程师如果还只专注于技术，未免有些狭隘。毕竟工程师的价值并不只体现在技术层面上，还应体现在产品、商业等层面上。</p>
<p>文章很好，于是就把它翻译了出来，以期大家一起学习探讨，共同提高。</p>
<hr>
<p>具有产品思维的工程师是指那些对产品本身非常感兴趣的开发人员。他们会想去了解每个产品决策背后的原因，以及用户如何使用他们的产品，同时他们也乐于参与产品决策。如果他们决定放弃工程的乐趣（即放弃从事工程师工作），他们很可能会成为一名优秀的产品经理。我曾经与许多具有产品思维的优秀工程师一起工作，并认为自己也是这样的开发人员。在开发世界级产品的公司中，具有产品思维的工程师能把团队的影响力提升到一个新的水平。</p>
<p>Atlassian 公司的产品经理 Sherif Mansour 写了一篇关于产品工程师以及产品经理如何识别这些产品工程师并与他们良好合作的优秀文章。他的观点很相似：</p>
<blockquote>
<p>在我过去十年的产品管理工作中，我得出的结论是，产品工程师是帮助你构建成功的产品、扩展自己并成为更好的产品经理的关键因素。</p>
</blockquote>
<p>他还引用了 Shopify 的工程主管 Jean-Michel Lemieux 的话，他对产品工程师的定义是这样的：</p>
<blockquote>
<p>一旦你有了产品基础，你就需要这些积极问“为什么”的开发人员、这些渴望使用技术解决人类/用户问题的工程师、还有那些具有同理心的人来获得神奇的体验。这就是我书中对产品工程师的定义。优秀的产品工程师知道在构建阶段需要考虑最小可爱产品的正确深度，而不好的产品工程师则会砍掉过多的产品功能需求。</p>
</blockquote>
<p>开发面向用户功能的、并与产品经理合作的团队，是具有产品思维的工程师可以产生巨大影响的环境。他们常常会成为主要贡献者、产品经理的首选人员、并且也常晋升为团队领导。那么，具有产品思维的工程师的关键特征是什么，如何才能变得更加具有产品思维？本文总结了我观察到的这类人共有的 9 个特征，以及我对工程师培养他们的产品思维肌肉的建议。</p>
<h2 id="1-积极主动地对待产品理念或观点"><a href="#1-积极主动地对待产品理念或观点" class="headerlink" title="1. 积极主动地对待产品理念或观点"></a>1. 积极主动地对待产品理念或观点</h2><p>具有产品思维的工程师不会满足于拿到需求说明后就匆匆忙忙地实现它。他们会思考其他的创意，并找产品经理提出这些想法。他们会经常挑战现有的需求说明，建议其他可能更优的替代性方法。</p>
<h2 id="2-对业务、用户行为和数据的兴趣"><a href="#2-对业务、用户行为和数据的兴趣" class="headerlink" title="2. 对业务、用户行为和数据的兴趣"></a>2. 对业务、用户行为和数据的兴趣</h2><p>具有产品思维的工程师们的想法和创意都不是凭空得来的。他们会花时间去了解企业是如何商业运作的，产品又是如何配合商业运作，以及最终要达到什么样的商业目标。此外，他们也会去换位思考，试图理解产品将给用户带来什么感受，以及用户如何从使用产品中受益。他们通常会直接去深入研究商业数据和用户测量指标，并尽其所能获取这些数据。如果可能的话，他们会直接访问相关数据，或者找产品经理、数据专家去要这些信息。工程师们这样做，往往是出于他们好奇的天性。这也是我观察到的下一个特征。</p>
<h2 id="3-好奇心和对“为什么”的浓厚兴趣"><a href="#3-好奇心和对“为什么”的浓厚兴趣" class="headerlink" title="3. 好奇心和对“为什么”的浓厚兴趣"></a>3. 好奇心和对“为什么”的浓厚兴趣</h2><p>具有产品意识的工程师喜欢去理解所有事物背后的那个“为什么? ”。为什么产品要开发这个功能、而不开发另一个功能呢？为什么要首先发布这一里程碑，而不是选择另一个更简单的里程碑呢？如何进行测量——为什么我们不选择一种更全面彻底的度量方式来测量呢？</p>
<p>他们能够自主地找到他们能够找到的答案。他们也会向产品经理和其他业务人员寻求帮助，找寻其他与产品相关问题的答案。尽管他们经常会问很多问题，但是他们都会设法不让其他人觉得不爽，因为他们已经与那些同事建立起了牢固的关系。</p>
<h2 id="4-强大的沟通能力，建立与非工程师同事良好的关系"><a href="#4-强大的沟通能力，建立与非工程师同事良好的关系" class="headerlink" title="4. 强大的沟通能力，建立与非工程师同事良好的关系"></a>4. 强大的沟通能力，建立与非工程师同事良好的关系</h2><p>具有产品意识的工程师喜欢与软件工程领域外的同事们交谈，了解他们在做什么、为什么做。他们善于沟通，充分显示他们对于学习其他学科工作方式的浓厚兴趣。我经常看到他们和其他专业的同事们一起喝咖啡、吃午饭或者在走廊上聊天。</p>
<h2 id="5-提前在产品和工程两方面做出权衡"><a href="#5-提前在产品和工程两方面做出权衡" class="headerlink" title="5. 提前在产品和工程两方面做出权衡"></a>5. 提前在产品和工程两方面做出权衡</h2><p>因为具有产品思维的工程师们对产品的原理以及软件工程都有深刻的理解，他们可以提出非常独到的建议，而很少有别人可以做到。例如，在确定产品构建的工作范围时，打造产品某项关键功能的编程工作量可能非常巨大。许多工程师会开始寻找减少工作量的方法，并试图明确减少工作量对该项关键功能可能会产生的影响。</p>
<p>具有产品意识的工程师会从两个角度来解决这个问题：一方面在工程方面进行取舍，明确可能对产品产生的影响；同时在另一方面，他们还会开始对产品功能进行取舍，评估对工程工作量的影响。他们经常会去找产品经理，在保持产品体验相似的前提下，建议构建一个完全不同的功能，从而使得编程的工作量大幅降低。</p>
<p>兼顾产品和工程、平衡两者的影响，是具有产品意识的工程师们拥有的独特优势。他们可以快速地在同一枚硬币的两面之间来回切换：产品特性、工程工作量和两者的平衡。由于他们利用其工程和产品两方面的洞察力，在头脑中快速完成上述权衡，所以他们能够很快得出有价值的结论。</p>
<h2 id="6-以务实的方式处理边缘案例"><a href="#6-以务实的方式处理边缘案例" class="headerlink" title="6. 以务实的方式处理边缘案例"></a>6. 以务实的方式处理边缘案例</h2><p>边缘案例是一件很有意思的事情。有的工程师经常会忘记边缘案例的存在，最后从产品测试人员或最终用户那里得到反馈之后，才不得不回过头来解决这些问题。这是一个极端，而另一方面，如果在一个新产品或功能中试图处理所有可能的边缘情况，则可能会耗费大量的时间。</p>
<p>具有产品意识的工程师会很快制定出关于边缘案例的计划，并思考如何减少工作量，并经常会找到不需要额外工作量的解决方案。他们专注于“最小可爱产品”的概念，评估边缘案例的影响和处理所需的工作量。他们会提供很好的折衷建议: 在发布早期版本之前，列出大多数可能出错的地方，并提出需要解决哪些边缘案例的建议。</p>
<p>例如，对于一个千分之一的用户可能会遇到的错误，他们会考虑修复这一错误涉及的工作量，以及如果什么都不做会发生的后果。在产品验证过程中，客服专员是否可以在这个案例中帮助用户？用户下一次再遇到同样问题可以自己尝试成功解决吗？对产品进行略微调整，是否就可以避免边缘案例？</p>
<h2 id="7-快速的产品验证周期"><a href="#7-快速的产品验证周期" class="headerlink" title="7. 快速的产品验证周期"></a>7. 快速的产品验证周期</h2><p>甚至在开发的产品功能可以上线之前，具有产品思维的工程师们早就已经找到创造性的方法来获取早期的反馈意见。他们可以和同事一起进行走廊测试，可以向产品经理演示尚在开发中的功能，也可以在 Beta 版本发布前组织整个团队来一场“漏洞大扫荡”，当然还有许多其他创造性的方法。他们会一直思考这个问题：“我们怎样才能验证用户们会像我们预期的那样来使用这个功能？”</p>
<h2 id="8-对产品功能从头至尾负责到底"><a href="#8-对产品功能从头至尾负责到底" class="headerlink" title="8. 对产品功能从头至尾负责到底"></a>8. 对产品功能从头至尾负责到底</h2><p>经验丰富的工程师们都会对他们的工作从头至尾负责到底：从拿到产品规范到部署实施，再到发布产品并最终验证产品能否正常工作。除了上述这些工作以外，具有产品意识的工程师通常会举一反三、再进一步。</p>
<p>他们坚信，只有在获得用户行为和商业指标的结果之后，他们的工作才算全部完成。产品上线后，他们仍然会积极与产品经理、数据专家和客户支持渠道保持密切沟通，以便了解产品功能在现实世界中的使用情况。要获得足够得出结论的可靠数据通常需要几周时间。即使他们可能已经接手下一个新项目，他们仍然会把检查上一项目的成果作为首要任务之一。这并不是一项特别耗时的活动，但是特别需要一种锲而不舍的精神，推动那些想要知道自己的辛勤劳动究竟效果如何的工程师们，去坚持探寻答案。</p>
<p>当开发的某项功能表现得不如预期时，他们会特别好奇问题出在哪里？他们对于找到产品计划和现实世界结果之间存在差距的根本原因怀有浓厚的兴趣，程度不亚于他们在代码库中找到难以复现的缺陷并成功除错。他们经常会花费大量的时间，就某些假设和心得与产品经理和数据专家展开辩论。</p>
<h2 id="9-通过反复循环的学习，形成强大的产品本能"><a href="#9-通过反复循环的学习，形成强大的产品本能" class="headerlink" title="9. 通过反复循环的学习，形成强大的产品本能"></a>9. 通过反复循环的学习，形成强大的产品本能</h2><p>对于有产品意识的工程师来说，一个典型的项目通常是这样的：</p>
<ol>
<li>他们会提出很多问题，来准确理解构建产品功能的原因；</li>
<li>他们会提供建议和取舍方案，其中某些建议会反映在修订后的产品设计规范中；</li>
<li>他们会很快开发出相关功能，以便尽早得到反馈意见；</li>
<li>在产品发布之后，他们会积极跟进了解相关产品功能是否符合预期；</li>
<li>如果没有达到预期，他们会深入挖掘原因，并学到产品在现实世界中使用的新知识。</li>
</ol>
<p>每完成一个项目，他们对产品的理解就会加深，他们开始培养起越来越好的产品直觉。等到下一个项目，他们会贡献更多有价值的建议。随着时间推移，他们会成为产品经理最愿意去讨教的大专家，在新的项目还未开始之前就会提前去征求他们的意见。他们将名声在外，为持续的职业发展打开更多的大门。</p>
<h2 id="成为更有产品思维的工程师的秘诀"><a href="#成为更有产品思维的工程师的秘诀" class="headerlink" title="成为更有产品思维的工程师的秘诀"></a>成为更有产品思维的工程师的秘诀</h2><p>如果你在开发面向用户的产品，这里有一些我认为效果很好的技巧，可以增强你的产品思维。</p>
<ul>
<li><strong>了解公司成功的方式和原因。</strong>商业模式是什么？钱是怎么赚的？哪部分最赚钱，公司哪部分发展最快？原因是什么？你的团队如何适应这一切？</li>
<li>与你的产品经理建立牢固的关系。大多数产品经理会抓住机会指导工程师。让工程师对产品感兴趣意味着他们可以更好地扩展自己。在进来之前，问很多产品问题，花时间建立这种关系，并向你的产品经理明确表示，你想更多地参与到产品中来。</li>
<li>参与用户研究、客户支持和其他活动，你可以在其中了解更多有关产品如何运作的信息。与设计师、用户体验人员、数据科学家、运营人员和其他经常跟用户互动的人员结伴。</li>
<li>提出有充分依据的产品建议。在你对业务、产品和利益相关者都有一个很好的了解之后：就要采取主动。你可以为你正在进行的项目提出一些小建议。或者，你可以建议进行更大的努力，概述工程工作和产品工作，以便在待办事项中轻松确定优先级。</li>
<li>为你正在进行的项目提供产品/工程取舍。不仅要考虑对你团队正在构建的产品功能进行工程方面的取舍，还要建议可以减少工程工作量的产品权衡。对其他人的反馈持开放态度。</li>
<li>经常向你的产品经理寻求反馈。成为一名具有产品思维的优秀工程师意味着你已经在现有的工程技能组合之上建立了良好的产品技能。向你提供有关你在产品技能方面的表现的反馈的最佳人选是你的产品经理。就他们对你的产品建议的价值提出反馈意见，并就需要进一步发展的领域征求意见。</li>
</ul>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>罗马数字（下）——对照表 1-1000</title>
    <url>/2019/07/02/roman-numerals-1-1000/</url>
    <content><![CDATA[<h2 id="罗马数字-1-1000-对照表"><a href="#罗马数字-1-1000-对照表" class="headerlink" title="罗马数字 1-1000 对照表"></a>罗马数字 1-1000 对照表</h2><span id="more"></span>
<p><strong><em>PDF 版本下载:</em></strong> <em><a href="https://github.com/iuiuu/roman-numerals/blob/master/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%201-1000.pdf">roman numerals 1-1000.pdf</a></em></p>
<p><strong><em>Excel 版本下载:</em></strong> <em><a href="https://github.com/iuiuu/roman-numerals/blob/master/罗马数字%201-1000.xlsx">roman numerals 1-1000.xlsx</a></em></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>1-250</th>
<th></th>
<th>251-500</th>
<th></th>
<th>501-750</th>
<th></th>
<th>751-1000</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>I</td>
<td>251</td>
<td>CCLI</td>
<td>501</td>
<td>DI</td>
<td>751</td>
<td>DCCLI</td>
</tr>
<tr>
<td>2</td>
<td>II</td>
<td>252</td>
<td>CCLII</td>
<td>502</td>
<td>DII</td>
<td>752</td>
<td>DCCLII</td>
</tr>
<tr>
<td>3</td>
<td>III</td>
<td>253</td>
<td>CCLIII</td>
<td>503</td>
<td>DIII</td>
<td>753</td>
<td>DCCLIII</td>
</tr>
<tr>
<td>4</td>
<td>IV</td>
<td>254</td>
<td>CCLIV</td>
<td>504</td>
<td>DIV</td>
<td>754</td>
<td>DCCLIV</td>
</tr>
<tr>
<td>5</td>
<td>V</td>
<td>255</td>
<td>CCLV</td>
<td>505</td>
<td>DV</td>
<td>755</td>
<td>DCCLV</td>
</tr>
<tr>
<td>6</td>
<td>VI</td>
<td>256</td>
<td>CCLVI</td>
<td>506</td>
<td>DVI</td>
<td>756</td>
<td>DCCLVI</td>
</tr>
<tr>
<td>7</td>
<td>VII</td>
<td>257</td>
<td>CCLVII</td>
<td>507</td>
<td>DVII</td>
<td>757</td>
<td>DCCLVII</td>
</tr>
<tr>
<td>8</td>
<td>VIII</td>
<td>258</td>
<td>CCLVIII</td>
<td>508</td>
<td>DVIII</td>
<td>758</td>
<td>DCCLVIII</td>
</tr>
<tr>
<td>9</td>
<td>IX</td>
<td>259</td>
<td>CCLVIX</td>
<td>509</td>
<td>DIX</td>
<td>759</td>
<td>DCCLIX</td>
</tr>
<tr>
<td>10</td>
<td>X</td>
<td>260</td>
<td>CCLX</td>
<td>510</td>
<td>DX</td>
<td>760</td>
<td>DCCLX</td>
</tr>
<tr>
<td>11</td>
<td>XI</td>
<td>261</td>
<td>CCLXI</td>
<td>511</td>
<td>DXI</td>
<td>761</td>
<td>DCCLXI</td>
</tr>
<tr>
<td>12</td>
<td>XII</td>
<td>262</td>
<td>CCLXII</td>
<td>512</td>
<td>DXII</td>
<td>762</td>
<td>DCCLXII</td>
</tr>
<tr>
<td>13</td>
<td>XIII</td>
<td>263</td>
<td>CCLXIII</td>
<td>513</td>
<td>DXIII</td>
<td>763</td>
<td>DCCLXIII</td>
</tr>
<tr>
<td>14</td>
<td>XIV</td>
<td>264</td>
<td>CCLXIV</td>
<td>514</td>
<td>DXIV</td>
<td>764</td>
<td>DCCLXIV</td>
</tr>
<tr>
<td>15</td>
<td>XV</td>
<td>265</td>
<td>CCLXV</td>
<td>515</td>
<td>DXV</td>
<td>765</td>
<td>DCCLXV</td>
</tr>
<tr>
<td>16</td>
<td>XVI</td>
<td>266</td>
<td>CCLXVI</td>
<td>516</td>
<td>DXVI</td>
<td>766</td>
<td>DCCLXVI</td>
</tr>
<tr>
<td>17</td>
<td>XVII</td>
<td>267</td>
<td>CCLXVII</td>
<td>517</td>
<td>DXVII</td>
<td>767</td>
<td>DCCLXVII</td>
</tr>
<tr>
<td>18</td>
<td>XVIII</td>
<td>268</td>
<td>CCLXVIII</td>
<td>518</td>
<td>DXVIII</td>
<td>768</td>
<td>DCCLXVIII</td>
</tr>
<tr>
<td>19</td>
<td>XIX</td>
<td>269</td>
<td>CCLXIX</td>
<td>519</td>
<td>DXIX</td>
<td>769</td>
<td>DCCLXIX</td>
</tr>
<tr>
<td>20</td>
<td>XX</td>
<td>270</td>
<td>CCLXX</td>
<td>520</td>
<td>DXX</td>
<td>770</td>
<td>DCCLXX</td>
</tr>
<tr>
<td>21</td>
<td>XXI</td>
<td>271</td>
<td>CCLXXI</td>
<td>521</td>
<td>DXXI</td>
<td>771</td>
<td>DCCLXXI</td>
</tr>
<tr>
<td>22</td>
<td>XXII</td>
<td>272</td>
<td>CCLXXII</td>
<td>522</td>
<td>DXXII</td>
<td>772</td>
<td>DCCLXXII</td>
</tr>
<tr>
<td>23</td>
<td>XXIII</td>
<td>273</td>
<td>CCLXXIII</td>
<td>523</td>
<td>DXXIII</td>
<td>773</td>
<td>DCCLXXIII</td>
</tr>
<tr>
<td>24</td>
<td>XXIV</td>
<td>274</td>
<td>CCLXXIV</td>
<td>524</td>
<td>DXXIV</td>
<td>774</td>
<td>DCCLXXIV</td>
</tr>
<tr>
<td>25</td>
<td>XXV</td>
<td>275</td>
<td>CCLXXV</td>
<td>525</td>
<td>DXXV</td>
<td>775</td>
<td>DCCLXXV</td>
</tr>
<tr>
<td>26</td>
<td>XXVI</td>
<td>276</td>
<td>CCLXXVI</td>
<td>526</td>
<td>DXXVI</td>
<td>776</td>
<td>DCCLXXVI</td>
</tr>
<tr>
<td>27</td>
<td>XXVII</td>
<td>277</td>
<td>CCLXXVII</td>
<td>527</td>
<td>DXXVII</td>
<td>777</td>
<td>DCCLXXVII</td>
</tr>
<tr>
<td>28</td>
<td>XXVIII</td>
<td>278</td>
<td>CCLXXIII</td>
<td>528</td>
<td>DXXVIII</td>
<td>778</td>
<td>DCCLXXVIII</td>
</tr>
<tr>
<td>29</td>
<td>XXIX</td>
<td>279</td>
<td>CCLXXIX</td>
<td>529</td>
<td>DXXIX</td>
<td>779</td>
<td>DCCLXXIX</td>
</tr>
<tr>
<td>30</td>
<td>XXX</td>
<td>280</td>
<td>CCLXXX</td>
<td>530</td>
<td>DXXX</td>
<td>780</td>
<td>DCCLXXX</td>
</tr>
<tr>
<td>31</td>
<td>XXXI</td>
<td>281</td>
<td>CCLXXXI</td>
<td>531</td>
<td>DXXXI</td>
<td>781</td>
<td>DCCLXXXI</td>
</tr>
<tr>
<td>32</td>
<td>XXXII</td>
<td>282</td>
<td>CCLXXXII</td>
<td>532</td>
<td>DXXXII</td>
<td>782</td>
<td>DCCLXXXII</td>
</tr>
<tr>
<td>33</td>
<td>XXXIII</td>
<td>283</td>
<td>CCLXXXIII</td>
<td>533</td>
<td>DXXXIII</td>
<td>783</td>
<td>DCCLXXXIII</td>
</tr>
<tr>
<td>34</td>
<td>XXXIV</td>
<td>284</td>
<td>CCLXXXIV</td>
<td>534</td>
<td>DXXXIV</td>
<td>784</td>
<td>DCCLXXXIV</td>
</tr>
<tr>
<td>35</td>
<td>XXXV</td>
<td>285</td>
<td>CCLXXXV</td>
<td>535</td>
<td>DXXXV</td>
<td>785</td>
<td>DCCLXXXV</td>
</tr>
<tr>
<td>36</td>
<td>XXXVI</td>
<td>286</td>
<td>CCLXXXVI</td>
<td>536</td>
<td>DXXXVI</td>
<td>786</td>
<td>DCCLXXXVI</td>
</tr>
<tr>
<td>37</td>
<td>XXXVII</td>
<td>287</td>
<td>CCLXXXVII</td>
<td>537</td>
<td>DXXXVII</td>
<td>787</td>
<td>DCCLXXXVII</td>
</tr>
<tr>
<td>38</td>
<td>XXXVIII</td>
<td>288</td>
<td>CCLXXXVIII</td>
<td>538</td>
<td>DXXXVIII</td>
<td>788</td>
<td>DCCLXXXVIII</td>
</tr>
<tr>
<td>39</td>
<td>XXXIX</td>
<td>289</td>
<td>CCLXXXIX</td>
<td>539</td>
<td>DXXXIX</td>
<td>789</td>
<td>DCCLXXXIX</td>
</tr>
<tr>
<td>40</td>
<td>XL</td>
<td>290</td>
<td>CCXC</td>
<td>540</td>
<td>DXL</td>
<td>790</td>
<td>DCCXC</td>
</tr>
<tr>
<td>41</td>
<td>XLI</td>
<td>291</td>
<td>CCXCI</td>
<td>541</td>
<td>DXLI</td>
<td>791</td>
<td>DCCXCI</td>
</tr>
<tr>
<td>42</td>
<td>XLII</td>
<td>292</td>
<td>CCXCII</td>
<td>542</td>
<td>DXLII</td>
<td>792</td>
<td>DCCXCII</td>
</tr>
<tr>
<td>43</td>
<td>XLIII</td>
<td>293</td>
<td>CCXCIII</td>
<td>543</td>
<td>DXLIII</td>
<td>793</td>
<td>DCCXCIII</td>
</tr>
<tr>
<td>44</td>
<td>XLIV</td>
<td>294</td>
<td>CCXCIV</td>
<td>544</td>
<td>DXLIV</td>
<td>794</td>
<td>DCCXCIV</td>
</tr>
<tr>
<td>45</td>
<td>XLV</td>
<td>295</td>
<td>CCXCV</td>
<td>545</td>
<td>DXLV</td>
<td>795</td>
<td>DCCXCV</td>
</tr>
<tr>
<td>46</td>
<td>XLVI</td>
<td>296</td>
<td>CCXCVI</td>
<td>546</td>
<td>DXLVI</td>
<td>796</td>
<td>DCCXCVI</td>
</tr>
<tr>
<td>47</td>
<td>XLVII</td>
<td>297</td>
<td>CCXCVII</td>
<td>547</td>
<td>DXLVII</td>
<td>797</td>
<td>DCCXCVII</td>
</tr>
<tr>
<td>48</td>
<td>XLVIII</td>
<td>298</td>
<td>CCXCVIII</td>
<td>548</td>
<td>DXLVIII</td>
<td>798</td>
<td>DCCXCVIII</td>
</tr>
<tr>
<td>49</td>
<td>XLIX</td>
<td>299</td>
<td>CCXCIX</td>
<td>549</td>
<td>DXLIX</td>
<td>799</td>
<td>DCCXCIX</td>
</tr>
<tr>
<td>50</td>
<td>L</td>
<td>300</td>
<td>CCC</td>
<td>550</td>
<td>DL</td>
<td>800</td>
<td>DCCC</td>
</tr>
<tr>
<td>51</td>
<td>LI</td>
<td>301</td>
<td>CCCI</td>
<td>551</td>
<td>DLI</td>
<td>801</td>
<td>DCCCI</td>
</tr>
<tr>
<td>52</td>
<td>LII</td>
<td>302</td>
<td>CCCII</td>
<td>552</td>
<td>DLII</td>
<td>802</td>
<td>DCCCII</td>
</tr>
<tr>
<td>53</td>
<td>LIII</td>
<td>303</td>
<td>CCCIII</td>
<td>553</td>
<td>DLIII</td>
<td>803</td>
<td>DCCCIII</td>
</tr>
<tr>
<td>54</td>
<td>LIV</td>
<td>304</td>
<td>CCCIV</td>
<td>554</td>
<td>DLIV</td>
<td>804</td>
<td>DCCCIV</td>
</tr>
<tr>
<td>55</td>
<td>LV</td>
<td>305</td>
<td>CCCV</td>
<td>555</td>
<td>DLV</td>
<td>805</td>
<td>DCCCV</td>
</tr>
<tr>
<td>56</td>
<td>LVI</td>
<td>306</td>
<td>CCCVI</td>
<td>556</td>
<td>DLVI</td>
<td>806</td>
<td>DCCCVI</td>
</tr>
<tr>
<td>57</td>
<td>LVII</td>
<td>307</td>
<td>CCCVII</td>
<td>557</td>
<td>DLVII</td>
<td>807</td>
<td>DCCCVII</td>
</tr>
<tr>
<td>58</td>
<td>LVIII</td>
<td>308</td>
<td>CCCVIII</td>
<td>558</td>
<td>DLVIII</td>
<td>808</td>
<td>DCCCVIII</td>
</tr>
<tr>
<td>59</td>
<td>LIX</td>
<td>309</td>
<td>CCCIX</td>
<td>559</td>
<td>DLIX</td>
<td>809</td>
<td>DCCCIX</td>
</tr>
<tr>
<td>60</td>
<td>LX</td>
<td>310</td>
<td>CCCX</td>
<td>560</td>
<td>DLX</td>
<td>810</td>
<td>DCCCX</td>
</tr>
<tr>
<td>61</td>
<td>LXI</td>
<td>311</td>
<td>CCCXI</td>
<td>561</td>
<td>DLXI</td>
<td>811</td>
<td>DCCCXI</td>
</tr>
<tr>
<td>62</td>
<td>LXII</td>
<td>312</td>
<td>CCCXII</td>
<td>562</td>
<td>DLXII</td>
<td>812</td>
<td>DCCCXII</td>
</tr>
<tr>
<td>63</td>
<td>LXIII</td>
<td>313</td>
<td>CCCXIII</td>
<td>563</td>
<td>DLXIII</td>
<td>813</td>
<td>DCCCXIII</td>
</tr>
<tr>
<td>64</td>
<td>LXIV</td>
<td>314</td>
<td>CCCXIV</td>
<td>564</td>
<td>DLXIV</td>
<td>814</td>
<td>DCCCXIV</td>
</tr>
<tr>
<td>65</td>
<td>LXV</td>
<td>315</td>
<td>CCCXV</td>
<td>565</td>
<td>DLXV</td>
<td>815</td>
<td>DCCCXV</td>
</tr>
<tr>
<td>66</td>
<td>LXVI</td>
<td>316</td>
<td>CCCXVI</td>
<td>566</td>
<td>DLXVI</td>
<td>816</td>
<td>DCCCXVI</td>
</tr>
<tr>
<td>67</td>
<td>LXVII</td>
<td>317</td>
<td>CCCXVII</td>
<td>567</td>
<td>DLXVII</td>
<td>817</td>
<td>DCCCXVII</td>
</tr>
<tr>
<td>68</td>
<td>LXVIII</td>
<td>318</td>
<td>CCCXVIII</td>
<td>568</td>
<td>DLXVIII</td>
<td>818</td>
<td>DCCCXVIII</td>
</tr>
<tr>
<td>69</td>
<td>LXIX</td>
<td>319</td>
<td>CCCXIX</td>
<td>569</td>
<td>DLXIX</td>
<td>819</td>
<td>DCCCXIX</td>
</tr>
<tr>
<td>70</td>
<td>LXX</td>
<td>320</td>
<td>CCCXX</td>
<td>570</td>
<td>DLXX</td>
<td>820</td>
<td>DCCCXX</td>
</tr>
<tr>
<td>71</td>
<td>LXXI</td>
<td>321</td>
<td>CCCXXI</td>
<td>571</td>
<td>DLXXI</td>
<td>821</td>
<td>DCCCXXI</td>
</tr>
<tr>
<td>72</td>
<td>LXXII</td>
<td>322</td>
<td>CCCXXII</td>
<td>572</td>
<td>DLXXII</td>
<td>822</td>
<td>DCCCXXII</td>
</tr>
<tr>
<td>73</td>
<td>LXXIII</td>
<td>323</td>
<td>CCCXXIII</td>
<td>573</td>
<td>DLXXIII</td>
<td>823</td>
<td>DCCCXXIII</td>
</tr>
<tr>
<td>74</td>
<td>LXXIV</td>
<td>324</td>
<td>CCCXXIV</td>
<td>574</td>
<td>DLXXIV</td>
<td>824</td>
<td>DCCCXXIV</td>
</tr>
<tr>
<td>75</td>
<td>LXXV</td>
<td>325</td>
<td>CCCXXV</td>
<td>575</td>
<td>DLXXV</td>
<td>825</td>
<td>DCCCXXV</td>
</tr>
<tr>
<td>76</td>
<td>LXXVI</td>
<td>326</td>
<td>CCCXXVI</td>
<td>576</td>
<td>DLXXVI</td>
<td>826</td>
<td>DCCCXXVI</td>
</tr>
<tr>
<td>77</td>
<td>LXXVII</td>
<td>327</td>
<td>CCCXXVII</td>
<td>577</td>
<td>DLXXVII</td>
<td>827</td>
<td>DCCCXXVII</td>
</tr>
<tr>
<td>78</td>
<td>LXXVIII</td>
<td>328</td>
<td>CCCXXVIII</td>
<td>578</td>
<td>DLXXVIII</td>
<td>828</td>
<td>DCCCXXVIII</td>
</tr>
<tr>
<td>79</td>
<td>LXXIX</td>
<td>329</td>
<td>CCCXXIX</td>
<td>579</td>
<td>DLXXIX</td>
<td>829</td>
<td>DCCCXXIX</td>
</tr>
<tr>
<td>80</td>
<td>LXXX</td>
<td>330</td>
<td>CCCXXX</td>
<td>580</td>
<td>DLXXX</td>
<td>930</td>
<td>DCCCXXX</td>
</tr>
<tr>
<td>81</td>
<td>LXXXI</td>
<td>331</td>
<td>CCCXXXI</td>
<td>581</td>
<td>DLXXXI</td>
<td>831</td>
<td>DCCCXXXI</td>
</tr>
<tr>
<td>82</td>
<td>LXXXII</td>
<td>332</td>
<td>CCCXXXII</td>
<td>582</td>
<td>DLXXXII</td>
<td>832</td>
<td>DCCCXXXII</td>
</tr>
<tr>
<td>83</td>
<td>LXXXIII</td>
<td>333</td>
<td>CCCXXXIII</td>
<td>583</td>
<td>DLXXXIII</td>
<td>833</td>
<td>DCCCXXXIII</td>
</tr>
<tr>
<td>84</td>
<td>LXXXIV</td>
<td>334</td>
<td>CCCXXXIV</td>
<td>584</td>
<td>DLXXXIV</td>
<td>834</td>
<td>DCCCXXXIV</td>
</tr>
<tr>
<td>85</td>
<td>LXXXV</td>
<td>335</td>
<td>CCCXXXV</td>
<td>585</td>
<td>DLXXXV</td>
<td>835</td>
<td>DCCCXXXV</td>
</tr>
<tr>
<td>86</td>
<td>LXXXVI</td>
<td>336</td>
<td>CCCXXXVI</td>
<td>586</td>
<td>DLXXXVI</td>
<td>836</td>
<td>DCCCXXXVI</td>
</tr>
<tr>
<td>87</td>
<td>LXXXVII</td>
<td>337</td>
<td>CCCXXXVII</td>
<td>587</td>
<td>DLXXXVII</td>
<td>837</td>
<td>DCCCXXXVII</td>
</tr>
<tr>
<td>88</td>
<td>LXXXVIII</td>
<td>338</td>
<td>CCCXXXVIII</td>
<td>588</td>
<td>DLXXXVIII</td>
<td>838</td>
<td>DCCCXXXVIII</td>
</tr>
<tr>
<td>89</td>
<td>LXXXIX</td>
<td>339</td>
<td>CCCXXXIX</td>
<td>589</td>
<td>DLXXXIX</td>
<td>839</td>
<td>DCCCXXXIX</td>
</tr>
<tr>
<td>90</td>
<td>XC</td>
<td>340</td>
<td>CCCXL</td>
<td>590</td>
<td>DXC</td>
<td>840</td>
<td>DCCCXL</td>
</tr>
<tr>
<td>91</td>
<td>XCI</td>
<td>341</td>
<td>CCCXLI</td>
<td>591</td>
<td>DXCI</td>
<td>841</td>
<td>DCCCXLI</td>
</tr>
<tr>
<td>92</td>
<td>XCII</td>
<td>342</td>
<td>CCCXLII</td>
<td>592</td>
<td>DXCII</td>
<td>842</td>
<td>DCCCXLII</td>
</tr>
<tr>
<td>93</td>
<td>XCIII</td>
<td>343</td>
<td>CCCXLIII</td>
<td>593</td>
<td>DXCIII</td>
<td>843</td>
<td>DCCCXLIII</td>
</tr>
<tr>
<td>94</td>
<td>XCIV</td>
<td>344</td>
<td>CCCXLIV</td>
<td>594</td>
<td>DXCIV</td>
<td>844</td>
<td>DCCCXLIV</td>
</tr>
<tr>
<td>95</td>
<td>XCV</td>
<td>345</td>
<td>CCCXLV</td>
<td>595</td>
<td>DXCV</td>
<td>845</td>
<td>DCCCXLV</td>
</tr>
<tr>
<td>96</td>
<td>XCVI</td>
<td>346</td>
<td>CCCXLVI</td>
<td>596</td>
<td>DXCVI</td>
<td>846</td>
<td>DCCCXLVI</td>
</tr>
<tr>
<td>97</td>
<td>XCVII</td>
<td>347</td>
<td>CCCXLVII</td>
<td>597</td>
<td>DXCVII</td>
<td>847</td>
<td>DCCCXLVII</td>
</tr>
<tr>
<td>98</td>
<td>XCVIII</td>
<td>348</td>
<td>CCCXLVIII</td>
<td>598</td>
<td>DXCVIII</td>
<td>848</td>
<td>DCCCXLVIII</td>
</tr>
<tr>
<td>99</td>
<td>XCIX</td>
<td>349</td>
<td>CCCXLIX</td>
<td>599</td>
<td>DXCIX</td>
<td>849</td>
<td>DCCCXLIX</td>
</tr>
<tr>
<td>100</td>
<td>C</td>
<td>350</td>
<td>CCCL</td>
<td>600</td>
<td>DC</td>
<td>850</td>
<td>DCCCL</td>
</tr>
<tr>
<td>101</td>
<td>CI</td>
<td>351</td>
<td>CCCLI</td>
<td>601</td>
<td>DCI</td>
<td>851</td>
<td>DCCCLI</td>
</tr>
<tr>
<td>102</td>
<td>CII</td>
<td>352</td>
<td>CCCLII</td>
<td>602</td>
<td>DCII</td>
<td>852</td>
<td>DCCCLII</td>
</tr>
<tr>
<td>103</td>
<td>CIII</td>
<td>353</td>
<td>CCCLIII</td>
<td>603</td>
<td>DCIII</td>
<td>853</td>
<td>DCCCLIII</td>
</tr>
<tr>
<td>104</td>
<td>CIV</td>
<td>354</td>
<td>CCCLIV</td>
<td>604</td>
<td>DCIV</td>
<td>854</td>
<td>DCCCLIV</td>
</tr>
<tr>
<td>105</td>
<td>CV</td>
<td>355</td>
<td>CCCLV</td>
<td>605</td>
<td>DCV</td>
<td>855</td>
<td>DCCCLV</td>
</tr>
<tr>
<td>106</td>
<td>CVI</td>
<td>356</td>
<td>CCCLVI</td>
<td>606</td>
<td>DCVI</td>
<td>856</td>
<td>DCCCLVI</td>
</tr>
<tr>
<td>107</td>
<td>CVII</td>
<td>357</td>
<td>CCCLVII</td>
<td>607</td>
<td>DCVII</td>
<td>857</td>
<td>DCCCLVII</td>
</tr>
<tr>
<td>108</td>
<td>CVIII</td>
<td>358</td>
<td>CCCLVIII</td>
<td>608</td>
<td>DCVIII</td>
<td>858</td>
<td>DCCCLVIII</td>
</tr>
<tr>
<td>109</td>
<td>CIX</td>
<td>359</td>
<td>CCCLIX</td>
<td>609</td>
<td>DCIX</td>
<td>859</td>
<td>DCCCLIX</td>
</tr>
<tr>
<td>110</td>
<td>CX</td>
<td>360</td>
<td>CCCLX</td>
<td>610</td>
<td>DCX</td>
<td>860</td>
<td>DCCCLX</td>
</tr>
<tr>
<td>111</td>
<td>CXI</td>
<td>361</td>
<td>CCCLXI</td>
<td>611</td>
<td>DCXI</td>
<td>861</td>
<td>DCCCLXI</td>
</tr>
<tr>
<td>112</td>
<td>CXII</td>
<td>362</td>
<td>CCCLXII</td>
<td>612</td>
<td>DCXII</td>
<td>862</td>
<td>DCCCLXII</td>
</tr>
<tr>
<td>113</td>
<td>CXIII</td>
<td>363</td>
<td>CCCLXIII</td>
<td>613</td>
<td>DCXIII</td>
<td>863</td>
<td>DCCCLXIII</td>
</tr>
<tr>
<td>114</td>
<td>CXIV</td>
<td>364</td>
<td>CCCLXIV</td>
<td>614</td>
<td>DCXIV</td>
<td>864</td>
<td>DCCCLXIV</td>
</tr>
<tr>
<td>115</td>
<td>CXV</td>
<td>365</td>
<td>CCCLXV</td>
<td>615</td>
<td>DCXV</td>
<td>865</td>
<td>DCCCLXV</td>
</tr>
<tr>
<td>116</td>
<td>CXVI</td>
<td>366</td>
<td>CCCLXVI</td>
<td>616</td>
<td>DCXVI</td>
<td>866</td>
<td>DCCCLXVI</td>
</tr>
<tr>
<td>117</td>
<td>CXVII</td>
<td>367</td>
<td>CCCLXVII</td>
<td>617</td>
<td>DCXVII</td>
<td>867</td>
<td>DCCCLXVII</td>
</tr>
<tr>
<td>118</td>
<td>CXVIII</td>
<td>368</td>
<td>CCCLXVIII</td>
<td>618</td>
<td>DCXVIII</td>
<td>868</td>
<td>DCCCLXVIII</td>
</tr>
<tr>
<td>119</td>
<td>CXIX</td>
<td>369</td>
<td>CCCLXIX</td>
<td>619</td>
<td>DCXIX</td>
<td>869</td>
<td>DCCCLXIX</td>
</tr>
<tr>
<td>120</td>
<td>CXX</td>
<td>370</td>
<td>CCCLXX</td>
<td>620</td>
<td>DCXX</td>
<td>870</td>
<td>DCCCLXX</td>
</tr>
<tr>
<td>121</td>
<td>CXXI</td>
<td>371</td>
<td>CCCLXXI</td>
<td>621</td>
<td>DCXXI</td>
<td>871</td>
<td>DCCCLXXI</td>
</tr>
<tr>
<td>122</td>
<td>CXXII</td>
<td>372</td>
<td>CCCLXXII</td>
<td>622</td>
<td>DCXXII</td>
<td>872</td>
<td>DCCCLXXII</td>
</tr>
<tr>
<td>123</td>
<td>CXXIII</td>
<td>373</td>
<td>CCCLXXIII</td>
<td>623</td>
<td>DCXXIII</td>
<td>873</td>
<td>DCCCLXXIII</td>
</tr>
<tr>
<td>124</td>
<td>CXXIV</td>
<td>374</td>
<td>CCCLXXIV</td>
<td>624</td>
<td>DCXXIV</td>
<td>874</td>
<td>DCCCLXXIV</td>
</tr>
<tr>
<td>125</td>
<td>CXXV</td>
<td>375</td>
<td>CCCLXXV</td>
<td>625</td>
<td>DCXXV</td>
<td>875</td>
<td>DCCCLXXV</td>
</tr>
<tr>
<td>126</td>
<td>CXXVI</td>
<td>376</td>
<td>CCCLXXVI</td>
<td>626</td>
<td>DCXXVI</td>
<td>876</td>
<td>DCCCLXXVI</td>
</tr>
<tr>
<td>127</td>
<td>CXXVII</td>
<td>377</td>
<td>CCCLXXVII</td>
<td>627</td>
<td>DCXXVII</td>
<td>877</td>
<td>DCCCLXXVII</td>
</tr>
<tr>
<td>128</td>
<td>CXXVIII</td>
<td>378</td>
<td>CCCLXXVIII</td>
<td>628</td>
<td>DCXXVIII</td>
<td>878</td>
<td>DCCCLXXVIII</td>
</tr>
<tr>
<td>129</td>
<td>CXXIX</td>
<td>379</td>
<td>CCCLXXIX</td>
<td>629</td>
<td>DCXXIX</td>
<td>879</td>
<td>DCCCLXXIX</td>
</tr>
<tr>
<td>130</td>
<td>CXXX</td>
<td>380</td>
<td>CCCLXXX</td>
<td>630</td>
<td>DCXXX</td>
<td>880</td>
<td>DCCCLXXX</td>
</tr>
<tr>
<td>131</td>
<td>CXXXI</td>
<td>381</td>
<td>CCCLXXXI</td>
<td>631</td>
<td>DCXXXI</td>
<td>881</td>
<td>DCCCLXXXI</td>
</tr>
<tr>
<td>132</td>
<td>CXXXII</td>
<td>382</td>
<td>CCCLXXXII</td>
<td>632</td>
<td>DCXXXII</td>
<td>882</td>
<td>DCCCLXXXII</td>
</tr>
<tr>
<td>133</td>
<td>CXXXIII</td>
<td>383</td>
<td>CCCLXXXIII</td>
<td>633</td>
<td>DCXXXIII</td>
<td>883</td>
<td>DCCCLXXXIII</td>
</tr>
<tr>
<td>134</td>
<td>CXXXIV</td>
<td>384</td>
<td>CCCLXXXIV</td>
<td>634</td>
<td>DCXXXIV</td>
<td>884</td>
<td>DCCCLXXXIV</td>
</tr>
<tr>
<td>135</td>
<td>CXXXV</td>
<td>385</td>
<td>CCCLXXXV</td>
<td>635</td>
<td>DCXXXV</td>
<td>885</td>
<td>DCCCLXXXV</td>
</tr>
<tr>
<td>136</td>
<td>CXXXVI</td>
<td>386</td>
<td>CCCLXXXVI</td>
<td>636</td>
<td>DCXXXVI</td>
<td>886</td>
<td>DCCCLXXXVI</td>
</tr>
<tr>
<td>137</td>
<td>CXXXVII</td>
<td>387</td>
<td>CCCLXXXVII</td>
<td>637</td>
<td>DCXXXVII</td>
<td>887</td>
<td>DCCCLXXXVII</td>
</tr>
<tr>
<td>138</td>
<td>CXXXVIII</td>
<td>388</td>
<td>CCCLXXXVIII</td>
<td>638</td>
<td>DCXXXVIII</td>
<td>888</td>
<td>DCCCLXXXVIII</td>
</tr>
<tr>
<td>139</td>
<td>CXXXIX</td>
<td>389</td>
<td>CCCLXXXIX</td>
<td>639</td>
<td>DCXXXIX</td>
<td>889</td>
<td>DCCCLXXXIX</td>
</tr>
<tr>
<td>140</td>
<td>CXL</td>
<td>390</td>
<td>CCCXC</td>
<td>640</td>
<td>DCXL</td>
<td>890</td>
<td>DCCCXC</td>
</tr>
<tr>
<td>141</td>
<td>CXLI</td>
<td>391</td>
<td>CCCXCI</td>
<td>641</td>
<td>DCXLI</td>
<td>891</td>
<td>DCCCXCI</td>
</tr>
<tr>
<td>142</td>
<td>CXLII</td>
<td>392</td>
<td>CCCXCII</td>
<td>642</td>
<td>DCXLII</td>
<td>892</td>
<td>DCCCXCII</td>
</tr>
<tr>
<td>143</td>
<td>CXLIII</td>
<td>393</td>
<td>CCCXCIII</td>
<td>643</td>
<td>DCXLIII</td>
<td>893</td>
<td>DCCCXCIII</td>
</tr>
<tr>
<td>144</td>
<td>CXLIV</td>
<td>394</td>
<td>CCCXCIV</td>
<td>644</td>
<td>DCXLIV</td>
<td>894</td>
<td>DCCCXCIV</td>
</tr>
<tr>
<td>145</td>
<td>CXLV</td>
<td>395</td>
<td>CCCXCV</td>
<td>645</td>
<td>DCXLV</td>
<td>895</td>
<td>DCCCXCV</td>
</tr>
<tr>
<td>146</td>
<td>CXLVI</td>
<td>396</td>
<td>CCCXCVI</td>
<td>646</td>
<td>DCXLVI</td>
<td>896</td>
<td>DCCCXCVI</td>
</tr>
<tr>
<td>147</td>
<td>CXLVII</td>
<td>397</td>
<td>CCCXCVII</td>
<td>647</td>
<td>DCXLVII</td>
<td>897</td>
<td>DCCCXCVII</td>
</tr>
<tr>
<td>148</td>
<td>CXLVIII</td>
<td>398</td>
<td>CCCVCVIII</td>
<td>648</td>
<td>DCXLVIII</td>
<td>898</td>
<td>DCCCXCVIII</td>
</tr>
<tr>
<td>149</td>
<td>CXLIX</td>
<td>399</td>
<td>CCCXCIX</td>
<td>649</td>
<td>DCXLIX</td>
<td>899</td>
<td>DCCCXCIX</td>
</tr>
<tr>
<td>150</td>
<td>CL</td>
<td>400</td>
<td>CD</td>
<td>650</td>
<td>DCL</td>
<td>900</td>
<td>CM</td>
</tr>
<tr>
<td>151</td>
<td>CLI</td>
<td>401</td>
<td>CDI</td>
<td>651</td>
<td>DCLI</td>
<td>901</td>
<td>CMI</td>
</tr>
<tr>
<td>152</td>
<td>CLII</td>
<td>402</td>
<td>CDII</td>
<td>652</td>
<td>DCLII</td>
<td>902</td>
<td>CMII</td>
</tr>
<tr>
<td>153</td>
<td>CLIII</td>
<td>403</td>
<td>CDIII</td>
<td>653</td>
<td>DCLIII</td>
<td>903</td>
<td>CMIII</td>
</tr>
<tr>
<td>154</td>
<td>CLIV</td>
<td>404</td>
<td>CDIV</td>
<td>654</td>
<td>DCLIV</td>
<td>904</td>
<td>CMIV</td>
</tr>
<tr>
<td>155</td>
<td>CLV</td>
<td>405</td>
<td>CDV</td>
<td>655</td>
<td>DCLV</td>
<td>905</td>
<td>CMV</td>
</tr>
<tr>
<td>156</td>
<td>CLVI</td>
<td>406</td>
<td>CDVI</td>
<td>656</td>
<td>DCLVI</td>
<td>906</td>
<td>CMVI</td>
</tr>
<tr>
<td>157</td>
<td>CLVII</td>
<td>407</td>
<td>CDVII</td>
<td>657</td>
<td>DCLVII</td>
<td>907</td>
<td>CMVII</td>
</tr>
<tr>
<td>158</td>
<td>CLVIII</td>
<td>408</td>
<td>CDVIII</td>
<td>658</td>
<td>DCLVIII</td>
<td>908</td>
<td>CMVIII</td>
</tr>
<tr>
<td>159</td>
<td>CLIX</td>
<td>409</td>
<td>CDIX</td>
<td>659</td>
<td>DCLIX</td>
<td>909</td>
<td>CMIX</td>
</tr>
<tr>
<td>160</td>
<td>CLX</td>
<td>410</td>
<td>CDX</td>
<td>660</td>
<td>DCLX</td>
<td>910</td>
<td>CMX</td>
</tr>
<tr>
<td>161</td>
<td>CLXI</td>
<td>411</td>
<td>CDXI</td>
<td>661</td>
<td>DCLXI</td>
<td>911</td>
<td>CMXI</td>
</tr>
<tr>
<td>162</td>
<td>CLXII</td>
<td>412</td>
<td>CDXII</td>
<td>662</td>
<td>DCLXII</td>
<td>912</td>
<td>CMXII</td>
</tr>
<tr>
<td>163</td>
<td>CLXIII</td>
<td>413</td>
<td>CDXIII</td>
<td>663</td>
<td>DCLXIII</td>
<td>913</td>
<td>CMXIII</td>
</tr>
<tr>
<td>164</td>
<td>CLXIV</td>
<td>414</td>
<td>CDXIV</td>
<td>664</td>
<td>DCLXIV</td>
<td>914</td>
<td>CMXIV</td>
</tr>
<tr>
<td>165</td>
<td>CLXV</td>
<td>415</td>
<td>CDXV</td>
<td>665</td>
<td>DCLXV</td>
<td>915</td>
<td>CMXV</td>
</tr>
<tr>
<td>166</td>
<td>CLXVI</td>
<td>416</td>
<td>CDXVI</td>
<td>666</td>
<td>DCLXVI</td>
<td>916</td>
<td>CMXVI</td>
</tr>
<tr>
<td>167</td>
<td>CLXVII</td>
<td>417</td>
<td>CDXVII</td>
<td>667</td>
<td>DCLXVII</td>
<td>917</td>
<td>CMXVII</td>
</tr>
<tr>
<td>168</td>
<td>CLXVIII</td>
<td>418</td>
<td>CDXVIII</td>
<td>668</td>
<td>DCLXVIII</td>
<td>918</td>
<td>CMXVIII</td>
</tr>
<tr>
<td>169</td>
<td>CLXIX</td>
<td>419</td>
<td>CDXIX</td>
<td>669</td>
<td>DCLXIX</td>
<td>919</td>
<td>CMXIX</td>
</tr>
<tr>
<td>170</td>
<td>CLXX</td>
<td>420</td>
<td>CDXX</td>
<td>670</td>
<td>DCLXX</td>
<td>920</td>
<td>CMXX</td>
</tr>
<tr>
<td>171</td>
<td>CLXXI</td>
<td>421</td>
<td>CDXXI</td>
<td>671</td>
<td>DCLXXI</td>
<td>921</td>
<td>CMXXI</td>
</tr>
<tr>
<td>172</td>
<td>CLXXII</td>
<td>422</td>
<td>CDXXII</td>
<td>672</td>
<td>DCLXXII</td>
<td>922</td>
<td>CMXXII</td>
</tr>
<tr>
<td>173</td>
<td>CLXXIII</td>
<td>423</td>
<td>CDXXIII</td>
<td>673</td>
<td>DCLXXIII</td>
<td>923</td>
<td>CMXXIII</td>
</tr>
<tr>
<td>174</td>
<td>CLXXIV</td>
<td>424</td>
<td>CDXXIV</td>
<td>674</td>
<td>DCLXXIV</td>
<td>924</td>
<td>CMXXIV</td>
</tr>
<tr>
<td>175</td>
<td>CLXXV</td>
<td>425</td>
<td>CDXXV</td>
<td>675</td>
<td>DCLXXV</td>
<td>925</td>
<td>CMXXV</td>
</tr>
<tr>
<td>176</td>
<td>CLXXVI</td>
<td>426</td>
<td>CDXXVI</td>
<td>676</td>
<td>DCLXXVI</td>
<td>926</td>
<td>CMXXVI</td>
</tr>
<tr>
<td>177</td>
<td>CLXXVII</td>
<td>427</td>
<td>CDXXVII</td>
<td>677</td>
<td>DCLXXVII</td>
<td>927</td>
<td>CMXXVII</td>
</tr>
<tr>
<td>178</td>
<td>CLXXVIII</td>
<td>428</td>
<td>CDXXVIII</td>
<td>678</td>
<td>DCLXXVIII</td>
<td>928</td>
<td>CMXXVIII</td>
</tr>
<tr>
<td>179</td>
<td>CLXXIX</td>
<td>429</td>
<td>CDXXIX</td>
<td>679</td>
<td>DCLXXIX</td>
<td>929</td>
<td>CMXXIX</td>
</tr>
<tr>
<td>180</td>
<td>CLXXX</td>
<td>430</td>
<td>CDXXX</td>
<td>680</td>
<td>DCLXXX</td>
<td>930</td>
<td>CMXXX</td>
</tr>
<tr>
<td>181</td>
<td>CLXXXI</td>
<td>431</td>
<td>CDXXXI</td>
<td>681</td>
<td>DCLXXXI</td>
<td>931</td>
<td>CMXXXI</td>
</tr>
<tr>
<td>182</td>
<td>CLXXXII</td>
<td>432</td>
<td>CDXXXII</td>
<td>682</td>
<td>DCLXXXII</td>
<td>932</td>
<td>CMXXXII</td>
</tr>
<tr>
<td>183</td>
<td>CLXXXIII</td>
<td>433</td>
<td>CDXXXIII</td>
<td>683</td>
<td>DCLXXXIII</td>
<td>933</td>
<td>CMXXXIII</td>
</tr>
<tr>
<td>184</td>
<td>CLXXXIV</td>
<td>434</td>
<td>CDXXXIV</td>
<td>684</td>
<td>DCLXXXIV</td>
<td>934</td>
<td>CMXXXIV</td>
</tr>
<tr>
<td>185</td>
<td>CLXXXV</td>
<td>435</td>
<td>CDXXXV</td>
<td>685</td>
<td>DCLXXXV</td>
<td>935</td>
<td>CMXXXV</td>
</tr>
<tr>
<td>186</td>
<td>CLXXXVI</td>
<td>436</td>
<td>CDXXXVI</td>
<td>686</td>
<td>DCLXXXVI</td>
<td>936</td>
<td>CMXXXVI</td>
</tr>
<tr>
<td>187</td>
<td>CLXXXVII</td>
<td>437</td>
<td>CDXXXVII</td>
<td>687</td>
<td>DCLXXXVII</td>
<td>937</td>
<td>CMXXXVII</td>
</tr>
<tr>
<td>188</td>
<td>CLXXXVIII</td>
<td>438</td>
<td>CDXXXVIII</td>
<td>688</td>
<td>DCLXXXVIII</td>
<td>938</td>
<td>CMXXXVIII</td>
</tr>
<tr>
<td>189</td>
<td>CLXXXIX</td>
<td>439</td>
<td>CDXXXIX</td>
<td>689</td>
<td>DCLXXXIX</td>
<td>939</td>
<td>CMXXXIX</td>
</tr>
<tr>
<td>190</td>
<td>CXC</td>
<td>440</td>
<td>CDXL</td>
<td>690</td>
<td>DCXC</td>
<td>940</td>
<td>CMXL</td>
</tr>
<tr>
<td>191</td>
<td>CXCI</td>
<td>441</td>
<td>CDXLI</td>
<td>691</td>
<td>DCXCI</td>
<td>941</td>
<td>CMXLI</td>
</tr>
<tr>
<td>192</td>
<td>CXCII</td>
<td>442</td>
<td>CDXLII</td>
<td>692</td>
<td>DCXCII</td>
<td>942</td>
<td>CMXLII</td>
</tr>
<tr>
<td>193</td>
<td>CXCIII</td>
<td>443</td>
<td>CDXLIII</td>
<td>693</td>
<td>DCXCIII</td>
<td>943</td>
<td>CMXLIII</td>
</tr>
<tr>
<td>194</td>
<td>CXCIV</td>
<td>444</td>
<td>CDXLIV</td>
<td>694</td>
<td>DCXCIV</td>
<td>944</td>
<td>CMXLIV</td>
</tr>
<tr>
<td>195</td>
<td>CXCV</td>
<td>445</td>
<td>CDXLV</td>
<td>695</td>
<td>DCXCV</td>
<td>945</td>
<td>CMXLV</td>
</tr>
<tr>
<td>196</td>
<td>CXCVI</td>
<td>446</td>
<td>CDXLVI</td>
<td>696</td>
<td>DCXCVI</td>
<td>946</td>
<td>CMXLVI</td>
</tr>
<tr>
<td>197</td>
<td>CXCVII</td>
<td>447</td>
<td>CDXLVII</td>
<td>697</td>
<td>DCXCVII</td>
<td>947</td>
<td>CMXLVII</td>
</tr>
<tr>
<td>198</td>
<td>CXCVIII</td>
<td>448</td>
<td>CDXLVIII</td>
<td>698</td>
<td>DCXCVIII</td>
<td>948</td>
<td>CMXLVIII</td>
</tr>
<tr>
<td>199</td>
<td>CXCIX</td>
<td>449</td>
<td>CDXLIX</td>
<td>699</td>
<td>DCXCIX</td>
<td>949</td>
<td>CMXLIX</td>
</tr>
<tr>
<td>200</td>
<td>CC</td>
<td>450</td>
<td>CDL</td>
<td>700</td>
<td>DCC</td>
<td>950</td>
<td>CML</td>
</tr>
<tr>
<td>201</td>
<td>CCI</td>
<td>451</td>
<td>CDLI</td>
<td>701</td>
<td>DCCI</td>
<td>951</td>
<td>CMLI</td>
</tr>
<tr>
<td>202</td>
<td>CCII</td>
<td>452</td>
<td>CDLII</td>
<td>702</td>
<td>DCCII</td>
<td>952</td>
<td>CMLII</td>
</tr>
<tr>
<td>203</td>
<td>CCIII</td>
<td>453</td>
<td>CDLIII</td>
<td>703</td>
<td>DCCIII</td>
<td>953</td>
<td>CMLIII</td>
</tr>
<tr>
<td>204</td>
<td>CCIV</td>
<td>454</td>
<td>CDLIV</td>
<td>704</td>
<td>DCCIV</td>
<td>954</td>
<td>CMLIV</td>
</tr>
<tr>
<td>205</td>
<td>CCV</td>
<td>455</td>
<td>CDLV</td>
<td>705</td>
<td>DCCV</td>
<td>955</td>
<td>CMLV</td>
</tr>
<tr>
<td>206</td>
<td>CCVI</td>
<td>456</td>
<td>CDLVI</td>
<td>706</td>
<td>DCCVI</td>
<td>956</td>
<td>CMLVI</td>
</tr>
<tr>
<td>207</td>
<td>CCVII</td>
<td>457</td>
<td>CDLVII</td>
<td>707</td>
<td>DCCVII</td>
<td>957</td>
<td>CMLVII</td>
</tr>
<tr>
<td>208</td>
<td>CCVIII</td>
<td>458</td>
<td>CDLVIII</td>
<td>708</td>
<td>DCCVIII</td>
<td>958</td>
<td>CMLVIII</td>
</tr>
<tr>
<td>209</td>
<td>CCIX</td>
<td>459</td>
<td>CDLIX</td>
<td>709</td>
<td>DCCIX</td>
<td>959</td>
<td>CMLIX</td>
</tr>
<tr>
<td>210</td>
<td>CCX</td>
<td>460</td>
<td>CDLX</td>
<td>710</td>
<td>DCCX</td>
<td>960</td>
<td>CMLX</td>
</tr>
<tr>
<td>211</td>
<td>CCXI</td>
<td>461</td>
<td>CDLXI</td>
<td>711</td>
<td>DCCXI</td>
<td>961</td>
<td>CMLXI</td>
</tr>
<tr>
<td>212</td>
<td>CCXII</td>
<td>462</td>
<td>CDLXII</td>
<td>712</td>
<td>DCCXII</td>
<td>962</td>
<td>CMLXII</td>
</tr>
<tr>
<td>213</td>
<td>CCXIII</td>
<td>463</td>
<td>CDLXIII</td>
<td>713</td>
<td>DCCXIII</td>
<td>963</td>
<td>CMLXIII</td>
</tr>
<tr>
<td>214</td>
<td>CCXIV</td>
<td>464</td>
<td>CDLXIV</td>
<td>714</td>
<td>DCCXIV</td>
<td>964</td>
<td>CMLXIV</td>
</tr>
<tr>
<td>215</td>
<td>CCXV</td>
<td>465</td>
<td>CDLXV</td>
<td>715</td>
<td>DCCXV</td>
<td>965</td>
<td>CMLXV</td>
</tr>
<tr>
<td>216</td>
<td>CCXVI</td>
<td>466</td>
<td>CDLXVI</td>
<td>716</td>
<td>DCCXVI</td>
<td>966</td>
<td>CMLXVI</td>
</tr>
<tr>
<td>217</td>
<td>CCXVII</td>
<td>467</td>
<td>CDLXVII</td>
<td>717</td>
<td>DCCXVII</td>
<td>967</td>
<td>CMLXVII</td>
</tr>
<tr>
<td>218</td>
<td>CCXVIII</td>
<td>468</td>
<td>CDLXVIII</td>
<td>718</td>
<td>DCCXVIII</td>
<td>968</td>
<td>CMLXVIII</td>
</tr>
<tr>
<td>219</td>
<td>CCXIX</td>
<td>469</td>
<td>CDLXIX</td>
<td>719</td>
<td>DCCXIX</td>
<td>969</td>
<td>CMLXIX</td>
</tr>
<tr>
<td>220</td>
<td>CCXX</td>
<td>470</td>
<td>CDLXX</td>
<td>720</td>
<td>DCCXX</td>
<td>970</td>
<td>CMLXX</td>
</tr>
<tr>
<td>221</td>
<td>CCXXI</td>
<td>471</td>
<td>CDLXXI</td>
<td>721</td>
<td>DCCXXI</td>
<td>971</td>
<td>CMLXXI</td>
</tr>
<tr>
<td>222</td>
<td>CCXXII</td>
<td>472</td>
<td>CDLXXII</td>
<td>722</td>
<td>DCCXXII</td>
<td>972</td>
<td>CMLXXII</td>
</tr>
<tr>
<td>223</td>
<td>CCXXIII</td>
<td>473</td>
<td>CDLXXIII</td>
<td>723</td>
<td>DCCXXIII</td>
<td>973</td>
<td>CMLXXIII</td>
</tr>
<tr>
<td>224</td>
<td>CCXXIV</td>
<td>474</td>
<td>CDLXXIV</td>
<td>724</td>
<td>DCCXXIV</td>
<td>974</td>
<td>CMLXXIV</td>
</tr>
<tr>
<td>225</td>
<td>CCXXV</td>
<td>475</td>
<td>CDLXXV</td>
<td>725</td>
<td>DCCXXV</td>
<td>975</td>
<td>CMLXXV</td>
</tr>
<tr>
<td>226</td>
<td>CCXXVI</td>
<td>476</td>
<td>CDLXXVI</td>
<td>726</td>
<td>DCCXXVI</td>
<td>976</td>
<td>CMLXXVI</td>
</tr>
<tr>
<td>227</td>
<td>CCXXVII</td>
<td>477</td>
<td>CDLXXVII</td>
<td>727</td>
<td>DCCXXVII</td>
<td>977</td>
<td>CMLXXVII</td>
</tr>
<tr>
<td>228</td>
<td>CCXXVIII</td>
<td>478</td>
<td>CDLXXVIII</td>
<td>728</td>
<td>DCCXXVIII</td>
<td>978</td>
<td>CMLXXVIII</td>
</tr>
<tr>
<td>229</td>
<td>CCXXIX</td>
<td>479</td>
<td>CDLXXIX</td>
<td>729</td>
<td>DCCXXIX</td>
<td>979</td>
<td>CMLXXIX</td>
</tr>
<tr>
<td>230</td>
<td>CCXXX</td>
<td>480</td>
<td>CDLXXX</td>
<td>730</td>
<td>DCCXXX</td>
<td>980</td>
<td>CMLXXX</td>
</tr>
<tr>
<td>231</td>
<td>CCXXXI</td>
<td>481</td>
<td>CDLXXXI</td>
<td>731</td>
<td>DCCXXXI</td>
<td>981</td>
<td>CMLXXXI</td>
</tr>
<tr>
<td>232</td>
<td>CCXXXII</td>
<td>482</td>
<td>CDDLXXXII</td>
<td>732</td>
<td>DCCXXXII</td>
<td>982</td>
<td>CMLXXXII</td>
</tr>
<tr>
<td>233</td>
<td>CCXXXIII</td>
<td>483</td>
<td>CDLXXXIII</td>
<td>733</td>
<td>DCCXXXIII</td>
<td>983</td>
<td>CMLXXXIII</td>
</tr>
<tr>
<td>234</td>
<td>CCXXXIV</td>
<td>484</td>
<td>CDLXXXIV</td>
<td>734</td>
<td>DCCXXXIV</td>
<td>984</td>
<td>CMLXXXIV</td>
</tr>
<tr>
<td>235</td>
<td>CCXXXV</td>
<td>485</td>
<td>CDLXXXV</td>
<td>735</td>
<td>DCCXXXV</td>
<td>985</td>
<td>CMLXXXV</td>
</tr>
<tr>
<td>236</td>
<td>CCXXXVI</td>
<td>486</td>
<td>CDLXXXVI</td>
<td>736</td>
<td>DCCXXXVI</td>
<td>986</td>
<td>CMLXXXVI</td>
</tr>
<tr>
<td>237</td>
<td>CCXXXVII</td>
<td>487</td>
<td>CDLXXXVII</td>
<td>737</td>
<td>DCCXXXVII</td>
<td>987</td>
<td>CMLXXXVII</td>
</tr>
<tr>
<td>238</td>
<td>CCXXXVIII</td>
<td>488</td>
<td>CDLXXXVIII</td>
<td>738</td>
<td>DCCXXXVIII</td>
<td>988</td>
<td>CMLXXXVIII</td>
</tr>
<tr>
<td>239</td>
<td>CCXXXIX</td>
<td>489</td>
<td>CDLXXXIX</td>
<td>739</td>
<td>DCCXXXIX</td>
<td>989</td>
<td>CMLXXXIX</td>
</tr>
<tr>
<td>240</td>
<td>CCXL</td>
<td>490</td>
<td>CDXC</td>
<td>740</td>
<td>DCCXL</td>
<td>990</td>
<td>CMXC</td>
</tr>
<tr>
<td>241</td>
<td>CCXLI</td>
<td>491</td>
<td>CDXCI</td>
<td>741</td>
<td>DCCXLI</td>
<td>991</td>
<td>CMXCI</td>
</tr>
<tr>
<td>242</td>
<td>CCXLII</td>
<td>492</td>
<td>CDXCII</td>
<td>742</td>
<td>DCCXLII</td>
<td>992</td>
<td>CMXCII</td>
</tr>
<tr>
<td>243</td>
<td>CCXLIII</td>
<td>493</td>
<td>CDXCIII</td>
<td>743</td>
<td>DCCXLIII</td>
<td>993</td>
<td>CMXCIII</td>
</tr>
<tr>
<td>244</td>
<td>CCXLIV</td>
<td>494</td>
<td>CDXCIV</td>
<td>744</td>
<td>DCCXLIV</td>
<td>994</td>
<td>CMXCIV</td>
</tr>
<tr>
<td>245</td>
<td>CCXLV</td>
<td>495</td>
<td>CDXCV</td>
<td>745</td>
<td>DCCXLV</td>
<td>995</td>
<td>CMXCV</td>
</tr>
<tr>
<td>246</td>
<td>CCXLVI</td>
<td>496</td>
<td>CDXCVI</td>
<td>746</td>
<td>DCCXLVI</td>
<td>996</td>
<td>CMXCVI</td>
</tr>
<tr>
<td>247</td>
<td>CCXLVII</td>
<td>497</td>
<td>CDXCVII</td>
<td>747</td>
<td>DCCXLVII</td>
<td>997</td>
<td>CMXCVII</td>
</tr>
<tr>
<td>248</td>
<td>CCXLVIII</td>
<td>498</td>
<td>CDXCVIII</td>
<td>748</td>
<td>DCCXLVIII</td>
<td>998</td>
<td>CMXCVIII</td>
</tr>
<tr>
<td>249</td>
<td>CCXLIX</td>
<td>499</td>
<td>CDXCIX</td>
<td>749</td>
<td>DCCXLIX</td>
<td>999</td>
<td>CMXCIX</td>
</tr>
<tr>
<td>250</td>
<td>CCL</td>
<td>500</td>
<td>D</td>
<td>750</td>
<td>DCCL</td>
<td>1000</td>
<td>M</td>
</tr>
</tbody>
</table>
</div>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>罗马数字</tag>
      </tags>
  </entry>
  <entry>
    <title>HashMap核心功能源码解读（一）：概述</title>
    <url>/2021/07/22/hashmap-core-code-analysis-1/</url>
    <content><![CDATA[<p>在开始分析 HashMap 核心源码之前，本文先试着从使用的角度对其进行解读，包括 HashMap 特性、如何正确使用，以及影响 Map 性能的因素等。</p>
<h2 id="HashMap特性"><a href="#HashMap特性" class="headerlink" title="HashMap特性"></a>HashMap特性</h2><p>HashMap 是 Map 接口的一个基于哈希表实现，主要用来存储键值对数据。作为一个使用频率较高的集合类，了解它的特性有助于我们在实践中正确使用它。</p>
<p>首先，HashMap 允许键为 null 和值为 null。</p>
<p>其次，HashMap 不保证 Map 的有序性，即不保证遍历 HashMap 输出元素的顺序与其插入的顺序相同（可能存在顺序相同情况）。另外，HashMap 也不保证其顺序在一段时间内保持不变。如果需要在项目中保证 Map 有序性的话，可以使用 LinkedHashMap 代替 HashMap。</p>
<p>再次，HashMap 是不同步的，即 HashMap 不是线程安全的。如果多个线程同时访问同一个 HashMap 实例，并且其中至少有一个线程从结构上修改了 HashMap 实例时，会导致数据不一致的情况发生。这里的“从结构上修改”是指对 HashMap 实例进行添加或删除元素的操作，仅修改已包含的键对应的值话，就不是从结构上修改。</p>
<p>在需要线程安全环境中，可以在创建 HashMap 实例时使用 <code>Collections.synchronizedMap</code> 方法对其进行“包装”，以防止对 HashMap 的意外非同步访问：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">m</span> <span class="operator">=</span> Collection.synchronizedMap(<span class="keyword">new</span> <span class="title class_">HashMap</span> (…));</span><br></pre></td></tr></table></figure></p>
<p>另外，也可以用 ConcurrentHashMap 代替 HashMap。</p>
<p>最后，HashMap 的所有“集合视图方法”返回的迭代器是快速失败（fail-fast）的。如果在创建迭代器之后，除了通过迭代器本身的 remove 方法之外，在任何时候以任何方式从结构上修改 HashMap 实例时，迭代器都会抛出 ConcurrentModificationException 异常。因此，在面对并发修改时，迭代器会快速、干净利落地失败，而不是在未来某个不确定的时间出现随意的、不确定的行为风险。</p>
<p>注意，迭代器的快速失败行为是无法保证的，因为一般而言，在存在非同步并发修改的情况下，不可能做出任何硬保证。快速失败的迭代器会尽最大努力抛出 <code>ConcurrentModificationException</code> 异常。因此，编写依赖于此异常的正确性的程序是错误的：迭代器的快速失败行为应该只用于检测错误。</p>
<h2 id="HashMap性能"><a href="#HashMap性能" class="headerlink" title="HashMap性能"></a>HashMap性能</h2><p>如果哈希函数可以把元素均匀打散到不同的哈希桶中，那么 HashMap 的基本操作（get 和 put）能达到常数级时间的性能。这意味着理想情况下，HashMap 的基本操作的时间复杂度为 O(1)，执行时间不随数据规模（键值对数量）的增大而增长。</p>
<p>但是在真实的情况下，当你往 HashMap 中写入大量数据后，就可能发现操作有时候会变慢了。这其实是因为哈希冲突和扩容带来的性能影响。</p>
<p>在 HashMap 中，有两个参数——<strong>初始容量（initial capacity）和装载因子（load factor）</strong>，与哈希冲突和扩容这两个性能因素有直接关系。</p>
<p>初始容量，顾名思义就是哈希表创建时的容量，这里的容量是指哈希表的哈希桶数。装载因子是衡量哈希表在其容量自动扩容之前允许达到多满的指标。当哈希表中的条目数超过负载因子和当前容量的乘积时，即</p>
<p>条目数 &gt;= 哈希表容量 × 装载因子</p>
<p>将对哈希表进行重新哈希（即重新构建内部数据结构），使哈希表的桶数为原来的两倍。</p>
<p>一般来说，默认的装载因子（为 0.75）可以在时间和空间的开销上做到很好的权衡。较大的值虽然可以减少空间开销，但会增加查找成本（反映在 HashMap 的大多数操作中，包括 get 和 put 操作）。</p>
<p>在设置初始容量时，应考虑映射中的预期条目数及其装载因子，以尽量减少重新哈希操作的次数。如果初始容量大于最大条目数除以负载因子，则不会发生重新哈希操作。</p>
<p>如果有大量的键值对数据要存储在 HashMap 实例中，那么在创建时就指定一个足够大的容量来存储这些数据，会比随着表增长的需要而自动执行重新哈希更加高效。</p>
<p>注意，如果使用大量的具有相同哈希码（hashCode()）的键，无疑会降低哈希表的性能。为了改善影响，当键是可比较时，可以使用键之间的比较顺序来帮助打破联系。</p>
<p>另外，遍历 HashMap 所需的时间与 HashMap 实例的“容量”（指哈希桶数量）加上其大小（指键值映射数量）成正比。所以，如果你看重遍历 HashMap 的性能，那么不要把它初始容量设置得太大或把装载因子设置得太小就非常重要了。</p>
<h2 id="TreeMap-Hashtable-和-HashMap"><a href="#TreeMap-Hashtable-和-HashMap" class="headerlink" title="TreeMap, Hashtable 和 HashMap"></a>TreeMap, Hashtable 和 HashMap</h2><p>TreeMap 是基于红黑树的一种提供顺序访问的 Map，和 HashMap 不同，它的 get、put、remove 之类操作都是 O（log(n)）的时间复杂度，具体顺序可以由指定的 Comparator 来决定，或者根据键的自然顺序来判断。</p>
<p>Hashtable 大致相当于 HashMap ，只是 HashMap 是非线程安全的并且允许空值。</p>
<p>需要注意的是，Hashtable 是遗留类，不建议在项目中使用。在非线程安全环境中，可以直接用 HashMap 代替 Hashtable；在需要线程安全环境中，可以用 ConcurrentHashMap 代替 Hashtable，因为 ConcurrentHashMap 引入了分段锁，并发性更好。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文概述了 HashMap 允许键为 null 和值为 null、不保证有序性、非线程安全、迭代器快速失败（fail-over）等特性，影响 HashMap 性能的参数，以及在实践中应该注意的地方，同时在文末简单对比了 TreeMap, Hashtable 和 HashMap 有什么不同。下一篇文章开始将对 HashMap 核心功能源码进行解读。</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>谈谈异或运算</title>
    <url>/2021/08/02/bitwise-operation-xor-trick/</url>
    <content><![CDATA[<p>本文翻译自 Florian 于 2020 年 3 月发表的一篇英文博客<a href="https://florian.github.io/xor-trick/">《That XOR Trick》</a>。</p>
<hr>
<p>有一大堆流行的面试问题可以通过以下两种方式之一解决：要么以合理的方式使用常见的数据结构和算法，要么以一种看似难以理解的方式使用异或运算 XOR 的某些特性。</p>
<p>虽然在面试中指望异或运算 XOR 解决方案似乎并不合理，但弄清楚它们的工作原理还是很有趣的。实际上，它们都基于同一个基本窍门，我们将在本文中以自下而上的方式将其推导出来。之后我们再来看 XOR 窍门的一系列应用，例如解决以下这个流行的面试题：</p>
<blockquote>
<p>给定一个由 n - 1 个整数组成的数组，这些整数的范围在 1 到 n 之间。除了一个数字缺失之外，其余每个数字均只出现一次。找出这个缺失的数字。</p>
</blockquote>
<p>当然，有许多直截了当的方法可以解决这个问题，但还有一种可能令人意想不到的方法——使用 XOR。</p>
<h2 id="XOR"><a href="#XOR" class="headerlink" title="XOR"></a>XOR</h2><p>XOR 是一种应用于位的逻辑运算符。我们用 <code>^</code> 表示它。如果它作为输入携带的两个位是相同的，那么它的结果就为 0，否则就为 1。这实现了一个异或运算，即只有一个参数必须是 1 才能使最终结果为 1。我们可以使用真值表来证明这一点：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><code>x</code></th>
<th><code>y</code></th>
<th><code>x ^ y</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>1</td>
<td>0</td>
<td>1</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>0</td>
</tr>
</tbody>
</table>
</div>
<p>大多数编程语言将 <code>^</code> 实现为按位运算符，这意味着 XOR 单独应用于位串（例如一个字节）中的每个位。</p>
<p>例如： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0011 ^ 0101 = 0110 </span><br></pre></td></tr></table></figure>
<p>因为 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 ^ 0 = 0 </span><br><span class="line"></span><br><span class="line">0 ^ 1 = 1 </span><br><span class="line"></span><br><span class="line">1 ^ 0 = 1 </span><br><span class="line"></span><br><span class="line">1 ^ 1 = 0 </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>因此，我们可以将 XOR 应用于任何事物，而不仅仅是布尔值。</p>
<h2 id="推导出一些有用的特性"><a href="#推导出一些有用的特性" class="headerlink" title="推导出一些有用的特性"></a>推导出一些有用的特性</h2><p>我们可以从之前的定义中推导出一堆特性。下面我们一一梳理一遍，然后组合起来解决前面提到的面试题。</p>
<h3 id="恒等律：x-0-x"><a href="#恒等律：x-0-x" class="headerlink" title="恒等律：x ^ 0 = x"></a>恒等律：<code>x ^ 0 = x</code></h3><p>如果 XOR 的两个参数之一为 0，则剩余的那个参数就是结果。该结论可通过检查以下真值表中 <code>y = 0</code> 的行（即第一行和第三行）直接得出：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"><code>x</code></th>
<th style="text-align:center"><code>y</code></th>
<th style="text-align:center"><code>x ^ y</code></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center"><strong>0</strong></td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center"><strong>1</strong></td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
</div>
<h3 id="归零律：x-x-0"><a href="#归零律：x-x-0" class="headerlink" title="归零律：x ^ x = 0"></a>归零律：<code>x ^ x = 0</code></h3><p>如果两个参数相同，则结果始终为 0。同样，我们可以通过检查真值表得出该结论。这次我们检查 <code>x = y</code> 的行，即第一行和最后一行。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"><code>x</code></th>
<th style="text-align:center"><code>y</code></th>
<th style="text-align:center"><code>x ^ y</code></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center"><strong>0</strong></td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center"><strong>0</strong></td>
</tr>
</tbody>
</table>
</div>
<p>直观地说，这意味着如果我们对相同的参数应用 XOR，它们会相互抵消。</p>
<h3 id="交换律：x-y-y-x"><a href="#交换律：x-y-y-x" class="headerlink" title="交换律：x ^ y = y ^ x"></a>交换律：<code>x ^ y = y ^ x</code></h3><p>XOR 是可交换的，这意味着我们可以更改应用 XOR 的顺序。为了证明这一点，我们可以检查 <code>x ^ y</code> 和 <code>y ^ x</code> 的真值表：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"><code>x</code></th>
<th style="text-align:center"><code>y</code></th>
<th style="text-align:center"><code>x ^ y</code></th>
<th style="text-align:center"><code>y ^ x</code></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
</div>
<p>正如我们所看到的，<code>x ^ y</code> 和 <code>y ^ x</code> 总是以相同的值结束。</p>
<h3 id="XOR-操作序列"><a href="#XOR-操作序列" class="headerlink" title="XOR 操作序列"></a>XOR 操作序列</h3><p>通过结合以上这些规律，我们可以推断出以下这个一切背后的核心启迪：</p>
<blockquote>
<p><strong>XOR 诀窍：</strong>如果存在一个 XOR 操作系列 <code>a ^ b ^ c ^ ...</code>，那么我们可以删除所有成对的重复值而不影响结果。</p>
</blockquote>
<p>交换律允许我们可以对 XOR 进行重新排序，以便使重复的元素彼此相邻。由于 <code>x ^ x = 0</code> 和 <code>a ^ 0 = a</code>，所以每一对重复值对结果没有影响。</p>
<p>让我们来看一个例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> a ^ b ^ c ^ a ^ b      # 应用交换率</span><br><span class="line">= a ^ a ^ b ^ b ^ c     # 应用 x ^ x = 0</span><br><span class="line">= 0 ^ 0 ^ c             # 应用 x ^ 0 = x (和交换率)</span><br><span class="line">= c</span><br></pre></td></tr></table></figure>
<p>因为 <code>^</code> 是一个按位运算符，所以不管 <code>a</code>、<code>b</code> 和 <code>c</code> 是什么类型的值，这都会起作用。这个诀窍实际上是 XOR 在许多情况下看似神奇使用的核心。</p>
<h2 id="应用一：就地交换"><a href="#应用一：就地交换" class="headerlink" title="应用一：就地交换"></a>应用一：就地交换</h2><p>在解决找出缺失数字的问题之前，我们先从这个更简单的问题开始：</p>
<blockquote>
<p>就地交换两个值 x 和 y，即不使用任何辅助变量。</p>
</blockquote>
<p>实际上使用以下三条 XOR 指令可以轻松解决该问题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x ^= y</span><br><span class="line">y ^= x</span><br><span class="line">x ^= y</span><br></pre></td></tr></table></figure>
<p>看起来好像有点神秘。为什么执行这三条指令最终会交换 x, y 的值呢？</p>
<p>为了弄清它的原理，我们一起把这些指令一步一步地过一遍。每条指令后的注释显示 (x, y) 的当前值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x ^= y # =&gt;                      (x ^ y, y)</span><br><span class="line">y ^= x # =&gt; (x ^ y, y ^ x ^ y) = (x ^ y, x)</span><br><span class="line">x ^= y # =&gt; (x ^ y ^ x, x)     = (y, x)</span><br></pre></td></tr></table></figure>
<p>我们可以看到，这实际上只是使用了前文推导出来的特性而已。</p>
<p><em>这里的基本原理就是将 <code>x ^ y</code> 放在一个变量中，将 <code>x</code> 放在另一个变量中，这样就可以让我们完美地重建 <code>y</code>。一旦 <code>x ^ y</code> 被存储（指令 1），我们就可以将 <code>x</code> 放入另一个变量（指令 2），然后再用它来将 <code>x ^ y</code> 更改为 <code>y</code>（指令 3）</em>。</p>
<h2 id="应用二：寻找缺失的数字"><a href="#应用二：寻找缺失的数字" class="headerlink" title="应用二：寻找缺失的数字"></a>应用二：寻找缺失的数字</h2><p>现在，我们来解决本文开头提出的问题：</p>
<blockquote>
<p>给定一个由 n - 1 个整数组成的数组 A，这些整数的范围在 1 到 n 之间。除了一个数字缺失之外，其余每个数字均只出现一次。找出那个缺失的数字。</p>
</blockquote>
<p>当然，有很多直截了当的方法可以解决这个问题，不过这里我们准备使用 XOR 的方法来解决这个问题。</p>
<p>从 XOR 技巧我们知道，对于一条 XOR 序列的语句，我们可以移除所有成对的重复元素。不过，如果我们只是对给定数组中的所有值进行异或，我们就不能用到该技巧，因为没有重复元素：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A[0] ^ A[1] ^ ... ^ A[n - 2]</span><br></pre></td></tr></table></figure>
<p>注意 <code>A[n - 2]</code> 是 <code>n - 1</code> 个元素数组的最后一个索引。</p>
<p>此外，我们还可以把 1 和 n 之间的所有值也加进来一并进行异或：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 ^ 2 ^ ... ^ n ^ A[0] ^ A[1] ^ ... ^ A[n - 2]</span><br></pre></td></tr></table></figure>
<p>这样，我们得到的 XOR 操作序列，它们的元素出现如下：</p>
<ul>
<li>给定数组中的所有值现在会出现两次：<ul>
<li>一次是 1 到 n 之间的所有值；</li>
<li>一次是本来就存在于给定的原始数组中。</li>
</ul>
</li>
<li>缺失数字只会出现一次：<ul>
<li>一次是 1 到 n 之间的所有值。</li>
</ul>
</li>
</ul>
<p>如果对所有这些值进行异或，根据异或技巧，实质上就是移除了所有出现两次的数字。也就是说，留下来的数字恰好就是我们一开始要寻找的缺失数字。</p>
<p>编码后，如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">find_missing</span>(<span class="params">A, n</span>):</span><br><span class="line">  result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># XOR of all the values from 1 to n</span></span><br><span class="line">  <span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">    result ^= value</span><br><span class="line"></span><br><span class="line">  <span class="comment"># XOR of all values in the given array</span></span><br><span class="line">  <span class="keyword">for</span> value <span class="keyword">in</span> A:</span><br><span class="line">    result ^= value</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>
<p>单看代码的话，看起来像是一个难以理解的算法。然而，当知道了 XOR 技巧的原理时，就变得相当简单。我认为这也说明了为什么在面试中指望这个解决方案是不合理的：它要求了解一个非常特殊的技巧，但除此之外并不需要太多算法层面上的思考。</p>
<p>在继续说明下一个应用之前，这里再多说两点。</p>
<h3 id="推广到整数之外"><a href="#推广到整数之外" class="headerlink" title="推广到整数之外"></a>推广到整数之外</h3><p>尽管到目前为止我们一直讨论的都是 1 到 n 的整数，不过并不仅限于整数。实际上，前面的算法适用于<br> (1) 一些潜在元素集 和<br> (2) 一组实际出现的元素<br> 的任何情况。这些集合可能仅在缺失那个元素上有所不同。这对整数很有效，因为潜在元素的集合正好对应于从 1 到 n 的元素。</p>
<p>可以想象元素不是 1 到 n 的整数情况的应用：</p>
<ul>
<li>潜在元素集是 <code>Person</code> 对象，我们要从值列表中找到缺失的 <code>Person</code></li>
<li>潜在元素集是图中的所有节点，我们要找出缺失的节点</li>
<li>潜在元素的集合是一般的整数（不一定是从 1 到 n），我们要找到缺失的那个整数</li>
</ul>
<h3 id="使用算术运算符而不是-XOR"><a href="#使用算术运算符而不是-XOR" class="headerlink" title="使用算术运算符而不是 XOR"></a>使用算术运算符而不是 XOR</h3><p>如果读到这里，该算法看起来仍有点神奇的话（我希望不是），那么考虑如何使用算术运算符获得相同的结果可能会有所帮助。这实际上相当简单：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">find_missing</span>(<span class="params">A, n</span>):</span><br><span class="line">  result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Add all the values from 1 to n</span></span><br><span class="line">  <span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">    result += value</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Subtract all values in the given array</span></span><br><span class="line">  <span class="keyword">for</span> value <span class="keyword">in</span> A:</span><br><span class="line">    result -= value</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>
<p>把所有潜在的整数相加，然后减去实际出现的整数。该解决方案不是很好，因为需要处理数值溢出情况和需要元素的某些属性类型支持 <code>+</code>、<code>-</code> 运算。不过元素相互抵消的逻辑是一样的，因为每个元素出现次数是确定的（一次为正，一次为负）。</p>
<h2 id="应用三：找出重复的数字"><a href="#应用三：找出重复的数字" class="headerlink" title="应用三：找出重复的数字"></a>应用三：找出重复的数字</h2><p>有趣的是：我们可以把完全相同的解决方案应用到类似的面试题：</p>
<blockquote>
<p>给定一个由 n + 1 个整数组成的数组 A，这些整数的范围在 1 到 n 之间。除了一个数字重复之外，其余每个数字均只出现一次。找出这个重复的数字。</p>
</blockquote>
<p>思考一下，如果我们只运用与之前的解决方案完全相同的算法，会出现什么情况。我们会得到 XOR 序列语句，其中元素出现如下：</p>
<ul>
<li><p>给定列表中的重复的值出现了 3 次：</p>
<ul>
<li>一次是 1 到 n 之间的所有值；</li>
<li>两次是本来就存在于给定的原始数组中（因为重复）。</li>
</ul>
</li>
<li><p>给定列表中的所有其他值出现两次：</p>
<ul>
<li>一次从取 1 到 n 之间的所有值</li>
<li>一次是本来就存在于给定的原始数组中。</li>
</ul>
</li>
</ul>
<p>如前所述，所有成对的重复元素会相互抵消。这意味着，剩下的恰好就是我们正要寻找的元素——在原始数组中重复的元素。此元素出现 3 次，结合 XOR，简化后正是此元素本身：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> x ^ x ^ x</span><br><span class="line">= x ^ 0</span><br><span class="line">= x</span><br></pre></td></tr></table></figure>
<p>其他所有元素相互抵消，因为它们恰好出现两次。</p>
<h2 id="应用四：找出两个缺失-重复的数字"><a href="#应用四：找出两个缺失-重复的数字" class="headerlink" title="应用四：找出两个缺失/重复的数字"></a>应用四：找出两个缺失/重复的数字</h2><p>实际上我们可以更进一步，考虑以下稍微有些难度的问题：</p>
<blockquote>
<p>给定一个由 n - 2 个整数组成的数组 A，这些整数的范围在 1 到 n 之间。除了两个数字缺失之外，其余每个数字均只出现一次。找出这两个缺失的数字。</p>
</blockquote>
<p>和之前一样，在找出两个重复的数字而不是两个缺失的数字时，问题是完全等价的。</p>
<p>相信你已经猜到怎么做了，不过还是延用之前的讲述方法，以完全相同的方式开始：思考一下，如果我们使用之前的 XOR 算法，会出现什么情况。如果这样做，我们将再次得到 XOR 序列语句，除了我们正要寻找的那两个，其余所有元素相互抵消。</p>
<p>我们用 <code>u</code> 和 <code>v</code> 来表示这两个缺失的元素，主要是因为我们之前没有用到这些字母。应用前面的算法后，我们就剩下 <code>u ^ v</code>。接下来该怎么做？我们需要以某种方式从这个值中提取 <code>u</code> 和 <code>v</code>，但现在还不清楚怎么做。</p>
<h3 id="根据查看-u-v-的结果进行分区"><a href="#根据查看-u-v-的结果进行分区" class="headerlink" title="根据查看 u ^ v 的结果进行分区"></a>根据查看 <code>u ^ v</code> 的结果进行分区</h3><p>幸运的是，我们可以通过运用本文前面讲过的内容来弄清楚该怎么做。</p>
<p>本文早些时候提到：</p>
<blockquote>
<p>如果 XOR 作为输入携带的两个位是一样的，则结果为 0，否则为 1。</p>
</blockquote>
<p>也就是说，对于 <code>u ^ v</code> 结果中的各个位的值，如果为 0 就表示 <code>u</code> 和 <code>v</code> 在该位具有相同的值。如果为 1 就表示 <code>u</code> 和 <code>v</code> 在该位具有不同的值。</p>
<p>现在，我们先从 <code>u ^ v</code> 结果中找到第一个值为 1 的位（记为 <code>i</code>），根据上面的结论，<code>u</code> 和 <code>v</code> 在第 <code>i</code> 位的值一定是不同的。然后，根据元素在这个位的值（0 或 1），对数组 A 和从 1 到 n 的数字集中的元素进行分区。最终得到的两个分区，每个分区包含两个集合：</p>
<ol>
<li>分区 0（元素第 i 位为 0）<ol>
<li>从 1 到 n 的数字集合，其中元素的第 i 位为 0</li>
<li>数组 A，其中元素的第 i 位为 0</li>
</ol>
</li>
<li>分区 1（元素第 i 位为 1）<ol>
<li>从 1 到 n 的数字集合，其中元素的第 i 位为 1</li>
<li>数组 A，其中元素的第 i 位为 1</li>
</ol>
</li>
</ol>
<p>因为 <code>u</code> 和 <code>v</code> 在位置 <code>i</code> 上不同，所以这两个元素肯定分布在不同的分区中。</p>
<h3 id="简化问题"><a href="#简化问题" class="headerlink" title="简化问题"></a>简化问题</h3><p>接下来，我们运用本文早些时候提到的另一个见解：</p>
<blockquote>
<p>尽管到目前为止我们一直讨论的都是 1 到 n 的整数，不过并不仅限于整数。实际上，前面的算法适用于<br> (1) 一些潜在元素集 和<br> (2) 一组实际出现的元素<br> 的任何情况。这些集合可能仅在缺失（或重复）那个元素上有所不同。</p>
</blockquote>
<p>这两个集合（指潜在元素集和实际出现的元素集）与我们在每个分区中的集合完全对应。因此，我们可以通过将这个想法用于其中一个分区来搜索元素 <code>u</code>，从而找到缺失的元素。然后再将其用于另一个分区来找到 <code>v</code>。</p>
<p>这实际上是一个很好的解决方法：我们有效地将这个新问题简化为我们先前解决的问题的一般形式。</p>
<h2 id="达到极限"><a href="#达到极限" class="headerlink" title="达到极限"></a>达到极限</h2><p>你可能会想尝试更进一步，旨在解决两个以上缺失值的问题。我没有对此进行仔细的思考，但我认为这是我们停止使用 XOR 的地方。如果缺失（或重复）两个以上的元素，则无法分析 XOR 结果上各个位的值，因为无论是 0 还是 1 都可能有多种组合作为结果。</p>
<p>问题似乎需要更复杂的解决方案，这些解决方案不再基于 XOR。</p>
<h2 id="最后的想法"><a href="#最后的想法" class="headerlink" title="最后的想法"></a>最后的想法</h2><p>如前所述，基于此诀窍的面试题似乎不是一个好主意。他们需要知道一个稍微有点晦涩的诀窍，但是一旦知道了这个诀窍，就没有什么需要解决的了（除了应用四）。也几乎没有一种方法可以展示算法思维（除了简化），也没有很好的方法来利用数据结构。</p>
<p>然而，我发现了解这个诀窍实际上是如何工作的非常酷。 XOR 似乎具有解决所有这些问题的正确特性。像 XOR 这样基本的东西可以用来构建这里描述的所有东西，这也很美妙。</p>
<p>感谢 Eugen 的讨论促成了这篇文章。一起弄清楚所有这些是如何工作的很有趣。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Kafka（二）：CentOS 7下安装Apache Kafka</title>
    <url>/2020/03/19/how-to-install-apache-kafka-on-centos7/</url>
    <content><![CDATA[<h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><p>Kafka 服务端代码是用 Scala 开发语言编写的，Scala 是 JVM 系语言中的一种，这意味着用 Scala 编写的源代码编译之后也是 Java 字节码，并运行在 Java 虚拟机上。因此，在开始安装 Kafka 之前，我们需要先在系统上安装 JDK（Java SE Development Kit， Java SE开发套件），JDK 包含的 JRE（Java SE Runtime Environment，Java 运行时环境）是运行 Java 应用程序所必需的。</p>
<p>多数情况下，推荐安装 JDK 8 及以上的版本，因为 Kafka 自 2.0.0 版本开始，就已经正式摒弃对 Java 7 的支持了。本文安装示例采用的是 JDK 8 版本。</p>
<p>在 CentOS 7 安装 JDK 可参考这篇博文—— <a href="https://www.linjiangxiong.com/2019/08/30/how-to-install-jdk-1-8-on-centos-7/">CentOS7下安装JDK1.8</a></p>
<p>另外，运行 Kafka 还需要安装 Apache ZooKeeper 服务，该服务是用来同步分布式进程。ZooKeeper 安装可参考这篇博文——<a href="https://www.linjiangxiong.com/2019/12/12/how-to-install-zookeeper-on-centos7/">在CentOS7系统安装和配置ZooKeeper</a>。</p>
<h2 id="安装Kafka"><a href="#安装Kafka" class="headerlink" title="安装Kafka"></a>安装Kafka</h2><p>推荐将 Kafka 安装在 Unix 操作系统（如 Solaris）或 Linux 操作系统（如 CentOS）上。这是因为在 Windows 系统上可获得的支持有限。</p>
<p>本安装示例选择的是 CentOS 7 系统。具体安装步骤如下：</p>
<ol>
<li><p>从 Kafka 官网下载页 <a href="https://kafka.apache.org/downloads">https://kafka.apache.org/downloads</a> 获取安装文件，当前最新的稳定版本是 2.4.1，于 2020 年 3 月 12 日发行。这里选择下载二进制文件  <em>kafka_2.12-2.4.1.tgz</em>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://mirror.bit.edu.cn/apache/kafka/2.4.1/kafka_2.12-2.4.1.tgz</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建 Kafka 安装目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /usr/local/kafka</span><br></pre></td></tr></table></figure>
</li>
<li><p>解压缩文件 <em>kafka_2.12-2.4.1.tgz</em> 至目录 <code>/usr/local/kafka</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar xvzf kafka_2.12-2.4.1.tgz -C /usr/local/kafka --strip 1</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入目录 <code>/usr/local/kafka</code>，可以看到以下子目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@185 home]# cd /usr/local/kafka/</span><br><span class="line">[root@185 kafka]# ll</span><br><span class="line">总用量 56</span><br><span class="line">drwxr-xr-x 3 root root  4096 3月   3 08:34 bin</span><br><span class="line">drwxr-xr-x 2 root root  4096 3月   3 08:34 config</span><br><span class="line">drwxr-xr-x 2 root root  8192 3月  19 15:06 libs</span><br><span class="line">-rw-r--r-- 1 root root 32216 3月   3 08:32 LICENSE</span><br><span class="line">-rw-r--r-- 1 root root   337 3月   3 08:32 NOTICE</span><br><span class="line">drwxr-xr-x 2 root root    44 3月   3 08:34 site-docs</span><br></pre></td></tr></table></figure>
<p>其中，</p>
<ul>
<li><p><code>/bin</code>目录下是操作 Kafka 的可执行脚本（.sh 文件），还包含在 windows 系统下的可执行脚本（.bat 文件），包括 Kafka 启动/停止脚本、消费者性能测试脚本、生产者性能测试脚本、分区重分配脚本等；</p>
</li>
<li><p><code>/config</code>目录是存放配置文件；</p>
</li>
<li><code>/libs</code>目录是存放依赖库文件；</li>
<li><code>/logs</code>目录存放的是 Kafka 的运行日志文件。</li>
</ul>
</li>
<li><p>打开配置文件<code>config/server.properties</code>，修改 listeners 配置和 zookeeper 地址，具体如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ./config/server.properties</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">监听地址</span></span><br><span class="line">listeners=PLAINTEXT://172.16.1.182:9092</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">zookeeper 地址</span></span><br><span class="line">zookeeper.connect=172.16.1.188:2181</span><br></pre></td></tr></table></figure>
</li>
<li><p>在启动 Kafka 服务之前，为保障系统安全，添加运行 Kafka 服务的账号，并以较低权限账号运行 Kafka 服务，且禁用该账号的 <code>ssh</code> 登录权限。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加 kafka 账号</span></span><br><span class="line">useradd kafka</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置 kafka 账号密码</span></span><br><span class="line">passwd kafka</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将目录的所有者和组设置为 kafka</span></span><br><span class="line">chown -R kafka:kafka /usr/local/kafka/</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>为保障系统安全，添加运行 Kafka 服务的账号，并以较低权限账号运行 Kafka 服务，且禁用该账号的登录权限。</p>
<p>切换至 kafka 账号：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su kafka</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动 Kafka 服务，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/kafka-server-start.sh ./config/server.properties</span><br></pre></td></tr></table></figure>
<p>以守护进程（后台进程）的方式启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/kafka-server-start.sh ./config/server.properties &amp;</span><br></pre></td></tr></table></figure>
</li>
<li><p>停止 Kafka 服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/kafka-server-stop.sh</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Kafka（一）：简介</title>
    <url>/2020/03/17/apache-kafka-intro/</url>
    <content><![CDATA[<h2 id="Kafka简介"><a href="#Kafka简介" class="headerlink" title="Kafka简介"></a>Kafka简介</h2><p>Kafka 最早是由 LinkedIn 公司开发的一套分布式的高性能消息引擎服务，于 2011 年初开源，并于 2012 年 10 月 23 日从 Apache 孵化器毕业，成为 Apache 的顶级项目。</p>
<p>Kafka 最初的设计目的是用于处理海量的日志，后来历经多年发展和完善，如今的 Kafka 集消息系统、存储系统和流式处理平台于一身，在消息引擎领域是执牛耳者，在大数据工程领域、流计算领域也起着举足轻重的作用，具有非常广阔的应用场景。</p>
<h2 id="为什么要掌握Kafka"><a href="#为什么要掌握Kafka" class="headerlink" title="为什么要掌握Kafka"></a>为什么要掌握Kafka</h2><p>因为掌握了 Kafka，手上就多了一份拿高薪的筹码。</p>
<p>援引美国 2019 年 Dice 技术薪资报告中的数据，在十大薪资最高的技术技能中，掌握 Kafka 以平均每年 12.7554 万美元排名第二！虽然这是美国人才市场的数据，但从国内互联网公司的技术招聘需求中，我们也可以看出 Kafka 在国内的行情也是水涨船高。</p>
<p>（查看完整报告：<a href="https://marketing.dice.com/pdf/Dice_TechSalaryReport2019.pdf">https://marketing.dice.com/pdf/Dice_TechSalaryReport2019.pdf</a>）</p>
<h2 id="如何全面掌握Kafka"><a href="#如何全面掌握Kafka" class="headerlink" title="如何全面掌握Kafka"></a>如何全面掌握Kafka</h2><p>作为一名软件开发工程师，在学习开源项目时，最好是采取“自顶向下”的学习方法，即先初步掌握开源项目的基本使用、功能原理、关键设计等，然后再深入到源码，学习其关键技术是如何实现的，以及其代码写作方式等。</p>
<p>对于学习 Kafka 也不例外。具体步骤如下：</p>
<ul>
<li>安装、运行 Kafka。</li>
<li>选择合适的 Kafka 客户端，学习官网上的示例代码，并尝试修改示例代码，如修改输入值、或使用其他的 API 功能，观测修改后的运行结果。此时可编写一个简单的程序（如生产者、消费者程序）进行验证。</li>
<li>通读 Kafka 的设计文档，了解消息队列设计的关键决策部分，并确保理解了那些可能影响可靠性、稳定性和性能的参数。</li>
<li>学习 Kafka 的高级功能，如拦截器、幂等性生产者、事务、流处理应用开发等。</li>
<li>研究原理，如生产者消息分区机制、副本机制、重平衡等。</li>
<li>深入源码，学习关键原理背后的具体编码如何实现。但不建议通读源码（此种方法效率特别低，效果也不好），最好是带着明确目的去研究源码，做到有的放矢，才能事半功倍。</li>
</ul>
<p>在实际应用中，你可能还需要学会管理和监控 Kafka，并从 Kafka 在真实负载下的表现，找出系统可能存在的瓶颈，保障系统的稳定性和提升系统的性能。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>HashMap核心功能源码解读（二）：哈希函数</title>
    <url>/2021/07/27/hashmap-core-code-analysis-2/</url>
    <content><![CDATA[<blockquote>
<p>如无特别说明，本文源码基于 JDK 1.8 进行解读。</p>
</blockquote>
<p>从 HashMap 的源码中的 <code>get(Object key)</code> 和 <code>put(K key, V value)</code> 两个基本操作方法中，我们可以发现，要从一个 HashMap 中获取某个 key 对应的哈希桶位置，需要先通过 <code>hash(Object key)</code> 方法计算出 hash 值，再通过位运算 <code>(n - 1) &amp; hash</code> 得出哈希桶位置。</p>
<p>相关源码如下（这里以 <code>get(Object key)</code> 方法为入口）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取 key 的哈希值</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="literal">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 key 对应的值</span></span><br><span class="line"><span class="keyword">public</span> V <span class="title function_">get</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">    Node&lt;K,V&gt; e;</span><br><span class="line">    <span class="keyword">return</span> (e = getNode(hash(key), key)) == <span class="literal">null</span> ? <span class="literal">null</span> : e.value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 key 对应的值，具体获取逻辑</span></span><br><span class="line"><span class="keyword">final</span> Node&lt;K,V&gt; <span class="title function_">getNode</span><span class="params">(<span class="type">int</span> hash, Object key)</span> &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; <span class="type">int</span> n; K k;</span><br><span class="line">    <span class="keyword">if</span> ((tab = table) != <span class="literal">null</span> &amp;&amp; (n = tab.length) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        (first = tab[(n - <span class="number">1</span>) &amp; hash]) != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (first.hash == hash &amp;&amp; <span class="comment">// always check first node</span></span><br><span class="line">            ((k = first.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">            <span class="keyword">return</span> first;</span><br><span class="line">        <span class="keyword">if</span> ((e = first.next) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (first <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                <span class="keyword">return</span> ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key);</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                    <span class="keyword">return</span> e;</span><br><span class="line">            &#125; <span class="keyword">while</span> ((e = e.next) != <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>我们可以把 HashMap 的哈希函数归结为以下两个步骤：</p>
<ul>
<li>计算 key 的哈希值 hash；</li>
<li>将哈希桶数量 n 减去 1，再与哈希值 hash 做按位与运算。</li>
</ul>
<p>具体的哈希逻辑如下图：</p>
<p><img src="https://i.loli.net/2021/07/23/KYjLohqnFcp5ewz.png" alt="哈希逻辑"></p>
<p>其中， h 为 key 的哈希码（通过 <code>hashCode()</code> 获取），hash 为 key 的哈希值，pos 为哈希桶位置（哈希数组下标）。</p>
<p>整个逻辑比较简单，也符合哈希函数的简单高效的特性。不过，你可能会对其中两个位运算的步骤感到疑惑：</p>
<ul>
<li>第一，为什么 hash 要取 <code>h ^ (h &gt;&gt;&gt; 16)</code>，直接取 h 不行吗？</li>
<li>第二，为什么获取哈希桶位置是 <code>(n - 1) &amp; hash</code>，而不是常用的取模运算 <code>hash % n</code>？ </li>
</ul>
<p>接下来，我们就聊聊这两个问题。作为一个常用的映射类，为了尽可能提升 HashMap 的性能，JDK 的开发者都做了哪些巧妙的设计和优化。</p>
<p>我们先来看看第二个问题，因为知道了 <code>(n - 1) &amp; hash</code> 是怎么设计的，就会很容易理解 hash 值不直接使用 h，而是用 <code>h ^ (h &gt;&gt;&gt; 16)</code> 的原因。</p>
<h2 id="为什么获取哈希桶位置是-n-1-amp-hash？"><a href="#为什么获取哈希桶位置是-n-1-amp-hash？" class="headerlink" title="为什么获取哈希桶位置是 (n - 1) &amp; hash？"></a>为什么获取哈希桶位置是 <code>(n - 1) &amp; hash</code>？</h2><p>这里的 n 代表哈希表的长度（或称哈希桶数量，对应 HashMap 数组结构的大小），其大小被设计为 2 的幂，如 </p>
<script type="math/tex; mode=display">
2^0, 2^1, 2^2,⋯, 2^m</script><p>这么设计是因为恰好可以保证 <code>(n - 1) &amp; hash</code> 的运算结果的范围总是在 [0, n-1] 内，即总是在 HashMap 数组的下标之内。</p>
<p>例如：</p>
<p>当 hash = 7，n = 16 时，(n - 1) &amp; hash = 7；</p>
<p>当 hash = 19，n = 16 时，(n - 1) &amp; hash = 3；</p>
<p>当 hash = -9，n = 16 时，(n - 1) &amp; hash = 7。</p>
<p>可运行以下代码进行校验：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HashMapTmpApp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 哈希表长度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">16</span>;</span><br><span class="line">        <span class="comment">// hashCode数组</span></span><br><span class="line">        <span class="type">int</span>[] hashCodes = &#123;<span class="number">7</span>, <span class="number">19</span>, -<span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> hash : hashCodes) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;(%d - 1) &amp; %d = %d \r\n&quot;</span>, n, hash, (n - <span class="number">1</span>) &amp; hash);</span><br><span class="line">            System.out.println(hash % <span class="number">16</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment">    (16 - 1) &amp; 7 = 7</span></span><br><span class="line"><span class="comment">    (16 - 1) &amp; 19 = 3</span></span><br><span class="line"><span class="comment">    (16 - 1) &amp; -9 = 7</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那为什么哈希表的长度被设计为 2 的幂时，<code>(n - 1) &amp; hash</code> 的结果恰好可以保证在哈希数组范围 [0, n-1] 内呢？</p>
<p>在回答这个问题之前，我们先来看看按位与运算的规则：</p>
<script type="math/tex; mode=display">
1\\&1=1</script><script type="math/tex; mode=display">
1\\&0=0</script><script type="math/tex; mode=display">
0\\&1=0</script><script type="math/tex; mode=display">
0\\&0=0</script><p>当对应的两个二进位数都为 1 时，相应的结果位才为 1，否则为 0。</p>
<p>其实这里还有一个相对比较“隐蔽的规律或者现象”：<strong>当两个二进制数进行按位与运算时，如果其中一个二进制数的某一个位为 1，则按位与运算的结果的相应位上是保留了另一个二进制数在该位上的数。</strong></p>
<p>有点绕口，我们举例来说明。</p>
<p>假设存在两个二进制数 A 和 B， 其中，A = 1100，第三、四位都为 1，</p>
<p>当 B = 0110 时，A &amp; B = 0100，运算结果的第三位为 1，第四位为 0，即保留了二进制数 B 的第三、四位上的数；</p>
<p>当 B = 1001 时，A &amp; B = 1000，运算结果的第三位为 0、第四位为 1，即保留了二进制数 B 的第三、四位上的数；</p>
<p>理解了按位与运算的这一规律之后，我们再来看 n 和 n - 1 的二进制表示的规律。</p>
<p>我们知道，哈希表的长度 n 被设计为 2 的幂，我们记为 </p>
<script type="math/tex; mode=display">
n = 2 ^ m，m = 1, 2, 3, ⋯</script><p>当 m = 1 时，n = 2，n - 1 = 1，其对应的二进制如下表：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>十进制</th>
<th>二进制</th>
</tr>
</thead>
<tbody>
<tr>
<td>n</td>
<td>2</td>
<td>0000 0000 0000 0000 0000 0000 0000 0010</td>
</tr>
<tr>
<td>n - 1</td>
<td>1</td>
<td>0000 0000 0000 0000 0000 0000 0000 0001</td>
</tr>
</tbody>
</table>
</div>
<p>当 m = 2 时，n = 4, n - 1 = 3，其对应的二进制如下表：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>十进制</th>
<th>二进制</th>
</tr>
</thead>
<tbody>
<tr>
<td>n</td>
<td>4</td>
<td>0000 0000 0000 0000 0000 0000 0000 0100</td>
</tr>
<tr>
<td>n - 1</td>
<td>3</td>
<td>0000 0000 0000 0000 0000 0000 0000 0011</td>
</tr>
</tbody>
</table>
</div>
<p>当 m = 3 时，n = 8, n - 1 = 7，其对应的二进制如下表：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>十进制</th>
<th>二进制</th>
</tr>
</thead>
<tbody>
<tr>
<td>n</td>
<td>8</td>
<td>0000 0000 0000 0000 0000 0000 0000 1000</td>
</tr>
<tr>
<td>n - 1</td>
<td>7</td>
<td>0000 0000 0000 0000 0000 0000 0000 0111</td>
</tr>
</tbody>
</table>
</div>
<p>当 m = 4 时，n = 16, n - 1 = 15，其对应的二进制如下表：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>十进制</th>
<th>二进制</th>
</tr>
</thead>
<tbody>
<tr>
<td>n</td>
<td>16</td>
<td>0000 0000 0000 0000 0000 0000 0001 0000</td>
</tr>
<tr>
<td>n - 1</td>
<td>15</td>
<td>0000 0000 0000 0000 0000 0000 0000 1111</td>
</tr>
</tbody>
</table>
</div>
<p>可以发现，$n=2^m$ 的二进制形式为 1 后面跟着 m 个 0，$n-1=2^m-1$ 的二进制形式为后面有 m 个 1。</p>
<p>结合以上的按位与运算规律和二进制数规律，可以得出这个结论，无论 hash 的值是多少，将其转成二进制，跟 n - 1 的二进制进行按位与运算，得到二进制结果，前 (32 - m) 位都为 0，后 m 位为 hash 的二进制数的后 m 位。这也就是说二进制的结果大小被限制在后 m 位，对应十进制大小范围就是 $0$ 到 $2^m-1$。</p>
<p>例如，假设哈希表长度 n = 16，即 $n=2^4$，那么 $n - 1 = 15$，其对应的二进制为：</p>
<p>0000 0000 0000 0000 0000 0000 0000 1111。</p>
<p>将其与 hash 的二进制数进行按位与运算，得到二进制结果，前 28 位都为 0，后 4 位为 hash 二进制数的后 4 位，相当于保留 hash 的二进制数后 4 位。</p>
<p>所以，</p>
<p>0000 0000 0000 0000 0000 0000 0000 1111 &amp; hash </p>
<p>的结果一定是在</p>
<p>0000 0000 0000 0000 0000 0000 0000 0000 </p>
<p>到</p>
<p>0000 0000 0000 0000 0000 0000 0000 1111 </p>
<p>之间，对应的十进制范围就是 [0, 15]。</p>
<p>到这里，应该能理解通过位运算 <code>(n - 1) &amp; hash</code> 得到的结果，最终也能正确映射到哈希桶的位置。</p>
<p>我们知道，位运算是计算机底层的操作，运行速度要比模运算快。而且，如果使用 <code>hash % n</code> 来计算哈希桶位置，还要考虑 hash 小于 0 的情况。在追求极致性能上，多一个小小的判断无疑都会造成性能的损耗。这就是为什么获取哈希桶位置是 <code>(n - 1) &amp; hash</code>，而不是 <code>hash % n</code> 的原因。</p>
<p>简而言之，就是<strong>通过位运算来提升哈希表性能。</strong></p>
<p>理解了第二个问题，现在我们回过头来看第一个问题。</p>
<h2 id="为什么-hash-要取-h-h-gt-gt-gt-16-？"><a href="#为什么-hash-要取-h-h-gt-gt-gt-16-？" class="headerlink" title="为什么 hash 要取 h ^ (h &gt;&gt;&gt; 16)？"></a>为什么 hash 要取 <code>h ^ (h &gt;&gt;&gt; 16)</code>？</h2><p>通过上面的分析知道，<code>(n - 1) &amp; hash</code> 的运算结果就是保留了 hash 的二进制数后 m 位，其中，$n = 2^m$。</p>
<p>这意味着，只要 hash 值的二进制数后 m 位是一样的，那么最终计算出来的哈希桶位置 pos 肯定都是一样的（我们把这称为<strong>哈希冲突</strong>）。</p>
<p>例如，当 m = 4 时，n = 16，以下 hash 值，它们的二进制数后 4 位相同，都为 1011，那么通过 <code>(n - 1) &amp; hash</code> 计算出的哈希桶位置都是一样的。</p>
<p>0000 0100 0000 0000 0000 0000 1000 1011，<br>0000 0110 0000 0000 0000 0000 0100 1011，<br>0000 0001 0000 0000 0000 1111 0100 1011，<br>0011 0010 0000 0000 0000 1000 0000 1011。</p>
<p>计算过程如下：</p>
<p>(n - 1) &amp; hash = 15 &amp; hash</p>
<p>转为二进制：</p>
<p>0000 0000 0000 0000 0000 0000 0000 1111 &amp; hash</p>
<p>将上例 hash 值的二进制数代入，最终计算出的结果为：</p>
<p>0000 0000 0000 0000 0000 0000 0000 1011。</p>
<p>为了降低这种哈希冲突的概率，JDK 的开发者通过合并 h 的高位和低位来增加随机性。具体的操作就是将 h 无符号右移 16 位，并将 h 与右移后的结果进行了异或运算。</p>
<p>如将二进制数 h = 0000 0100 0100 0001 0000 0000 1000 1011 无符号右移 16 位，结果为：</p>
<p>h &gt;&gt;&gt; 16 = 0000 0000 0000 0000 0000 0100 0100 0001</p>
<p>通过异或运算合并 h 的高位和低位：</p>
<p>h ^ (h &gt;&gt;&gt; 16) =<br>0000 0100 0100 0001 0000 0000 1000 1011 ^<br>0000 0000 0000 0000 0000 0100 0100 0001 =<br>0000 0100 0100 0001 0000 0100 1100 1010</p>
<p>最后再通过按位与运算计算出哈希桶位置：</p>
<p>(n - 1) &amp; hash =<br>0000 0000 0000 0000 0000 0000 0000 1111 &amp;<br>0000 0100 0100 0001 0000 0100 1100 1010 =<br>0000 0000 0000 0000 0000 0000 0000 1010</p>
<p>也就是说，虽然 h 的后 4 位 1011 跟上面例子中的二进制后 4 位相同，但经过合并高位和低位，最终计算出的哈希桶位置是不同的。这在一定程度上降低了哈希冲突的概率。</p>
<p>不过，这仅仅是一种在速度、实用性和位运算质量方面的一种折衷方式。因为即使不通过合并高位和低位的方式处理，许多常见的哈希值本来也能合理均匀分布，所以也就不会从这种方式中受益。并且，在实际使用中，当存在大量哈希冲突时，HashMap 还会把链表进行树化，即转化为红黑树进行处理。所以，通过右移和异或运算，是在尽可能少影响原本性能的基础上，通过合并高位和低位来增加随机性。否则，高位上的数可能永远不会参与到哈希桶位置的计算中。</p>
<p>简而言之，就是<strong>通过合并 key 的 hashCode 值的高位和低位，以此来加大随机性，从而在一定程度上降低哈希冲突概率。</strong></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文通过源码分析了 HashMap 的哈希函数，并着重分析了函数中的所使用到位运算。把 key 的 hashCode 值从高位移到低位，并使用异或运算，目的是降低哈希冲突概率。使用按位与运算代替取模运算，则是为了提高性能。</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7 系统中，如何禁止Linux系统用户通过SSH登录服务器？</title>
    <url>/2020/03/20/how-to-limit-what-users-can-log-onto-system-via-ssh/</url>
    <content><![CDATA[<p>出于安全考虑，有时候我们会禁止系统上的某些用户使用 <code>ssh</code> 命令登录服务器。例如，用于启动 MongoDB 服务的用户 mongod，就不允许通过 <code>ssh</code> 命令进行登录。在 CentOS 7 系统中，可以通过修改配置文件 <em>/etc/ssh/sshd_config</em> 达到禁用的目的。</p>
<h2 id="一、单个用户"><a href="#一、单个用户" class="headerlink" title="一、单个用户"></a>一、单个用户</h2><p>这里以禁用 mongod 用户为例，具体步骤如下：</p>
<ul>
<li><p>打开配置文件 <em>/etc/ssh/sshd_config</em>，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>
</li>
<li><p>在文件末尾加入以下内容，只允许后面的用户使用 <code>ssh</code> 命令登陆，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DenyUsers    mongod</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存文件修改，并退出，重启 <code>ssh</code> 服务，即可禁用 <strong>mongod</strong> 用户通过 <code>ssh</code> 命令登陆。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="二、多个用户"><a href="#二、多个用户" class="headerlink" title="二、多个用户"></a>二、多个用户</h2><p>若需要禁用多个系统帐户使用 <code>ssh</code> 命令登陆服务器，只需把系统账户名追加在 <strong>DenyUsers</strong> 行尾，并以空格隔开即可，如禁用 mongod、kafka、robbot 三个用户：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DenyUsers    mongod kafka robbot</span><br></pre></td></tr></table></figure>
<h2 id="三、用户组"><a href="#三、用户组" class="headerlink" title="三、用户组"></a>三、用户组</h2><p>我们也可以通过增加以下内容来禁止用户组通过 <code>ssh</code> 命令登陆服务器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DenyGroups   groupname1 groupname2</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>NOTE：修改完配置文件，必须重新启动 <code>ssh</code> 服务才能生效。</strong></p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Homebrew在macOS上安装Elasticsearch</title>
    <url>/2020/08/02/install-elasticsearch-on-macos-with-homebrew/</url>
    <content><![CDATA[<p>在 macOS 上通过 Homwbrew 安装 Elasticsearch 非常简单，首先通过 <code>brew tap</code> 命令关联 Elastic Homebrew 存储库：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew tap elastic/tap</span><br></pre></td></tr></table></figure>
<p>接下来就可以使用 <code>brew install</code> 命令安装最新发布的 Elasticsearch 的默认发行版：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install elastic/tap/elasticsearch-full</span><br></pre></td></tr></table></figure>
<p>如果你看到类似以下的输出内容，就表示安装成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Pruned 0 symbolic links and 3 directories from /usr/local</span><br></pre></td></tr></table></figure>
<p>通过 brew 安装的 Elasticsearch，其配置文件，日志和数据目录存储在以下位置：</p>
<p><strong>HOME（主目录）</strong>，位于 <code>/usr/local/Cellar/elasticsearch-full/7.8.1/</code>；</p>
<p><strong>bin （可执行文件所在目录）</strong>位于 <code>ll /usr/local/Cellar/elasticsearch-full/7.8.1/bin</code>；</p>
<p><strong>config（配置文件）</strong>位于 <code>/usr/local/etc/elasticsearch</code>；</p>
<p><strong>data（数据存储目录）</strong>位于 <code>/usr/local/var/lib/elasticsearch</code>；</p>
<p><strong>log（日志文件）</strong>位于 <code>/usr/local/var/log/elasticsearch</code>；</p>
<p><strong>plugins（插件存放目录）</strong>位于 <code>/usr/local/var/elasticsearch/plugins</code>。</p>
<p>具体执行输出如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  ~ brew tap elastic/tap</span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated 1 tap (homebrew/core).</span><br><span class="line">==&gt; New Formulae</span><br><span class="line">act                 chart-testing       dnsprobe            golangci-lint       kubie               never               reg                 termcolor</span><br><span class="line">apidoc              chrony              dosbox-staging      gradle-profiler     ldpl                ngs                 rqlite              thanos</span><br><span class="line">arb                 clair               duckscript          gulp-cli            litecli             notmuch-mutt        scw@1               vgrep</span><br><span class="line">argo                cloudformation-cli  eksctl              hy                  logcli              oci-cli             sdns                wgcf</span><br><span class="line">argocd              coconut             fennel              jimtcl              loki                omake               simdjson            yj</span><br><span class="line">arrayfire           colfer              folderify           jinx                lunchy              ory-hydra           smlpkg              z.lua</span><br><span class="line">awsweeper           copilot             functionalplus      jsonnet-bundler     lunchy-go           osi                 so</span><br><span class="line">bond                cortex              gateway-go          k9s                 marked              pipgrip             solidity</span><br><span class="line">cadence             croaring            gcc@9               kona                naabu               promtail            standardese</span><br><span class="line">chalk-cli           cubejs-cli          git-hooks-go        ksync               nanorc              python@3.7          subfinder</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">Updated 3971 formulae.</span><br><span class="line">==&gt; Renamed Formulae</span><br><span class="line">elasticsearch@6.8 -&gt; elasticsearch@6                                            kibana@6.8 -&gt; kibana@6</span><br><span class="line">==&gt; Deleted Formulae</span><br><span class="line">cargo-completion                elasticsearch@2.4               i386-elf-grub                   python                          tomee-jax-rs</span><br><span class="line">cryptopp                        elasticsearch@5.6               kibana@5.6                      sflowtool</span><br><span class="line"></span><br><span class="line">==&gt; Tapping elastic/tap</span><br><span class="line">Cloning into &#x27;/usr/local/Homebrew/Library/Taps/elastic/homebrew-tap&#x27;...</span><br><span class="line">remote: Enumerating objects: 44, done.</span><br><span class="line">remote: Counting objects: 100% (44/44), done.</span><br><span class="line">remote: Compressing objects: 100% (26/26), done.</span><br><span class="line">remote: Total 530 (delta 28), reused 24 (delta 18), pack-reused 486</span><br><span class="line">Receiving objects: 100% (530/530), 133.37 KiB | 31.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (398/398), done.</span><br><span class="line">Tapped 19 formulae (44 files, 234.2KB).</span><br><span class="line">➜  ~ brew install elastic/tap/elasticsearch-full</span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated 1 tap (homebrew/core).</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">Updated 8 formulae.</span><br><span class="line"></span><br><span class="line">==&gt; Installing elasticsearch-full from elastic/tap</span><br><span class="line">==&gt; Downloading https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.8.1-darwin-x86_64.tar.gz?tap=elastic/homebrew-tap</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">Warning: tried to install empty array to /usr/local/etc/elasticsearch/jvm.options.d</span><br><span class="line">==&gt; codesign -f -s - /usr/local/Cellar/elasticsearch-full/7.8.1/libexec/modules/x-pack-ml/platform/darwin-x86_64/controller.app --deep</span><br><span class="line">==&gt; find /usr/local/Cellar/elasticsearch-full/7.8.1/libexec/jdk.app/Contents/Home/bin -type f -exec codesign -f -s - &#123;&#125; ;</span><br><span class="line">==&gt; Caveats</span><br><span class="line">Data:    /usr/local/var/lib/elasticsearch/elasticsearch_bobotang/</span><br><span class="line">Logs:    /usr/local/var/log/elasticsearch/elasticsearch_bobotang.log</span><br><span class="line">Plugins: /usr/local/var/elasticsearch/plugins/</span><br><span class="line">Config:  /usr/local/etc/elasticsearch/</span><br><span class="line"></span><br><span class="line">To have launchd start elastic/tap/elasticsearch-full now and restart at login:</span><br><span class="line">  brew services start elastic/tap/elasticsearch-full</span><br><span class="line">Or, if you don&#x27;t want/need a background service you can just run:</span><br><span class="line">  elasticsearch</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/elasticsearch-full/7.8.1: 901 files, 473.6MB, built in 15 seconds</span><br><span class="line">==&gt; `brew cleanup` has not been run in 30 days, running now...</span><br><span class="line">Removing: /Users/bobotang/Library/Caches/Homebrew/gettext--0.20.2_1.catalina.bottle.tar.gz... (8.4MB)</span><br><span class="line">Removing: /Users/bobotang/Library/Caches/Homebrew/gnupg--2.2.20.catalina.bottle.tar.gz... (4.3MB)</span><br><span class="line">Removing: /Users/bobotang/Library/Caches/Homebrew/libevent--2.1.11_1.catalina.bottle.tar.gz... (1.2MB)</span><br><span class="line">Removing: /Users/bobotang/Library/Caches/Homebrew/libgcrypt--1.8.5.catalina.bottle.tar.gz... (1MB)</span><br><span class="line">Removing: /Users/bobotang/Library/Caches/Homebrew/redis--6.0.5.catalina.bottle.tar.gz... (1.8MB)</span><br><span class="line">Removing: /Users/bobotang/Library/Caches/Homebrew/unbound--1.10.1.catalina.bottle.tar.gz... (2.5MB)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/gmp... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/pinentry... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libidn2... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libksba... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/autojump... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/ncurses... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/nettle... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libunistring... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/utf8proc... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libassuan... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libgpg-error... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libgcrypt... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/gettext... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/pwgen... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/tmux... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libtasn1... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libevent... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/openssl@1.1... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/unbound... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libusb... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/gnupg... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/p11-kit... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/libffi... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/telnet... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/gnutls... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/npth... (64B)</span><br><span class="line">Removing: /Users/bobotang/Library/Logs/Homebrew/adns... (64B)</span><br><span class="line">Pruned 0 symbolic links and 3 directories from /usr/local</span><br><span class="line">➜  ~ </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch倒排索引简介</title>
    <url>/2020/08/04/elasticsearch-inverted-index-intro/</url>
    <content><![CDATA[<h2 id="什么是倒排索引"><a href="#什么是倒排索引" class="headerlink" title="什么是倒排索引"></a>什么是倒排索引</h2><p>倒排索引（Inverted index，亦称反向索引），是一种索引方法，用来存储在全文搜索下某个单词在某一个文档或某一组文档中的存储位置的映射。</p>
<h2 id="倒排索引的数据结构"><a href="#倒排索引的数据结构" class="headerlink" title="倒排索引的数据结构"></a>倒排索引的数据结构</h2><p>倒排索引是文档检索系统中最常用的一种数据据构。它包含两部分——<strong>单词词典（Term Dictionary）和倒排列表（Posting List）</strong>。</p>
<p>其中，单词词典是用来记录所有文档的单词，记录单词到倒排列表的关系，所以单词词典一般也会比较大，为满足快速地插入与查询，通常采用 B+ 树或者哈希链表法来实现。</p>
<p>而倒排列表是用来记录单词对应的文档结合，由倒排索引项（Posting）组成。</p>
<p>倒排索引项结构主要包括以下四项内容：</p>
<ul>
<li>文档ID；</li>
<li>词频（TF）——该单词在文档中的出现次数，用于相关性评分；</li>
<li>位置（Position）——单词在文档中分词的位置，用于语句搜索（Phrase Query）；</li>
<li>偏移（Offset）——记录单词的开始、结束位置，用于高亮显示。</li>
</ul>
<p>倒排索引项结构示例：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Document ID</th>
<th>TF</th>
<th>Position</th>
<th>Offset</th>
</tr>
</thead>
<tbody>
<tr>
<td>10001</td>
<td>2</td>
<td>1</td>
<td><20, 32></td>
</tr>
<tr>
<td>10002</td>
<td>10</td>
<td>23</td>
<td><7, 10></td>
</tr>
</tbody>
</table>
</div>
<p>在 Elasticsearch 的 JSON 文档中的每个字段，默认情况下都有自己的倒排索引，我们可以根据需要对某些字段不做索引，优点是节省存储空间，缺点是该字段无法被搜索。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Java将List&lt;String&gt;元素按指定分隔符连接成字符串</title>
    <url>/2020/06/29/java-list-string-join/</url>
    <content><![CDATA[<p>在日常开发工作中，经常会遇到需要将 <code>List&lt;String&gt;</code> 转换为使用某个符号连接的字符串。如将 <code>List&lt;String&gt;</code> 转换为按英文逗号（<code>,</code>）分隔的字符串：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; weekList = Arrays.asList(</span><br><span class="line">                <span class="string">&quot;Monday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Tuesday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Wednesday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Thursday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Friday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Saturday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Sunday&quot;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 weekList 输出转换为按英文逗号（,）分隔的字符串：</span></span><br><span class="line"><span class="comment">// Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday</span></span><br></pre></td></tr></table></figure>
<p>最容易想到的拼接方式，是通过 <code>for</code> 循环来实现。不过，如果你使用 Java 8 或以上的版本进行开发，实现该功能将变得非常简单，通常有以下两种方法。</p>
<p><strong>方法一：使用 <code>String.join</code>，主要代码如下：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此代码示例演示 String.join 方法的使用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.jomoo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; weekList = Arrays.asList(</span><br><span class="line">                <span class="string">&quot;Monday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Tuesday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Wednesday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Thursday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Friday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Saturday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Sunday&quot;</span></span><br><span class="line">        );</span><br><span class="line">        System.out.println(String.join(<span class="string">&quot;,&quot;</span>, weekList));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>方法二：采用流的方式（<code>stream()</code>）来写，就像下面这样，仍然能够得到同样的结果：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此代码示例演示流方式（stream）进行拼接</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.jomoo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; weekList = Arrays.asList(</span><br><span class="line">                <span class="string">&quot;Monday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Tuesday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Wednesday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Thursday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Friday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Saturday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Sunday&quot;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> weekList.stream().collect(Collectors.joining(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>此外，如果你想在连接成字符串之前，先对元素进行其他的操作，如过滤元素、转成大写等，采用流的方式实现也很方便。以下代码展示如何将整个字符串在连接之前先转为大写：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此代码示例演示在连接之前先将元素转为大写</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.jomoo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; weekList = Arrays.asList(</span><br><span class="line">                <span class="string">&quot;Monday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Tuesday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Wednesday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Thursday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Friday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Saturday&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Sunday&quot;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">      <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> weekList.stream()</span><br><span class="line">                .map(String::toUpperCase)</span><br><span class="line">                .collect(Collectors.joining(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">      </span><br><span class="line">      System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">MONDAY,TUESDAY,WEDNESDAY,THURSDAY,FRIDAY,SATURDAY,SUNDAY</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Using the PFADD Command in Redis</title>
    <url>/2024/06/02/using-the-pfadd-command-in-redis/</url>
    <content><![CDATA[<p>Redis, an open-source, in-memory data structure store, offers a wide range of commands to manipulate data structures like <em>strings</em>, <em>lists</em>, <em>sets</em>, <em>hashes</em>, <em>bitmaps</em>, <em>hyperloglogs</em>, and more. Among these, the HyperLogLog data type is particularly useful for approximating the number of unique elements in a set when the set is too large to fit into memory or when you don’t need absolute accuracy. The <code>PFADD</code> command is one of the key operations for working with HyperLogLog in Redis. This guide will show you how to use the <code>PFADD</code> command effectively.</p>
<h2 id="Understanding-HyperLogLogs-HLL"><a href="#Understanding-HyperLogLogs-HLL" class="headerlink" title="Understanding HyperLogLogs (HLL)"></a><strong>Understanding HyperLogLogs (HLL)</strong></h2><p>HyperLogLogs provide an efficient way to estimate the cardinality (number of unique elements) of a set using minimal memory, regardless of the size of the input set. This makes them extremely useful for applications that require counting unique elements in large datasets. </p>
<h2 id="Syntax-of-PFADD-Command"><a href="#Syntax-of-PFADD-Command" class="headerlink" title="Syntax of PFADD Command"></a><strong>Syntax of PFADD Command</strong></h2><p><code>PFADD</code> is a Redis command used to add one or more elements to a HyperLogLog. If the HyperLogLog does not exist, it is created automatically. This command is ideal for scenarios where you need to count unique items in a very large set with high accuracy and low memory overhead.<br>To use <code>PFADD</code>, follow this syntax:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PFADD key element [element ...]</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>key</strong>: The name of the HyperLogLog key. </li>
<li><strong>element</strong>: The element(s) to add to the HyperLogLog. You can add multiple elements in a single <code>PFADD</code> command.<h2 id="Example-Usage"><a href="#Example-Usage" class="headerlink" title="Example Usage"></a><strong>Example Usage</strong></h2>Suppose we are running an e-commerce website and aim to estimate daily unique visitors. Leveraging a Redis instance, we can use a HyperLogLog (HLL) data structure for this task. Using <code>PFADD</code>, we add each unique visitor’s ID to the HLL.</li>
</ul>
<ol>
<li><p>Adding Elements to a HyperLogLog: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; PFADD unique_visitors_today alice bob carol bob</span><br></pre></td></tr></table></figure>
<p>This command adds  users ‘alice’, ‘bob’, ‘carol’, and ‘bob’ to the ‘unique_visitors_today’ HyperLogLog. If ‘unique_visitors_today’ didn’t exist before, it will be created automatically.</p>
</li>
<li><p>Estimating the Number of Unique Elements: </p>
</li>
</ol>
<p>After adding elements to the HyperLogLog, we can use the <code>PFCOUNT</code> command to estimate the number of unique elements in the set.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PFCOUNT unique_visitors_today</span><br></pre></td></tr></table></figure><br>This command will return 3, an estimate of the number of unique visitors based on the elements added to the ‘unique_visitors_today’ HyperLogLog.</p>
<h2 id="Notes-and-Best-Practices"><a href="#Notes-and-Best-Practices" class="headerlink" title="Notes and Best Practices"></a><strong>Notes and Best Practices</strong></h2><ul>
<li><strong>Memory Efficiency</strong>: HyperLogLogs are designed to provide an estimate of the number of unique elements with a very small memory footprint, making them ideal for large datasets.</li>
<li><strong>Accuracy</strong>: While HyperLogLogs provide an estimate rather than an exact count, they offer a high degree of accuracy with a low standard error. (due to their probabilistic nature)</li>
<li><p><strong>Atomicity</strong>: The <code>PFADD</code> command is atomic, meaning that it adds elements to the HyperLogLog in an all-or-nothing fashion.</p>
<h2 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a><strong>Applications</strong></h2><p>HyperLogLogs are particularly useful for applications that need to count unique items in large datasets.<br>For example: </p>
</li>
<li><p><strong>Counting Unique Visitors</strong>: Use HyperLogLogs to estimate the number of unique users accessing a website.</p>
</li>
<li><strong>Data Analytics</strong>: Calculate unique items in datasets for analytics purposes efficiently.<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a><strong>Conclusion</strong></h2>The <code>PFADD</code> command in Redis is essential for leveraging HyperLogLogs to efficiently estimate unique items in datasets. By understanding its usage and applications, you can effectively integrate it into your Redis-based applications for scalable and efficient data handling.<br>For more details on how to use <code>PFADD</code> and other Redis commands effectively, check out the Redis documentation or tutorials on Redis data structures.</li>
</ul>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>在macOS编译JDK14</title>
    <url>/2020/05/08/apache-kafka-intro/</url>
    <content><![CDATA[<h2 id="一、系统环境"><a href="#一、系统环境" class="headerlink" title="一、系统环境"></a>一、系统环境</h2><p>操作系统：macOS 10.15.4（Catalina）</p>
<p>处理器：2.6 GHz 双核Intel Core i5</p>
<p>内存：8G</p>
<p>硬盘：512G</p>
<blockquote>
<p>NOTE:  在 macOS 平台编译 OpenJDK 14，操作系统版本官方建议至少使用 Mac OS X 10.13（High Sierra），可用磁盘空间建议至少 6 GB。</p>
</blockquote>
<h2 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h2><h3 id="2-1-Boot-JDK"><a href="#2-1-Boot-JDK" class="headerlink" title="2.1 Boot JDK"></a>2.1 Boot JDK</h3><p>矛盾的是，为了编译 OpenJDK，我们需要预先安装一个版本的 JDK，官方称这个 JDK 为 Boot JDK，即引导 JDK。</p>
<h4 id="何为-Boot-JDK"><a href="#何为-Boot-JDK" class="headerlink" title="何为 Boot JDK"></a>何为 Boot JDK</h4><p>我们知道，OpenJDK 源码由多个部分组成，包括 HotSpot、JDK 类库、JAXP 等。其中一部分的代码是使用 C/C++ 编写的，如 HotSpot；而更多的代码其实是使用 Java 实现的，如我们熟知的 JDK 类库。编译这些 Java 代码就需要用到另一个已经编译的 JDK，官方称这个 JDK 为 Bootstrap JDK，即引导 JDK，作用是编译 OpenJDK 源码中 Java 代码。</p>
<h4 id="如何选择-Boot-JDK-的版本"><a href="#如何选择-Boot-JDK-的版本" class="headerlink" title="如何选择 Boot JDK 的版本"></a>如何选择 Boot JDK 的版本</h4><p>Bootstrap JDK 的版本与我们要编译的 OpenJDK 版本有关。假设要编译的 OpenJDK 的大版本号为 <em>N</em>，那么 Bootstrap JDK 大版本号最小为 <em>N-1</em> 版本。</p>
<p>如本文要编译的 OpenJDK 的大版本号为 14，那 Bootstrap JDK 的大版本号就需要 13 或 13 之后的版本。这里选择的大版本号是 13 ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  ~ java -version</span><br><span class="line">openjdk version &quot;13.0.2&quot; 2020-01-14</span><br><span class="line">OpenJDK Runtime Environment (build 13.0.2+8)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 13.0.2+8, mixed mode, sharing)</span><br></pre></td></tr></table></figure>
<h3 id="2-2-安装-Xcode"><a href="#2-2-安装-Xcode" class="headerlink" title="2.2 安装 Xcode"></a>2.2 安装 Xcode</h3><p>直接通过电脑的 App Store 安装最新版 Xcode 即可。</p>
<p>为什么需要安装 Xcode？这是因为 Xcode 提供了编译 OpenJDK 所需要 CLang 编译器以及 Makefile 中用到的其他外部命令。</p>
<h3 id="2-3-获取源码"><a href="#2-3-获取源码" class="headerlink" title="2.3 获取源码"></a>2.3 获取源码</h3><p>从 OpenJDK 官网获取源码有以下两种方式：</p>
<ul>
<li><p>一种是通过代码管理工具 Mercurial 从 Repository（<a href="http://hg.openjdk.java.net/jdk/jdk14/">http://hg.openjdk.java.net/jdk/jdk14/</a>） 中取得源码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hg clone http://hg.openjdk.java.net/jdk/jdk14/</span><br></pre></td></tr></table></figure>
</li>
<li><p>另一种是先在仓库中打包出源码压缩包，再下载压缩包，主要步骤如下：</p>
<ol>
<li><p>在浏览器打开链接 <em><a href="http://hg.openjdk.java.net/jdk/jdk14/">http://hg.openjdk.java.net/jdk/jdk14/</a></em>：</p>
<p><img src="/image/image-20200511232123290.png" alt="image-20200511232123290"></p>
</li>
<li><p>点击左侧菜单栏 <em>browse</em> 链接：</p>
<p><img src="/image/image-20200511232253789.png" alt="image-20200511232253789"></p>
</li>
<li><p>然后再点击左侧菜单栏 <em>zip</em> 链接，即可进行下载。</p>
</li>
</ol>
</li>
</ul>
<p>通过代码管理工具 Mercurial 的获取方式，你可以从版本管理中看到代码提交的记录和日志，能更加精确地了解 Java 代码发生的变化。此种方式的缺点是 clone 的速度很慢，虽然代码总大小只有几百MB，但小文件数量众多，而且该代码仓库在国内没有 CDN 节点，经常在 clone 的过程中出现中断的情况。</p>
<p>通过从官网下载压缩包的获取方式，在国内同样也会有网络慢的问题。在网络不稳定的情况下，会出现只能下载到 1.5M 左右的残缺包。</p>
<p>所以，如果想从官网获取源码，建议科学上网。</p>
<p>对于不具备科学上网条件的用户，可以去 github 上的镜像库（<a href="https://github.com/unofficial-openjdk/openjdk/releases">https://github.com/unofficial-openjdk/openjdk/releases</a>）下载相应的 release 版本。</p>
<p>本文的编译示例采用的是 <a href="https://github.com/unofficial-openjdk/openjdk/releases/tag/jdk-14%2B36">jdk-14+36</a> 版本，源码包大小为 185.2MB，解压缩之后为 763.6MB。</p>
<h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><p>在准备工作完成后，就可以编译 OpenJDK 了。</p>
<p>首先，将下载下来的源码解压到指定文件目录。本示例的目录是 <code>~/src/openjdk-jdk-14-36</code>。解压后的文件目录如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  ~ cd ~/src/openjdk-jdk-14-36 </span><br><span class="line">➜  openjdk-jdk-14-36 ll</span><br><span class="line">total 80</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   2.1K  2  7 02:10 ADDITIONAL_LICENSE_INFO</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   1.5K  2  7 02:10 ASSEMBLY_EXCEPTION</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff    19K  2  7 02:10 LICENSE</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   2.7K  2  7 02:10 Makefile</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   341B  2  7 02:10 README</span><br><span class="line">drwxrwxr-x@  9 bobotang  staff   288B  2  7 02:10 bin</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   1.6K  2  7 02:10 configure</span><br><span class="line">drwxrwxr-x@  9 bobotang  staff   288B  2  7 02:10 doc</span><br><span class="line">drwxrwxr-x@ 69 bobotang  staff   2.2K  2  7 02:10 make</span><br><span class="line">drwxrwxr-x@ 81 bobotang  staff   2.5K  5  7 23:43 src</span><br><span class="line">drwxrwxr-x@ 14 bobotang  staff   448B  2  7 02:10 test</span><br></pre></td></tr></table></figure>
<blockquote>
<p>NOTE：目录不要包含中文字符或空格等其他特殊字符</p>
</blockquote>
<p>接下来，需要为源码目录下的一些配置文件赋予可执行权限。</p>
<p>执行命令 <code>chmod +x ./configure</code>，为 <code>configure</code> 文件赋予可执行权限：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  openjdk-jdk-14-36 chmod +x ./configure                             </span><br><span class="line">➜  openjdk-jdk-14-36 ll</span><br><span class="line">total 80</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   2.1K  2  7 02:10 ADDITIONAL_LICENSE_INFO</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   1.5K  2  7 02:10 ASSEMBLY_EXCEPTION</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff    19K  2  7 02:10 LICENSE</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   2.7K  2  7 02:10 Makefile</span><br><span class="line">-rw-rw-r--@  1 bobotang  staff   341B  2  7 02:10 README</span><br><span class="line">drwxrwxr-x@  9 bobotang  staff   288B  2  7 02:10 bin</span><br><span class="line">-rwxrwxr-x@  1 bobotang  staff   1.6K  2  7 02:10 configure</span><br><span class="line">drwxrwxr-x@  9 bobotang  staff   288B  2  7 02:10 doc</span><br><span class="line">drwxrwxr-x@ 69 bobotang  staff   2.2K  2  7 02:10 make</span><br><span class="line">drwxrwxr-x@ 81 bobotang  staff   2.5K  5  7 23:43 src</span><br><span class="line">drwxrwxr-x@ 14 bobotang  staff   448B  2  7 02:10 test</span><br></pre></td></tr></table></figure>
<p>执行命令 <code>chmod +x build/.configure-support/generated-configure.sh</code> 为 <code>build/.configure-support/generated-configure.sh</code> 脚本文件赋予可执行权限：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  openjdk-jdk-14-36 sudo chmod +x build/.configure-support/generated-configure.sh</span><br><span class="line">➜  openjdk-jdk-14-36 ll build/.configure-support/</span><br><span class="line">total 6272</span><br><span class="line">-rwxr-xr-x  1 root  staff   3.0M  5  8 09:41 generated-configure.sh</span><br></pre></td></tr></table></figure>
<p>配置好可执行权限后，执行以下语句进行编译检测：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  openjdk-jdk-14-36 ./configure --enable-debug --with-jvm-variants=server </span><br></pre></td></tr></table></figure>
<p>如果检测通过，你可以看到以下输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">A new configuration has been successfully created in</span><br><span class="line">/Users/bobotang/src/openjdk-jdk-14-36/build/macosx-x86_64-server-fastdebug</span><br><span class="line">using configure arguments &#x27;--enable-debug --with-jvm-variants=server&#x27;.</span><br><span class="line"></span><br><span class="line">Configuration summary:</span><br><span class="line">* Debug level:    fastdebug</span><br><span class="line">* HS debug level: fastdebug</span><br><span class="line">* JVM variants:   server</span><br><span class="line">* JVM features:   server: &#x27;aot cds compiler1 compiler2 dtrace epsilongc g1gc graal jfr jni-check jvmci jvmti management nmt parallelgc serialgc services shenandoahgc vm-structs zgc&#x27; </span><br><span class="line">* OpenJDK target: OS: macosx, CPU architecture: x86, address length: 64</span><br><span class="line">* Version string: 14-internal+0-adhoc.root.openjdk-jdk-14-36 (14-internal)</span><br><span class="line"></span><br><span class="line">Tools summary:</span><br><span class="line">* Boot JDK:       openjdk version &quot;14&quot; 2020-03-17 OpenJDK Runtime Environment (build 14+36-1461) OpenJDK 64-Bit Server VM (build 14+36-1461, mixed mode, sharing)  (at /Library/Java/JavaVirtualMachines/jdk-14.jdk/Contents/Home)</span><br><span class="line">* Toolchain:      clang (clang/LLVM from Xcode 11.4.1)</span><br><span class="line">* C Compiler:     Version 11.0.3 (at /usr/bin/clang)</span><br><span class="line">* C++ Compiler:   Version 11.0.3 (at /usr/bin/clang++)</span><br><span class="line"></span><br><span class="line">Build performance summary:</span><br><span class="line">* Cores to use:   4</span><br><span class="line">* Memory limit:   8192 MB</span><br></pre></td></tr></table></figure>
<p>编译检查通过后，就可以通过命令 <code>make images</code> 生成 OpenJDK 了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  openjdk-jdk-14-36 sudo make images</span><br></pre></td></tr></table></figure>
<p>如果你看到以下输出，就说明构建成功了：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Creating jdk image</span><br><span class="line">WARNING: Using incubator modules: jdk.incubator.jpackage, jdk.incubator.foreign</span><br><span class="line">Creating CDS archive for jdk image</span><br><span class="line">Finished building target &#x27;images&#x27; in configuration &#x27;macosx-x86_64-server-fastdebug&#x27;</span><br></pre></td></tr></table></figure>
<p>你可以查看 <code>build</code> 目录下生成的文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  openjdk-jdk-14-36 ll build/macosx-x86_64-server-fastdebug</span><br><span class="line">total 216</span><br><span class="line">-rw-r--r--   1 root  staff   1.3K  5  8 10:10 Makefile</span><br><span class="line">-rw-r--r--   1 root  staff   2.9K  5  8 10:10 bootcycle-spec.gmk</span><br><span class="line">-rw-r--r--   1 root  staff    18K  5  8 10:49 build.log</span><br><span class="line">-rw-r--r--   1 root  staff   8.7K  5  8 10:10 buildjdk-spec.gmk</span><br><span class="line">drwxr-xr-x  46 root  staff   1.4K  5  8 10:44 buildtools</span><br><span class="line">-rwxr-xr-x   1 root  staff   3.8K  5  8 10:10 compare.sh</span><br><span class="line">drwxr-xr-x   5 root  staff   160B  5  8 10:10 configure-support</span><br><span class="line">-rw-r--r--   1 root  staff    21K  5  8 10:10 configure.log</span><br><span class="line">drwxr-xr-x   3 root  staff    96B  5  8 10:17 hotspot</span><br><span class="line">drwxr-xr-x   7 root  staff   224B  5  8 10:47 images</span><br><span class="line">drwxr-xr-x  12 root  staff   384B  5  8 10:43 jdk</span><br><span class="line">drwxr-xr-x  10 root  staff   320B  5  8 10:16 make-support</span><br><span class="line">-rw-r--r--   1 root  staff    36K  5  8 10:10 spec.gmk</span><br><span class="line">drwxr-xr-x  27 root  staff   864B  5  8 10:44 support</span><br></pre></td></tr></table></figure>
<p>执行 java -version 查看编译后的 OpenJDK 版本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  openjdk-jdk-14-36 build/macosx-x86_64-server-fastdebug/jdk/bin/java -version </span><br><span class="line">openjdk version &quot;14-internal&quot; 2020-03-17</span><br><span class="line">OpenJDK Runtime Environment (fastdebug build 14-internal+0-adhoc.root.openjdk-jdk-14-36)</span><br><span class="line">OpenJDK 64-Bit Server VM (fastdebug build 14-internal+0-adhoc.root.openjdk-jdk-14-36, mixed mode)</span><br></pre></td></tr></table></figure>
<p>至此，OpenJDK 已经成功编译。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>JDK</tag>
      </tags>
  </entry>
  <entry>
    <title>Why Learning Data Structures and Algorithms is Crucial for Success in Tech</title>
    <url>/2024/06/01/why-learning-data-structures-and-algorithms-is-crucial-for-success-in-tech/</url>
    <content><![CDATA[<p>In the ever-evolving world of technology, understanding the fundamentals of data structures and algorithms is not just an option but a necessity. These concepts form the backbone of efficient problem-solving and lie at the heart of many computer science disciplines, from software development to data analytics. Here’s why every aspiring tech professional should prioritize learning data structures and algorithms.</p>
<ol>
<li><strong>Efficiency and Optimization</strong>:<br>Data structures and algorithms determine how efficiently we can process and manipulate data. The right choice of data structure can significantly reduce the time and space complexity of an operation, making programs run faster and use less memory. Similarly, efficient algorithms can minimize the number of steps required to solve a problem, enhancing overall performance.</li>
<li><strong>Scalability</strong>:<br>As software systems grow in size and complexity, scalability becomes a crucial concern. By mastering data structures and algorithms, developers can design systems that can handle increasing amounts of data and users without compromising performance. This is particularly important in the age of big data and cloud computing.</li>
<li><strong>Interview Preparation</strong>:<br>Technical interviews for software engineering and related roles often heavily emphasize data structures and algorithms. Employers use these questions to assess a candidate’s problem-solving skills, ability to think critically, and understanding of fundamental computer science concepts. Mastering these topics can give you a significant edge during the hiring process.</li>
<li><strong>Foundation for Advanced Topics</strong>:<br>Data structures and algorithms serve as the foundation for many advanced topics in computer science, including databases, compilers, operating systems, and machine learning. Without a solid grasp of these basics, it can be challenging to dive deeper into these specialized areas.</li>
<li><strong>Improving Problem-Solving Skills</strong>:<br>Solving problems using data structures and algorithms forces you to think creatively and analytically. This process helps develop problem-solving skills that are transferable to various aspects of life, not just programming. It also fosters a mindset of optimization and efficiency, which is valuable in any field.</li>
<li><strong>Staying Relevant</strong>:<br>The tech industry is constantly evolving, but the principles of data structures and algorithms remain timeless. By investing in this knowledge, you’re ensuring that your skills remain relevant and in demand, even as new technologies emerge.</li>
<li><strong>Community and Collaboration</strong>:<br>The world of data structures and algorithms is vast and ever-expanding. By engaging with the community through forums, online courses, and conferences, you can learn from others’ experiences, share your own insights, and collaborate on solving complex problems. This sense of community and shared knowledge is invaluable in the tech industry.</li>
</ol>
<p>In summary, learning data structures and algorithms is essential for any tech professional looking to stay ahead of the curve. They provide the foundation for efficient problem-solving, scalability, and mastery of advanced topics. Furthermore, they are crucial for interview preparation, improving problem-solving skills, and staying relevant in a rapidly changing industry. So, whether you’re a seasoned developer or just starting your journey in tech, make sure to prioritize learning these fundamental concepts.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Data Structures and Algorithms</tag>
      </tags>
  </entry>
  <entry>
    <title>Checking Filebeat Version</title>
    <url>/2024/06/04/checking-filebeat-version/</url>
    <content><![CDATA[<p>To ensure your Filebeat installation is up-to-date and functioning correctly, verifying the version is essential. Here’s a straightforward method to check the Filebeat version on your system:</p>
<ol>
<li><strong>Command Line Check:</strong></li>
</ol>
<p>Open your terminal or command prompt and execute the following command:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">filebeat version</span><br></pre></td></tr></table></figure><br>This command will display the installed Filebeat version along with the build number and other relevant information.</p>
<ol>
<li><strong>Output Interpretation:</strong></li>
</ol>
<p>After running the command, you should see output similar to the following:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">filebeat version 8.7.0 (amd64), libbeat 8.7.0 [a8dbc6c06381f4fe33a5dc23906d63c04c9e2444 built 2023-03-23 00:44:06 +0000 UTC]</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>filebeat version 8.7.0</strong>: Indicates the Filebeat version currently installed.</li>
<li><strong>libbeat 8.7.0</strong>: Shows the version of the Beats library used by Filebeat.</li>
</ul>
<ol>
<li><strong>Updating Filebeat:</strong></li>
</ol>
<p>If you find that your Filebeat version is outdated, consider updating to the latest stable release. Always check the <a href="https://www.elastic.co/downloads/beats/filebeat">official Elastic website</a> for the most recent version and update instructions.</p>
<p>By following these steps, you can easily verify the Filebeat version installed on your system and ensure compatibility with your Elasticsearch or Logstash setup. For further assistance or troubleshooting, refer to the <a href="https://www.elastic.co/guide/en/beats/filebeat/current/index.html">Filebeat documentation</a>.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Filebeat</tag>
      </tags>
  </entry>
  <entry>
    <title>List of Roman Numerals 1 to 1000</title>
    <url>/2024/06/03/list-of-roman-numerals-1-to-1000/</url>
    <content><![CDATA[<blockquote>
<p>In the world of numerals, Roman numerals offer a timeless and distinctive way of representing numbers. Whether you’re a historian, a linguist, or simply curious about the numerical system used by ancient Romans, understanding Roman numerals from 1 to 1000 can be enlightening.</p>
</blockquote>
<p>PDF File Download: <a href="https://github.com/iuiuu/roman-numerals/blob/master/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%201-1000.pdf">roman numerals 1-1000.pdf</a><br>Excel File Download: <a href="https://github.com/iuiuu/roman-numerals/blob/master/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%201-1000.xlsx">roman numerals 1-1000.xlsx</a></p>
<h2 id="List-of-Roman-Numerals-1-to-1000"><a href="#List-of-Roman-Numerals-1-to-1000" class="headerlink" title="List of Roman Numerals 1 to 1000"></a>List of Roman Numerals 1 to 1000</h2><div class="table-container">
<table>
<thead>
<tr>
<th>1-250</th>
<th>I-CCL</th>
<th>251-500</th>
<th>CCLI-D</th>
<th>501-750</th>
<th>DI-DCCL</th>
<th>751-1000</th>
<th>DCCLI-M</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>I</td>
<td>251</td>
<td>CCLI</td>
<td>501</td>
<td>DI</td>
<td>751</td>
<td>DCCLI</td>
</tr>
<tr>
<td>2</td>
<td>II</td>
<td>252</td>
<td>CCLII</td>
<td>502</td>
<td>DII</td>
<td>752</td>
<td>DCCLII</td>
</tr>
<tr>
<td>3</td>
<td>III</td>
<td>253</td>
<td>CCLIII</td>
<td>503</td>
<td>DIII</td>
<td>753</td>
<td>DCCLIII</td>
</tr>
<tr>
<td>4</td>
<td>IV</td>
<td>254</td>
<td>CCLIV</td>
<td>504</td>
<td>DIV</td>
<td>754</td>
<td>DCCLIV</td>
</tr>
<tr>
<td>5</td>
<td>V</td>
<td>255</td>
<td>CCLV</td>
<td>505</td>
<td>DV</td>
<td>755</td>
<td>DCCLV</td>
</tr>
<tr>
<td>6</td>
<td>VI</td>
<td>256</td>
<td>CCLVI</td>
<td>506</td>
<td>DVI</td>
<td>756</td>
<td>DCCLVI</td>
</tr>
<tr>
<td>7</td>
<td>VII</td>
<td>257</td>
<td>CCLVII</td>
<td>507</td>
<td>DVII</td>
<td>757</td>
<td>DCCLVII</td>
</tr>
<tr>
<td>8</td>
<td>VIII</td>
<td>258</td>
<td>CCLVIII</td>
<td>508</td>
<td>DVIII</td>
<td>758</td>
<td>DCCLVIII</td>
</tr>
<tr>
<td>9</td>
<td>IX</td>
<td>259</td>
<td>CCLVIX</td>
<td>509</td>
<td>DIX</td>
<td>759</td>
<td>DCCLIX</td>
</tr>
<tr>
<td>10</td>
<td>X</td>
<td>260</td>
<td>CCLX</td>
<td>510</td>
<td>DX</td>
<td>760</td>
<td>DCCLX</td>
</tr>
<tr>
<td>11</td>
<td>XI</td>
<td>261</td>
<td>CCLXI</td>
<td>511</td>
<td>DXI</td>
<td>761</td>
<td>DCCLXI</td>
</tr>
<tr>
<td>12</td>
<td>XII</td>
<td>262</td>
<td>CCLXII</td>
<td>512</td>
<td>DXII</td>
<td>762</td>
<td>DCCLXII</td>
</tr>
<tr>
<td>13</td>
<td>XIII</td>
<td>263</td>
<td>CCLXIII</td>
<td>513</td>
<td>DXIII</td>
<td>763</td>
<td>DCCLXIII</td>
</tr>
<tr>
<td>14</td>
<td>XIV</td>
<td>264</td>
<td>CCLXIV</td>
<td>514</td>
<td>DXIV</td>
<td>764</td>
<td>DCCLXIV</td>
</tr>
<tr>
<td>15</td>
<td>XV</td>
<td>265</td>
<td>CCLXV</td>
<td>515</td>
<td>DXV</td>
<td>765</td>
<td>DCCLXV</td>
</tr>
<tr>
<td>16</td>
<td>XVI</td>
<td>266</td>
<td>CCLXVI</td>
<td>516</td>
<td>DXVI</td>
<td>766</td>
<td>DCCLXVI</td>
</tr>
<tr>
<td>17</td>
<td>XVII</td>
<td>267</td>
<td>CCLXVII</td>
<td>517</td>
<td>DXVII</td>
<td>767</td>
<td>DCCLXVII</td>
</tr>
<tr>
<td>18</td>
<td>XVIII</td>
<td>268</td>
<td>CCLXVIII</td>
<td>518</td>
<td>DXVIII</td>
<td>768</td>
<td>DCCLXVIII</td>
</tr>
<tr>
<td>19</td>
<td>XIX</td>
<td>269</td>
<td>CCLXIX</td>
<td>519</td>
<td>DXIX</td>
<td>769</td>
<td>DCCLXIX</td>
</tr>
<tr>
<td>20</td>
<td>XX</td>
<td>270</td>
<td>CCLXX</td>
<td>520</td>
<td>DXX</td>
<td>770</td>
<td>DCCLXX</td>
</tr>
<tr>
<td>21</td>
<td>XXI</td>
<td>271</td>
<td>CCLXXI</td>
<td>521</td>
<td>DXXI</td>
<td>771</td>
<td>DCCLXXI</td>
</tr>
<tr>
<td>22</td>
<td>XXII</td>
<td>272</td>
<td>CCLXXII</td>
<td>522</td>
<td>DXXII</td>
<td>772</td>
<td>DCCLXXII</td>
</tr>
<tr>
<td>23</td>
<td>XXIII</td>
<td>273</td>
<td>CCLXXIII</td>
<td>523</td>
<td>DXXIII</td>
<td>773</td>
<td>DCCLXXIII</td>
</tr>
<tr>
<td>24</td>
<td>XXIV</td>
<td>274</td>
<td>CCLXXIV</td>
<td>524</td>
<td>DXXIV</td>
<td>774</td>
<td>DCCLXXIV</td>
</tr>
<tr>
<td>25</td>
<td>XXV</td>
<td>275</td>
<td>CCLXXV</td>
<td>525</td>
<td>DXXV</td>
<td>775</td>
<td>DCCLXXV</td>
</tr>
<tr>
<td>26</td>
<td>XXVI</td>
<td>276</td>
<td>CCLXXVI</td>
<td>526</td>
<td>DXXVI</td>
<td>776</td>
<td>DCCLXXVI</td>
</tr>
<tr>
<td>27</td>
<td>XXVII</td>
<td>277</td>
<td>CCLXXVII</td>
<td>527</td>
<td>DXXVII</td>
<td>777</td>
<td>DCCLXXVII</td>
</tr>
<tr>
<td>28</td>
<td>XXVIII</td>
<td>278</td>
<td>CCLXXIII</td>
<td>528</td>
<td>DXXVIII</td>
<td>778</td>
<td>DCCLXXVIII</td>
</tr>
<tr>
<td>29</td>
<td>XXIX</td>
<td>279</td>
<td>CCLXXIX</td>
<td>529</td>
<td>DXXIX</td>
<td>779</td>
<td>DCCLXXIX</td>
</tr>
<tr>
<td>30</td>
<td>XXX</td>
<td>280</td>
<td>CCLXXX</td>
<td>530</td>
<td>DXXX</td>
<td>780</td>
<td>DCCLXXX</td>
</tr>
<tr>
<td>31</td>
<td>XXXI</td>
<td>281</td>
<td>CCLXXXI</td>
<td>531</td>
<td>DXXXI</td>
<td>781</td>
<td>DCCLXXXI</td>
</tr>
<tr>
<td>32</td>
<td>XXXII</td>
<td>282</td>
<td>CCLXXXII</td>
<td>532</td>
<td>DXXXII</td>
<td>782</td>
<td>DCCLXXXII</td>
</tr>
<tr>
<td>33</td>
<td>XXXIII</td>
<td>283</td>
<td>CCLXXXIII</td>
<td>533</td>
<td>DXXXIII</td>
<td>783</td>
<td>DCCLXXXIII</td>
</tr>
<tr>
<td>34</td>
<td>XXXIV</td>
<td>284</td>
<td>CCLXXXIV</td>
<td>534</td>
<td>DXXXIV</td>
<td>784</td>
<td>DCCLXXXIV</td>
</tr>
<tr>
<td>35</td>
<td>XXXV</td>
<td>285</td>
<td>CCLXXXV</td>
<td>535</td>
<td>DXXXV</td>
<td>785</td>
<td>DCCLXXXV</td>
</tr>
<tr>
<td>36</td>
<td>XXXVI</td>
<td>286</td>
<td>CCLXXXVI</td>
<td>536</td>
<td>DXXXVI</td>
<td>786</td>
<td>DCCLXXXVI</td>
</tr>
<tr>
<td>37</td>
<td>XXXVII</td>
<td>287</td>
<td>CCLXXXVII</td>
<td>537</td>
<td>DXXXVII</td>
<td>787</td>
<td>DCCLXXXVII</td>
</tr>
<tr>
<td>38</td>
<td>XXXVIII</td>
<td>288</td>
<td>CCLXXXVIII</td>
<td>538</td>
<td>DXXXVIII</td>
<td>788</td>
<td>DCCLXXXVIII</td>
</tr>
<tr>
<td>39</td>
<td>XXXIX</td>
<td>289</td>
<td>CCLXXXIX</td>
<td>539</td>
<td>DXXXIX</td>
<td>789</td>
<td>DCCLXXXIX</td>
</tr>
<tr>
<td>40</td>
<td>XL</td>
<td>290</td>
<td>CCXC</td>
<td>540</td>
<td>DXL</td>
<td>790</td>
<td>DCCXC</td>
</tr>
<tr>
<td>41</td>
<td>XLI</td>
<td>291</td>
<td>CCXCI</td>
<td>541</td>
<td>DXLI</td>
<td>791</td>
<td>DCCXCI</td>
</tr>
<tr>
<td>42</td>
<td>XLII</td>
<td>292</td>
<td>CCXCII</td>
<td>542</td>
<td>DXLII</td>
<td>792</td>
<td>DCCXCII</td>
</tr>
<tr>
<td>43</td>
<td>XLIII</td>
<td>293</td>
<td>CCXCIII</td>
<td>543</td>
<td>DXLIII</td>
<td>793</td>
<td>DCCXCIII</td>
</tr>
<tr>
<td>44</td>
<td>XLIV</td>
<td>294</td>
<td>CCXCIV</td>
<td>544</td>
<td>DXLIV</td>
<td>794</td>
<td>DCCXCIV</td>
</tr>
<tr>
<td>45</td>
<td>XLV</td>
<td>295</td>
<td>CCXCV</td>
<td>545</td>
<td>DXLV</td>
<td>795</td>
<td>DCCXCV</td>
</tr>
<tr>
<td>46</td>
<td>XLVI</td>
<td>296</td>
<td>CCXCVI</td>
<td>546</td>
<td>DXLVI</td>
<td>796</td>
<td>DCCXCVI</td>
</tr>
<tr>
<td>47</td>
<td>XLVII</td>
<td>297</td>
<td>CCXCVII</td>
<td>547</td>
<td>DXLVII</td>
<td>797</td>
<td>DCCXCVII</td>
</tr>
<tr>
<td>48</td>
<td>XLVIII</td>
<td>298</td>
<td>CCXCVIII</td>
<td>548</td>
<td>DXLVIII</td>
<td>798</td>
<td>DCCXCVIII</td>
</tr>
<tr>
<td>49</td>
<td>XLIX</td>
<td>299</td>
<td>CCXCIX</td>
<td>549</td>
<td>DXLIX</td>
<td>799</td>
<td>DCCXCIX</td>
</tr>
<tr>
<td>50</td>
<td>L</td>
<td>300</td>
<td>CCC</td>
<td>550</td>
<td>DL</td>
<td>800</td>
<td>DCCC</td>
</tr>
<tr>
<td>51</td>
<td>LI</td>
<td>301</td>
<td>CCCI</td>
<td>551</td>
<td>DLI</td>
<td>801</td>
<td>DCCCI</td>
</tr>
<tr>
<td>52</td>
<td>LII</td>
<td>302</td>
<td>CCCII</td>
<td>552</td>
<td>DLII</td>
<td>802</td>
<td>DCCCII</td>
</tr>
<tr>
<td>53</td>
<td>LIII</td>
<td>303</td>
<td>CCCIII</td>
<td>553</td>
<td>DLIII</td>
<td>803</td>
<td>DCCCIII</td>
</tr>
<tr>
<td>54</td>
<td>LIV</td>
<td>304</td>
<td>CCCIV</td>
<td>554</td>
<td>DLIV</td>
<td>804</td>
<td>DCCCIV</td>
</tr>
<tr>
<td>55</td>
<td>LV</td>
<td>305</td>
<td>CCCV</td>
<td>555</td>
<td>DLV</td>
<td>805</td>
<td>DCCCV</td>
</tr>
<tr>
<td>56</td>
<td>LVI</td>
<td>306</td>
<td>CCCVI</td>
<td>556</td>
<td>DLVI</td>
<td>806</td>
<td>DCCCVI</td>
</tr>
<tr>
<td>57</td>
<td>LVII</td>
<td>307</td>
<td>CCCVII</td>
<td>557</td>
<td>DLVII</td>
<td>807</td>
<td>DCCCVII</td>
</tr>
<tr>
<td>58</td>
<td>LVIII</td>
<td>308</td>
<td>CCCVIII</td>
<td>558</td>
<td>DLVIII</td>
<td>808</td>
<td>DCCCVIII</td>
</tr>
<tr>
<td>59</td>
<td>LIX</td>
<td>309</td>
<td>CCCIX</td>
<td>559</td>
<td>DLIX</td>
<td>809</td>
<td>DCCCIX</td>
</tr>
<tr>
<td>60</td>
<td>LX</td>
<td>310</td>
<td>CCCX</td>
<td>560</td>
<td>DLX</td>
<td>810</td>
<td>DCCCX</td>
</tr>
<tr>
<td>61</td>
<td>LXI</td>
<td>311</td>
<td>CCCXI</td>
<td>561</td>
<td>DLXI</td>
<td>811</td>
<td>DCCCXI</td>
</tr>
<tr>
<td>62</td>
<td>LXII</td>
<td>312</td>
<td>CCCXII</td>
<td>562</td>
<td>DLXII</td>
<td>812</td>
<td>DCCCXII</td>
</tr>
<tr>
<td>63</td>
<td>LXIII</td>
<td>313</td>
<td>CCCXIII</td>
<td>563</td>
<td>DLXIII</td>
<td>813</td>
<td>DCCCXIII</td>
</tr>
<tr>
<td>64</td>
<td>LXIV</td>
<td>314</td>
<td>CCCXIV</td>
<td>564</td>
<td>DLXIV</td>
<td>814</td>
<td>DCCCXIV</td>
</tr>
<tr>
<td>65</td>
<td>LXV</td>
<td>315</td>
<td>CCCXV</td>
<td>565</td>
<td>DLXV</td>
<td>815</td>
<td>DCCCXV</td>
</tr>
<tr>
<td>66</td>
<td>LXVI</td>
<td>316</td>
<td>CCCXVI</td>
<td>566</td>
<td>DLXVI</td>
<td>816</td>
<td>DCCCXVI</td>
</tr>
<tr>
<td>67</td>
<td>LXVII</td>
<td>317</td>
<td>CCCXVII</td>
<td>567</td>
<td>DLXVII</td>
<td>817</td>
<td>DCCCXVII</td>
</tr>
<tr>
<td>68</td>
<td>LXVIII</td>
<td>318</td>
<td>CCCXVIII</td>
<td>568</td>
<td>DLXVIII</td>
<td>818</td>
<td>DCCCXVIII</td>
</tr>
<tr>
<td>69</td>
<td>LXIX</td>
<td>319</td>
<td>CCCXIX</td>
<td>569</td>
<td>DLXIX</td>
<td>819</td>
<td>DCCCXIX</td>
</tr>
<tr>
<td>70</td>
<td>LXX</td>
<td>320</td>
<td>CCCXX</td>
<td>570</td>
<td>DLXX</td>
<td>820</td>
<td>DCCCXX</td>
</tr>
<tr>
<td>71</td>
<td>LXXI</td>
<td>321</td>
<td>CCCXXI</td>
<td>571</td>
<td>DLXXI</td>
<td>821</td>
<td>DCCCXXI</td>
</tr>
<tr>
<td>72</td>
<td>LXXII</td>
<td>322</td>
<td>CCCXXII</td>
<td>572</td>
<td>DLXXII</td>
<td>822</td>
<td>DCCCXXII</td>
</tr>
<tr>
<td>73</td>
<td>LXXIII</td>
<td>323</td>
<td>CCCXXIII</td>
<td>573</td>
<td>DLXXIII</td>
<td>823</td>
<td>DCCCXXIII</td>
</tr>
<tr>
<td>74</td>
<td>LXXIV</td>
<td>324</td>
<td>CCCXXIV</td>
<td>574</td>
<td>DLXXIV</td>
<td>824</td>
<td>DCCCXXIV</td>
</tr>
<tr>
<td>75</td>
<td>LXXV</td>
<td>325</td>
<td>CCCXXV</td>
<td>575</td>
<td>DLXXV</td>
<td>825</td>
<td>DCCCXXV</td>
</tr>
<tr>
<td>76</td>
<td>LXXVI</td>
<td>326</td>
<td>CCCXXVI</td>
<td>576</td>
<td>DLXXVI</td>
<td>826</td>
<td>DCCCXXVI</td>
</tr>
<tr>
<td>77</td>
<td>LXXVII</td>
<td>327</td>
<td>CCCXXVII</td>
<td>577</td>
<td>DLXXVII</td>
<td>827</td>
<td>DCCCXXVII</td>
</tr>
<tr>
<td>78</td>
<td>LXXVIII</td>
<td>328</td>
<td>CCCXXVIII</td>
<td>578</td>
<td>DLXXVIII</td>
<td>828</td>
<td>DCCCXXVIII</td>
</tr>
<tr>
<td>79</td>
<td>LXXIX</td>
<td>329</td>
<td>CCCXXIX</td>
<td>579</td>
<td>DLXXIX</td>
<td>829</td>
<td>DCCCXXIX</td>
</tr>
<tr>
<td>80</td>
<td>LXXX</td>
<td>330</td>
<td>CCCXXX</td>
<td>580</td>
<td>DLXXX</td>
<td>930</td>
<td>DCCCXXX</td>
</tr>
<tr>
<td>81</td>
<td>LXXXI</td>
<td>331</td>
<td>CCCXXXI</td>
<td>581</td>
<td>DLXXXI</td>
<td>831</td>
<td>DCCCXXXI</td>
</tr>
<tr>
<td>82</td>
<td>LXXXII</td>
<td>332</td>
<td>CCCXXXII</td>
<td>582</td>
<td>DLXXXII</td>
<td>832</td>
<td>DCCCXXXII</td>
</tr>
<tr>
<td>83</td>
<td>LXXXIII</td>
<td>333</td>
<td>CCCXXXIII</td>
<td>583</td>
<td>DLXXXIII</td>
<td>833</td>
<td>DCCCXXXIII</td>
</tr>
<tr>
<td>84</td>
<td>LXXXIV</td>
<td>334</td>
<td>CCCXXXIV</td>
<td>584</td>
<td>DLXXXIV</td>
<td>834</td>
<td>DCCCXXXIV</td>
</tr>
<tr>
<td>85</td>
<td>LXXXV</td>
<td>335</td>
<td>CCCXXXV</td>
<td>585</td>
<td>DLXXXV</td>
<td>835</td>
<td>DCCCXXXV</td>
</tr>
<tr>
<td>86</td>
<td>LXXXVI</td>
<td>336</td>
<td>CCCXXXVI</td>
<td>586</td>
<td>DLXXXVI</td>
<td>836</td>
<td>DCCCXXXVI</td>
</tr>
<tr>
<td>87</td>
<td>LXXXVII</td>
<td>337</td>
<td>CCCXXXVII</td>
<td>587</td>
<td>DLXXXVII</td>
<td>837</td>
<td>DCCCXXXVII</td>
</tr>
<tr>
<td>88</td>
<td>LXXXVIII</td>
<td>338</td>
<td>CCCXXXVIII</td>
<td>588</td>
<td>DLXXXVIII</td>
<td>838</td>
<td>DCCCXXXVIII</td>
</tr>
<tr>
<td>89</td>
<td>LXXXIX</td>
<td>339</td>
<td>CCCXXXIX</td>
<td>589</td>
<td>DLXXXIX</td>
<td>839</td>
<td>DCCCXXXIX</td>
</tr>
<tr>
<td>90</td>
<td>XC</td>
<td>340</td>
<td>CCCXL</td>
<td>590</td>
<td>DXC</td>
<td>840</td>
<td>DCCCXL</td>
</tr>
<tr>
<td>91</td>
<td>XCI</td>
<td>341</td>
<td>CCCXLI</td>
<td>591</td>
<td>DXCI</td>
<td>841</td>
<td>DCCCXLI</td>
</tr>
<tr>
<td>92</td>
<td>XCII</td>
<td>342</td>
<td>CCCXLII</td>
<td>592</td>
<td>DXCII</td>
<td>842</td>
<td>DCCCXLII</td>
</tr>
<tr>
<td>93</td>
<td>XCIII</td>
<td>343</td>
<td>CCCXLIII</td>
<td>593</td>
<td>DXCIII</td>
<td>843</td>
<td>DCCCXLIII</td>
</tr>
<tr>
<td>94</td>
<td>XCIV</td>
<td>344</td>
<td>CCCXLIV</td>
<td>594</td>
<td>DXCIV</td>
<td>844</td>
<td>DCCCXLIV</td>
</tr>
<tr>
<td>95</td>
<td>XCV</td>
<td>345</td>
<td>CCCXLV</td>
<td>595</td>
<td>DXCV</td>
<td>845</td>
<td>DCCCXLV</td>
</tr>
<tr>
<td>96</td>
<td>XCVI</td>
<td>346</td>
<td>CCCXLVI</td>
<td>596</td>
<td>DXCVI</td>
<td>846</td>
<td>DCCCXLVI</td>
</tr>
<tr>
<td>97</td>
<td>XCVII</td>
<td>347</td>
<td>CCCXLVII</td>
<td>597</td>
<td>DXCVII</td>
<td>847</td>
<td>DCCCXLVII</td>
</tr>
<tr>
<td>98</td>
<td>XCVIII</td>
<td>348</td>
<td>CCCXLVIII</td>
<td>598</td>
<td>DXCVIII</td>
<td>848</td>
<td>DCCCXLVIII</td>
</tr>
<tr>
<td>99</td>
<td>XCIX</td>
<td>349</td>
<td>CCCXLIX</td>
<td>599</td>
<td>DXCIX</td>
<td>849</td>
<td>DCCCXLIX</td>
</tr>
<tr>
<td>100</td>
<td>C</td>
<td>350</td>
<td>CCCL</td>
<td>600</td>
<td>DC</td>
<td>850</td>
<td>DCCCL</td>
</tr>
<tr>
<td>101</td>
<td>CI</td>
<td>351</td>
<td>CCCLI</td>
<td>601</td>
<td>DCI</td>
<td>851</td>
<td>DCCCLI</td>
</tr>
<tr>
<td>102</td>
<td>CII</td>
<td>352</td>
<td>CCCLII</td>
<td>602</td>
<td>DCII</td>
<td>852</td>
<td>DCCCLII</td>
</tr>
<tr>
<td>103</td>
<td>CIII</td>
<td>353</td>
<td>CCCLIII</td>
<td>603</td>
<td>DCIII</td>
<td>853</td>
<td>DCCCLIII</td>
</tr>
<tr>
<td>104</td>
<td>CIV</td>
<td>354</td>
<td>CCCLIV</td>
<td>604</td>
<td>DCIV</td>
<td>854</td>
<td>DCCCLIV</td>
</tr>
<tr>
<td>105</td>
<td>CV</td>
<td>355</td>
<td>CCCLV</td>
<td>605</td>
<td>DCV</td>
<td>855</td>
<td>DCCCLV</td>
</tr>
<tr>
<td>106</td>
<td>CVI</td>
<td>356</td>
<td>CCCLVI</td>
<td>606</td>
<td>DCVI</td>
<td>856</td>
<td>DCCCLVI</td>
</tr>
<tr>
<td>107</td>
<td>CVII</td>
<td>357</td>
<td>CCCLVII</td>
<td>607</td>
<td>DCVII</td>
<td>857</td>
<td>DCCCLVII</td>
</tr>
<tr>
<td>108</td>
<td>CVIII</td>
<td>358</td>
<td>CCCLVIII</td>
<td>608</td>
<td>DCVIII</td>
<td>858</td>
<td>DCCCLVIII</td>
</tr>
<tr>
<td>109</td>
<td>CIX</td>
<td>359</td>
<td>CCCLIX</td>
<td>609</td>
<td>DCIX</td>
<td>859</td>
<td>DCCCLIX</td>
</tr>
<tr>
<td>110</td>
<td>CX</td>
<td>360</td>
<td>CCCLX</td>
<td>610</td>
<td>DCX</td>
<td>860</td>
<td>DCCCLX</td>
</tr>
<tr>
<td>111</td>
<td>CXI</td>
<td>361</td>
<td>CCCLXI</td>
<td>611</td>
<td>DCXI</td>
<td>861</td>
<td>DCCCLXI</td>
</tr>
<tr>
<td>112</td>
<td>CXII</td>
<td>362</td>
<td>CCCLXII</td>
<td>612</td>
<td>DCXII</td>
<td>862</td>
<td>DCCCLXII</td>
</tr>
<tr>
<td>113</td>
<td>CXIII</td>
<td>363</td>
<td>CCCLXIII</td>
<td>613</td>
<td>DCXIII</td>
<td>863</td>
<td>DCCCLXIII</td>
</tr>
<tr>
<td>114</td>
<td>CXIV</td>
<td>364</td>
<td>CCCLXIV</td>
<td>614</td>
<td>DCXIV</td>
<td>864</td>
<td>DCCCLXIV</td>
</tr>
<tr>
<td>115</td>
<td>CXV</td>
<td>365</td>
<td>CCCLXV</td>
<td>615</td>
<td>DCXV</td>
<td>865</td>
<td>DCCCLXV</td>
</tr>
<tr>
<td>116</td>
<td>CXVI</td>
<td>366</td>
<td>CCCLXVI</td>
<td>616</td>
<td>DCXVI</td>
<td>866</td>
<td>DCCCLXVI</td>
</tr>
<tr>
<td>117</td>
<td>CXVII</td>
<td>367</td>
<td>CCCLXVII</td>
<td>617</td>
<td>DCXVII</td>
<td>867</td>
<td>DCCCLXVII</td>
</tr>
<tr>
<td>118</td>
<td>CXVIII</td>
<td>368</td>
<td>CCCLXVIII</td>
<td>618</td>
<td>DCXVIII</td>
<td>868</td>
<td>DCCCLXVIII</td>
</tr>
<tr>
<td>119</td>
<td>CXIX</td>
<td>369</td>
<td>CCCLXIX</td>
<td>619</td>
<td>DCXIX</td>
<td>869</td>
<td>DCCCLXIX</td>
</tr>
<tr>
<td>120</td>
<td>CXX</td>
<td>370</td>
<td>CCCLXX</td>
<td>620</td>
<td>DCXX</td>
<td>870</td>
<td>DCCCLXX</td>
</tr>
<tr>
<td>121</td>
<td>CXXI</td>
<td>371</td>
<td>CCCLXXI</td>
<td>621</td>
<td>DCXXI</td>
<td>871</td>
<td>DCCCLXXI</td>
</tr>
<tr>
<td>122</td>
<td>CXXII</td>
<td>372</td>
<td>CCCLXXII</td>
<td>622</td>
<td>DCXXII</td>
<td>872</td>
<td>DCCCLXXII</td>
</tr>
<tr>
<td>123</td>
<td>CXXIII</td>
<td>373</td>
<td>CCCLXXIII</td>
<td>623</td>
<td>DCXXIII</td>
<td>873</td>
<td>DCCCLXXIII</td>
</tr>
<tr>
<td>124</td>
<td>CXXIV</td>
<td>374</td>
<td>CCCLXXIV</td>
<td>624</td>
<td>DCXXIV</td>
<td>874</td>
<td>DCCCLXXIV</td>
</tr>
<tr>
<td>125</td>
<td>CXXV</td>
<td>375</td>
<td>CCCLXXV</td>
<td>625</td>
<td>DCXXV</td>
<td>875</td>
<td>DCCCLXXV</td>
</tr>
<tr>
<td>126</td>
<td>CXXVI</td>
<td>376</td>
<td>CCCLXXVI</td>
<td>626</td>
<td>DCXXVI</td>
<td>876</td>
<td>DCCCLXXVI</td>
</tr>
<tr>
<td>127</td>
<td>CXXVII</td>
<td>377</td>
<td>CCCLXXVII</td>
<td>627</td>
<td>DCXXVII</td>
<td>877</td>
<td>DCCCLXXVII</td>
</tr>
<tr>
<td>128</td>
<td>CXXVIII</td>
<td>378</td>
<td>CCCLXXVIII</td>
<td>628</td>
<td>DCXXVIII</td>
<td>878</td>
<td>DCCCLXXVIII</td>
</tr>
<tr>
<td>129</td>
<td>CXXIX</td>
<td>379</td>
<td>CCCLXXIX</td>
<td>629</td>
<td>DCXXIX</td>
<td>879</td>
<td>DCCCLXXIX</td>
</tr>
<tr>
<td>130</td>
<td>CXXX</td>
<td>380</td>
<td>CCCLXXX</td>
<td>630</td>
<td>DCXXX</td>
<td>880</td>
<td>DCCCLXXX</td>
</tr>
<tr>
<td>131</td>
<td>CXXXI</td>
<td>381</td>
<td>CCCLXXXI</td>
<td>631</td>
<td>DCXXXI</td>
<td>881</td>
<td>DCCCLXXXI</td>
</tr>
<tr>
<td>132</td>
<td>CXXXII</td>
<td>382</td>
<td>CCCLXXXII</td>
<td>632</td>
<td>DCXXXII</td>
<td>882</td>
<td>DCCCLXXXII</td>
</tr>
<tr>
<td>133</td>
<td>CXXXIII</td>
<td>383</td>
<td>CCCLXXXIII</td>
<td>633</td>
<td>DCXXXIII</td>
<td>883</td>
<td>DCCCLXXXIII</td>
</tr>
<tr>
<td>134</td>
<td>CXXXIV</td>
<td>384</td>
<td>CCCLXXXIV</td>
<td>634</td>
<td>DCXXXIV</td>
<td>884</td>
<td>DCCCLXXXIV</td>
</tr>
<tr>
<td>135</td>
<td>CXXXV</td>
<td>385</td>
<td>CCCLXXXV</td>
<td>635</td>
<td>DCXXXV</td>
<td>885</td>
<td>DCCCLXXXV</td>
</tr>
<tr>
<td>136</td>
<td>CXXXVI</td>
<td>386</td>
<td>CCCLXXXVI</td>
<td>636</td>
<td>DCXXXVI</td>
<td>886</td>
<td>DCCCLXXXVI</td>
</tr>
<tr>
<td>137</td>
<td>CXXXVII</td>
<td>387</td>
<td>CCCLXXXVII</td>
<td>637</td>
<td>DCXXXVII</td>
<td>887</td>
<td>DCCCLXXXVII</td>
</tr>
<tr>
<td>138</td>
<td>CXXXVIII</td>
<td>388</td>
<td>CCCLXXXVIII</td>
<td>638</td>
<td>DCXXXVIII</td>
<td>888</td>
<td>DCCCLXXXVIII</td>
</tr>
<tr>
<td>139</td>
<td>CXXXIX</td>
<td>389</td>
<td>CCCLXXXIX</td>
<td>639</td>
<td>DCXXXIX</td>
<td>889</td>
<td>DCCCLXXXIX</td>
</tr>
<tr>
<td>140</td>
<td>CXL</td>
<td>390</td>
<td>CCCXC</td>
<td>640</td>
<td>DCXL</td>
<td>890</td>
<td>DCCCXC</td>
</tr>
<tr>
<td>141</td>
<td>CXLI</td>
<td>391</td>
<td>CCCXCI</td>
<td>641</td>
<td>DCXLI</td>
<td>891</td>
<td>DCCCXCI</td>
</tr>
<tr>
<td>142</td>
<td>CXLII</td>
<td>392</td>
<td>CCCXCII</td>
<td>642</td>
<td>DCXLII</td>
<td>892</td>
<td>DCCCXCII</td>
</tr>
<tr>
<td>143</td>
<td>CXLIII</td>
<td>393</td>
<td>CCCXCIII</td>
<td>643</td>
<td>DCXLIII</td>
<td>893</td>
<td>DCCCXCIII</td>
</tr>
<tr>
<td>144</td>
<td>CXLIV</td>
<td>394</td>
<td>CCCXCIV</td>
<td>644</td>
<td>DCXLIV</td>
<td>894</td>
<td>DCCCXCIV</td>
</tr>
<tr>
<td>145</td>
<td>CXLV</td>
<td>395</td>
<td>CCCXCV</td>
<td>645</td>
<td>DCXLV</td>
<td>895</td>
<td>DCCCXCV</td>
</tr>
<tr>
<td>146</td>
<td>CXLVI</td>
<td>396</td>
<td>CCCXCVI</td>
<td>646</td>
<td>DCXLVI</td>
<td>896</td>
<td>DCCCXCVI</td>
</tr>
<tr>
<td>147</td>
<td>CXLVII</td>
<td>397</td>
<td>CCCXCVII</td>
<td>647</td>
<td>DCXLVII</td>
<td>897</td>
<td>DCCCXCVII</td>
</tr>
<tr>
<td>148</td>
<td>CXLVIII</td>
<td>398</td>
<td>CCCVCVIII</td>
<td>648</td>
<td>DCXLVIII</td>
<td>898</td>
<td>DCCCXCVIII</td>
</tr>
<tr>
<td>149</td>
<td>CXLIX</td>
<td>399</td>
<td>CCCXCIX</td>
<td>649</td>
<td>DCXLIX</td>
<td>899</td>
<td>DCCCXCIX</td>
</tr>
<tr>
<td>150</td>
<td>CL</td>
<td>400</td>
<td>CD</td>
<td>650</td>
<td>DCL</td>
<td>900</td>
<td>CM</td>
</tr>
<tr>
<td>151</td>
<td>CLI</td>
<td>401</td>
<td>CDI</td>
<td>651</td>
<td>DCLI</td>
<td>901</td>
<td>CMI</td>
</tr>
<tr>
<td>152</td>
<td>CLII</td>
<td>402</td>
<td>CDII</td>
<td>652</td>
<td>DCLII</td>
<td>902</td>
<td>CMII</td>
</tr>
<tr>
<td>153</td>
<td>CLIII</td>
<td>403</td>
<td>CDIII</td>
<td>653</td>
<td>DCLIII</td>
<td>903</td>
<td>CMIII</td>
</tr>
<tr>
<td>154</td>
<td>CLIV</td>
<td>404</td>
<td>CDIV</td>
<td>654</td>
<td>DCLIV</td>
<td>904</td>
<td>CMIV</td>
</tr>
<tr>
<td>155</td>
<td>CLV</td>
<td>405</td>
<td>CDV</td>
<td>655</td>
<td>DCLV</td>
<td>905</td>
<td>CMV</td>
</tr>
<tr>
<td>156</td>
<td>CLVI</td>
<td>406</td>
<td>CDVI</td>
<td>656</td>
<td>DCLVI</td>
<td>906</td>
<td>CMVI</td>
</tr>
<tr>
<td>157</td>
<td>CLVII</td>
<td>407</td>
<td>CDVII</td>
<td>657</td>
<td>DCLVII</td>
<td>907</td>
<td>CMVII</td>
</tr>
<tr>
<td>158</td>
<td>CLVIII</td>
<td>408</td>
<td>CDVIII</td>
<td>658</td>
<td>DCLVIII</td>
<td>908</td>
<td>CMVIII</td>
</tr>
<tr>
<td>159</td>
<td>CLIX</td>
<td>409</td>
<td>CDIX</td>
<td>659</td>
<td>DCLIX</td>
<td>909</td>
<td>CMIX</td>
</tr>
<tr>
<td>160</td>
<td>CLX</td>
<td>410</td>
<td>CDX</td>
<td>660</td>
<td>DCLX</td>
<td>910</td>
<td>CMX</td>
</tr>
<tr>
<td>161</td>
<td>CLXI</td>
<td>411</td>
<td>CDXI</td>
<td>661</td>
<td>DCLXI</td>
<td>911</td>
<td>CMXI</td>
</tr>
<tr>
<td>162</td>
<td>CLXII</td>
<td>412</td>
<td>CDXII</td>
<td>662</td>
<td>DCLXII</td>
<td>912</td>
<td>CMXII</td>
</tr>
<tr>
<td>163</td>
<td>CLXIII</td>
<td>413</td>
<td>CDXIII</td>
<td>663</td>
<td>DCLXIII</td>
<td>913</td>
<td>CMXIII</td>
</tr>
<tr>
<td>164</td>
<td>CLXIV</td>
<td>414</td>
<td>CDXIV</td>
<td>664</td>
<td>DCLXIV</td>
<td>914</td>
<td>CMXIV</td>
</tr>
<tr>
<td>165</td>
<td>CLXV</td>
<td>415</td>
<td>CDXV</td>
<td>665</td>
<td>DCLXV</td>
<td>915</td>
<td>CMXV</td>
</tr>
<tr>
<td>166</td>
<td>CLXVI</td>
<td>416</td>
<td>CDXVI</td>
<td>666</td>
<td>DCLXVI</td>
<td>916</td>
<td>CMXVI</td>
</tr>
<tr>
<td>167</td>
<td>CLXVII</td>
<td>417</td>
<td>CDXVII</td>
<td>667</td>
<td>DCLXVII</td>
<td>917</td>
<td>CMXVII</td>
</tr>
<tr>
<td>168</td>
<td>CLXVIII</td>
<td>418</td>
<td>CDXVIII</td>
<td>668</td>
<td>DCLXVIII</td>
<td>918</td>
<td>CMXVIII</td>
</tr>
<tr>
<td>169</td>
<td>CLXIX</td>
<td>419</td>
<td>CDXIX</td>
<td>669</td>
<td>DCLXIX</td>
<td>919</td>
<td>CMXIX</td>
</tr>
<tr>
<td>170</td>
<td>CLXX</td>
<td>420</td>
<td>CDXX</td>
<td>670</td>
<td>DCLXX</td>
<td>920</td>
<td>CMXX</td>
</tr>
<tr>
<td>171</td>
<td>CLXXI</td>
<td>421</td>
<td>CDXXI</td>
<td>671</td>
<td>DCLXXI</td>
<td>921</td>
<td>CMXXI</td>
</tr>
<tr>
<td>172</td>
<td>CLXXII</td>
<td>422</td>
<td>CDXXII</td>
<td>672</td>
<td>DCLXXII</td>
<td>922</td>
<td>CMXXII</td>
</tr>
<tr>
<td>173</td>
<td>CLXXIII</td>
<td>423</td>
<td>CDXXIII</td>
<td>673</td>
<td>DCLXXIII</td>
<td>923</td>
<td>CMXXIII</td>
</tr>
<tr>
<td>174</td>
<td>CLXXIV</td>
<td>424</td>
<td>CDXXIV</td>
<td>674</td>
<td>DCLXXIV</td>
<td>924</td>
<td>CMXXIV</td>
</tr>
<tr>
<td>175</td>
<td>CLXXV</td>
<td>425</td>
<td>CDXXV</td>
<td>675</td>
<td>DCLXXV</td>
<td>925</td>
<td>CMXXV</td>
</tr>
<tr>
<td>176</td>
<td>CLXXVI</td>
<td>426</td>
<td>CDXXVI</td>
<td>676</td>
<td>DCLXXVI</td>
<td>926</td>
<td>CMXXVI</td>
</tr>
<tr>
<td>177</td>
<td>CLXXVII</td>
<td>427</td>
<td>CDXXVII</td>
<td>677</td>
<td>DCLXXVII</td>
<td>927</td>
<td>CMXXVII</td>
</tr>
<tr>
<td>178</td>
<td>CLXXVIII</td>
<td>428</td>
<td>CDXXVIII</td>
<td>678</td>
<td>DCLXXVIII</td>
<td>928</td>
<td>CMXXVIII</td>
</tr>
<tr>
<td>179</td>
<td>CLXXIX</td>
<td>429</td>
<td>CDXXIX</td>
<td>679</td>
<td>DCLXXIX</td>
<td>929</td>
<td>CMXXIX</td>
</tr>
<tr>
<td>180</td>
<td>CLXXX</td>
<td>430</td>
<td>CDXXX</td>
<td>680</td>
<td>DCLXXX</td>
<td>930</td>
<td>CMXXX</td>
</tr>
<tr>
<td>181</td>
<td>CLXXXI</td>
<td>431</td>
<td>CDXXXI</td>
<td>681</td>
<td>DCLXXXI</td>
<td>931</td>
<td>CMXXXI</td>
</tr>
<tr>
<td>182</td>
<td>CLXXXII</td>
<td>432</td>
<td>CDXXXII</td>
<td>682</td>
<td>DCLXXXII</td>
<td>932</td>
<td>CMXXXII</td>
</tr>
<tr>
<td>183</td>
<td>CLXXXIII</td>
<td>433</td>
<td>CDXXXIII</td>
<td>683</td>
<td>DCLXXXIII</td>
<td>933</td>
<td>CMXXXIII</td>
</tr>
<tr>
<td>184</td>
<td>CLXXXIV</td>
<td>434</td>
<td>CDXXXIV</td>
<td>684</td>
<td>DCLXXXIV</td>
<td>934</td>
<td>CMXXXIV</td>
</tr>
<tr>
<td>185</td>
<td>CLXXXV</td>
<td>435</td>
<td>CDXXXV</td>
<td>685</td>
<td>DCLXXXV</td>
<td>935</td>
<td>CMXXXV</td>
</tr>
<tr>
<td>186</td>
<td>CLXXXVI</td>
<td>436</td>
<td>CDXXXVI</td>
<td>686</td>
<td>DCLXXXVI</td>
<td>936</td>
<td>CMXXXVI</td>
</tr>
<tr>
<td>187</td>
<td>CLXXXVII</td>
<td>437</td>
<td>CDXXXVII</td>
<td>687</td>
<td>DCLXXXVII</td>
<td>937</td>
<td>CMXXXVII</td>
</tr>
<tr>
<td>188</td>
<td>CLXXXVIII</td>
<td>438</td>
<td>CDXXXVIII</td>
<td>688</td>
<td>DCLXXXVIII</td>
<td>938</td>
<td>CMXXXVIII</td>
</tr>
<tr>
<td>189</td>
<td>CLXXXIX</td>
<td>439</td>
<td>CDXXXIX</td>
<td>689</td>
<td>DCLXXXIX</td>
<td>939</td>
<td>CMXXXIX</td>
</tr>
<tr>
<td>190</td>
<td>CXC</td>
<td>440</td>
<td>CDXL</td>
<td>690</td>
<td>DCXC</td>
<td>940</td>
<td>CMXL</td>
</tr>
<tr>
<td>191</td>
<td>CXCI</td>
<td>441</td>
<td>CDXLI</td>
<td>691</td>
<td>DCXCI</td>
<td>941</td>
<td>CMXLI</td>
</tr>
<tr>
<td>192</td>
<td>CXCII</td>
<td>442</td>
<td>CDXLII</td>
<td>692</td>
<td>DCXCII</td>
<td>942</td>
<td>CMXLII</td>
</tr>
<tr>
<td>193</td>
<td>CXCIII</td>
<td>443</td>
<td>CDXLIII</td>
<td>693</td>
<td>DCXCIII</td>
<td>943</td>
<td>CMXLIII</td>
</tr>
<tr>
<td>194</td>
<td>CXCIV</td>
<td>444</td>
<td>CDXLIV</td>
<td>694</td>
<td>DCXCIV</td>
<td>944</td>
<td>CMXLIV</td>
</tr>
<tr>
<td>195</td>
<td>CXCV</td>
<td>445</td>
<td>CDXLV</td>
<td>695</td>
<td>DCXCV</td>
<td>945</td>
<td>CMXLV</td>
</tr>
<tr>
<td>196</td>
<td>CXCVI</td>
<td>446</td>
<td>CDXLVI</td>
<td>696</td>
<td>DCXCVI</td>
<td>946</td>
<td>CMXLVI</td>
</tr>
<tr>
<td>197</td>
<td>CXCVII</td>
<td>447</td>
<td>CDXLVII</td>
<td>697</td>
<td>DCXCVII</td>
<td>947</td>
<td>CMXLVII</td>
</tr>
<tr>
<td>198</td>
<td>CXCVIII</td>
<td>448</td>
<td>CDXLVIII</td>
<td>698</td>
<td>DCXCVIII</td>
<td>948</td>
<td>CMXLVIII</td>
</tr>
<tr>
<td>199</td>
<td>CXCIX</td>
<td>449</td>
<td>CDXLIX</td>
<td>699</td>
<td>DCXCIX</td>
<td>949</td>
<td>CMXLIX</td>
</tr>
<tr>
<td>200</td>
<td>CC</td>
<td>450</td>
<td>CDL</td>
<td>700</td>
<td>DCC</td>
<td>950</td>
<td>CML</td>
</tr>
<tr>
<td>201</td>
<td>CCI</td>
<td>451</td>
<td>CDLI</td>
<td>701</td>
<td>DCCI</td>
<td>951</td>
<td>CMLI</td>
</tr>
<tr>
<td>202</td>
<td>CCII</td>
<td>452</td>
<td>CDLII</td>
<td>702</td>
<td>DCCII</td>
<td>952</td>
<td>CMLII</td>
</tr>
<tr>
<td>203</td>
<td>CCIII</td>
<td>453</td>
<td>CDLIII</td>
<td>703</td>
<td>DCCIII</td>
<td>953</td>
<td>CMLIII</td>
</tr>
<tr>
<td>204</td>
<td>CCIV</td>
<td>454</td>
<td>CDLIV</td>
<td>704</td>
<td>DCCIV</td>
<td>954</td>
<td>CMLIV</td>
</tr>
<tr>
<td>205</td>
<td>CCV</td>
<td>455</td>
<td>CDLV</td>
<td>705</td>
<td>DCCV</td>
<td>955</td>
<td>CMLV</td>
</tr>
<tr>
<td>206</td>
<td>CCVI</td>
<td>456</td>
<td>CDLVI</td>
<td>706</td>
<td>DCCVI</td>
<td>956</td>
<td>CMLVI</td>
</tr>
<tr>
<td>207</td>
<td>CCVII</td>
<td>457</td>
<td>CDLVII</td>
<td>707</td>
<td>DCCVII</td>
<td>957</td>
<td>CMLVII</td>
</tr>
<tr>
<td>208</td>
<td>CCVIII</td>
<td>458</td>
<td>CDLVIII</td>
<td>708</td>
<td>DCCVIII</td>
<td>958</td>
<td>CMLVIII</td>
</tr>
<tr>
<td>209</td>
<td>CCIX</td>
<td>459</td>
<td>CDLIX</td>
<td>709</td>
<td>DCCIX</td>
<td>959</td>
<td>CMLIX</td>
</tr>
<tr>
<td>210</td>
<td>CCX</td>
<td>460</td>
<td>CDLX</td>
<td>710</td>
<td>DCCX</td>
<td>960</td>
<td>CMLX</td>
</tr>
<tr>
<td>211</td>
<td>CCXI</td>
<td>461</td>
<td>CDLXI</td>
<td>711</td>
<td>DCCXI</td>
<td>961</td>
<td>CMLXI</td>
</tr>
<tr>
<td>212</td>
<td>CCXII</td>
<td>462</td>
<td>CDLXII</td>
<td>712</td>
<td>DCCXII</td>
<td>962</td>
<td>CMLXII</td>
</tr>
<tr>
<td>213</td>
<td>CCXIII</td>
<td>463</td>
<td>CDLXIII</td>
<td>713</td>
<td>DCCXIII</td>
<td>963</td>
<td>CMLXIII</td>
</tr>
<tr>
<td>214</td>
<td>CCXIV</td>
<td>464</td>
<td>CDLXIV</td>
<td>714</td>
<td>DCCXIV</td>
<td>964</td>
<td>CMLXIV</td>
</tr>
<tr>
<td>215</td>
<td>CCXV</td>
<td>465</td>
<td>CDLXV</td>
<td>715</td>
<td>DCCXV</td>
<td>965</td>
<td>CMLXV</td>
</tr>
<tr>
<td>216</td>
<td>CCXVI</td>
<td>466</td>
<td>CDLXVI</td>
<td>716</td>
<td>DCCXVI</td>
<td>966</td>
<td>CMLXVI</td>
</tr>
<tr>
<td>217</td>
<td>CCXVII</td>
<td>467</td>
<td>CDLXVII</td>
<td>717</td>
<td>DCCXVII</td>
<td>967</td>
<td>CMLXVII</td>
</tr>
<tr>
<td>218</td>
<td>CCXVIII</td>
<td>468</td>
<td>CDLXVIII</td>
<td>718</td>
<td>DCCXVIII</td>
<td>968</td>
<td>CMLXVIII</td>
</tr>
<tr>
<td>219</td>
<td>CCXIX</td>
<td>469</td>
<td>CDLXIX</td>
<td>719</td>
<td>DCCXIX</td>
<td>969</td>
<td>CMLXIX</td>
</tr>
<tr>
<td>220</td>
<td>CCXX</td>
<td>470</td>
<td>CDLXX</td>
<td>720</td>
<td>DCCXX</td>
<td>970</td>
<td>CMLXX</td>
</tr>
<tr>
<td>221</td>
<td>CCXXI</td>
<td>471</td>
<td>CDLXXI</td>
<td>721</td>
<td>DCCXXI</td>
<td>971</td>
<td>CMLXXI</td>
</tr>
<tr>
<td>222</td>
<td>CCXXII</td>
<td>472</td>
<td>CDLXXII</td>
<td>722</td>
<td>DCCXXII</td>
<td>972</td>
<td>CMLXXII</td>
</tr>
<tr>
<td>223</td>
<td>CCXXIII</td>
<td>473</td>
<td>CDLXXIII</td>
<td>723</td>
<td>DCCXXIII</td>
<td>973</td>
<td>CMLXXIII</td>
</tr>
<tr>
<td>224</td>
<td>CCXXIV</td>
<td>474</td>
<td>CDLXXIV</td>
<td>724</td>
<td>DCCXXIV</td>
<td>974</td>
<td>CMLXXIV</td>
</tr>
<tr>
<td>225</td>
<td>CCXXV</td>
<td>475</td>
<td>CDLXXV</td>
<td>725</td>
<td>DCCXXV</td>
<td>975</td>
<td>CMLXXV</td>
</tr>
<tr>
<td>226</td>
<td>CCXXVI</td>
<td>476</td>
<td>CDLXXVI</td>
<td>726</td>
<td>DCCXXVI</td>
<td>976</td>
<td>CMLXXVI</td>
</tr>
<tr>
<td>227</td>
<td>CCXXVII</td>
<td>477</td>
<td>CDLXXVII</td>
<td>727</td>
<td>DCCXXVII</td>
<td>977</td>
<td>CMLXXVII</td>
</tr>
<tr>
<td>228</td>
<td>CCXXVIII</td>
<td>478</td>
<td>CDLXXVIII</td>
<td>728</td>
<td>DCCXXVIII</td>
<td>978</td>
<td>CMLXXVIII</td>
</tr>
<tr>
<td>229</td>
<td>CCXXIX</td>
<td>479</td>
<td>CDLXXIX</td>
<td>729</td>
<td>DCCXXIX</td>
<td>979</td>
<td>CMLXXIX</td>
</tr>
<tr>
<td>230</td>
<td>CCXXX</td>
<td>480</td>
<td>CDLXXX</td>
<td>730</td>
<td>DCCXXX</td>
<td>980</td>
<td>CMLXXX</td>
</tr>
<tr>
<td>231</td>
<td>CCXXXI</td>
<td>481</td>
<td>CDLXXXI</td>
<td>731</td>
<td>DCCXXXI</td>
<td>981</td>
<td>CMLXXXI</td>
</tr>
<tr>
<td>232</td>
<td>CCXXXII</td>
<td>482</td>
<td>CDDLXXXII</td>
<td>732</td>
<td>DCCXXXII</td>
<td>982</td>
<td>CMLXXXII</td>
</tr>
<tr>
<td>233</td>
<td>CCXXXIII</td>
<td>483</td>
<td>CDLXXXIII</td>
<td>733</td>
<td>DCCXXXIII</td>
<td>983</td>
<td>CMLXXXIII</td>
</tr>
<tr>
<td>234</td>
<td>CCXXXIV</td>
<td>484</td>
<td>CDLXXXIV</td>
<td>734</td>
<td>DCCXXXIV</td>
<td>984</td>
<td>CMLXXXIV</td>
</tr>
<tr>
<td>235</td>
<td>CCXXXV</td>
<td>485</td>
<td>CDLXXXV</td>
<td>735</td>
<td>DCCXXXV</td>
<td>985</td>
<td>CMLXXXV</td>
</tr>
<tr>
<td>236</td>
<td>CCXXXVI</td>
<td>486</td>
<td>CDLXXXVI</td>
<td>736</td>
<td>DCCXXXVI</td>
<td>986</td>
<td>CMLXXXVI</td>
</tr>
<tr>
<td>237</td>
<td>CCXXXVII</td>
<td>487</td>
<td>CDLXXXVII</td>
<td>737</td>
<td>DCCXXXVII</td>
<td>987</td>
<td>CMLXXXVII</td>
</tr>
<tr>
<td>238</td>
<td>CCXXXVIII</td>
<td>488</td>
<td>CDLXXXVIII</td>
<td>738</td>
<td>DCCXXXVIII</td>
<td>988</td>
<td>CMLXXXVIII</td>
</tr>
<tr>
<td>239</td>
<td>CCXXXIX</td>
<td>489</td>
<td>CDLXXXIX</td>
<td>739</td>
<td>DCCXXXIX</td>
<td>989</td>
<td>CMLXXXIX</td>
</tr>
<tr>
<td>240</td>
<td>CCXL</td>
<td>490</td>
<td>CDXC</td>
<td>740</td>
<td>DCCXL</td>
<td>990</td>
<td>CMXC</td>
</tr>
<tr>
<td>241</td>
<td>CCXLI</td>
<td>491</td>
<td>CDXCI</td>
<td>741</td>
<td>DCCXLI</td>
<td>991</td>
<td>CMXCI</td>
</tr>
<tr>
<td>242</td>
<td>CCXLII</td>
<td>492</td>
<td>CDXCII</td>
<td>742</td>
<td>DCCXLII</td>
<td>992</td>
<td>CMXCII</td>
</tr>
<tr>
<td>243</td>
<td>CCXLIII</td>
<td>493</td>
<td>CDXCIII</td>
<td>743</td>
<td>DCCXLIII</td>
<td>993</td>
<td>CMXCIII</td>
</tr>
<tr>
<td>244</td>
<td>CCXLIV</td>
<td>494</td>
<td>CDXCIV</td>
<td>744</td>
<td>DCCXLIV</td>
<td>994</td>
<td>CMXCIV</td>
</tr>
<tr>
<td>245</td>
<td>CCXLV</td>
<td>495</td>
<td>CDXCV</td>
<td>745</td>
<td>DCCXLV</td>
<td>995</td>
<td>CMXCV</td>
</tr>
<tr>
<td>246</td>
<td>CCXLVI</td>
<td>496</td>
<td>CDXCVI</td>
<td>746</td>
<td>DCCXLVI</td>
<td>996</td>
<td>CMXCVI</td>
</tr>
<tr>
<td>247</td>
<td>CCXLVII</td>
<td>497</td>
<td>CDXCVII</td>
<td>747</td>
<td>DCCXLVII</td>
<td>997</td>
<td>CMXCVII</td>
</tr>
<tr>
<td>248</td>
<td>CCXLVIII</td>
<td>498</td>
<td>CDXCVIII</td>
<td>748</td>
<td>DCCXLVIII</td>
<td>998</td>
<td>CMXCVIII</td>
</tr>
<tr>
<td>249</td>
<td>CCXLIX</td>
<td>499</td>
<td>CDXCIX</td>
<td>749</td>
<td>DCCXLIX</td>
<td>999</td>
<td>CMXCIX</td>
</tr>
<tr>
<td>250</td>
<td>CCL</td>
<td>500</td>
<td>D</td>
<td>750</td>
<td>DCCL</td>
<td>1000</td>
<td>M</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Math</category>
      </categories>
      <tags>
        <tag>Roman Numerals</tag>
      </tags>
  </entry>
  <entry>
    <title>Finding the Hostname in Linux: A Guide to Common Methods</title>
    <url>/2024/06/05/finding-the-hostname-in-linux-a-guide-to-common-methods/</url>
    <content><![CDATA[<p>Finding the hostname in Linux can be done in a few different ways, depending on your specific needs and the Linux distribution you’re using. Here are a few common methods:</p>
<h3 id="1-Using-the-hostname-Command"><a href="#1-Using-the-hostname-Command" class="headerlink" title="1. Using the hostname Command"></a>1. Using the <code>hostname</code> Command</h3><p>The simplest way to find the hostname of your Linux system is to use the <code>hostname</code> command in your terminal. Simply open a terminal window and type:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><br>This command will display the hostname of your system.<br>For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hostname</span><br><span class="line">presto-node-10</span><br></pre></td></tr></table></figure></p>
<h3 id="2-Using-the-uname-Command"><a href="#2-Using-the-uname-Command" class="headerlink" title="2. Using the uname Command"></a>2. Using the <code>uname</code> Command</h3><p>While the <code>uname</code> command is primarily used to print system information, it can also be combined with other commands to display the hostname. However, note that <code>uname</code> by itself doesn’t directly give the hostname, but it can be used in conjunction with other commands to achieve similar results.<br>A more direct way to get the hostname is still to use the <code>hostname</code> command, but for completeness, here’s an example of how <code>uname</code> can be used with other commands to get system information that might indirectly help you find the hostname (though not directly):<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -n</span><br></pre></td></tr></table></figure><br>However, it’s worth noting that <code>uname -n</code> is essentially the same as <code>hostname</code> and will display the hostname of your system.<br>For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">uname</span> -n</span><br><span class="line">presto-node-10</span><br></pre></td></tr></table></figure></p>
<h3 id="3-Viewing-etc-hostname"><a href="#3-Viewing-etc-hostname" class="headerlink" title="3. Viewing /etc/hostname"></a>3. Viewing <code>/etc/hostname</code></h3><p>On many Linux distributions, the hostname is stored in the <code>/etc/hostname</code> file. You can view the contents of this file to find the hostname of your system. Open a terminal and type:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/hostname</span><br></pre></td></tr></table></figure><br>This command will display the contents of the <code>/etc/hostname</code> file, which should contain your system’s hostname.<br>For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/hostname</span><br><span class="line">presto-node-10</span><br></pre></td></tr></table></figure></p>
<h3 id="4-Using-the-hostnamectl-Command-Systemd"><a href="#4-Using-the-hostnamectl-Command-Systemd" class="headerlink" title="4. Using the hostnamectl Command (Systemd)"></a>4. Using the <code>hostnamectl</code> Command (Systemd)</h3><p>If your system uses systemd (which is the case for many modern Linux distributions), you can use the <code>hostnamectl</code> command to view and manage your system’s hostname. This command provides more information than just the hostname, including the static hostname, transient hostname, icon name, chassis type, and more.<br>To view the hostname using <code>hostnamectl</code>, open a terminal and type:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl</span><br></pre></td></tr></table></figure><br>Scroll through the output to find the “Static hostname” line, which will display your system’s hostname.<br>For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hostnamectl</span><br><span class="line"> Static hostname: presto-node-10</span><br><span class="line">       Icon name: computer-vm</span><br><span class="line">         Chassis: vm</span><br><span class="line">      Machine ID: cee0aoh4af3oh5u6om8reichailae3oh</span><br><span class="line">         Boot ID: ihahzoh8Peshieeuiedufier2dah2ahr</span><br><span class="line">  Virtualization: kvm</span><br><span class="line">Operating System: CentOS Linux 7 (Core)</span><br><span class="line">     CPE OS Name: cpe:/o:centos:centos:7</span><br><span class="line">          Kernel: Linux 3.10.0-1160.88.1.el7.x86_64</span><br><span class="line">    Architecture: x86-64</span><br></pre></td></tr></table></figure></p>
<h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Finding the hostname in Linux is a straightforward process that can be accomplished using a variety of commands. The <code>hostname</code> command is the most direct and widely used method, but <code>/etc/hostname</code> and <code>hostnamectl</code> are also useful options, depending on your specific needs and the Linux distribution you’re using.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>How to learn Redis effectively?</title>
    <url>/2024/07/25/how-to-learn-redis-effectively/</url>
    <content><![CDATA[<p>Redis, an open-source, high-performance in-memory data structure store, is renowned for its speed, versatility, and simplicity. It has gained immense popularity and is widely utilized for caching, distributed locks, session management, real-time analytics, and more. Whether you’re a developer looking to expand your skills or an IT professional aiming to optimize data handling, mastering Redis can significantly enhance your proficiency. Here’s a comprehensive guide on how to learn Redis effectively: <em>grasp the fundamentals, hands-on practice, explore advanced features, use case scenarios, build projects and stay updated.</em></p>
<h2 id="You-Need-To-Know"><a href="#You-Need-To-Know" class="headerlink" title="You Need To Know"></a>You Need To Know</h2><p>Redis should not be seen as a database(such as MySQL, MongoDB, Oracle, PostgreSQL, SQL Server, DB2, etc) replacement. A typical use case involves leveraging it as a data cache. By loading frequently accessed datasets into Redis, you can reduce the number of reads to your primary database, thereby enhancing application performance. This performance enhancement becomes notably apparent under significant loads—rather than in applications with just a hundred users. To observe the impact, simulate high request volumes (e.g., 3,000+ per second) using tools like JMeter or Gatling.</p>
<h2 id="Grasp-the-Fundamentals"><a href="#Grasp-the-Fundamentals" class="headerlink" title="Grasp the Fundamentals"></a>Grasp the Fundamentals</h2><p>Start with the fundamentals. Redis operates as an in-memory data store, meaning it stores data in RAM for lightning-fast access. It supports various data structures such as strings, lists, sets, sorted sets, hashes, and more. Each data structure has specific commands and functionalities tailored to different use cases such as caching, real-time analytics, and session management. Familiarize yourself with these data structures and their operations, as they form the core of Redis functionality. </p>
<h2 id="Hands-On-Practice"><a href="#Hands-On-Practice" class="headerlink" title="Hands-On Practice"></a>Hands-On Practice</h2><p>Theory is crucial, but hands-on practice is indispensable. Set up a Redis instance on your local machine or use a cloud-based Redis service to gain hands-on experience. Experiment with commands interactively using the Redis CLI (<code>redis-cli</code>) or explore Redis through a programming language client such as Python’s <code>redis-py</code>. Create and manipulate data structures, set and retrieve values, and observe how Redis handles various operations in real-time. Experiment with different data structures to understand their strengths and limitations.</p>
<h2 id="Explore-Advanced-Features"><a href="#Explore-Advanced-Features" class="headerlink" title="Explore Advanced Features"></a>Explore Advanced Features</h2><p>Once you’re comfortable with the basics, delve into Redis’s advanced features. These may include:</p>
<ul>
<li><strong>Pub/Sub Messaging:</strong> Redis supports Publish/Subscribe messaging, allowing different parts of your application to communicate asynchronously.</li>
<li><strong>Transactions:</strong> Learn how to group commands into atomic transactions in Redis to ensure data integrity and consistency.</li>
<li><strong>Persistence Options:</strong> Understand Redis persistence mechanisms such as snapshotting and append-only files (AOF) to ensure data durability.</li>
<li><strong>Lua Scripting:</strong> Redis allows you to execute Lua scripts atomically on the server, enabling complex operations that cannot be achieved with standard commands alone.</li>
</ul>
<h2 id="Use-Case-Scenarios"><a href="#Use-Case-Scenarios" class="headerlink" title="Use Case Scenarios"></a>Use Case Scenarios</h2><p>Redis is versatile and finds application in various domains such as e-commerce, gaming, and real-time analytics. Explore different use cases to understand how Redis can solve specific problems efficiently. Implementing Redis in practical scenarios reinforces your learning and demonstrates its capabilities first-hand. </p>
<p>To deepen your understanding, explore common use cases where Redis excels:</p>
<ul>
<li><strong>Caching:</strong> Implement caching strategies using Redis to speed up data retrieval and improve application performance.</li>
<li><strong>Real-time Analytics:</strong> Utilize Redis’s data structures like sorted sets for real-time leaderboard updates or counting unique items.</li>
<li><strong>Session Management:</strong> Store and manage user sessions securely and efficiently using Redis.</li>
<li><strong>Queues:</strong> Implement task queues using Redis lists to facilitate background job processing.</li>
</ul>
<h2 id="Build-Projects"><a href="#Build-Projects" class="headerlink" title="Build Projects"></a>Build Projects</h2><p>Apply your knowledge by building projects that leverage Redis. Whether it’s a simple caching layer for a web application or a complex real-time analytics system, hands-on projects will solidify your understanding and showcase your skills.</p>
<h2 id="Stay-Updated"><a href="#Stay-Updated" class="headerlink" title="Stay Updated"></a>Stay Updated</h2><p>Redis continuously evolves with each new release, introducing enhancements and new features. Stay updated on the latest developments and best practices by following Redis blogs, attending webinars, and participating in online conferences. Continuous learning ensures proficiency and adaptability in leveraging Redis effectively. </p>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><p><strong>Read the Documentation:</strong></p>
<p>Redis’s official documentation is comprehensive and regularly updated. Dive deep into the official Redis documentation to explore commands, advanced features, configuration options, and best practices. The documentation provides clear examples and explanations that can enhance your understanding significantly. Additionally, there are numerous online resources, tutorials, and blogs dedicated to Redis that can provide insights, tips, and real-world examples.</p>
<p><strong>Join the Community:</strong></p>
<p>Join the Redis community to expand your knowledge and stay updated with the latest trends. Engage with the Redis community through forums, discussion groups, and social media channels. Participate in discussions, ask questions, and share your knowledge. Communities like Redis’ official mailing list or forums like Stack Overflow can provide valuable support and guidance.</p>
<p><strong>Read Books and Articles:</strong></p>
<p>Supplement your learning with books and articles written by Redis experts. These resources provide in-depth insights, advanced tips, and real-world case studies that can deepen your understanding. Stay updated with industry trends and emerging practices through reputable publications.</p>
<p><strong>Enroll in Online Courses:</strong></p>
<p>Structured learning through online courses can accelerate your Redis proficiency. Platforms like Coursera, Udemy, and Pluralsight offer courses tailored for beginners to advanced users. These courses cover topics ranging from basic operations to advanced clustering and optimization techniques.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Learning Redis effectively involves a combination of understanding its core concepts, hands-on practice, exploration of advanced features, and practical application in projects. By following these strategies and maintaining a curious and explorative mindset, you’ll build a strong foundation in Redis and harness its power to enhance your applications effectively. </p>
<p>Whether you are a developer, IT professional, or data enthusiast, learning Redis will undoubtedly enhance your skill set and empower you to tackle complex data challenges with confidence. </p>
<p>Happy Redis learning!</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>How to count lines of code in IntelliJ IDEA?</title>
    <url>/2024/07/23/how-to-count-lines-of-code-in-intellij-idea/</url>
    <content><![CDATA[<p>There are several ways we can count lines of code in IntelliJ IDEA. One of the most common methods is to use the Statistic plugin.<br>In this article, I will show you how to count lines of code using the Statistic plugin.<br>First, we need to install it from Intellij IDEA: </p>
<ol>
<li>Open IntelliJ IDEA editor; </li>
<li>Select File &gt; Settings, Open Settings Popup Window; </li>
<li>Select Plugins, then type “Statistic” to search plugins; </li>
<li>Click on the Statistic install button; </li>
<li>Click on the Apply button and close the Settings Popup Window; </li>
<li>You will see the Statistic toolbar via tabs in bottom left of project. </li>
</ol>
<p><img src="/image/2024/07/2024072301.png" alt="image.png"></p>
<p><img src="/image/2024/07/2024072302.png" alt="image.png"></p>
<p><img src="/image/2024/07/2024072303.png" alt="image.png"></p>
<p>Once the installation is complete, you can see the Refresh option. Click on this option and it will reload and refresh all the files in the project and calculate the statistics. As shown below, you can see the number of lines of code for each language in the current project and the total number of lines is on the last line.</p>
<p><img src="/image/2024/07/2024072304.png" alt="image.png"></p>
<p>For more information of Statistic plugin, please refer to the following site (<a href="https://plugins.jetbrains.com/plugin/4509-statistic">https://plugins.jetbrains.com/plugin/4509-statistic</a>)</p>
<p>(END)</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>IntelliJ IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>Flushing Cache Data in Redis: A Step-by-Step Guide</title>
    <url>/2024/07/27/flushing-cache-data-in-redis-a-step-by-step-guide/</url>
    <content><![CDATA[<p>Caching mechanisms are vital for optimizing application performance by storing frequently accessed data in-memory. Redis, as a robust key-value store, offers powerful caching capabilities. Occasionally, you might need to clear or flush all cached data from Redis to ensure consistency or during maintenance tasks. Here’s how you can do it effectively: </p>
<h2 id="Understanding-Redis-Flushing"><a href="#Understanding-Redis-Flushing" class="headerlink" title="Understanding Redis Flushing"></a>Understanding Redis Flushing</h2><p>Flushing in Redis refers to the action of removing all data stored in the current database. This operation is irreversible and affects all keys in the database, not just cached data. It’s essential to exercise caution when performing this action as it will delete all data.</p>
<h2 id="Method-1-Using-Redis-CLI"><a href="#Method-1-Using-Redis-CLI" class="headerlink" title="Method 1: Using Redis CLI"></a>Method 1: Using Redis CLI</h2><ol>
<li><strong>Connect to Redis</strong>: Start by connecting to your Redis server using the Redis CLI:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Select Database (Optional)</strong>: If you are working with multiple databases, select the appropriate one (default is 0):</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT &lt;db_number&gt;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Flush All Data</strong>: Execute the <code>FLUSHDB</code> command to flush the current database:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FLUSHDB</span><br></pre></td></tr></table></figure>
<p>This command removes all keys from the currently selected Redis database.</p>
<ol>
<li><strong>Verify</strong>: Optionally, you can confirm that all keys have been removed by checking the number of keys:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO keyspace</span><br></pre></td></tr></table></figure>
<p>The <code>INFO keyspace</code> command will show you the number of keys in each database. If there is no records returned, the database is empty.<br>For example, execute the <code>INFO keyspace</code> command before executing the <code>FLUSHDB</code> command. Afterward, execute the <code>FLUSHDB</code> command and then the <code>INFO keyspace</code> command. The results are as follows. It shows that db0 is an empty database</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; INFO keyspace</span><br><span class="line"># Keyspace</span><br><span class="line">db0:keys=2,expires=0,avg_ttl=0</span><br><span class="line">db2:keys=1,expires=0,avg_ttl=0</span><br><span class="line">127.0.0.1:6379&gt;</span><br><span class="line">127.0.0.1:6379&gt; FLUSHDB</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; INFO keyspace</span><br><span class="line"># Keyspace</span><br><span class="line">db2:keys=1,expires=0,avg_ttl=0</span><br></pre></td></tr></table></figure>
<h2 id="Method-2-Using-Redis-GUI-Tools"><a href="#Method-2-Using-Redis-GUI-Tools" class="headerlink" title="Method 2: Using Redis GUI Tools"></a>Method 2: Using Redis GUI Tools</h2><p>If you prefer a graphical interface or are uncomfortable with command-line operations, many Redis GUI tools offer a straightforward way to flush data. Tools like RESP(Formerly Redis Desktop Manager), RedisInsight, or web-based interfaces provide intuitive buttons or commands to flush databases.<br>For example, let’s use RESP.app to flush the data. </p>
<p>After installing RESP.app, the first step is to establish a connection to your Redis server. Simply click ‘Connect to Redis Server’ on the main window. In the first tab (Connection Settings), provide general information for the connection:</p>
<ul>
<li><strong>Name</strong>: A name for the new connection (e.g., local_redis).</li>
<li><strong>Host</strong>: The Redis server’s host address (e.g., localhost).</li>
<li><strong>Port</strong>: The Redis server’s port number (e.g., 6379).</li>
<li><strong>Password</strong>: Authentication password for the Redis server (if required). More information available at Redis AUTH command.</li>
<li><strong>Username</strong>: Only required for Redis servers version 6.0 or newer with configured ACL; leave empty for older Redis servers.</li>
</ul>
<p><img src="/image/2024/07/2024072701.png" alt="01 Connection Settings"></p>
<p>After connecting to your Redis Server, click on the connection and expand keys. Next, select the target database (e.g., db0) and sequentially click buttons ‘Bulk Operations’ and ‘Flush Database’. A confirmation window labeled ‘Do you really want to remove all keys from this database?’ will appear; click ‘Yes’ to proceed with data cleanup.</p>
<blockquote>
<p>Be careful! Do not use it on Production servers.</p>
</blockquote>
<p><img src="/image/2024/07/2024072702.png" alt="Bulk Operations"></p>
<p><img src="/image/2024/07/2024072703.png" alt="Flush Database"></p>
<p><img src="/image/2024/07/2024072704.png" alt="Confirmation window"></p>
<p><img src="/image/2024/07/2024072705.png" alt="Cleanup Data"></p>
<h2 id="Important-Considerations"><a href="#Important-Considerations" class="headerlink" title="Important Considerations"></a>Important Considerations</h2><ul>
<li><strong>Data Loss</strong>: Flushing Redis data is irreversible. Ensure that you have backups or are certain about the action before proceeding.</li>
<li><strong>Performance Impact</strong>: Depending on the amount of data, flushing can temporarily impact Redis server performance. Plan during low-traffic periods if possible.</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Flushing cache data in Redis is a straightforward process but requires careful consideration due to its irreversible nature. Whether using the Redis CLI or GUI tools, understanding how to flush data ensures you can maintain Redis databases efficiently.<br>Remember, always back up critical data before performing any operations that could result in data loss.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Effective Ways to Delete Fuzzy Matching Keys in Redis</title>
    <url>/2024/07/30/effective-ways-to-delete-fuzzy-matching-keys-in-redis/</url>
    <content><![CDATA[<p>In Redis, managing keys efficiently is crucial for optimal performance. Sometimes, you might need to delete keys that match a pattern or have a fuzzy match. Here’s how you can achieve this:</p>
<h2 id="Using-Redis-CLI-Commands"><a href="#Using-Redis-CLI-Commands" class="headerlink" title="Using Redis CLI Commands"></a>Using Redis CLI Commands</h2><p>Redis CLI provides several commands to interact with keys. To delete keys that match a pattern, you can use the <code>KEYS</code> command in combination with the <code>DEL</code> command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli KEYS <span class="string">&quot;pattern*&quot;</span> | xargs redis-cli DEL</span><br></pre></td></tr></table></figure>
<p>Replace <code>&quot;pattern*&quot;</code> with your specific pattern. This command finds all keys matching the pattern using <code>KEYS</code>, then pipes the results to <code>DEL</code> to delete them.</p>
<h2 id="Lua-Scripting-for-Complex-Matching"><a href="#Lua-Scripting-for-Complex-Matching" class="headerlink" title="Lua Scripting for Complex Matching"></a>Lua Scripting for Complex Matching</h2><p>For more complex matching scenarios, Lua scripting in Redis allows for custom logic. Here’s a basic example to delete keys matching a fuzzy pattern:</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> keys = redis.call(<span class="string">&#x27;KEYS&#x27;</span>, ARGV[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>,#keys <span class="keyword">do</span></span><br><span class="line">    redis.call(<span class="string">&#x27;DEL&#x27;</span>, keys[i])</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> keys</span><br></pre></td></tr></table></figure>
<p>Save this script, say as <code>delete_fuzzy_keys.lua</code>, and execute it using <code>EVAL</code> command in Redis:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli EVAL <span class="string">&quot;<span class="subst">$(cat delete_fuzzy_keys.lua)</span>&quot;</span> 0 <span class="string">&quot;your_pattern*&quot;</span></span><br></pre></td></tr></table></figure>
<p>Replace <code>&quot;your_pattern*&quot;</code> with your specific pattern.</p>
<h2 id="Automating-with-Redis-Libraries"><a href="#Automating-with-Redis-Libraries" class="headerlink" title="Automating with Redis Libraries"></a>Automating with Redis Libraries</h2><p>If you’re using Redis in a programming language, such as Python with <code>redis-py</code>, you can achieve fuzzy key deletion programmatically:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line">r = redis.Redis(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">0</span>)</span><br><span class="line">keys_to_delete = r.keys(<span class="string">&quot;your_pattern*&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> keys_to_delete:</span><br><span class="line">    r.delete(key)</span><br></pre></td></tr></table></figure>
<p>This Python script uses <code>redis-py</code> to connect to Redis, fetch keys matching <code>&quot;your_pattern*&quot;</code>, and delete them using <code>delete()</code> method.</p>
<h2 id="Considerations"><a href="#Considerations" class="headerlink" title="Considerations"></a>Considerations</h2><ul>
<li><strong>Performance</strong>: Be cautious with <code>KEYS</code> command in production as it scans all keys. </li>
<li><strong>Safety</strong>: Ensure you’re deleting the correct keys to prevent accidental data loss.</li>
</ul>
<p>By following these methods, you can effectively manage and delete fuzzy matching keys in Redis according to your needs. </p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>A set of best practices and guidelines for using Redis effectively</title>
    <url>/2024/07/29/a-set-of-best-practices-and-guidelines-for-using-redis-effectively/</url>
    <content><![CDATA[<p>In this article, I introduce you to 12 specifications in the areas of key-value pair usage, command usage, and data preservation, centered around the goals of high-performance access and saving memory space in Redis applications.</p>
<h2 id="Key-Value-Pair-Usage-Specifications"><a href="#Key-Value-Pair-Usage-Specifications" class="headerlink" title="Key-Value Pair Usage Specifications"></a>Key-Value Pair Usage Specifications</h2><ol>
<li><strong>[<em>Recommended</em>]</strong> <strong>Use the business name as the KEY prefix, preferably using its abbreviation.</strong> This is done by prefixing the business name, then separating it with a colon(<code>:</code>), followed by the specific business data name. For example, if we want to count the number of unique visitors to a web page, we can use the code <code>uv:page:2048</code> to set the key, which means that this data corresponds to the business of counting unique visitors, and the corresponding page id is 2048.</li>
<li><strong>[<em>Recommended</em>]</strong> <strong>Control the length of the KEY.</strong> For the business name or business data name, we can use the first letter of the corresponding English word, (e.g., user is represented by u, order is represented by o, and log is represented by l), or we can use an abbreviation to represent it (e.g., unique visitor is represented by uv, page view is represented by pv, and message is represented by msg).</li>
<li><strong>[<em>Reference</em>] Control the data size of String type below 10KB.</strong> In the business layer, it’s advisable to limit the size of String-type data to under 10KB to avoid handling large String objects(i.e. to avoid the bigkey of String type). </li>
<li><p><strong>[<em>Reference</em>] Keep the number of elements in a collection type below 10,000.</strong> It’s advisable to keep the number of elements in a collection type below 10,000 to avoid bigkey collection types. </p>
<blockquote>
<p>Of course, the third and the fourth just to try to avoid bigkey, if the business layer of String type data is really big, we can also through the data compression to reduce the size of the data; if the collection type is really a lot of elements, we can split a large collection into multiple small collections to save. </p>
</blockquote>
</li>
<li><p><strong>[<em>Recommended</em>] Use efficient serialization and compression methods,</strong> which will reduce the size of the value.</p>
</li>
<li><strong>[<em>Recommended</em>] Use the integer object shared pool.</strong> Under the premise of meeting business data requirements, try to use integers when you can, so that you can save instance memory.</li>
</ol>
<h2 id="Data-Preservation-Specifications"><a href="#Data-Preservation-Specifications" class="headerlink" title="Data Preservation Specifications"></a>Data Preservation Specifications</h2><ol>
<li><strong>[<em>Recommended</em>] Put different business data into different Redis instances.</strong> This way, you can avoid excessive memory usage of a single instance and also avoid interfering with the operations of different businesses.</li>
<li><strong>[<em>Recommended</em>] Set the expiration time when saving data.</strong> When saving data, it’s advisable to set the expiration time of the data based on the length of time the business uses the data. Otherwise, data stored in Redis will persist indefinitely, consuming memory. With continued growth, this can exceed the machine’s memory limit, leading to overflow and service crashes. </li>
<li><strong>[<em>Recommended</em>] Control the capacity of a Redis instance.</strong> Redis single-instance memory size are not too large. According to my own experience,  it’s advisable to set the Redis single-instance memory size between 2 to 6GB. This range ensures quick completion of RDB snapshots and data synchronization across master and slave clusters, without blocking normal request processing. </li>
</ol>
<h2 id="Command-Usage-Specifications"><a href="#Command-Usage-Specifications" class="headerlink" title="Command Usage Specifications"></a>Command Usage Specifications</h2><ol>
<li><strong>[<em>Mandatory</em>] Disable <code>KEYS</code>, <code>FLUSHALL</code>, <code>FLUSHDB</code> commands for production environments.</strong> Redis is single-threaded. If we execute commands that involve a large number of operations and are time-consuming, the main thread will be severely blocked, preventing other requests from being processed properly.</li>
<li><strong>[<em>Recommended</em>] Use the <code>MONITOR</code> command with caution.</strong> The <code>MONITOR</code> command continuously writes what it monitors to the output buffer. If there are a lot of operations on the online commands, the output buffer will soon overflow, which can have an impact on Redis performance and even cause the service to crash.</li>
<li><strong>[<em>Recommended</em>] Use the full operation command with caution.</strong> For collection-type data, it is generally not recommended to use commands with full-volume operations (e.g., <code>HGETALL</code> for Hash types, <code>SMEMBERS</code> for Set types) if you want to get all the elements in the collection. These operations scan the underlying data structures of the Hash and Set types at full volume, which can block the Redis main thread if there is a lot of data in the collection type.</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The article introduces 12 specifications for high-performance access and saving memory space in Redis applications. These specifications are categorized into three areas: key-value pair usage, data preservation, and command usage.<br>For key-value pair usage, it is recommended to use business names as key prefixes, control key lengths, limit the size of string-type data and the number of elements in collection types, use efficient serialization and compression methods, and utilize the integer object shared pool.<br>For data preservation, it is recommended to separate different business data into different Redis instances, set expiration times for saved data, and control the capacity of a Redis instance.<br>For command usage, it is mandatory to disable certain commands in production environments, and it is recommended to use the <code>MONITOR</code> command and full operation commands with caution.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>How to View MySQL Version: A Quick Guide</title>
    <url>/2024/07/31/how-to-view-mysql-version-a-quick-guide/</url>
    <content><![CDATA[<p>As a web developer or database administrator, knowing the version of MySQL you’re working with is crucial for ensuring compatibility with your applications, understanding the features available, and planning for upgrades. In this quick guide, I’ll show you how to view the MySQL version using several different methods.</p>
<h2 id="1-Using-the-MySQL-Command-Line"><a href="#1-Using-the-MySQL-Command-Line" class="headerlink" title="1. Using the MySQL Command Line"></a>1. Using the MySQL Command Line</h2><p>If you have access to the MySQL command line, the easiest way to check the version is by logging in and running a simple command. Here’s how:</p>
<ol>
<li>Open your terminal or command prompt.</li>
<li>Log in to MySQL by typing <code>mysql -u username -p</code> and entering your password when prompted. Replace <code>username</code> with your actual MySQL username.</li>
<li>Once you’re logged in, type <code>SELECT VERSION();</code> or <code>SELECT @@VERSION;</code> and press Enter.</li>
</ol>
<p>MySQL will display the version number, something like this:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-----------+  </span><br><span class="line">| VERSION() |  </span><br><span class="line">+-----------+  </span><br><span class="line">| 8.0.27    |  </span><br><span class="line">+-----------+</span><br></pre></td></tr></table></figure></p>
<h2 id="2-Using-the-MySQL-Client-Command"><a href="#2-Using-the-MySQL-Client-Command" class="headerlink" title="2. Using the MySQL Client Command"></a>2. Using the MySQL Client Command</h2><p>Another quick way to check the MySQL version from the command line is to use the <code>--version</code> option with the <code>mysql</code> command without logging in. Here’s how:</p>
<ol>
<li>Open your terminal or command prompt.</li>
<li>Type <code>mysql --version</code> and press Enter.</li>
</ol>
<p>MySQL will display the version number along with some additional information, such as the build number and the distribution. Something like this:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql  Ver 14.14 Distrib 5.7.37, for Linux (x86_64) using  EditLine wrapper</span><br></pre></td></tr></table></figure></p>
<h2 id="3-Checking-the-Version-in-Your-Database-Tools"><a href="#3-Checking-the-Version-in-Your-Database-Tools" class="headerlink" title="3. Checking the Version in Your Database Tools"></a>3. Checking the Version in Your Database Tools</h2><p>If you’re using database tools(e.g., PHPMyAdmin, DBeaver) to manage your MySQL databases, you can easily check the version by looking at the main page after logging in.<br>For example, if you have phpMyAdmin installed and prefer a graphical interface: </p>
<ul>
<li>Open phpMyAdmin in your web browser.</li>
<li>Select the database server you want to check (if you have multiple servers).</li>
<li>Look for the MySQL version information typically displayed near the bottom of the page, in the “Server” section.</li>
</ul>
<p>It should show you the MySQL server version prominently.<br>When using DBeaver, hovering over a connected database connection will display a floating window showcasing the database instance’s version alongside its name, URL, and the connected user’s username.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Checking the MySQL version is a straightforward process that can be done in several different ways. From the MySQL command line to popular database tools like PHPMyAdmin and DBeaver, there’s always a suitable method at hand. Knowing the version of MySQL you’re working with is an important step in ensuring the smooth operation of your database and applications.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode1：两数之和</title>
    <url>/2022/05/06/leetcode-01-two-sum/</url>
    <content><![CDATA[<h1 id="LeetCode1：两数之和"><a href="#LeetCode1：两数之和" class="headerlink" title="LeetCode1：两数之和"></a>LeetCode1：两数之和</h1><blockquote>
<p>难度：容易<br>题目链接：<a href="https://leetcode-cn.com/problems/two-sum/">https://leetcode-cn.com/problems/two-sum/</a><br>数据结构：数组，哈希表</p>
</blockquote>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出和为目标值 <code>target</code>  的那两个整数，并返回它们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>
<p>你可以按任意顺序返回答案。</p>
<p>示例 1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [2,7,11,15], target = 9</span><br><span class="line">输出：[0,1]</span><br><span class="line">解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</span><br></pre></td></tr></table></figure>
<p>示例 2：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [3,2,4], target = 6</span><br><span class="line">输出：[1,2]</span><br></pre></td></tr></table></figure>
<p>示例 3：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [3,3], target = 6</span><br><span class="line">输出：[0,1]</span><br></pre></td></tr></table></figure>
<p>约束：</p>
<ul>
<li>2 &lt;= nums.length &lt;= 104</li>
<li>109 &lt;= nums[i] &lt;= 109</li>
<li>109 &lt;= target &lt;= 109</li>
<li>只会存在一个有效答案</li>
</ul>
<p>进阶：你可以想出一个时间复杂度小于 $O(n^2)$ 的算法吗？</p>
<h2 id="❖-循环遍历数组，直观但不高效"><a href="#❖-循环遍历数组，直观但不高效" class="headerlink" title="❖ 循环遍历数组，直观但不高效"></a>❖ 循环遍历数组，直观但不高效</h2><p>看到这个题目时，我们首先想到的方法是从整数数组 <code>nums</code> 中依次取出两个元素，并判断这两个元素的和是否为目标值 <code>target</code>。若是，则直接返回这两个元素的数组下标即可（根据题目描述，我们知道一定存在且仅存在一个这样的有效答案）。</p>
<p>该算法 Java 代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> nums.length;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] + nums[j] == target) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123; i, j &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该算法比较直观，代码也易于理解，但最大的问题是我们需要遍历数组两次，时间复杂度为 $O(n^2)$，算法的时间效率不是很高。算法的空间复杂度为 $O(1)$。</p>
<h2 id="❖-使用哈希表保存已经遍历过的数字，用空间换时间的解法"><a href="#❖-使用哈希表保存已经遍历过的数字，用空间换时间的解法" class="headerlink" title="❖ 使用哈希表保存已经遍历过的数字，用空间换时间的解法"></a>❖ 使用哈希表保存已经遍历过的数字，用空间换时间的解法</h2><p>其实，我们可以空间换时间的思想来对上文提到的算法进行优化。在遍历时，我们拿到了元素的值及其对应的数组下标，可以借助哈希表这种数据结构来存储，其中，键（key）为元素的值，值（value）为元素对应的数组下标。</p>
<p>拿到了一个元素的值，用 <code>m</code> 表示，那么从整数数组 <code>nums</code> 中取出一个元素，并且与 <code>m</code> 的和为 <code>target</code> 的问题，就可以转化为：从整数数组 <code>nums</code> 中查找除了 <code>m</code> 以外、并且值为 <code>target - m</code> 的元素。由于在遍历数组的时候，我们可以知道</p>
<p>比如示例 2 中，nums = [3,2,4], target = 6，在第一次遍历时，我们首先拿到元素 3，然后计算 target - m = 6 - 3 = 3，接</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">    HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> target - nums[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(num)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;map.get(num), i&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        map.put(nums[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>LeetCode题解</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Lightweight Asynchronous Snapshots for Distributed Dataflows</title>
    <url>/2022/10/18/lightweight-asynchronous-snapshots-for-distributed-dataflows/</url>
    <content><![CDATA[<h2 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h2><p>皇家理工学院</p>
<p>Paris Carbone1 Gyula Fora ´<br>2 Stephan Ewen3 Seif Haridi1,2 Kostas Tzoumas3<br>1KTH Royal Institute of Technology - {parisc,haridi}@kth.se<br>2Swedish Institute of Computer Science - {gyfora, seif}@sics.se<br>3Data Artisans GmbH - {stephan, kostas}@data-artisans.com</p>
<h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>Distributed stateful stream processing enables the deployment and execution of large scale continuous omputations in the cloud, targeting both low latency and high throughput. One of the most fundamental challenges of this paradigm is providing processing guarantees under potential failures. Existing approaches rely on periodic global state snapshots that can be used for failure recovery. Those approaches suffer from two main drawbacks. First, they often stall the overall computation which impacts ingestion. Second, they eagerly persist all records in transit along with the operation states which results in larger snapshots than required. In this work we propose Asynchronous Barrier Snapshotting (ABS), a lightweight algorithm suited for modern dataflow execution engines that minimises space requirements. ABS persists only operator states on acyclic execution topologies while keeping a minimal record log on cyclic dataflows. We implemented ABS on Apache Flink, a distributed analytics engine that supports stateful stream processing. Our evaluation shows that our algorithm does not have a heavy impact on the execution, maintaining linear scalability and performing well with frequent snapshots.</p>
<p><strong>Keywords</strong> fault tolerance, distributed computing, stream processing, dataflow, cloud computing, state management</p>
<h2 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h2><p>Distributed dataflow processing is an emerging paradigm for data intensive computing which allows continuous computations on data in high volumes, targeting low end-to-end latency while guaranteeing high throughput. Several time-critical applications could benefit from dataflow processing systems such as Apache Flink [1] and Naiad [11], especially in the domains of real-time analysis (e.g. predictive analytics and complex event processing). Fault tolerance is of paramount importance in such systems, as failures cannot be afforded in most real-world use cases. Currently known approaches that guarantee exactly-once semantics on stateful processing systems rely on global, consistent snapshots of the execution state. However, there are two main drawbacks that make their application inefficient for real-time stream processing. Synchronous snapshotting techniques stop the overall execution of a distributed computation in order to obtain a consistent view of the overall state. Furthermore, to our knowledge all of the existing algorithms for distributed snapshots include records that are in transit in channels or unprocessed messages throughout the execution graph as part of the snapshotted state. Most often this includes state that is larger than required.<br>In this work, we focus on providing lightweight snapshotting, specifically targeted at distributed stateful dataflow systems, with low impact on performance. Our solution provides asynchronous state snapshots with low space costs that contain only operator states in acyclic execution topologies. Additionally, we cover the case of cyclic execution graphs by applying downstream backup on selected parts of the topology while keeping the snapshot state to minimum. Our technique does not halt the streaming operation and it only introduces a small runtime overhead. The contributions of this paper can be summarised as follows:</p>
<ul>
<li>We propose and implement an asynchronous snapshotting algorithm that achieves minimal snapshots on acyclic execution graphs.</li>
<li>We describe and implement a generalisation of our algorithm that works on cyclic execution graphs.</li>
<li>We show the benefits of our approach compared to the state-of-the-art using Apache Flink Streaming as a base system for comparisons.</li>
</ul>
<p>The rest of the paper is organised as follows: Section 2 gives an overview of existing approaches for distributed global snapshots in stateful dataflow systems. Section 3 provides an overview of the Apache Flink processing and execution model followed by Section 4 where we describe our main approach to global snapshotting in detail. Our recovery scheme is described briefly in Section 5. Finally, Section 6 summarises our implementation followed by our evaluation in Section 7 and future work and conclusion in Section 8.</p>
<h2 id="2-Related-Work"><a href="#2-Related-Work" class="headerlink" title="2. Related Work"></a>2. Related Work</h2><p>Several recovery mechanisms have been proposed during the last decade for systems that do continuous processing [4, 11]. Systems that emulate continuous processing into stateless distributed batch computations such as Discretized Streams and Comet [6, 15] rely on state recomputation. On the other hand, stateful dataflow systems such as Naiad, SDGs, Piccolo and SEEP [3, 5, 11, 12] , which are our main focus in this work, use checkpointing to obtain consistent snapshots of the global execution for failure recovery.</p>
<p>The problem of consistent global snapshots in distributed environments, as introduced by Chandy and Lamport [4], has been researched extensively throughout the last decades [4, 7, 8]. A global snapshot theoretically reflects the overall state of an execution, or a possible state at a specific instance of its operation. A simple but costly approach employed by Naiad [11] is to perform a synchronous snapshot in three steps: first halting the overall computation of the execution graph, then performing the snapshot and finally instructing each task to continue its operation once the global snapshot is complete. This approach has a high impact on both throughput and space requirements due to the need to block the whole computation, while also relying on upstream backup that logs emitted records at the producer side. Another popular approach, originally proposed by Chandy and Lamport [4], that is deployed in many systems today is to perform snapshots asynchronously while eagerly doing upstream backup [4, 5, 10]. This is achieved by distributing markers throughout the execution graph that trigger the persistence of operator and channel state. This approach though still suffers from additional space requirements due to the need of an upstream backup and as a result higher recovery times caused by the reprocessing of backup records. Our approach extends the original asynchronous snapshotting idea of Chandy and Lamport, however, it considers no backup logging of records for acyclic graphs while also keeping very selective backup records on cyclic execution graphs.</p>
<h2 id="3-Background-The-Apache-Flink-System"><a href="#3-Background-The-Apache-Flink-System" class="headerlink" title="3. Background: The Apache Flink System"></a>3. Background: The Apache Flink System</h2><p>Our current work is guided by the need for fault tolerance on Apache Flink Streaming, a distributed stream analytics system that is part of the Apache Flink Stack (former Stratosphere [2]). Apache Flink is architectured around a generic runtime engine uniformly processing both batch and streaming jobs composed of stateful interconnected tasks. Analytics jobs in Flink are compiled into directed graphs of tasks. Data elements are fetched from external sources and routed through the task graph in a pipelined fashion. Tasks are continuously manipulating their internal state based on the received inputs and are generating new outputs.</p>
<h3 id="3-1-The-Streaming-Programming-Model"><a href="#3-1-The-Streaming-Programming-Model" class="headerlink" title="3.1 The Streaming Programming Model"></a>3.1 The Streaming Programming Model</h3><p>The Apache Flink API for stream processing allows the composition of complex streaming analytics jobs by exposing unbounded partitioned data streams (partially ordered sequences of records) as its core data abstraction, called DataStreams. DataStreams can be created from external sources (e.g. message queues, socket streams, custom generators) or by invoking operations on other DataStreams. DataStreams support several operators such as map, filter and reduce in the form of higher order functions that are applied incrementally per record and generate new DataStreams. Every operator can be parallelised by placing parallel instances to run on different partitions of the respective stream, thus, allowing the distributed execution of stream transformations.</p>
<p>The code example in 1 shows how to implement a simple incremental word count in Apache Flink. In this program words are read from a text file and the current count for each word is printed to the standard output. This is a stateful streaming program as sources need to be aware of their current file offset and counters need to maintain the current count for each word as their internal state.</p>
<p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1acd798f-a4ed-45db-968a-b2bc5c06882a/Untitled.png" alt="Figure 1: The execution graph for incremental word count"></p>
<p>Figure 1: The execution graph for incremental word count</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> env : <span class="type">StreamExecutionEnvironment</span> = ...</span><br><span class="line">env.setParallelism(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> wordStream = env.readTextFile(path)</span><br><span class="line"><span class="keyword">val</span> countStream = wordStream.groupBy(_).count</span><br><span class="line">countStream.print</span><br></pre></td></tr></table></figure>
<p>Example 1: Incremental Word Count</p>
<h3 id="3-2-Distributed-Dataflow-Execution"><a href="#3-2-Distributed-Dataflow-Execution" class="headerlink" title="3.2 Distributed Dataflow Execution"></a>3.2 Distributed Dataflow Execution</h3><p>When a user executes an application all DataStream operators compile into an execution graph that is in principle a directed graph $G=(T, E)$ , similarly to Naiad [11] where vertices $T$ represent tasks and edges $E$ represent data channels between tasks. An execution graph is depicted in Fig. 1 for the incremental word count example. As shown, every instance of an operator is encapsulated on a respective task. Tasks can be further classified as sources when they have no input channels and sinks when no output channels are set. Furthermore, $M$ denotes the set of all records transferred by tasks during their parallel execution. Each task $t\in T$ encapsulates the independent execution of an operator instance and is composed of the following: (1) a set of input and output channels: $I_t, O_t \subseteq E$; (2) an operator state $s_t$ and (3) a user defined function (UDF) $f_t$. Data ingestion is pull-based : during its execution each task consumes input records, updates its operator state and generates new records according to its user defined function. </p>
<p>More specifically, for each record $r\in M$ received by a task $t\in T$ a new state $s^{’}_t$ </p>
<p>0<br>t<br>is produced along<br>with a set of output records D ⊆ M according to its<br>UDF ft<br>: st<br>,r 7→ hs<br>0<br>t<br>,Di.</p>
<script type="math/tex; mode=display">
fafas</script><p>$\dot{a}$</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Flink</tag>
        <tag>大数据论文</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode1：两数之和</title>
    <url>/2023/08/05/leetcode-01-two-sum/</url>
    <content><![CDATA[<blockquote>
<p>难度：容易</p>
<p>题目链接：<a href="https://leetcode-cn.com/problems/two-sum/">https://leetcode-cn.com/problems/two-sum/</a></p>
<p>数据结构：数组，哈希表</p>
</blockquote>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出和为目标值 <code>target</code> 的那两个整数，并返回它们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>
<p>你可以按任意顺序返回答案。</p>
<p><strong>示例 1：</strong></p>
<p>输入：<code>nums = [2,7,11,15]</code>, <code>target = 9</code><br>输出：<code>[0,1]</code><br>解释：因为 <code>nums[0] + nums[1] == 9</code> ，返回 <code>[0, 1]</code>。</p>
<p><strong>示例 2：</strong></p>
<p>输入：<code>nums = [3,2,4]</code>, <code>target = 6</code><br>输出：<code>[1,2]</code></p>
<p><strong>示例 3：</strong></p>
<p>输入：<code>nums = [3,3]</code>, <code>target = 6</code><br>输出：<code>[0,1]</code></p>
<p><strong>约束：</strong></p>
<ul>
<li><code>2 &lt;= nums.length &lt;= 104</code></li>
<li><code>10^9 &lt;= nums[i] &lt;= 10^9</code></li>
<li><code>10^9 &lt;= target &lt;= 10^9</code></li>
<li>只会存在一个有效答案</li>
</ul>
<p>进阶：你可以想出一个时间复杂度小于 O(n^2) 的算法吗？</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对于这个问题，最简单直接的方法是使用两层循环遍历数组，找出和为目标值的两个数。时间复杂度为 O(n^2)。实现该算法的 Java 代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> nums.length;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] + nums[j] == target) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123; i, j &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>进阶要求时间复杂度小于 O(n^2) 的算法，我们可以使用哈希表来提高查找的效率。具体步骤如下：</p>
<ol>
<li>创建一个哈希表，用于存储数组中的元素及其索引。</li>
<li>遍历数组，对于每个元素 <code>nums[i]</code>，计算出目标值与当前元素的差值 <code>diff = target - nums[i]</code>。</li>
<li>在哈希表中查找差值 <code>diff</code>，如果存在且不等于当前元素的索引 <code>i</code>，则找到了满足条件的两个数。</li>
<li>返回两个数的索引。</li>
</ol>
<p>使用 Java 编程语言实现该算法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">    HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">diff</span> <span class="operator">=</span> target - nums[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(diff)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;map.get(diff), i&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        map.put(nums[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上就是对于 LeetCode 算法题 “两数之和” 的解析和解题思路。通过使用哈希表，我们可以在 O(n) 的时间复杂度内解决这个问题。</p>
<p>希望本文对你理解该算法有所帮助！</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>LeetCode题解</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>小记：2021年8月</title>
    <url>/2021/08/05/note-202108/</url>
    <content><![CDATA[<h2 id="2021年8月2日"><a href="#2021年8月2日" class="headerlink" title="2021年8月2日"></a>2021年8月2日</h2><p><strong>1 梦</strong></p>
<p>昨晚梦到皮蛋，可把我气醒了。梦里大概是这样子：</p>
<p>皮蛋生了七只小猫咪，有黑色的，有白色的，有橘黄色的还有混色的。但我发现的时候，其中的三只被他吃了，另外四只被绳子绑在一起，浸泡在洗脸盆上，盆上还有水。皮蛋打算溺死他自己的猫咪仔。把我气死了，拿起棍子准备教训皮蛋。结果，他一下子就跑去躲了，打不到他，我像个泼妇骂街一样，边骂边教育他，告诉他这些是你的仔，怎么可以这么残忍对待它们。。</p>
<p>骂着骂着，突然想到小猫咪还在水盆里泡着呢，就马上冲回去，把小猫咪捞出来，解了绳子，感觉这些小猫咪像是要快饿死了。皮蛋又抓不到，不然还可以让皮蛋给小猫咪喂奶。</p>
<p>没办法，想到小猫咪可以喝牛奶，又去冰箱找。边翻边想，刚出生的小猫咪可以喝冰的牛奶吗？哎呀，不管那么多了，拉肚子总比被饿死好吧？于是继续翻啊、找啊，但就是没有找到牛奶，急死了。后面冷静点，才想起我已经不喝牛奶很久了，冰箱怎么可能会有牛奶？这一瞬间，我彻底崩溃了，一直在责怪和质问自己。为什么我现在不喝牛奶了？！以前不是每晚睡之前都要喝一瓶的吗？！怎么不能过几天再不想喝牛奶？！就算不喝牛奶，冰箱也要备着啊？！为什么？！</p>
<p>实在压抑到有些难受，还好醒了，睁着眼睛躺在床上，回忆着这个梦的始末，怒火中烧。清醒一点后发现，皮蛋不是公猫吗？还是一只做了绝育手术的公猫，他怎么会生小猫咪呢？</p>
<p>哦，原来是一场梦啊，真是奇奇怪怪的梦！看了下手机，现在快早上5点了，起来喝点水，倒头再睡会，今天还要上班。</p>
<p><strong>2 活在当下</strong></p>
<p>夏天的时候就盼望着冬天的到来，而冬天的时候又期待着夏天的到来，一点都没有活在当下啊。</p>
<p><strong>3 专注呼吸</strong></p>
<p>每当我开始专注于自己的呼吸时，脑袋里总有各种各样的想法蹦跶出来。而当我结束专注呼吸训练准备记录他们的时候，他们又一下子不见了踪影。真是奇怪的脑袋</p>
]]></content>
      <categories>
        <category>小记</category>
      </categories>
      <tags>
        <tag>所思所想所悟</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Flink 1.13.6 发版公告</title>
    <url>/2022/02/20/apache-flink-release-1_13_6/</url>
    <content><![CDATA[<p>本文翻译自 Apache Flink 社区博文——<a href="https://flink.apache.org/news/2022/02/18/release-1.13.6.html">《Apache Flink 1.13.6 Release Announcement》</a><br>。</p>
<hr>
<p>Apache Flink 社区很荣幸地宣布 Flink 1.13 的另一个错误修复版本正式发布。</p>
<p>此版本包括 99 个错误和漏洞修复以及 Flink 1.13 的小改进，包括升级 Apache Log4j 版本至 2.17.1。您可在下面查看所有错误修复和改进的列表（不包括对构建基础架构和构建稳定性的改进）。有关所有更改的完整列表，请参阅：<a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12315522&amp;version=12351074">JIRA 列表</a>。</p>
<p>我们强烈建议所有用户升级到 Flink 1.13.6 版本。</p>
<h2 id="发行工件（Release-Artifacts）"><a href="#发行工件（Release-Artifacts）" class="headerlink" title="发行工件（Release Artifacts）"></a>发行工件（<strong>Release Artifacts）</strong></h2><h3 id="Maven-依赖（Maven-Dependencies）"><a href="#Maven-依赖（Maven-Dependencies）" class="headerlink" title="Maven 依赖（Maven Dependencies）"></a><strong>Maven 依赖（Maven Dependencies）</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-streaming-java_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-clients_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="二进制文件（Binaries）"><a href="#二进制文件（Binaries）" class="headerlink" title="二进制文件（Binaries）"></a>二进制文件（<strong>Binaries）</strong></h3><p>您可以在更新过的<a href="https://flink.apache.org/downloads.html">下载页面</a>上找到这些二进制文件。</p>
<h3 id="Docker-镜像（Docker-Images）"><a href="#Docker-镜像（Docker-Images）" class="headerlink" title="Docker 镜像（Docker Images）"></a><strong>Docker 镜像（Docker Images）</strong></h3><ul>
<li><a href="https://hub.docker.com/_/flink?tab=tags&amp;page=1&amp;name=1.13.6">library/flink</a> (官方镜像，official images)</li>
<li><a href="https://hub.docker.com/r/apache/flink/tags?page=1&amp;name=1.13.6">apache/flink</a> (ASF 仓库，ASF repository)</li>
</ul>
<h3 id="PyPi"><a href="#PyPi" class="headerlink" title="PyPi"></a><strong>PyPi</strong></h3><ul>
<li><a href="https://pypi.org/project/apache-flink/1.13.6/">apache-flink==1.13.6</a></li>
</ul>
<h2 id="发行说明（Release-Notes）"><a href="#发行说明（Release-Notes）" class="headerlink" title="发行说明（Release Notes）"></a>发行说明（<strong>Release Notes）</strong></h2><h3 id="Bug-修复"><a href="#Bug-修复" class="headerlink" title="Bug 修复"></a><strong>Bug 修复</strong></h3><ul>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-15987">FLINK-15987</a>] - SELECT 1.0e0 / 0.0e0 抛出 NumberFormatException 异常</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-17914">FLINK-17914</a>] - HistoryServer deletes cached archives if archive listing fails</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-20195">FLINK-20195</a>] - Jobs endpoint returns duplicated jobs</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-20370">FLINK-20370</a>] - Result is wrong when sink primary key is not the same with query</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-21289">FLINK-21289</a>] - Application mode ignores the pipeline.classpaths configuration</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-23919">FLINK-23919</a>] - PullUpWindowTableFunctionIntoWindowAggregateRule generates invalid Calc for Window TVF</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24232">FLINK-24232</a>] - Archiving of suspended jobs prevents breaks subsequent archive attempts</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24255">FLINK-24255</a>] - Test Environment / Mini Cluster do not forward configuration.</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24310">FLINK-24310</a>] - A bug in the BufferingSink example in the doc</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24318">FLINK-24318</a>] - Casting a number to boolean has different results between ‘select’ fields and ‘where’ condition</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24334">FLINK-24334</a>] - Configuration kubernetes.flink.log.dir not working</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24366">FLINK-24366</a>] - Unnecessary/misleading error message about failing restores when tasks are already canceled.</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24401">FLINK-24401</a>] - Metaspace 发生 OOM 后，TM 无法退出</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24465">FLINK-24465</a>] - Wrong javadoc and documentation for buffer timeout</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24492">FLINK-24492</a>] - incorrect implicit type conversion between numeric and (var)char</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24506">FLINK-24506</a>] - checkpoint directory is not configurable through the Flink configuration passed into the StreamExecutionEnvironment</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24509">FLINK-24509</a>] - FlinkKafkaProducer example is not compiling due to incorrect constructer signature used</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24540">FLINK-24540</a>] - Fix Resource leak due to Files.list</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24543">FLINK-24543</a>] - Zookeeper connection issue causes inconsistent state in Flink</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24563">FLINK-24563</a>] - Comparing timstamp_ltz with random string throws NullPointerException</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24597">FLINK-24597</a>] - RocksdbStateBackend getKeysAndNamespaces would return duplicate data when using MapState</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24621">FLINK-24621</a>] - JobManager fails to recover 1.13.1 checkpoint due to InflightDataRescalingDescriptor</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24662">FLINK-24662</a>] - PyFlink sphinx check failed with “node class ‘meta’ is already registered, its visitors will be overridden”</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24667">FLINK-24667</a>] - Channel state writer would fail the task directly if meeting exception previously</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24676">FLINK-24676</a>] - Schema does not match if explain insert statement with partial column</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24678">FLINK-24678</a>] - Correct the metric name of map state contains latency</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24708">FLINK-24708</a>] - <code>ConvertToNotInOrInRule</code> has a bug which leads to wrong result</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24728">FLINK-24728</a>] - Batch SQL file sink forgets to close the output stream</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24761">FLINK-24761</a>] - Fix PartitionPruner code gen compile fail</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24846">FLINK-24846</a>] - AsyncWaitOperator fails during stop-with-savepoint</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24860">FLINK-24860</a>] - Fix the wrong position mappings in the Python UDTF</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24885">FLINK-24885</a>] - ProcessElement Interface parameter Collector : java.lang.NullPointerException</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24922">FLINK-24922</a>] - Fix spelling errors in the word “parallism”</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25022">FLINK-25022</a>] - ClassLoader leak with ThreadLocals on the JM when submitting a job through the REST API</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25067">FLINK-25067</a>] - Correct the description of RocksDB’s background threads</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25084">FLINK-25084</a>] - Field names must be unique. Found duplicates</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25091">FLINK-25091</a>] - Official website document FileSink orc compression attribute reference error</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25096">FLINK-25096</a>] - Issue in exceptions API(/jobs/:jobid/exceptions) in flink 1.13.2</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25199">FLINK-25199</a>] - StreamEdges are not unique in self-union, which blocks propagation of watermarks</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25362">FLINK-25362</a>] - Incorrect dependencies in Table Confluent/Avro docs</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25468">FLINK-25468</a>] - Local recovery fails if local state storage and RocksDB working directory are not on the same volume</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25486">FLINK-25486</a>] - Perjob can not recover from checkpoint when zookeeper leader changes</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25494">FLINK-25494</a>] - Duplicate element serializer during DefaultOperatorStateBackendSnapshotStrategy#syncPrepareResources</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25513">FLINK-25513</a>] - CoFlatMapFunction requires both two flat_maps to yield something</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25559">FLINK-25559</a>] - SQL JOIN causes data loss</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25683">FLINK-25683</a>] - wrong result if table transfrom to DataStream then window process in batch mode</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25728">FLINK-25728</a>] - Potential memory leaks in StreamMultipleInputProcessor</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25732">FLINK-25732</a>] - Dispatcher#requestMultipleJobDetails returns non-serialiable collection</li>
</ul>
<h3 id="优化（Improvement）"><a href="#优化（Improvement）" class="headerlink" title="优化（Improvement）"></a>优化（<strong>Improvement）</strong></h3><ul>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-21407">FLINK-21407</a>] - 明确哪些源和 API 支持哪些格式</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-20443">FLINK-20443</a>] - ContinuousProcessingTimeTrigger 在窗口结束时不会触发</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-21467">FLINK-21467</a>] - Document possible recommended usage of Bounded{One/Multi}Input.endInput and emphasize that they could be called multiple times</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-23842">FLINK-23842</a>] - Add log messages for reader registrations and split requests.</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24631">FLINK-24631</a>] - Avoiding directly use the labels as selector for deployment and service</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24739">FLINK-24739</a>] - State requirements for Flink’s application mode in the documentation</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24987">FLINK-24987</a>] - Enhance ExternalizedCheckpointCleanup enum</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25160">FLINK-25160</a>] - Make doc clear: tolerable-failed-checkpoints counts consecutive failures</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25415">FLINK-25415</a>] - implement retrial on connections to Cassandra container</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25611">FLINK-25611</a>] - Remove CoordinatorExecutorThreadFactory thread creation guards</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25818">FLINK-25818</a>] - Add explanation how Kafka Source deals with idleness when parallelism is higher then the number of partitions</li>
</ul>
<h3 id="技术债（Technical-Debt）"><a href="#技术债（Technical-Debt）" class="headerlink" title="技术债（Technical Debt）"></a>技术债（<strong>Technical Debt）</strong></h3><ul>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24740">FLINK-24740</a>] - 更新 testcontainers 依赖至 v1.16.2</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24796">FLINK-24796</a>] - 从 CI 编译工件中排除 javadocs / node[_modules] 目录</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25472">FLINK-25472</a>] - 更新 Log4j 至 2.17.1 版本</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25375">FLINK-25375</a>] - 更新 Log4j 至 2.17.0 版本</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25576">FLINK-25576</a>] - 更新 com.h2database:h2 至 2.0.206 版本</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Flink Table Store——流批一体存储</title>
    <url>/2022/09/15/apache-flink-table-store-intro/</url>
    <content><![CDATA[<blockquote>
<p>Flink Table Store 面向更新场景的 OLAP 应用。作为流批统一存储，在 Flink 中为流式处理和批处理构建动态表，支持实时流式更新/删除变更日志摄取、实时流消费和高性能数据查询。当大量更新数据（如 MySQL 的 binlog 日志）写入 Flink Table Store 后，Flink Table Store 后台会根据主键来合并数据，默认保留最新变更后的数据。<br><strong>Flink Table Store 目前仍处于 beta 状态，正在快速发展，不建议直接在生产环境中使用。</strong></p>
</blockquote>
<h2 id="出现背景"><a href="#出现背景" class="headerlink" title="出现背景"></a>出现背景</h2><p>在过去的几年里，得益于众多的贡献者和用户，Apache Flink 已经成为最好的分布式计算引擎之一，尤其是在大规模有状态流处理方面。然而，当试图深入了解实时数据时，仍然面临着一些挑战。在这些挑战中，一个突出的问题是缺乏满足所有计算模式的存储。</p>
<p>到目前为止，为了不同目的部署几个存储系统来使用 Flink 是很常见的。一个典型的部署是用于流处理的消息队列、用于批处理和即席查询的可扫描文件系统/对象存储、以及用于查找的 K-V 存储。但这种架构由于复杂性和异构性，在数据质量和系统维护方面都提出了挑战。正成为影响 Apache Flink 流批统一端到端用户体验的一大问题。</p>
<p>而 Flink Table Store 的目标就是解决上述问题，将 Flink 的能力从计算扩展到存储领域，以便为用户提供更好的端到端体验。</p>
<h2 id="核心能力"><a href="#核心能力" class="headerlink" title="核心能力"></a>核心能力</h2><p>Flink Table Store 旨在提供统一的存储抽象，让用户不必自己构建混合存储。具体来说，Flink Table Store 提供以下核心能力：</p>
<ul>
<li>支持大型数据集的存储，并允许在批处理和流模式下进行读/写；</li>
<li>支持毫秒级延迟的流式查询；</li>
<li>支持秒级延迟 Batch/OLAP 查询；</li>
<li>默认情况下，流消费支持增量快照。所以用户不需要自己解决组合不同存储带来的问题。</li>
</ul>
<h2 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h2><p>作为一种新型的可更新数据湖，Flink Table Store 具有以下特点：</p>
<ul>
<li>大吞吐量数据摄取，同时提供良好的查询性能。</li>
<li>具有主键过滤器的高性能查询，最快 100 毫秒。</li>
<li>Lake Storage 上提供流式读取，Lake Storage 也可以与 Kafka 集成，提供秒级流式读取。</li>
</ul>
<h2 id="演进过程"><a href="#演进过程" class="headerlink" title="演进过程"></a>演进过程</h2><p>在早先发布的 0.1.0 预览版，用户可以使用 Flink 将数据写入到 Flink Table Store 中，既可以通过流式传输从数据库中捕获的更新日志，也可以通过从数据仓库等其他存储中批量加载数据。</p>
<p>用户可以使用 Flink 以不同的方式查询 Flink Table Store，包括流式查询和 Batch/OLAP 查询。还值得注意的是，用户也可以使用其他引擎（例如 Apache Hive）从 Flink Table Store 中查询。</p>
<p>在底层，Flink Table Store 使用混合存储架构，使用 Lake Store 存储历史数据，使用 Queue 系统（目前支持 Apache Kafka 集成）存储增量数据。它为混合流式读取提供增量快照。</p>
<p> Flink Table Store 的 Lake Store 将数据作为列文件存储在文件系统/对象存储上，并使用 LSM 结构来支持大量的数据更新和高性能查询。</p>
<p><img src="/image/2022/20220915234511-flink-table-store-architecture.png" alt="Flink Table Store 架构图"></p>
<p>目前，Flink Table Store 发布了 0.2.0 版本。该版本主要包含以下四个值得关注的新特性：</p>
<ol>
<li>引入自己的目录（Catalog），并支持自动同步到 Hive Metastore；</li>
<li>增加对 Flink 1.14 的支持，并支持多个计算引擎（Spark、Hive、Trino）的读取操作；</li>
<li>支持 append-only 表特性；</li>
<li>支持可调整存储桶数量。</li>
</ol>
<p>在即将发布的 0.3.0 版本中，可以期待（至少）以下功能：</p>
<ul>
<li>支持流式变更日志并发写入，Compaction 隔离；</li>
<li>Aggregation Table，用于构建物化视图；</li>
<li>为部分更新/聚合表生成变更日志；</li>
<li>Full Schema Evolution 支持删除列和重命名列；</li>
<li>查找支持 Flink 维度连接。</li>
</ul>
<p>内容来源</p>
<p><a href="https://flink.apache.org/news/2022/08/29/release-table-store-0.2.0.html">https://flink.apache.org/news/2022/08/29/release-table-store-0.2.0.html</a><br><a href="https://flink.apache.org/news/2022/05/11/release-table-store-0.1.0.html">https://flink.apache.org/news/2022/05/11/release-table-store-0.1.0.html</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
        <tag>Flink Table Store</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Flink Table Store 快速入门</title>
    <url>/2022/09/16/apache-flink-table-store-quick-start/</url>
    <content><![CDATA[<p>本文通过一个示例来简要介绍如何使用 Apache Flink Table Store。</p>
<h2 id="步骤一：下载-Flink"><a href="#步骤一：下载-Flink" class="headerlink" title="步骤一：下载 Flink"></a>步骤一：下载 Flink</h2><blockquote>
<p>注意：Flink Table Store 仅从 Flink 1.14 开始支持。</p>
</blockquote>
<p>本示例使用的是 Flink 1.15.2 版本，使用 <code>wget</code> 下载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dlcdn.apache.org/flink/flink-1.15.2/flink-1.15.2-bin-scala_2.12.tgz</span><br></pre></td></tr></table></figure>
<p>下载完成之后，解压文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzf flink-1.15.2-bin-scala_2.12.tgz</span><br></pre></td></tr></table></figure>
<p>本示例中，flink 的安装目录为 <em>/mnt/d/flink-1.15.2</em> 。为便于本文的后续说明，这里使用 ${FLINK_HOME} 代指 flink 的安装目录。</p>
<p>解压后的文件目录如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  flink-1.15.2 ll</span><br><span class="line">total 616K</span><br><span class="line">-rwxrwxrwx 1 root root  12K Aug 17 20:10 LICENSE</span><br><span class="line">-rwxrwxrwx 1 root root 600K Aug 18 00:42 NOTICE</span><br><span class="line">-rwxrwxrwx 1 root root 1.3K Aug 17 20:10 README.txt</span><br><span class="line">drwxrwxrwx 1 root root 4.0K Aug 18 00:42 bin</span><br><span class="line">drwxrwxrwx 1 root root 4.0K Aug 18 00:42 conf</span><br><span class="line">drwxrwxrwx 1 root root 4.0K Aug 18 00:42 examples</span><br><span class="line">drwxrwxrwx 1 root root 4.0K Aug 18 00:42 lib</span><br><span class="line">drwxrwxrwx 1 root root 4.0K Aug 18 00:42 licenses</span><br><span class="line">drwxrwxrwx 1 root root 4.0K Aug 17 20:10 <span class="built_in">log</span></span><br><span class="line">drwxrwxrwx 1 root root 4.0K Aug 18 00:42 opt</span><br><span class="line">drwxrwxrwx 1 root root 4.0K Aug 18 00:42 plugins</span><br></pre></td></tr></table></figure>
<h2 id="步骤二：下载-flink-table-store-dist-0-2-0-jar"><a href="#步骤二：下载-flink-table-store-dist-0-2-0-jar" class="headerlink" title="步骤二：下载 flink-table-store-dist-0.2.0.jar"></a>步骤二：下载 flink-table-store-dist-0.2.0.jar</h2><p>下载 flink-table-store-dist-0.2.0.jar：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dlcdn.apache.org/flink/flink-table-store-0.2.0/flink-table-store-dist-0.2.0.jar</span><br></pre></td></tr></table></figure>
<p>下载完成后，把 flink-table-store-dist-0.2.0.jar 复制到 <em>${FLINK_HOME}/lib</em> 目录下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> flink-table-store-dist-0.2.0.jar <span class="variable">$&#123;FLINK_HOME&#125;</span>/lib</span><br></pre></td></tr></table></figure>
<h2 id="步骤三：下载-flink-shaded-hadoop-jar"><a href="#步骤三：下载-flink-shaded-hadoop-jar" class="headerlink" title="步骤三：下载 flink-shaded-hadoop-*.jar"></a>步骤三：下载 flink-shaded-hadoop-*.jar</h2><p>这里下载的是 flink-shaded-hadoop-2-uber-2.7.5-10.0.jar：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://repo.maven.apache.org/maven2/org/apache/flink/flink-shaded-hadoop-2-uber/2.7.5-10.0/flink-shaded-hadoop-2-uber-2.7.5-10.0.jar</span><br></pre></td></tr></table></figure>
<p>将下载好的文件复制到 <em>${FLINK_HOME}/lib</em> 目录下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> flink-shaded-hadoop-2-uber-2.7.5-10.0.jar <span class="variable">$&#123;FLINK_HOME&#125;</span>/lib</span><br></pre></td></tr></table></figure>
<h2 id="步骤四：启动-Flink-本地集群"><a href="#步骤四：启动-Flink-本地集群" class="headerlink" title="步骤四：启动 Flink 本地集群"></a>步骤四：启动 Flink 本地集群</h2><p>进入 Flink 安装目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;FLINK_HOME&#125;</span></span><br></pre></td></tr></table></figure>
<p>为了运行多个作业，在启动 Flink 本地集群之前需要先修改集群配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi ./conf/flink-conf.yaml</span><br></pre></td></tr></table></figure>
<p>将配置项 taskmanager.numberOfTaskSlots 由 1 改为 2：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">taskmanager.numberOfTaskSlots: 2</span><br></pre></td></tr></table></figure>
<p>启动本地集群：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/start-cluster.sh</span><br></pre></td></tr></table></figure>
<p>在浏览器打开链接 <a href="http://localhost:8081/">http://localhost:8081/</a> 查看 Flink 仪表盘，可以看到集群已启动并正在运行：</p>
<p><img src="/image/2022/20220916001.png" alt="Untitled"></p>
<p>启动 SQL Client CLI：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/sql-client.sh embedded</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  flink-1.15.2 ./bin/sql-client.sh embedded</span><br><span class="line"></span><br><span class="line">                                   ▒▓██▓██▒</span><br><span class="line">                               ▓████▒▒█▓▒▓███▓▒</span><br><span class="line">                            ▓███▓░░        ▒▒▒▓██▒  ▒</span><br><span class="line">                          ░██▒   ▒▒▓▓█▓▓▒░      ▒████</span><br><span class="line">                          ██▒         ░▒▓███▒    ▒█▒█▒</span><br><span class="line">                            ░▓█            ███   ▓░▒██</span><br><span class="line">                              ▓█       ▒▒▒▒▒▓██▓░▒░▓▓█</span><br><span class="line">                            █░ █   ▒▒░       ███▓▓█ ▒█▒▒▒</span><br><span class="line">                            ████░   ▒▓█▓      ██▒▒▒ ▓███▒</span><br><span class="line">                         ░▒█▓▓██       ▓█▒    ▓█▒▓██▓ ░█░</span><br><span class="line">                   ▓░▒▓████▒ ██         ▒█    █▓░▒█▒░▒█▒</span><br><span class="line">                  ███▓░██▓  ▓█           █   █▓ ▒▓█▓▓█▒</span><br><span class="line">                ░██▓  ░█░            █  █▒ ▒█████▓▒ ██▓░▒</span><br><span class="line">               ███░ ░ █░          ▓ ░█ █████▒░░    ░█░▓  ▓░</span><br><span class="line">              ██▓█ ▒▒▓▒          ▓███████▓░       ▒█▒ ▒▓ ▓██▓</span><br><span class="line">           ▒██▓ ▓█ █▓█       ░▒█████▓▓▒░         ██▒▒  █ ▒  ▓█▒</span><br><span class="line">           ▓█▓  ▓█ ██▓ ░▓▓▓▓▓▓▓▒              ▒██▓           ░█▒</span><br><span class="line">           ▓█    █ ▓███▓▒░              ░▓▓▓███▓          ░▒░ ▓█</span><br><span class="line">           ██▓    ██▒    ░▒▓▓███▓▓▓▓▓██████▓▒            ▓███  █</span><br><span class="line">          ▓███▒ ███   ░▓▓▒░░   ░▓████▓░                  ░▒▓▒  █▓</span><br><span class="line">          █▓▒▒▓▓██  ░▒▒░░░▒▒▒▒▓██▓░                            █▓</span><br><span class="line">          ██ ▓░▒█   ▓▓▓▓▒░░  ▒█▓       ▒▓▓██▓    ▓▒          ▒▒▓</span><br><span class="line">          ▓█▓ ▓▒█  █▓░  ░▒▓▓██▒            ░▓█▒   ▒▒▒░▒▒▓█████▒</span><br><span class="line">           ██░ ▓█▒█▒  ▒▓▓▒  ▓█                █░      ░░░░   ░█▒</span><br><span class="line">           ▓█   ▒█▓   ░     █░                ▒█              █▓</span><br><span class="line">            █▓   ██         █░                 ▓▓        ▒█▓▓▓▒█░</span><br><span class="line">             █▓ ░▓██░       ▓▒                  ▓█▓▒░░░▒▓█░    ▒█</span><br><span class="line">              ██   ▓█▓░      ▒                    ░▒█▒██▒      ▓▓</span><br><span class="line">               ▓█▒   ▒█▓▒░                         ▒▒ █▒█▓▒▒░░▒██</span><br><span class="line">                ░██▒    ▒▓▓▒                     ▓██▓▒█▒ ░▓▓▓▓▒█▓</span><br><span class="line">                  ░▓██▒                          ▓░  ▒█▓█  ░░▒▒▒</span><br><span class="line">                      ▒▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▓▓  ▓░▒█░</span><br><span class="line"></span><br><span class="line">    ______ _ _       _       _____  ____  _         _____ _ _            _  BETA</span><br><span class="line">   |  ____| (_)     | |     / ____|/ __ \| |       / ____| (_)          | |</span><br><span class="line">   | |__  | |_ _ __ | | __ | (___ | |  | | |      | |    | |_  ___ _ __ | |_</span><br><span class="line">   |  __| | | | <span class="string">&#x27;_ \| |/ /  \___ \| |  | | |      | |    | | |/ _ \ &#x27;</span>_ \| __|</span><br><span class="line">   | |    | | | | | |   &lt;   ____) | |__| | |____  | |____| | |  __/ | | | |_</span><br><span class="line">   |_|    |_|_|_| |_|_|\_\ |_____/ \___\_\______|  \_____|_|_|\___|_| |_|\__|</span><br><span class="line"></span><br><span class="line">        Welcome! Enter <span class="string">&#x27;HELP;&#x27;</span> to list all available commands. <span class="string">&#x27;QUIT;&#x27;</span> to <span class="built_in">exit</span>.</span><br><span class="line"></span><br><span class="line">Command <span class="built_in">history</span> file path: /root/.flink-sql-history</span><br><span class="line"></span><br><span class="line">Flink SQL&gt;</span><br></pre></td></tr></table></figure>
<h2 id="步骤五：创建表"><a href="#步骤五：创建表" class="headerlink" title="步骤五：创建表"></a>步骤五：创建表</h2><p>依次执行以下三条 SQL 语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> CATALOG my_catalog <span class="keyword">WITH</span> (</span><br><span class="line">  <span class="string">&#x27;type&#x27;</span><span class="operator">=</span><span class="string">&#x27;table-store&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;warehouse&#x27;</span><span class="operator">=</span><span class="string">&#x27;file:/tmp/table_store&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">USE CATALOG my_catalog;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- create a word count table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> word_count (</span><br><span class="line">    word STRING <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> ENFORCED,</span><br><span class="line">    cnt <span class="type">BIGINT</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h2 id="步骤六：写入数据"><a href="#步骤六：写入数据" class="headerlink" title="步骤六：写入数据"></a>步骤六：写入数据</h2><p>依次执行以下 SQL 语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- create a word data generator table</span></span><br><span class="line"><span class="keyword">CREATE</span> TEMPORARY <span class="keyword">TABLE</span> word_table (</span><br><span class="line">    word STRING</span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">&#x27;connector&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;datagen&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;fields.word.length&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- table store requires checkpoint interval in streaming mode</span></span><br><span class="line"><span class="keyword">SET</span> <span class="string">&#x27;execution.checkpointing.interval&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;10 s&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- write streaming data to dynamic table</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> word_count <span class="keyword">SELECT</span> word, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> word_table <span class="keyword">GROUP</span> <span class="keyword">BY</span> word;</span><br></pre></td></tr></table></figure>
<p>可以在 Flink 仪表盘看到正在运行的作业：</p>
<p><img src="/image/2022/20220916002.png" alt="Untitled"></p>
<h2 id="步骤七：OLAP-查询"><a href="#步骤七：OLAP-查询" class="headerlink" title="步骤七：OLAP 查询"></a>步骤七：<strong><strong>OLAP 查询</strong></strong></h2><p>依次执行以下 SQL 语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- use tableau result mode</span></span><br><span class="line"><span class="keyword">SET</span> <span class="string">&#x27;sql-client.execution.result-mode&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;tableau&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- switch to batch mode</span></span><br><span class="line">RESET <span class="string">&#x27;execution.checkpointing.interval&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="string">&#x27;execution.runtime-mode&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;batch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- olap query the table</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> word_count;</span><br></pre></td></tr></table></figure>
<p>OLAP 的查询结果如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Flink <span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> word_count;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="operator">|</span> word <span class="operator">|</span>    cnt <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">0</span> <span class="operator">|</span> <span class="number">167846</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span> <span class="number">167779</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span> <span class="number">167708</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span> <span class="number">168591</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span> <span class="number">168384</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">5</span> <span class="operator">|</span> <span class="number">168587</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">6</span> <span class="operator">|</span> <span class="number">168275</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">7</span> <span class="operator">|</span> <span class="number">167705</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">8</span> <span class="operator">|</span> <span class="number">169200</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">9</span> <span class="operator">|</span> <span class="number">168222</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    a <span class="operator">|</span> <span class="number">167486</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    b <span class="operator">|</span> <span class="number">167603</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    c <span class="operator">|</span> <span class="number">168221</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    d <span class="operator">|</span> <span class="number">167459</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    e <span class="operator">|</span> <span class="number">168599</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    f <span class="operator">|</span> <span class="number">168335</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+</span></span><br><span class="line"><span class="number">16</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span></span><br></pre></td></tr></table></figure>
<p>可以多执行几次上面的查询 SQL 语句，并观察结果的变化。</p>
<p>在 Flink 仪表盘的已完成作业列表，可以看到刚刚完成执行 OLAP 查询的作业：</p>
<p><img src="/image/2022/20220916003.png" alt="Untitled"></p>
<h2 id="步骤八：流式查询"><a href="#步骤八：流式查询" class="headerlink" title="步骤八：流式查询"></a>步骤八：流式查询</h2><p>依次执行以下 SQL 语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- switch to streaming mode</span></span><br><span class="line"><span class="keyword">SET</span> <span class="string">&#x27;execution.runtime-mode&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;streaming&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- track the changes of table and calculate the count interval statistics</span></span><br><span class="line"><span class="keyword">SELECT</span> `<span class="type">interval</span>`, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> interval_cnt <span class="keyword">FROM</span></span><br><span class="line">  (<span class="keyword">SELECT</span> cnt <span class="operator">/</span> <span class="number">10000</span> <span class="keyword">AS</span> `<span class="type">interval</span>` <span class="keyword">FROM</span> word_count) <span class="keyword">GROUP</span> <span class="keyword">BY</span> `<span class="type">interval</span>`;</span><br></pre></td></tr></table></figure>
<p>结果输出如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Flink <span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> `<span class="type">interval</span>`, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> interval_cnt <span class="keyword">FROM</span></span><br><span class="line"><span class="operator">&gt;</span>   (<span class="keyword">SELECT</span> cnt <span class="operator">/</span> <span class="number">10000</span> <span class="keyword">AS</span> `<span class="type">interval</span>` <span class="keyword">FROM</span> word_count) <span class="keyword">GROUP</span> <span class="keyword">BY</span> `<span class="type">interval</span>`;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> op <span class="operator">|</span>             <span class="type">interval</span> <span class="operator">|</span>         interval_cnt <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>I <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">6</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">6</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">7</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">7</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">9</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                    <span class="number">9</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">11</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">11</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">12</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">12</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">13</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">13</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">14</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">14</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">15</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">15</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>U <span class="operator">|</span>                   <span class="number">53</span> <span class="operator">|</span>                   <span class="number">16</span> <span class="operator">|</span></span><br></pre></td></tr></table></figure>
<p>使用流模式，可以获取动态表的更改日志，并执行新的流计算。</p>
<p>在 Flink 仪表盘的正在运行作业列表上，可以看到刚刚启动的正在运行的作业（作业名：collect）：</p>
<p><img src="/image/2022/20220916005.png" alt="Untitled"></p>
<h2 id="步骤九：退出"><a href="#步骤九：退出" class="headerlink" title="步骤九：退出"></a>步骤九：退出</h2><p>依次打开 Flink 仪表盘上正在运行作业列表上的作业，进入作业详情页面，点击 Cancel Job 按钮，取消作业。</p>
<p>在 SQL Client 上依次执行以下 SQL 语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- drop the dynamic table, clear the files</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> word_count;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- exit sql-client</span></span><br><span class="line">EXIT;</span><br></pre></td></tr></table></figure>
<p>停止 Flink 本地集群：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">.<span class="operator">/</span>bin<span class="operator">/</span>stop<span class="operator">-</span>cluster.sh</span><br></pre></td></tr></table></figure>
<h2 id="祝贺"><a href="#祝贺" class="headerlink" title="祝贺"></a>祝贺</h2><p>恭喜你完成 Flink Table Store 的快速入门。相信你对 Flink Table Store 已经有了初步的了解。</p>
<p>内容来源：</p>
<p><a href="https://nightlies.apache.org/flink/flink-table-store-docs-release-0.2/docs/try-table-store/quick-start/">https://nightlies.apache.org/flink/flink-table-store-docs-release-0.2/docs/try-table-store/quick-start/</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
        <tag>Flink Table Store</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch使用Query DSL批量写数据至索引报json_e_o_f_exception异常</title>
    <url>/2022/10/13/how-to-solve-json-e-o-f-exception-on-bulk-index/</url>
    <content><![CDATA[<p>我在 Kibana 的开发工具页面中使用 Query DSL 给索引批量添加数据时，出现了 json_e_o_f_exception 异常。</p>
<p>重现步骤如下：</p>
<p>创建索引 DSL：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT user_info_v202210120517219 </span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;refresh_interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1s&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;number_of_replicas&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;number_of_shards&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;create_time&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;date&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;user_type_id&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;user_type_name&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>批量添加数据 DSL：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT user_info_v202210120517219/_bulk</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022001&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">2022001</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17612345678&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;create_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-08-12 22:54:09&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;user_type_id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;user_type_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SVIP&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022002&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">2022002</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17712345678&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;create_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-08-13 09:14:10&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;user_type_id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;user_type_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;VIP&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>但结果返回了 500 错误，具体返回内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;root_cause&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;json_e_o_f_exception&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unexpected end-of-input: expected close marker for Object (start marker at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@2501da6e; line: 1, column: 1])\n at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@2501da6e; line: 2, column: 3]&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;json_e_o_f_exception&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unexpected end-of-input: expected close marker for Object (start marker at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@2501da6e; line: 1, column: 1])\n at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@2501da6e; line: 2, column: 3]&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">500</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>批量添加数据 DSL 有什么问题吗？</p>
<hr>
<p>批量添加数据 DSL 里数据格式有问题, <code>_bulk</code> 生成文档需要 JSON 格式，并且不能有换行符。改成如下就可以了：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT user_info_v202210120517219/_bulk</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022001&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span><span class="number">2022001</span><span class="punctuation">,</span><span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span><span class="string">&quot;17612345678&quot;</span><span class="punctuation">,</span><span class="attr">&quot;create_time&quot;</span><span class="punctuation">:</span><span class="string">&quot;2022-08-12 22:54:09&quot;</span><span class="punctuation">,</span><span class="attr">&quot;user_type_id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;user_type_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;SVIP&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022002&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span><span class="number">2022002</span><span class="punctuation">,</span><span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span><span class="string">&quot;17712345678&quot;</span><span class="punctuation">,</span><span class="attr">&quot;create_time&quot;</span><span class="punctuation">:</span><span class="string">&quot;2022-08-13 09:14:10&quot;</span><span class="punctuation">,</span><span class="attr">&quot;user_type_id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;user_type_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;VIP&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>返回结果如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;errors&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;items&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;user_info_v202210120517219&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;_doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2022001&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;user_info_v202210120517219&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;_doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2022002&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程 Q&amp;A</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS安装MySQL 5.7失败：GPG Key验证不通过</title>
    <url>/2022/04/13/centos-install-mysql-gpg-key-error/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在 CentOS 系统，通过 yum 命令安装 MySQL 5.7 时，出现如下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Public key <span class="keyword">for</span> mysql-community-server-5.7.37-1.el7.x86_64.rpm is not installed</span><br><span class="line"></span><br><span class="line"> Failing package is: mysql-community-server-5.7.37-1.el7.x86_64</span><br><span class="line"> GPG Keys are configured as: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure>
<p>yum 命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install mysql-server</span><br></pre></td></tr></table></figure>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>从错误信息可以确认这是由 GPG Key 验证没有通过引起的。解决方法如下：</p>
<p>方法一：</p>
<p>yum 安装命令加上参数 <code>--nogpgcheck</code>，即绕过 GPG Key 验证：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install mysql-server --nogpgcheck</span><br></pre></td></tr></table></figure>
<p>方法二<strong><em>（推荐）</em></strong>：</p>
<p>导入 GPG KEY：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br></pre></td></tr></table></figure>
<p>导入成功后，再执行 yum 安装命令即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install mysql-server</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7安装MySQL 5.7 步骤（yum安装）</title>
    <url>/2022/04/05/how-to-install-mysql57-on-centos7/</url>
    <content><![CDATA[<h2 id="一、添加-yum-源"><a href="#一、添加-yum-源" class="headerlink" title="一、添加 yum 源"></a>一、添加 yum 源</h2><p>下载 MySQL 5.7 rpm 包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>安装 rpm 包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>完成后会在 /etc/yum.repos.d/ 目录下生成两个repo文件：</p>
<p>mysql-community.repo、</p>
<p>mysql-community-source.repo</p>
<h2 id="二、安装-MySQL"><a href="#二、安装-MySQL" class="headerlink" title="二、安装 MySQL"></a>二、安装 MySQL</h2><p>进入 /etc/yum.repos.d 目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br></pre></td></tr></table></figure>
<p>执行 yum 安装命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install mysql-server</span><br></pre></td></tr></table></figure>
<p>安装过程中，会有提示确认信息，一般一路输入 <code>y</code> 即可。</p>
<p>如果显示以下输出，则表明安装已成功。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Installed:</span><br><span class="line">  mysql-community-server.x86_64 0:5.7.37-1.el7</span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  mysql-community-client.x86_64 0:5.7.37-1.el7                          mysql-community-common.x86_64 0:5.7.37-1.el7                          mysql-community-libs.x86_64 0:5.7.37-1.el7</span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>
<h2 id="三、启动-MySQL"><a href="#三、启动-MySQL" class="headerlink" title="三、启动 MySQL"></a>三、启动 MySQL</h2><p>启动 MySQL：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure>
<p>查看 MySQL 状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure>
<p>重启 MySQL：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure>
<p>停止 MySQL：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop mysqld</span><br></pre></td></tr></table></figure>
<p>设置开机启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure>
<h2 id="四、登录-MySQL"><a href="#四、登录-MySQL" class="headerlink" title="四、登录 MySQL"></a>四、登录 MySQL</h2><p>获取 root 用户首次（临时）登录密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&#x27;temporary password&#x27;</span> /var/log/mysqld.log</span><br></pre></td></tr></table></figure>
<p>该命令会显示以下输出，root 用户首次登录密码为 5XetjH9sk9*J ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Note] A temporary password is generated <span class="keyword">for</span> root@localhost: 5XetjH9sk9*J</span><br></pre></td></tr></table></figure>
<p>登录 MySQL：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>
<p>进入 MySQL 后，需要修改用户临时密码，否则执行命令时会提示错误，如执行 <code>show databases</code>，会显示以下错误信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br></pre></td></tr></table></figure>
<p>修改用户密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;这里输入新密码，如2020Super_Star&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>查询 MySQL 密码策略：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHOW VARIABLES LIKE <span class="string">&#x27;validate_password%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>该命令会显示以下信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">+--------------------------------------+--------+</span><br><span class="line">| Variable_name                        | Value  |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">| validate_password_check_user_name    | OFF    |</span><br><span class="line">| validate_password_dictionary_file    |        |</span><br><span class="line">| validate_password_length             | 8      |</span><br><span class="line">| validate_password_mixed_case_count   | 1      |</span><br><span class="line">| validate_password_number_count       | 1      |</span><br><span class="line">| validate_password_policy             | MEDIUM |</span><br><span class="line">| validate_password_special_char_count | 1      |</span><br><span class="line">+--------------------------------------+--------+</span><br><span class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure>
<p>也就是说，密码要求长度要大于8位，包含大写字母、小写字母、数字、标点符号。如：<code>2020Super_Star</code> 。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch索引添加字段</title>
    <url>/2022/08/25/adding-new-fields-in-an-existing-index-elasticsearch/</url>
    <content><![CDATA[<p>本文基于 7.1.0 版本的 Elasticsearch 演示如何给已有的索引添加新字段，并对比添加新字段前后的数据情况。（以下 API 调用均在 Kibana 开发工具上操作）</p>
<p><strong>创建索引 user_info_v220101：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT user_info_v220101 </span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;user_id&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;phone&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;create_time&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;date&quot;,</span><br><span class="line">        &quot;format&quot;: &quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>插入一条数据：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT user_info_v220101/_doc/2022001</span><br><span class="line">&#123;</span><br><span class="line">  &quot;user_id&quot;: 2022001,</span><br><span class="line">  &quot;phone&quot;: &quot;17700009999&quot;,</span><br><span class="line">  &quot;create_time&quot;: &quot;2022-08-12 12:21:32&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>查询索引数据：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET user_info_v220101/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该查询返回结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 0,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 3,</span><br><span class="line">    &quot;successful&quot; : 3,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 1,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;user_info_v220101&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;2022001&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;user_id&quot; : 2022001,</span><br><span class="line">          &quot;phone&quot; : &quot;17700009999&quot;,</span><br><span class="line">          &quot;create_time&quot; : &quot;2022-08-12 12:21:32&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>查询该索引 Mapping：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET user_info_v220101/_mapping</span><br></pre></td></tr></table></figure>
<p>返回结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;user_info_v220101&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;create_time&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;date&quot;,</span><br><span class="line">          &quot;format&quot; : &quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;phone&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;keyword&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;user_id&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;integer&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>查询索引 settings：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET user_info_v220101/_settings</span><br></pre></td></tr></table></figure>
<p>返回结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;user_info_v220101&quot; : &#123;</span><br><span class="line">    &quot;settings&quot; : &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;refresh_interval&quot; : &quot;60s&quot;,</span><br><span class="line">        &quot;number_of_shards&quot; : &quot;3&quot;,</span><br><span class="line">        &quot;translog&quot; : &#123;</span><br><span class="line">          &quot;flush_threshold_size&quot; : &quot;2gb&quot;,</span><br><span class="line">          &quot;sync_interval&quot; : &quot;100s&quot;,</span><br><span class="line">          &quot;durability&quot; : &quot;async&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;provided_name&quot; : &quot;user_info_v220101&quot;,</span><br><span class="line">        &quot;merge&quot; : &#123;</span><br><span class="line">          &quot;policy&quot; : &#123;</span><br><span class="line">            &quot;max_merged_segment&quot; : &quot;1000mb&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;creation_date&quot; : &quot;1661421690275&quot;,</span><br><span class="line">        &quot;number_of_replicas&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;uuid&quot; : &quot;UMFTwtCqTPaFJPacH6zSRg&quot;,</span><br><span class="line">        &quot;version&quot; : &#123;</span><br><span class="line">          &quot;created&quot; : &quot;7010099&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>给索引添加字段（<em>user_type_id, user_type_name</em>）：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET user_info_v220101/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;user_type_id&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;user_type_name&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>重新查询索引 Mapping：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET user_info_v220101/_mapping</span><br></pre></td></tr></table></figure>
<p>返回结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;user_info_v220101&quot; : &#123;</span><br><span class="line">    &quot;mappings&quot; : &#123;</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;create_time&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;date&quot;,</span><br><span class="line">          &quot;format&quot; : &quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;phone&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;keyword&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;user_id&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;integer&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;user_type_id&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;integer&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;user_type_name&quot; : &#123;</span><br><span class="line">          &quot;type&quot; : &quot;keyword&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到，字段 <em>user_type_id, user_type_name</em> 已成功添加。</p>
<p><strong>重新查询索引数据，返回结果如下，已有的文档没有新增的字段：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 0,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 3,</span><br><span class="line">    &quot;successful&quot; : 3,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 1,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;user_info_v220101&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;2022001&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;user_id&quot; : 2022001,</span><br><span class="line">          &quot;phone&quot; : &quot;17700009999&quot;,</span><br><span class="line">          &quot;create_time&quot; : &quot;2022-08-12 12:21:32&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>插入一条新数据：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT user_info_v220101/_doc/2022002</span><br><span class="line">&#123;</span><br><span class="line">  &quot;user_id&quot;: 2022002,</span><br><span class="line">  &quot;phone&quot;: &quot;17612345678&quot;,</span><br><span class="line">  &quot;create_time&quot;: &quot;2022-08-13 22:54:09&quot;,</span><br><span class="line">  &quot;user_type_id&quot;: 2,</span><br><span class="line">  &quot;user_type_name&quot;: &quot;SVIP&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>查询索引数据，结果如下：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 1,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 3,</span><br><span class="line">    &quot;successful&quot; : 3,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : &#123;</span><br><span class="line">      &quot;value&quot; : 2,</span><br><span class="line">      &quot;relation&quot; : &quot;eq&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;max_score&quot; : 1.0,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;user_info_v220101&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;2022002&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;user_id&quot; : 2022002,</span><br><span class="line">          &quot;phone&quot; : &quot;17612345678&quot;,</span><br><span class="line">          &quot;create_time&quot; : &quot;2022-08-13 22:54:09&quot;,</span><br><span class="line">          &quot;user_type_id&quot; : 2,</span><br><span class="line">          &quot;user_type_name&quot; : &quot;SVIP&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;user_info_v220101&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;2022001&quot;,</span><br><span class="line">        &quot;_score&quot; : 1.0,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;user_id&quot; : 2022001,</span><br><span class="line">          &quot;phone&quot; : &quot;17700009999&quot;,</span><br><span class="line">          &quot;create_time&quot; : &quot;2022-08-12 12:21:32&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>给索引添加已经存在字段（<em>user_type_id, user_type_name</em>）：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET user_info_v220101/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;user_type_id&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;user_type_name&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>返回结果仍为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;acknowledged&quot; : true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>并不会提示错误。</p>
<p>小结</p>
<ul>
<li>给索引添加新字段，原来的文档记录不会自动加上新增的字段；</li>
<li>给索引添加已经存在的字段时，并不会出错。</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Flink 1.14.5 发版公告</title>
    <url>/2022/06/23/apache-flink-release-1_14_5/</url>
    <content><![CDATA[<p>本文翻译自 Apache Flink 社区博文——<a href="https://flink.apache.org/news/2022/06/22/release-1.14.5.html">《Apache Flink 1.14.5 Release Announcement》</a><br>。</p>
<hr>
<p>Apache Flink 社区很荣幸地宣布 Flink 1.14 的另一个错误修复版本正式发布。</p>
<p>此版本包括 67 个错误和漏洞修复以及 Flink 1.14 的小改进。您可在下面找到所有错误修复和改进的列表（不包括对构建基础架构和构建稳定性的改进）。有关所有更改的完整列表，请参阅：<a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12315522&amp;version=12351388">JIRA 列表</a>。</p>
<p>我们强烈建议所有用户升级到 Flink 1.14.5 版本。</p>
<blockquote>
<p>原文：<br>The Apache Flink Community is pleased to announce another bug fix release for Flink 1.14.<br>This release includes 67 bugs, vulnerability fixes and minor improvements for Flink 1.14. Below you will find a list of all bugfixes and improvements (excluding improvements to the build infrastructure and build stability). For a complete list of all changes see: <a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12315522&amp;version=12351388">JIRA</a>.<br>We highly recommend all users to upgrade to Flink 1.14.5.</p>
</blockquote>
<h2 id="发行工件（Release-Artifacts）"><a href="#发行工件（Release-Artifacts）" class="headerlink" title="发行工件（Release Artifacts）"></a>发行工件（<strong>Release Artifacts）</strong></h2><h3 id="Maven-依赖（Maven-Dependencies）"><a href="#Maven-依赖（Maven-Dependencies）" class="headerlink" title="Maven 依赖（Maven Dependencies）"></a><strong>Maven 依赖（Maven Dependencies）</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.14.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-streaming-java_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.14.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-clients_2.11<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.14.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="二进制文件（Binaries）"><a href="#二进制文件（Binaries）" class="headerlink" title="二进制文件（Binaries）"></a>二进制文件（<strong>Binaries）</strong></h3><p>您可以在更新过的<a href="https://flink.apache.org/downloads.html">下载页面</a>上找到这些二进制文件。</p>
<p>You can find the binaries on the updated <a href="https://flink.apache.org/downloads.html">Downloads page</a>.</p>
<h3 id="Docker-镜像（Docker-Images）"><a href="#Docker-镜像（Docker-Images）" class="headerlink" title="Docker 镜像（Docker Images）"></a><strong>Docker 镜像（Docker Images）</strong></h3><ul>
<li><a href="https://hub.docker.com/_/flink?tab=tags&amp;page=1&amp;name=1.14.5">library/flink</a> (官方镜像，official images)</li>
<li><a href="https://hub.docker.com/r/apache/flink/tags?page=1&amp;name=1.14.5">apache/flink</a> (ASF 仓库，ASF repository)</li>
</ul>
<h3 id="PyPi"><a href="#PyPi" class="headerlink" title="PyPi"></a><strong>PyPi</strong></h3><ul>
<li><a href="https://pypi.org/project/apache-flink/1.14.5/">apache-flink==1.14.5</a></li>
</ul>
<h2 id="发行说明（Release-Notes）"><a href="#发行说明（Release-Notes）" class="headerlink" title="发行说明（Release Notes）"></a>发行说明（<strong>Release Notes）</strong></h2><h3 id="子任务（Sub-task）"><a href="#子任务（Sub-task）" class="headerlink" title="子任务（Sub-task）"></a>子任务（<strong>Sub-task）</strong></h3><ul>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25800">FLINK-25800</a>] - Update wrong links in the datastream/execution_mode.md page.</li>
</ul>
<h3 id="Bug-修复"><a href="#Bug-修复" class="headerlink" title="Bug 修复"></a><strong>Bug 修复</strong></h3><ul>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-22984">FLINK-22984</a>] - UnsupportedOperationException when using Python UDF to generate watermark</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24491">FLINK-24491</a>] - ExecutionGraphInfo may not be archived when the dispatcher terminates</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25227">FLINK-25227</a>] - Comparing the equality of the same (boxed) numeric values returns false</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25440">FLINK-25440</a>] - Apache Pulsar Connector Document description error about ‘Starting Position’.</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25904">FLINK-25904</a>] - NullArgumentException when accessing checkpoint stats on standby JobManager</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26016">FLINK-26016</a>] - FileSystemLookupFunction does not produce correct results when hive table uses columnar storage</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26018">FLINK-26018</a>] - Unnecessary late events when using the new KafkaSource</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26049">FLINK-26049</a>] - The tolerable-failed-checkpoints logic is invalid when checkpoint trigger failed</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26285">FLINK-26285</a>] - ZooKeeperStateHandleStore does not handle not existing nodes properly in getAllAndLock</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26334">FLINK-26334</a>] - When timestamp - offset + windowSize &lt; 0, elements cannot be assigned to the correct window</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26381">FLINK-26381</a>] - Wrong document order of Chinese version</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26395">FLINK-26395</a>] - The description of RAND_INTEGER is wrong in SQL function documents</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26504">FLINK-26504</a>] - Fix the incorrect type error in unbounded Python UDAF</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26536">FLINK-26536</a>] - PyFlink RemoteKeyedStateBackend#merge_namespaces bug</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26543">FLINK-26543</a>] - Fix the issue that exceptions generated in startup are missed in Python loopback mode</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26550">FLINK-26550</a>] - Correct the information of checkpoint failure</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26607">FLINK-26607</a>] - There are multiple MAX_LONG_VALUE value errors in pyflink code</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26629">FLINK-26629</a>] - Error in code comment for SubtaskStateMapper.RANGE</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26645">FLINK-26645</a>] - Pulsar Source subscribe to a single topic partition will consume all partitions from that topic</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26708">FLINK-26708</a>] - TimestampsAndWatermarksOperator should not propagate WatermarkStatus</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26738">FLINK-26738</a>] - Default value of StateDescriptor is valid when enable state ttl config</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26775">FLINK-26775</a>] - PyFlink WindowOperator#process_element register wrong cleanup timer</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26846">FLINK-26846</a>] - Gauge metrics doesn’t work in PyFlink</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26855">FLINK-26855</a>] - ImportError: cannot import name ‘environmentfilter’ from ‘jinja2’</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26920">FLINK-26920</a>] - Job executes failed with “The configured managed memory fraction for Python worker process must be within (0, 1], was: %s.”</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27108">FLINK-27108</a>] - State cache clean up doesn’t work as expected</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27174">FLINK-27174</a>] - Non-null check for bootstrapServers field is incorrect in KafkaSink</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27223">FLINK-27223</a>] - State access doesn’t work as expected when cache size is set to 0</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27255">FLINK-27255</a>] - Flink-avro does not support serialization and deserialization of avro schema longer than 65535 characters</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27315">FLINK-27315</a>] - Fix the demo of MemoryStateBackendMigration</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27409">FLINK-27409</a>] - Cleanup stale slot allocation record when the resource requirement of a job is empty</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27442">FLINK-27442</a>] - Module flink-sql-avro-confluent-registry does not configure Confluent repo</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27545">FLINK-27545</a>] - Update examples in PyFlink shell</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27676">FLINK-27676</a>] - Output records from on_timer are behind the triggering watermark in PyFlink</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27733">FLINK-27733</a>] - Rework on_timer output behind watermark bug fix</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27751">FLINK-27751</a>] - Dependency resolution from repository.jboss.org fails on CI</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27760">FLINK-27760</a>] - NPE is thrown when executing PyFlink jobs in batch mode</li>
</ul>
<h3 id="新特性（New-Feature）"><a href="#新特性（New-Feature）" class="headerlink" title="新特性（New Feature）"></a>新特性（<strong>New Feature）</strong></h3><ul>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26382">FLINK-26382</a>] - Add Chinese documents for flink-training exercises</li>
</ul>
<h3 id="优化（Improvement）"><a href="#优化（Improvement）" class="headerlink" title="优化（Improvement）"></a>优化（<strong>Improvement）</strong></h3><ul>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-5151">FLINK-5151</a>] - Add discussion about object mutations to heap-based state backend docs.</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-23843">FLINK-23843</a>] - Exceptions during “SplitEnumeratorContext.runInCoordinatorThread()” should cause Global Failure instead of Process Kill</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24274">FLINK-24274</a>] - Wrong parameter order in documentation of State Processor API</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-24384">FLINK-24384</a>] - Count checkpoints failed in trigger phase into numberOfFailedCheckpoints</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26130">FLINK-26130</a>] - Document why and when user would like to increase network buffer size</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26575">FLINK-26575</a>] - Improve the info message when restoring keyed state backend</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26650">FLINK-26650</a>] - Avoid to print stack trace for checkpoint trigger failure if not all tasks are started</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26788">FLINK-26788</a>] - AbstractDeserializationSchema should add cause when thow a FlinkRuntimeException</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27088">FLINK-27088</a>] - The example of using StringDeserializer for deserializing Kafka message value as string has an error</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27480">FLINK-27480</a>] - KafkaSources sharing the groupId might lead to InstanceAlreadyExistException warning</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-27776">FLINK-27776</a>] - Throws exception when udaf used in sliding window does not implement merge method in PyFlink</li>
</ul>
<h3 id="技术债（Technical-Debt）"><a href="#技术债（Technical-Debt）" class="headerlink" title="技术债（Technical Debt）"></a>技术债（<strong>Technical Debt）</strong></h3><ul>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-25694">FLINK-25694</a>] - Upgrade Presto to resolve GSON/Alluxio Vulnerability</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26352">FLINK-26352</a>] - Missing license header in WebUI source files</li>
<li>[<a href="https://issues.apache.org/jira/browse/FLINK-26961">FLINK-26961</a>] - Update multiple Jackson dependencies to v2.13.2 and v2.13.2.1</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>HiveSQL内置函数——DATEDIFF函数</title>
    <url>/2022/08/16/hive-sql-built-in-functions-datediff/</url>
    <content><![CDATA[<h2 id="DATEDIFF-string-enddate-string-startdate"><a href="#DATEDIFF-string-enddate-string-startdate" class="headerlink" title="DATEDIFF(string enddate, string startdate)"></a><em>DATEDIFF(string enddate, string startdate)</em></h2><p>返回从 <em>startdate</em> 到 <em>enddate</em> 的天数。</p>
<p>如查询从 2022-08-01 到 2022-08-16 的天数：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 该查询返回结果为 15</span></span><br><span class="line"><span class="keyword">SELECT</span> DATEDIFF(<span class="string">&#x27;2022-08-16&#x27;</span>,<span class="string">&#x27;2022-08-01&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>一个常见的例子是计算用户未活跃时长（天），该指标的定义：用户最后一次登录时间距离某天（一般是昨日）的天数。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 参数dt：20220815</span></span><br><span class="line"><span class="keyword">SELECT</span>  user_id, </span><br><span class="line">        DATEDIFF(FROM_UNIXTIME(UNIX_tIMESTAMP(<span class="string">&#x27;$&#123;dt&#125;&#x27;</span>,<span class="string">&#x27;yyyyMMdd&#x27;</span>)), last_login_time) </span><br><span class="line"><span class="keyword">FROM</span> mydw.dwd_user</span><br></pre></td></tr></table></figure>
<p>输出示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> user_id    <span class="operator">|</span> _c1       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1595225121</span> <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1595224632</span> <span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Java使用Gson判断字符串是否为JSON格式</title>
    <url>/2022/12/30/java-gson-validate-json-string/</url>
    <content><![CDATA[<h2 id="配置Maven依赖"><a href="#配置Maven依赖" class="headerlink" title="配置Maven依赖"></a>配置Maven依赖</h2><p>首先，在 <em>pom.xml</em> 文件中配置 <em>gson</em> 依赖项：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>gson</em> 版本根据实际情况进行选择，建议使用最新版本（见 <a href="https://search.maven.org/search?q=g:com.google.code.gson%20AND%20a:gson&amp;core=gav">Maven Central</a> ）。</p>
<p>本文使用的是 <em>2.10</em> 版本（当前最新版本）。</p>
<h2 id="非严格验证"><a href="#非严格验证" class="headerlink" title="非严格验证"></a>非严格验证</h2><p>Gson 库的 JsonParser 类提供了 <code>parseString()</code> 方法，用于将指定的 JSON 字符串解析成 JsonElements 对象。如果指定的字符串不是有效的 JSON 格式，则在解析的过程中会抛出 JsonSyntaxException 类型异常。</p>
<p>我们可以使用该方法来判断字符串是否为 JSON 格式，如果在解析过程中出现错误，说明指定的字符串不是有效的 JSON 格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String json)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        JsonParser.parseString(json);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonSyntaxException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">	<span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;id\&quot;:20990981,\&quot;name\&quot;:\&quot;Johnson\&quot;,\&quot;tag\&quot;:\&quot;Javaer,Student\&quot;,\&quot;platform\&quot;:\&quot;AL\&quot;&#125;&quot;</span>;</span><br><span class="line">	System.out.println(isValid(json));</span><br><span class="line"></span><br><span class="line">	json = <span class="string">&quot;[&#123;\&quot;id\&quot;:20990981,\&quot;name\&quot;:\&quot;Johnson\&quot;,\&quot;tag\&quot;:\&quot;Javaer,Student\&quot;,\&quot;platform\&quot;:\&quot;AL\&quot;&#125;]&quot;</span>;</span><br><span class="line">	System.out.println(isValid(json));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment">true</span></span><br><span class="line"><span class="comment">true</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>需要注意的是，该方法的默认策略认为单独的字符串、数字值作为 JsonElement 节点的一部分是有效的。也就是说，它认为单个字符串或数字是有效的 JSON 格式。</p>
<p>以下代码示例，演示了该方法会把单独的字符串认为是一个有效的 JSON 格式字符串：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">	<span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> <span class="string">&quot;Johnson&quot;</span>;</span><br><span class="line">	System.out.println(isValid(json));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment">true</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>如果想把这种情况看作是无效的 JSON 字符串，我们可以使用以下的方法进行严格验证。</p>
<h2 id="严格验证"><a href="#严格验证" class="headerlink" title="严格验证"></a>严格验证</h2><p>为实现严格的验证策略，需要先创建了一个 TypeAdapter 对象，并将 JsonElement 类定义为一个必要的类型匹配。然后调用 TypeAdapter 对象的 <code>fromJson()</code> 方法，如果指定的字符串不是有效的 JSON 对象或数组，则会抛出 JsonSyntaxException 异常。</p>
<p>方法的代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isValidStrictly</span><span class="params">(String json)</span> &#123;</span><br><span class="line">    TypeAdapter&lt;JsonElement&gt; strictAdapter = <span class="keyword">new</span> <span class="title class_">Gson</span>().getAdapter(JsonElement.class);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        strictAdapter.fromJson(json);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JsonSyntaxException | IOException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>调用该方法，校验一个单独的字符串是否有效的 JSON 格式。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">	<span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> <span class="string">&quot;Johnson&quot;</span>;</span><br><span class="line">  System.out.println(isValidStrictly(json));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment">false</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>P.S. 本文示例代码托管在 GitHub 上。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>HiveSQL内置函数——COALESCE函数</title>
    <url>/2022/08/15/hive-sql-built-in-functions-coalesce/</url>
    <content><![CDATA[<h2 id="COALESCE-T-v1-T-v2-…"><a href="#COALESCE-T-v1-T-v2-…" class="headerlink" title="COALESCE(T v1, T v2, …)"></a><em>COALESCE(T v1, T v2, …)</em></h2><p>COALESCE，读作 /ˌkəʊəˈles/，该函数用于返回第一个不为 <em>NULL</em> 的 <em>v</em>，如果所有 <em>v</em> 都为 <em>NULL</em>，则返回 <em>NULL</em>。</p>
<p>举个例子：</p>
<p><em>SELECT COALESCE(A, B, C) FROM TABLE_NAME</em></p>
<p>该 SQL 的返回值判断过程如下：</p>
<p>如果 <em>A</em> 不为 <em>NULL</em>，则返回 <em>A</em>，否则判断 <em>B</em> 是否为 <em>NULL</em>，若 <em>B</em> 不为 <em>NULL</em>，则返回 <em>B</em>，否则继续判断 <em>C</em> 是否为 <em>NULL</em>，若 <em>C</em> 不为 <em>NULL</em>，则返回 <em>C</em>，否则返回 <em>NULL</em>。</p>
<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>一个常用的场景是在一张表中的某个字段的默认值为 <em>NULL</em>，在查询的时候，如果该字段为 <em>NULL</em>，我们希望返回其他有意义的值而不是 <em>NULL</em> 值，这时就可以使用 <em>COALESCE</em> 函数。</p>
<p>例如，用户表（<em>dwd_user</em>）中的常驻城市字段（<em>city</em>），如果为 <em>NULL</em> 时，我们希望在返回给最终用户时可以显示“<em>未知</em>”，而不是 <em>NULL</em> 值，可以这么写：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COALESCE</span>(city, ‘未知’) <span class="keyword">FROM</span> dwd_user</span><br></pre></td></tr></table></figure>
<p>另一个常用场景是两张表做 <em>FULL JOIN</em> 时，取字段不为 <em>NULL</em> 的字段值。</p>
<p>例如，表 <em>A(COL1, COL2, COL3)</em> 和表 <em>B(COL1, COL2, COL3)</em> 做 <em>FULL JOIN</em> 关联，如果表 <em>A</em> 的字段值不为 <em>NULL</em>，则取表 <em>A</em> 的字段，否则取表 <em>B</em> 的字段：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">		<span class="built_in">COALESCE</span>(t1.COL1, t2.COL1),</span><br><span class="line">		<span class="built_in">COALESCE</span>(t1.COL2, t2.COL2),</span><br><span class="line">		<span class="built_in">COALESCE</span>(t1.COL3, t2.COL3)</span><br><span class="line"><span class="keyword">FROM</span> A t1</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">JOIN</span> B t2 <span class="keyword">ON</span> t1.COL1 <span class="operator">=</span> t2.COL2</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Java17新特性：密封类(Sealed Classes)</title>
    <url>/2022/03/27/java17-new-features-sealed-class/</url>
    <content><![CDATA[<h2 id="密封类-Sealed-Classes"><a href="#密封类-Sealed-Classes" class="headerlink" title="密封类(Sealed Classes)"></a>密封类(Sealed Classes)</h2><p>通过在类定义前面放置关键字 <code>sealed</code>，可以将类声明为密封类。同时使用关键字 <code>permits</code> 来限制哪些类可以继承或实现该密封类。在下面的示例中，声明了密封类 <code>BasePosition</code>，并且只允许类 <code>PointGuard</code> 和类 <code>ShootingGuard</code> 可以继承该密封类。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title class_">BasePosition</span> <span class="keyword">permits</span> PointGuard, ShootingGuard &#123;</span><br><span class="line">	<span class="comment">// Class members here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关键字 <code>sealed</code> 除了可以修饰类外，还可以用来修饰接口，只允许哪些类可以实现该接口。例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> <span class="keyword">permits</span> UserServiceImpl &#123;</span><br><span class="line">    <span class="comment">// Some methods here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果定义的密封类继承了父类，或实现了其他接口，那么关键字 <code>permits</code> 需要放在关键字 <code>extends</code>、<code>implements</code> 的后面。在下面的示例中，密封类 <code>Felidae</code> 继承了抽象类 <code>Animal</code>，并实现了 <code>BaseAction</code> 接口，只允许类 <code>Lion</code> 可以继承该密封类。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title class_">Felidae</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> <span class="keyword">implements</span> <span class="title class_">BaseAction</span> <span class="keyword">permits</span> Lion &#123;</span><br><span class="line">    <span class="comment">// Some methods here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="密封类的子类"><a href="#密封类的子类" class="headerlink" title="密封类的子类"></a>密封类的子类</h2><p>根据密封性的传递要求，密封类的子类必须被关键字 <code>sealed</code>、<code>non-sealed</code>、<code>final</code> 中的一个所修饰：</p>
<ul>
<li><code>sealed</code>：继续延续密封类特性，继续指定继承的类；</li>
<li><code>non-sealed</code>：声明这个类为非密封类，可以被任意继承；</li>
<li><code>final</code>：不允许继承。</li>
</ul>
<p>例如，将子类 <code>Lion</code> 继续声明为密封类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title class_">Lion</span> <span class="keyword">extends</span> <span class="title class_">Felidae</span> <span class="keyword">permits</span> LionBaby &#123;</span><br><span class="line">    <span class="comment">// Class members here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>将子类 <code>Lion</code> 声明为非密封类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">non-sealed</span> <span class="keyword">class</span> <span class="title class_">Lion</span> <span class="keyword">extends</span> <span class="title class_">Felidae</span> &#123;</span><br><span class="line">    <span class="comment">// Class members here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>将子类 <code>Lion</code> 定义为不允许被其他类继承：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Lion</span> <span class="keyword">extends</span> <span class="title class_">Felidae</span> &#123;</span><br><span class="line">	  <span class="comment">// Class members here.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>密封类(Sealed Classes)这一特性首次出现是在 Java15 的 JEP 360 中，并在 Java 16 的 JEP 397 中进行了增强，最终在 Java 17 这个长期支持的版本中成为正式的新特性（JEP 409）。密封类的作用是限制类的继承或接口的实现，只允许特定的类可以继承或实现。</p>
<p>与密封类相关的主要关键字有 <code>sealed</code>、<code>non-sealed</code> 和 <code>permits</code>，它们的作用分别如下：</p>
<ul>
<li><code>sealed</code>：修饰类/接口，用来描述这个类/接口为密封类/接口</li>
<li><code>non-sealed</code>：修饰类/接口，用来描述这个类/接口为非密封类/接口</li>
<li><code>permits</code>：用在<code>extends</code>和<code>implements</code>之后，指定可以继承或实现的类</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java方法如何返回多个值</title>
    <url>/2022/08/22/how-to-return-many-value-in-java-method/</url>
    <content><![CDATA[<p>我们知道，<strong>Java 方法不支持有多个返回值。</strong>如果要在一个 Java 方法中返回多个处理结果，有以下几种方式：</p>
<h2 id="使用数组"><a href="#使用数组" class="headerlink" title="使用数组"></a>使用数组</h2><p>数组元素要求类型相同，如果方法的处理结果类型不同，比如有数值类型、字符串类型等，可以使用像 <code>List&lt;Object&gt;</code> 来存放。此种方法最大的弊端是调用方需要知道列表中每一个 Object 的实际类型并做强制转换，不够优雅，维护、使用成本也比较高。实际开发中不推荐使用。</p>
<h2 id="使用映射"><a href="#使用映射" class="headerlink" title="使用映射"></a>使用映射</h2><p>如 <code>Map&lt;String, Object&gt;</code>，使用 Object 类型存放结果，调用方需要知道每个 key 值，以及每个 key 值对应的 Object 实际类型。此种方法同样不够优雅，维护、使用成本也比较高。实际开发中不推荐使用。</p>
<h2 id="自定义类"><a href="#自定义类" class="headerlink" title="自定义类"></a><strong>自定义类</strong></h2><p>将方法的多个处理结果封装成一个类进行返回，比如方法中需要返回的处理结果有整数类型、浮点数类型和字符串类型，我们可以封装一个这样的类来接收返回值：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProcessResult</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> intVal;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span> floatVal;</span><br><span class="line">    <span class="keyword">private</span> String stringVal;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ProcessResult</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ProcessResult</span><span class="params">(<span class="type">int</span> intVal, <span class="type">float</span> floatVal, String stringVal)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.intVal = intVal;</span><br><span class="line">        <span class="built_in">this</span>.floatVal = floatVal;</span><br><span class="line">        <span class="built_in">this</span>.stringVal = stringVal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getIntVal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> intVal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIntVal</span><span class="params">(<span class="type">int</span> intVal)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.intVal = intVal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getFloatVal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> floatVal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFloatVal</span><span class="params">(<span class="type">float</span> floatVal)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.floatVal = floatVal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getStringVal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> stringVal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStringVal</span><span class="params">(String stringVal)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.stringVal = stringVal;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>处理方法返回结果类型为 <code>ProcessResult</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> ProcessResult <span class="title function_">process</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// ... 此处省略业务逻辑处理代码</span></span><br><span class="line">    <span class="comment">// 以下为处理结果</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">intVal</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">float</span> <span class="variable">floatVal</span> <span class="operator">=</span> <span class="number">2F</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">stringVal</span> <span class="operator">=</span> <span class="string">&quot;test code&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回处理结果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ProcessResult</span>(intVal, floatVal, stringVal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>此种方式的一个弊端是可能需要封装多个类来处理不同方法的返回结果。</p>
<h2 id="使用第三方库封装的类"><a href="#使用第三方库封装的类" class="headerlink" title="使用第三方库封装的类"></a>使用第三方库封装的类</h2><p>借助第三方库封装好的类来返回方法的处理结果的好处是，不用自己针对每一个方法都新建一个类来接收处理结果。</p>
<p>这里以第三方包 <code>commons-lang3</code> 为例。</p>
<p>比如需要返回的值有两个，可以使用的 <code>org.apache.commons.lang3.tuple.Pair&lt;L, R&gt;</code> 类来接收。</p>
<p>首先在 pom.xml 添加依赖：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!-- commons-lang3 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">3.11</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<p>然后，将方法的返回类型定义为 <code>Pair</code>，比如需要返回的两个结果有整数、字符串类型，返回类型定义为 <code>Pair&lt;Integer, String&gt;</code>，示例代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Pair&lt;Integer, String&gt; <span class="title function_">process</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// ... 此处省略业务逻辑处理代码</span></span><br><span class="line">    <span class="comment">// 以下为处理结果</span></span><br><span class="line">    Pair&lt;Integer, String&gt; pair = Pair.of(<span class="number">23</span>, <span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">    <span class="comment">// 返回处理结果</span></span><br><span class="line">    <span class="keyword">return</span> pair;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后，调用方获取结果的方式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Pair&lt;Integer, String&gt; pair = process();</span><br><span class="line"><span class="type">Integer</span> <span class="variable">intVal</span> <span class="operator">=</span> pair.getLeft();</span><br><span class="line"><span class="type">String</span> <span class="variable">strVal</span> <span class="operator">=</span> pair.getRight();</span><br></pre></td></tr></table></figure>
<p>同样，如果需要在方法中返回三个值，可以使用 <code>org.apache.commons.lang3.tuple.Triple&lt;L, M, R&gt;</code>类。其初始化语法如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Triple.of(L left, M middle, R right)</span><br></pre></td></tr></table></figure>
<p>获取结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">triple.getLeft();</span><br><span class="line">triple.getMiddle();</span><br><span class="line">triple.getRight();</span><br></pre></td></tr></table></figure>
<h2 id="自定义通用类"><a href="#自定义通用类" class="headerlink" title="自定义通用类"></a>自定义通用类</h2><p>借助第三方包，返回值的数量取决于第三方包封装的类对应能接收的个数。比如使用第三方包 <code>commons-lang3</code>，类 Pair 和 Triple 能接收的个数分别为两个和三个。如果返回值的数量超过三个，则需要自己封装类来处理。但如果针对不同方法的返回结果都封装一个返回类型，则有可能导致这样的类过多。</p>
<p>针对这种情况，我们可以自己封装通用类。比如提前封装接收两个返回值的类、三个个返回值的类、四个返回值的类……但不限定返回值的类型。</p>
<p>如在 Flink 项目中，<em>org.apache.flink.api.java.tuple</em> 包下面就提前封装了多个元组类型。我们可以参考该包下的元组类定义，封装自己的通用类。</p>
<p>以下代码定义了一个可以接收四个返回值的类 <code>Tuple4&lt;T0, T1, T2, T3&gt;</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment"> * or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment"> * distributed with this work for additional information</span></span><br><span class="line"><span class="comment"> * regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment"> * to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment"> * &quot;License&quot;); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment"> * with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// --------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//  THIS IS A GENERATED SOURCE FILE. DO NOT EDIT!</span></span><br><span class="line"><span class="comment">//  GENERATED FROM org.apache.flink.api.java.tuple.TupleGenerator.</span></span><br><span class="line"><span class="comment">// --------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.apache.flink.api.java.tuple;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.annotation.Public;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A tuple with 4 fields. Tuples are strongly typed; each field may be of a separate type. The</span></span><br><span class="line"><span class="comment"> * fields of the tuple can be accessed directly as public fields (f0, f1, ...) or via their position</span></span><br><span class="line"><span class="comment"> * through the &#123;<span class="doctag">@link</span> #getField(int)&#125; method. The tuple field positions start at zero.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Tuples are mutable types, meaning that their fields can be re-assigned. This allows functions</span></span><br><span class="line"><span class="comment"> * that work with Tuples to reuse objects in order to reduce pressure on the garbage collector.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Warning: If you subclass Tuple4, then be sure to either</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> *   &lt;li&gt;not add any new fields, or</span></span><br><span class="line"><span class="comment"> *   &lt;li&gt;make it a POJO, and always declare the element type of your DataStreams/DataSets to your</span></span><br><span class="line"><span class="comment"> *       descendant type. (That is, if you have a &quot;class Foo extends Tuple4&quot;, then don&#x27;t use</span></span><br><span class="line"><span class="comment"> *       instances of Foo in a DataStream&amp;lt;Tuple4&amp;gt; / DataSet&amp;lt;Tuple4&amp;gt;, but declare it as</span></span><br><span class="line"><span class="comment"> *       DataStream&amp;lt;Foo&amp;gt; / DataSet&amp;lt;Foo&amp;gt;.)</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Tuple</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T0&gt; The type of field 0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T1&gt; The type of field 1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T2&gt; The type of field 2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T3&gt; The type of field 3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Public</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tuple4</span>&lt;T0, T1, T2, T3&gt; <span class="keyword">extends</span> <span class="title class_">Tuple</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Field 0 of the tuple. */</span></span><br><span class="line">    <span class="keyword">public</span> T0 f0;</span><br><span class="line">    <span class="comment">/** Field 1 of the tuple. */</span></span><br><span class="line">    <span class="keyword">public</span> T1 f1;</span><br><span class="line">    <span class="comment">/** Field 2 of the tuple. */</span></span><br><span class="line">    <span class="keyword">public</span> T2 f2;</span><br><span class="line">    <span class="comment">/** Field 3 of the tuple. */</span></span><br><span class="line">    <span class="keyword">public</span> T3 f3;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Creates a new tuple where all fields are null. */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Tuple4</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a new tuple and assigns the given values to the tuple&#x27;s fields.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f0 The value for field 0</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f1 The value for field 1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f2 The value for field 2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f3 The value for field 3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Tuple4</span><span class="params">(T0 f0, T1 f1, T2 f2, T3 f3)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.f0 = f0;</span><br><span class="line">        <span class="built_in">this</span>.f1 = f1;</span><br><span class="line">        <span class="built_in">this</span>.f2 = f2;</span><br><span class="line">        <span class="built_in">this</span>.f3 = f3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getArity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">getField</span><span class="params">(<span class="type">int</span> pos)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (pos) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> (T) <span class="built_in">this</span>.f0;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> (T) <span class="built_in">this</span>.f1;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> (T) <span class="built_in">this</span>.f2;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">return</span> (T) <span class="built_in">this</span>.f3;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IndexOutOfBoundsException</span>(String.valueOf(pos));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">setField</span><span class="params">(T value, <span class="type">int</span> pos)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (pos) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">this</span>.f0 = (T0) value;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">this</span>.f1 = (T1) value;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">this</span>.f2 = (T2) value;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">this</span>.f3 = (T3) value;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IndexOutOfBoundsException</span>(String.valueOf(pos));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Sets new values to all fields of the tuple.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f0 The value for field 0</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f1 The value for field 1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f2 The value for field 2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> f3 The value for field 3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFields</span><span class="params">(T0 f0, T1 f1, T2 f2, T3 f3)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.f0 = f0;</span><br><span class="line">        <span class="built_in">this</span>.f1 = f1;</span><br><span class="line">        <span class="built_in">this</span>.f2 = f2;</span><br><span class="line">        <span class="built_in">this</span>.f3 = f3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// -------------------------------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment">// standard utilities</span></span><br><span class="line">    <span class="comment">// -------------------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a string representation of the tuple in the form (f0, f1, f2, f3), where the</span></span><br><span class="line"><span class="comment">     * individual fields are the value returned by calling &#123;<span class="doctag">@link</span> Object#toString&#125; on that field.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> The string representation of the tuple.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(&quot;</span></span><br><span class="line">                + StringUtils.arrayAwareToString(<span class="built_in">this</span>.f0)</span><br><span class="line">                + <span class="string">&quot;,&quot;</span></span><br><span class="line">                + StringUtils.arrayAwareToString(<span class="built_in">this</span>.f1)</span><br><span class="line">                + <span class="string">&quot;,&quot;</span></span><br><span class="line">                + StringUtils.arrayAwareToString(<span class="built_in">this</span>.f2)</span><br><span class="line">                + <span class="string">&quot;,&quot;</span></span><br><span class="line">                + StringUtils.arrayAwareToString(<span class="built_in">this</span>.f3)</span><br><span class="line">                + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Deep equality for tuples by calling equals() on the tuple members.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o the object checked for equality</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if this is equal to o.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span> == o) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!(o <span class="keyword">instanceof</span> Tuple4)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span></span><br><span class="line">        <span class="type">Tuple4</span> <span class="variable">tuple</span> <span class="operator">=</span> (Tuple4) o;</span><br><span class="line">        <span class="keyword">if</span> (f0 != <span class="literal">null</span> ? !f0.equals(tuple.f0) : tuple.f0 != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (f1 != <span class="literal">null</span> ? !f1.equals(tuple.f1) : tuple.f1 != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (f2 != <span class="literal">null</span> ? !f2.equals(tuple.f2) : tuple.f2 != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (f3 != <span class="literal">null</span> ? !f3.equals(tuple.f3) : tuple.f3 != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> f0 != <span class="literal">null</span> ? f0.hashCode() : <span class="number">0</span>;</span><br><span class="line">        result = <span class="number">31</span> * result + (f1 != <span class="literal">null</span> ? f1.hashCode() : <span class="number">0</span>);</span><br><span class="line">        result = <span class="number">31</span> * result + (f2 != <span class="literal">null</span> ? f2.hashCode() : <span class="number">0</span>);</span><br><span class="line">        result = <span class="number">31</span> * result + (f3 != <span class="literal">null</span> ? f3.hashCode() : <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Shallow tuple copy.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> A new Tuple with the same fields as this.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Tuple4&lt;T0, T1, T2, T3&gt; <span class="title function_">copy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Tuple4</span>&lt;&gt;(<span class="built_in">this</span>.f0, <span class="built_in">this</span>.f1, <span class="built_in">this</span>.f2, <span class="built_in">this</span>.f3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a new tuple and assigns the given values to the tuple&#x27;s fields. This is more</span></span><br><span class="line"><span class="comment">     * convenient than using the constructor, because the compiler can infer the generic type</span></span><br><span class="line"><span class="comment">     * arguments implicitly. For example: &#123;<span class="doctag">@code</span> Tuple3.of(n, x, s)&#125; instead of &#123;<span class="doctag">@code</span> new</span></span><br><span class="line"><span class="comment">     * Tuple3&lt;Integer, Double, String&gt;(n, x, s)&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T0, T1, T2, T3&gt; Tuple4&lt;T0, T1, T2, T3&gt; <span class="title function_">of</span><span class="params">(T0 f0, T1 f1, T2 f2, T3 f3)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Tuple4</span>&lt;&gt;(f0, f1, f2, f3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 20.04 安装 MySQL 5.7</title>
    <url>/2022/06/10/how-to-install-mysql57-on-ubuntu_20_04/</url>
    <content><![CDATA[<p>Ubuntu 20.04 对应的 MySQL 版本是 8.0，如果要安装 5.7 版本，有以下三种安装方式：</p>
<ul>
<li>下载 MySQL 二进制压缩包，解压并设置相关的参数即可运行。</li>
<li>通过命令 <code>apt install</code> 进行安装，先下载 MySQL 5.7 对应的源，然后执行安装命令 <code>apt install mysql-server=5.7.37-1ubuntu18.04</code> 。</li>
<li>通过命令 <code>dpkg -i</code> 的方式安装，下载 MySQL 5.7 对应的 deb 文件，然后执行安装命令即可。</li>
</ul>
<p>这里只说明第三种方式的安装过程，即通过命令 <code>dpkg -i</code> 的方式。具体步骤如下：</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>从  <a href="https://downloads.mysql.com/archives/community">MySQL 官网</a> 下载文件 <strong><em>mysql-server_5.7.37-1ubuntu18.04_amd64.deb-bundle.tar</em></strong> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://cdn.mysql.com/archives/mysql-5.7/mysql-server_5.7.37-1ubuntu18.04_amd64.deb-bundle.tar</span><br></pre></td></tr></table></figure>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>将下载好的文件解压到相应的目录，这里是解压到目录 <em>/mnt/d/opt/mysql-deb</em> ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xvf mysql-server_5.7.37-1ubuntu18.04_amd64.deb-bundle.tar -C /mnt/d/opt/mysql-deb</span><br></pre></td></tr></table></figure>
<p>进入解压后的目录 <code>cd /mnt/d/opt/mysql-deb</code>，解压后的文件如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  mysql-deb ll</span><br><span class="line">total 153M</span><br><span class="line">-rwxrwxrwx 1 root root 2.1M Nov 30  2021 libmysqlclient-dev_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root 1.6M Nov 30  2021 libmysqlclient20_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  19M Nov 30  2021 libmysqld-dev_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  69K Nov 30  2021 mysql-client_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  72K Nov 30  2021 mysql-common_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  14M Nov 30  2021 mysql-community-client_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  35M Nov 30  2021 mysql-community-server_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  51M Nov 30  2021 mysql-community-source_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  32M Nov 30  2021 mysql-community-test_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  69K Nov 30  2021 mysql-server_5.7.37-1ubuntu18.04_amd64.deb</span><br><span class="line">-rwxrwxrwx 1 root root  69K Nov 30  2021 mysql-testsuite_5.7.37-1ubuntu18.04_amd64.deb</span><br></pre></td></tr></table></figure>
<p><strong>NOTE：</strong>如果不需要安装测试相关的包，可以删除其中两个带 <em>test</em> 名称的 <em>deb</em> 文件：</p>
<ul>
<li>mysql-community-test_5.7.37-1ubuntu18.04_amd64.deb</li>
<li>mysql-testsuite_5.7.37-1ubuntu18.04_amd64.deb</li>
</ul>
<p>删除命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">rm <span class="operator">-</span>f mysql<span class="operator">-</span>community<span class="operator">-</span>test_5<span class="number">.7</span><span class="number">.37</span><span class="number">-1</span>ubuntu18<span class="number">.04</span>_amd64.deb mysql<span class="operator">-</span>testsuite_5<span class="number">.7</span><span class="number">.37</span><span class="number">-1</span>ubuntu18<span class="number">.04</span>_amd64.deb</span><br></pre></td></tr></table></figure>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>进入目录 <em>/mnt/d/opt/mysql-deb</em> ，执行 <code>dpkg -i mysql-*.deb</code> 命令，开始安装 MySQL：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">dpkg <span class="operator">-</span>i mysql<span class="operator">-</span><span class="operator">*</span>.deb</span><br></pre></td></tr></table></figure>
<p>如果安装过程中，缺少相关依赖包，会导致安装失败。</p>
<p>如以下提示未安装依赖包 <strong><em>libtinfo5</em></strong> ，<strong><em>libmecab2</em></strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜  mysql-deb dpkg -i mysql-*.deb</span><br><span class="line">Selecting previously unselected package mysql-client.</span><br><span class="line">(Reading database ... 49086 files and directories currently installed.)</span><br><span class="line">Preparing to unpack mysql-client_5.7.37-1ubuntu18.04_amd64.deb ...</span><br><span class="line">Unpacking mysql-client (5.7.37-1ubuntu18.04) ...</span><br><span class="line">Selecting previously unselected package mysql-common.</span><br><span class="line">Preparing to unpack mysql-common_5.7.37-1ubuntu18.04_amd64.deb ...</span><br><span class="line">Unpacking mysql-common (5.7.37-1ubuntu18.04) ...</span><br><span class="line">Selecting previously unselected package mysql-community-client.</span><br><span class="line">Preparing to unpack mysql-community-client_5.7.37-1ubuntu18.04_amd64.deb ...</span><br><span class="line">Unpacking mysql-community-client (5.7.37-1ubuntu18.04) ...</span><br><span class="line">Selecting previously unselected package mysql-community-server.</span><br><span class="line">Preparing to unpack mysql-community-server_5.7.37-1ubuntu18.04_amd64.deb ...</span><br><span class="line">Unpacking mysql-community-server (5.7.37-1ubuntu18.04) ...</span><br><span class="line">Selecting previously unselected package mysql-community-source.</span><br><span class="line">Preparing to unpack mysql-community-source_5.7.37-1ubuntu18.04_amd64.deb ...</span><br><span class="line">Unpacking mysql-community-source (5.7.37-1ubuntu18.04) ...</span><br><span class="line">Selecting previously unselected package mysql-server.</span><br><span class="line">Preparing to unpack mysql-server_5.7.37-1ubuntu18.04_amd64.deb ...</span><br><span class="line">Unpacking mysql-server (5.7.37-1ubuntu18.04) ...</span><br><span class="line">Setting up mysql-common (5.7.37-1ubuntu18.04) ...</span><br><span class="line">update-alternatives: using /etc/mysql/my.cnf.fallback to provide /etc/mysql/my.cnf (my.cnf) in auto mode</span><br><span class="line">dpkg: dependency problems prevent configuration of mysql-community-client:</span><br><span class="line"> mysql-community-client depends on libtinfo5 (&gt;= 6); however:</span><br><span class="line">  **Package libtinfo5 is not installed.**</span><br><span class="line"></span><br><span class="line">dpkg: error processing package mysql-community-client (--install):</span><br><span class="line"> dependency problems - leaving unconfigured</span><br><span class="line">dpkg: dependency problems prevent configuration of mysql-community-server:</span><br><span class="line"> mysql-community-server depends on libmecab2; however:</span><br><span class="line">  **Package libmecab2 is not installed.**</span><br><span class="line"></span><br><span class="line">dpkg: error processing package mysql-community-server (--install):</span><br><span class="line"> dependency problems - leaving unconfigured</span><br><span class="line">Setting up mysql-community-source (5.7.37-1ubuntu18.04) ...</span><br><span class="line">dpkg: dependency problems prevent configuration of mysql-server:</span><br><span class="line"> mysql-server depends on mysql-community-server (= 5.7.37-1ubuntu18.04); however:</span><br><span class="line">  Package mysql-community-server is not configured yet.</span><br><span class="line"></span><br><span class="line">dpkg: error processing package mysql-server (--install):</span><br><span class="line"> dependency problems - leaving unconfigured</span><br><span class="line">dpkg: dependency problems prevent configuration of mysql-client:</span><br><span class="line"> mysql-client depends on mysql-community-client (= 5.7.37-1ubuntu18.04); however:</span><br><span class="line">  Package mysql-community-client is not configured yet.</span><br><span class="line"></span><br><span class="line">dpkg: error processing package mysql-client (--install):</span><br><span class="line"> dependency problems - leaving unconfigured</span><br><span class="line">Processing triggers for man-db (2.9.1-1) ...</span><br><span class="line">Processing triggers for systemd (245.4-4ubuntu3.15) ...</span><br><span class="line">Errors were encountered while processing:</span><br><span class="line"> mysql-community-client</span><br><span class="line"> mysql-community-server</span><br><span class="line"> mysql-server</span><br><span class="line"> mysql-client</span><br></pre></td></tr></table></figure>
<p>解决办法是通过命令 <code>apt install</code> 把相关缺失的包装上即可，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install libtinfo5 libmecab2</span><br></pre></td></tr></table></figure>
<p>之后再重新执行 <code>dpkg -i mysql-*.deb</code> 命令，安装过程中，会提示让你输入 root 用户密码。</p>
<h2 id="启动-MySQL"><a href="#启动-MySQL" class="headerlink" title="启动 MySQL"></a>启动 MySQL</h2><p>1、使用 <code>service</code> 启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure>
<p>2、使用 <code>mysqld</code> 脚本启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/mysql start</span><br></pre></td></tr></table></figure>
<p>3、使用 safe_mysqld 启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">safe_mysql&amp;</span><br></pre></td></tr></table></figure>
<h2 id="停止-MySQL"><a href="#停止-MySQL" class="headerlink" title="停止 MySQL"></a><strong>停止 MySQL</strong></h2><p>1、使用 <code>service</code> 启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service mysql stop</span><br></pre></td></tr></table></figure>
<p>2、使用 <code>mysqld</code> 脚本启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/mysql stop</span><br></pre></td></tr></table></figure>
<h2 id="重启-MySQL"><a href="#重启-MySQL" class="headerlink" title="重启 MySQL"></a><strong>重启 MySQL</strong></h2><p>使用 <code>service</code> 启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux创建/删除软链接</title>
    <url>/2022/05/07/how-to-create-or-delete-symbolic-link-on-linux-os/</url>
    <content><![CDATA[<h2 id="创建软连接"><a href="#创建软连接" class="headerlink" title="创建软连接"></a>创建软连接</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s TARGET LINK_NAME</span><br></pre></td></tr></table></figure>
<p>e.g.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建软连接前的目录</span></span><br><span class="line">➜  opt ll</span><br><span class="line">total 2.4M</span><br><span class="line">drwxrwxrwx 1 hadoop hadoop 4.0K May  7 13:58 redis-6.2.6</span><br><span class="line">-rwxrwxrwx 1 hadoop hadoop 2.4M May  7 10:43 redis-6.2.6.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软连接：为文件夹 redis-6.2.6 创建软连接 redis</span></span><br><span class="line">➜  opt <span class="built_in">ln</span> -s redis-6.2.6 ./redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看创建软连接后的目录</span></span><br><span class="line">➜  opt ll</span><br><span class="line">total 2.4M</span><br><span class="line">lrwxrwxrwx 1 hadoop hadoop   11 May  7 13:59 redis -&gt; redis-6.2.6</span><br><span class="line">drwxrwxrwx 1 hadoop hadoop 4.0K May  7 13:58 redis-6.2.6</span><br><span class="line">-rwxrwxrwx 1 hadoop hadoop 2.4M May  7 10:43 redis-6.2.6.tar.gz</span><br></pre></td></tr></table></figure>
<h2 id="删除软连接"><a href="#删除软连接" class="headerlink" title="删除软连接"></a>删除软连接</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf file_name</span><br></pre></td></tr></table></figure>
<p>e.g.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除软连接前的目录</span></span><br><span class="line">➜  opt ll</span><br><span class="line">total 2.4M</span><br><span class="line">lrwxrwxrwx 1 hadoop hadoop   11 May  7 10:45 redis -&gt; redis-6.2.6</span><br><span class="line">drwxrwxrwx 1 hadoop hadoop 4.0K May  7 10:43 redis-6.2.6</span><br><span class="line">-rwxrwxrwx 1 hadoop hadoop 2.4M May  7 10:43 redis-6.2.6.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除软连接</span></span><br><span class="line"><span class="built_in">rm</span> -rf redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看删除软连接后的目录</span></span><br><span class="line">➜  opt ll</span><br><span class="line">total 2.4M</span><br><span class="line">drwxrwxrwx 1 hadoop hadoop 4.0K May  7 10:43 redis-6.2.6</span><br><span class="line">-rwxrwxrwx 1 hadoop hadoop 2.4M May  7 10:43 redis-6.2.6.tar.gz</span><br></pre></td></tr></table></figure>
<p><strong>NOTE：</strong></p>
<p>特别注意 <code>rm -rf redis</code> 与 <code>rm -rf redis/</code> 命令之间的区别：</p>
<ul>
<li><code>rm -rf redis</code> 是仅删除软连接；</li>
<li>而 <code>rm -rf redis/</code> 是删除 <code>redis</code> 目录下所有文件，相当于删除目标文件夹 <code>redis-6.2.6</code> 下所有文件，谨慎操作。</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu20.04 LTS执行Shell脚本出现Bad substitution错误</title>
    <url>/2022/01/15/ubuntu-shell-bad-substitution/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在 Windows 10 自带的 Ubuntu 20.04 子系统终端，执行 Shell 脚本时出现 Bad substitution 错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  ~ sh +x tt.sh</span><br><span class="line">tt.sh: 11: Bad substitution</span><br></pre></td></tr></table></figure>
<p>Shell 脚本是从服务器上下载下来的，在服务器上是可以正确执行的，服务器系统为 CentOS 7。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>第一感觉应该是该 Shell 脚本在 Ubuntu、CentOS 两个系统不兼容的关系。</p>
<p>打开脚本文件，跟踪出错位置（第 11 行），定位到这行代码 <code>day=$&#123;dt:6&#125;</code>。</p>
<p>查了 Ubuntu 官方文档，发现从 Ubuntu 6.10 开始，系统默认 Shell (/bin/sh) 由 bash shell 更改为 dash shell 了，原因是 dash shell 更轻量，运行更快。</p>
<p>查看 /bin/sh 在 Ubuntu 系统的链接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  ~ ll /usr/bin/</span><br><span class="line">lrwxrwxrwx 1 root   root       4 Feb 25  2020  sh -&gt; dash</span><br></pre></td></tr></table></figure>
<p>而在服务器 CentOS 系统，链接的是 bash：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[hadoop@bigdata ~]$ ll /usr/bin/</span><br><span class="line">lrwxrwxrwx  1 root root         4 Mar  9  2020 sh -&gt; bash</span><br></pre></td></tr></table></figure>
<p>为了在本地开发机器能够兼容在服务器上执行的脚本文件，这里需要将 Ubuntu 的 /bin/sh 的默认链接更换为 bash，文档给出的方案是在终端执行以下命令，然后选择 &lt; No &gt; 即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  ~ <span class="built_in">sudo</span> dpkg-reconfigure dash</span><br></pre></td></tr></table></figure>
<blockquote>
<p>后面如果需要将 /bin/sh 的默认链接换回 dash，同样执行上面的命令，并选择 &lt; Yes &gt;。</p>
</blockquote>
<p>如果想了解更多，可以查看官方维基：<a href="https://wiki.ubuntu.com/DashAsBinSh">https://wiki.ubuntu.com/DashAsBinSh</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Superset配置——连接Hive出现TTransportException异常</title>
    <url>/2022/01/17/superset-hive-ttransport-exception/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>安装好 superset，通过命令 <code>superset run -p 8088 -h 0.0.0.0</code> 启动，在界面配置 hive 数据库连接时出现错误。在服务器上看到日志信息如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unexpected error TTransportException</span><br><span class="line">WARNING:superset.views.core:Unexpected error TTransportException</span><br><span class="line">INFO:werkzeug:10.10.17.34 - - [11/Jan/2022 12:07:37] &quot;POST /superset/testconn HTTP/1.1&quot; 400 -</span><br></pre></td></tr></table></figure>
<p>看到 TTransportException，第一感觉是缺少依赖包（Python、系统），不过日志并没有记录具体的错误信息，没有办法直接定位到底是缺少哪个依赖包。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>看到 TTransportException，第一感觉是缺少依赖包（Python、系统），不过日志并没有记录具体的错误信息，没有办法直接定位到底是缺少哪个依赖包。</p>
<p>从网上搜索的结果来看，可能是缺少以下些包导致的：</p>
<ul>
<li>sasl</li>
<li>thrift</li>
<li>thrift-sasl</li>
<li>pythrifthiveapi</li>
<li>pure-sasl</li>
<li>……</li>
</ul>
<p>也有可能是 Hive 驱动版本不一致引起的，如 pyhive、pyhive[presto]、pyhive==0.6.0 等。</p>
<p>或者也可能是相关 Hive 连接参数没有配置正确，如 kerberos 认证等。</p>
<p>但最后是缺少哪一个依赖或是哪几个依赖、哪些参数没有配置正确，并没有明确。</p>
<p>当然，我们可以选择把以上的依赖包或指定依赖包版本都一一安装测试一遍，就是比较费时和低效。</p>
<p>我们可以通过另一种“曲线救国”方法。具体如下：</p>
<p>因为 superset 是用 pyhive 连接数据库的，我们可以在服务器上写脚本测试用 pyhive 是否可以连接到 hive 数据库，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> pyhive <span class="keyword">import</span> hive</span><br><span class="line"></span><br><span class="line">conn = hive.connect(</span><br><span class="line">    host=<span class="string">&quot;10.10.17.61&quot;</span>, </span><br><span class="line">		port=<span class="number">10000</span>,  <span class="comment"># 服务器地址</span></span><br><span class="line">    <span class="comment"># auth=&quot;KERBEROS&quot;, </span></span><br><span class="line">		<span class="comment"># kerberos_service_name=&quot;sql_prc&quot;,  #验证方式</span></span><br><span class="line">    configuration=&#123;</span><br><span class="line">        <span class="string">&#x27;mapreduce.map.memory.mb&#x27;</span>:<span class="string">&#x27;4096&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mapreduce.reduce.memory.mb&#x27;</span>:<span class="string">&#x27;4096&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mapreduce.map.java.opts&#x27;</span>:<span class="string">&#x27;-Xmx3072m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mapreduce.reduce.java.opts&#x27;</span>:<span class="string">&#x27;-Xmx3072m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;hive.input.format&#x27;</span>:<span class="string">&#x27;org.apache.hadoop.hive.ql.io.HiveInputFormat&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;hive.limit.optimize.enable&#x27;</span>:<span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mapreduce.job.queuename&#x27;</span>:<span class="string">&#x27;root.default&#x27;</span>  <span class="comment"># 队列</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">sql = <span class="string">&quot;SHOW PARTITIONS dw.dm_user_info&quot;</span></span><br><span class="line">df = pd.read_sql(sql, conn)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure>
<p>执行该 Python 文件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 test.py</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;test.py&quot;</span>, line <span class="number">15</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="string">&#x27;mapreduce.job.queuename&#x27;</span>:<span class="string">&#x27;root.production.miot_group.test.data&#x27;</span>  <span class="comment"># 队列</span></span><br><span class="line">  File <span class="string">&quot;/home/hadoop/.local/lib/python3.6/site-packages/pyhive/hive.py&quot;</span>, line <span class="number">104</span>, <span class="keyword">in</span> connect</span><br><span class="line">    <span class="keyword">return</span> Connection(*args, **kwargs)</span><br><span class="line">  File <span class="string">&quot;/home/hadoop/.local/lib/python3.6/site-packages/pyhive/hive.py&quot;</span>, line <span class="number">243</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    <span class="variable language_">self</span>._transport.<span class="built_in">open</span>()</span><br><span class="line">  File <span class="string">&quot;/home/hadoop/.local/lib/python3.6/site-packages/thrift_sasl/__init__.py&quot;</span>, line <span class="number">85</span>, <span class="keyword">in</span> <span class="built_in">open</span></span><br><span class="line">    message=(<span class="string">&quot;Could not start SASL: %s&quot;</span> % <span class="variable language_">self</span>.sasl.getError()))</span><br><span class="line">thrift.transport.TTransport.TTransportException: Could <span class="keyword">not</span> start SASL: <span class="string">b&#x27;Error in sasl_client_start (-4) SASL(-4): no mechanism available: No worthy mechs found&#x27;</span></span><br></pre></td></tr></table></figure>
<p>可以清楚地看到，导致连接 Hive 失败的具体错误信息或原因（若提示缺少 Python 依赖包，则用 pip install 安装）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">thrift.transport.TTransport.TTransportException: Could <span class="keyword">not</span> start SASL: <span class="string">b&#x27;Error in sasl_client_start (-4) SASL(-4): no mechanism available: No worthy mechs found&#x27;</span></span><br></pre></td></tr></table></figure>
<p>这是因为缺少 <code>cyrus-sasl-plain  cyrus-sasl-devel  cyrus-sasl-gssapi</code> 三个系统依赖包，使用 <code>yum install</code> 安装即可：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install cyrus-sasl-plain  cyrus-sasl-devel  cyrus-sasl-gssapi</span><br></pre></td></tr></table></figure>
<p>再次执行 <code>python3 test.py</code> 可以看到以下输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    partition</span><br><span class="line">0   dt=20211203</span><br><span class="line">1   dt=20211226</span><br><span class="line">2   dt=20211227</span><br><span class="line">3   dt=20211228</span><br><span class="line">4   dt=20211229</span><br><span class="line">5   dt=20211230</span><br><span class="line">6   dt=20211231</span><br><span class="line">7   dt=20220101</span><br></pre></td></tr></table></figure>
<p>说明在服务器上使用 pyhive 可以正确连接 hive，最后在 superset 界面重新配置 Hive 数据库，点击 TEST CONNECTION 按钮，可以看到 Seems OK! 的提示，表明连接 Hive 成功。</p>
<p>Hive 连接如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive://hive@10.10.17.61:10000/mydw</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Superset</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL如何开启binlog日志</title>
    <url>/2022/10/21/how-to-enable-mysql-binlog/</url>
    <content><![CDATA[<h2 id="查看是否开启binlog日志"><a href="#查看是否开启binlog日志" class="headerlink" title="查看是否开启binlog日志"></a>查看是否开启binlog日志</h2><p>连接 MySQL，执行以下命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>查询结果类似以下内容：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Variable_name</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>log_bin</td>
<td>OFF</td>
</tr>
<tr>
<td>log_bin_basename</td>
<td></td>
</tr>
<tr>
<td>log_bin_index</td>
<td></td>
</tr>
<tr>
<td>…</td>
</tr>
</tbody>
</table>
</div>
<p>变量 <code>log_bin</code> 的值为 <code>OFF</code>，说明未开启 binlog 日志，若为 <code>ON</code> 说明已开启。</p>
<h2 id="开启binlog日志"><a href="#开启binlog日志" class="headerlink" title="开启binlog日志"></a>开启binlog日志</h2><p>若 MySQL 未开启 binlog 日志，可通过修改 MySQL 的配置文件 <em>mysqld.cnf</em> 启用 binlog 日志。</p>
<p>打开配置文件（注意：配置文件位置需改为你自己的存放位置）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure>
<p>添加以下配置项：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server_id       = 20</span><br><span class="line">log_bin         = mysql-bin</span><br><span class="line">binlog_format   = ROW</span><br></pre></td></tr></table></figure>
<p>保存修改内容，并重新启动 MySQL 使修改后的配置项生效，如使用 <code>service</code> 命令重启：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>
<p>重启成功后，再检查 binlog 日志是否已开启：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Variable_name</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>log_bin</td>
<td>ON</td>
</tr>
<tr>
<td>log_bin_basename</td>
<td>/var/lib/mysql/mysql-bin</td>
</tr>
<tr>
<td>log_bin_index</td>
<td>/var/lib/mysql/mysql-bin.index</td>
</tr>
</tbody>
</table>
</div>
<p>变量 <code>log_bin</code> 值为 <code>ON</code>，说明 binlog 日志已开启。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>maven编译打包时跳过测试代码</title>
    <url>/2022/07/28/maven-package-skip-tests/</url>
    <content><![CDATA[<p>使用 Maven 构建 Java 项目时，通常有以下两种方式，可以在打包编译时跳过项目中的测试部分代码。</p>
<h2 id="Dmaven-test-skip-true"><a href="#Dmaven-test-skip-true" class="headerlink" title="-Dmaven.test.skip=true"></a><code>-Dmaven.test.skip=true</code></h2><p>在 Maven 的命令中，使用参数 <code>-Dmaven.test.skip=true</code> 来跳过单元测试代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean package -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="DskipTests"><a href="#DskipTests" class="headerlink" title="-DskipTests"></a><code>-DskipTests</code></h2><p>在 Maven 的命令中，使用参数 <code>-DskipTests</code> 来跳过单元测试代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure>
<h2 id="使用-Dmaven-test-skip-true-还是-DskipTests"><a href="#使用-Dmaven-test-skip-true-还是-DskipTests" class="headerlink" title="使用 -Dmaven.test.skip=true 还是 -DskipTests"></a>使用 <code>-Dmaven.test.skip=true</code> 还是 <code>-DskipTests</code></h2><p>使用 <code>-Dmaven.test.skip=true</code> 参数进行打包编译时，Maven 会完全忽略单元测试代码，既不执行测试用例类，也不编译测试用例类。</p>
<p>而使用 <code>-DskipTests</code> 参数进行打包编译，Maven 会编译测试部分的类，生成相应的 class 文件到 target/test-classes 目录下，但不会执行测试类。</p>
<p>一般没有特殊要求的情况，测试类最好还是进行编译。因此推荐使用 <code>-DskipTests</code> 参数。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>【Elasticsearch】Query DSL查询指定字段值为null的文档</title>
    <url>/2022/10/14/query-dsl-null-field/</url>
    <content><![CDATA[<p>Hey，大家好！我是 Elasticsearch 新手。我想知道如何通过 Query DSL 找出指定字段值为 null 的文档。</p>
<p>以下是我索引（索引名：<code>class_info_v22002</code>，用来存放班级信息）创建的 DSL：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT class_info_v22002</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;refresh_interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1s&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;number_of_replicas&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;number_of_shards&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;class_id&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;class_name&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;teacher&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>索引的文档内容类似如下的示例数据（通过批量添加数据模拟）：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT class_info_v22002/_bulk</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;class_id&quot;</span><span class="punctuation">:</span> <span class="number">2008001</span><span class="punctuation">,</span><span class="attr">&quot;class_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;三年（1）班&quot;</span><span class="punctuation">,</span><span class="attr">&quot;teacher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;张三&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;class_id&quot;</span><span class="punctuation">:</span> <span class="number">2008002</span><span class="punctuation">,</span><span class="attr">&quot;class_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;三年（2）班&quot;</span><span class="punctuation">,</span><span class="attr">&quot;teacher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;李四&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;class_id&quot;</span><span class="punctuation">:</span> <span class="number">2008003</span><span class="punctuation">,</span><span class="attr">&quot;class_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;三年（3）班&quot;</span><span class="punctuation">,</span><span class="attr">&quot;teacher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;王五&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;class_id&quot;</span><span class="punctuation">:</span> <span class="number">2008004</span><span class="punctuation">,</span><span class="attr">&quot;class_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;三年（4）班&quot;</span><span class="punctuation">,</span><span class="attr">&quot;teacher&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>如果要找出 <code>teacher</code> 字段值为 null 的文档，Query DSL 应该如何写？</p>
<hr>
<p>你好，你可以使用以下的 DSL 筛选出 <code>teacher</code> 字段值为 null 的文档：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET class_info_v22002/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must_not&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;exists&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;teacher&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>返回结果如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;class_info_v22002&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;_doc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;class_id&quot;</span> <span class="punctuation">:</span> <span class="number">2008004</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;class_name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;三年（4）班&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;teacher&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>你也可以使用以下 SQL 来实现：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST _sql?format=txt</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="string">&quot;select * from class_info_v22002 where teacher is null&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>返回结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   class_id    |  class_name   |    teacher    </span><br><span class="line">---------------+---------------+---------------</span><br><span class="line">2008004        |三年（4）班     |null</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程 Q&amp;A</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>【Flink作业运行出错】beyond the &#39;PHYSICAL&#39; memory limit. Killing container</title>
    <url>/2022/08/24/physical-memory-exceeded-causing-being-killed-by-yarn/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Flink 版本：1.13.6</p>
<p>部署模式：Flink On YARN Application Mode</p>
<p>当 Flink 作业在 YARN 上运行了几天之后，容器会因为物理内存使用超出物理内存限制而被杀死，并报如下错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2022-08-12 12:36:04,168 WARN  akka.remote.ReliableDeliverySupervisor                       [] - Association with remote system [akka.tcp://flink@flink-node-06:42477] has failed, address is now gated for [50] ms. Reason: [Association failed with [akka.tcp://flink@flink-node-06:42477]] Caused by: [java.net.ConnectException: Connection refused: flink-node-06/10.10.17.255:42477]</span><br><span class="line">2022-08-12 12:36:04,844 INFO  org.apache.flink.runtime.resourcemanager.active.ActiveResourceManager [] - Worker container_e48_1655606936581_0285_01_000006 is terminated. Diagnostics: [2022-08-12 12:36:02.281]Container [pid=30100,containerID=container_e48_1655606936581_0285_01_000006] is running 65536B beyond the &#x27;PHYSICAL&#x27; memory limit. Current usage: 2.0 GB of 2 GB physical memory used; 3.8 GB of 8 GB virtual memory used. Killing container.</span><br><span class="line">Dump of the process-tree for container_e48_1655606936581_0285_01_000006 :</span><br><span class="line">	|- PID PPID PGRPID SESSID CMD_NAME USER_MODE_TIME(MILLIS) SYSTEM_TIME(MILLIS) VMEM_USAGE(BYTES) RSSMEM_USAGE(PAGES) FULL_CMD_LINE</span><br><span class="line">	|- 30100 30094 30100 30100 (bash) 0 0 118177792 369 /bin/bash -c /usr/java/jdk1.8.0_211-amd64/bin/java -Xmx697932173 -Xms697932173 -XX:MaxDirectMemorySize=300647712 -XX:MaxMetaspaceSize=268435456 -Dlog.file=/data/hadoop/yarn/log/application_1655606936581_0285/container_e48_1655606936581_0285_01_000006/taskmanager.log -Dlog4j.configuration=file:./log4j.properties -Dlog4j.configurationFile=file:./log4j.properties org.apache.flink.yarn.YarnTaskExecutorRunner -D taskmanager.memory.network.min=166429984b -D taskmanager.cpu.cores=1.0 -D taskmanager.memory.task.off-heap.size=0b -D taskmanager.memory.jvm-metaspace.size=268435456b -D external-resources=none -D taskmanager.memory.jvm-overhead.min=214748368b -D taskmanager.memory.framework.off-heap.size=134217728b -D taskmanager.memory.network.max=166429984b -D taskmanager.memory.framework.heap.size=134217728b -D taskmanager.memory.managed.size=665719939b -D taskmanager.memory.task.heap.size=563714445b -D taskmanager.numberOfTaskSlots=1 -D taskmanager.memory.jvm-overhead.max=214748368b --configDir . -Djobmanager.rpc.address=&#x27;flink-node-02&#x27; -Dpipeline.classpaths=&#x27;&#x27; -Dweb.port=&#x27;0&#x27; -Djobmanager.memory.off-heap.size=&#x27;134217728b&#x27; -Dweb.tmpdir=&#x27;/tmp/flink-web-5deb359d-87fb-49e3-bf4a-a9214dc667e8&#x27; -Djobmanager.rpc.port=&#x27;44848&#x27; -Drest.address=&#x27;flink-node-02&#x27; -Djobmanager.memory.jvm-overhead.max=&#x27;201326592b&#x27; -Djobmanager.memory.jvm-overhead.min=&#x27;201326592b&#x27; -Dtaskmanager.resource-id=&#x27;container_e48_1655606936581_0285_01_000006&#x27; -Dexecution.target=&#x27;embedded&#x27; -Dinternal.taskmanager.resource-id.metadata=&#x27;flink-node-06:45454&#x27; -Dpipeline.jars=&#x27;file:/data/hadoop/yarn/local/usercache/hadoop/appcache/application_1655606936581_0285/container_e48_1655606936581_0285_01_000001/flink_dw_prod.jar&#x27; -Djobmanager.memory.jvm-metaspace.size=&#x27;268435456b&#x27; -Djobmanager.memory.heap.size=&#x27;469762048b&#x27; 1&gt; /data/hadoop/yarn/log/application_1655606936581_0285/container_e48_1655606936581_0285_01_000006/taskmanager.out 2&gt; /data/hadoop/yarn/log/application_1655606936581_0285/container_e48_1655606936581_0285_01_000006/taskmanager.err </span><br><span class="line">	|- 30175 30100 30100 30100 (java) 1236701 120868 3967287296 523935 /usr/java/jdk1.8.0_211-amd64/bin/java -Xmx697932173 -Xms697932173 -XX:MaxDirectMemorySize=300647712 -XX:MaxMetaspaceSize=268435456 -Dlog.file=/data/hadoop/yarn/log/application_1655606936581_0285/container_e48_1655606936581_0285_01_000006/taskmanager.log -Dlog4j.configuration=file:./log4j.properties -Dlog4j.configurationFile=file:./log4j.properties org.apache.flink.yarn.YarnTaskExecutorRunner -D taskmanager.memory.network.min=166429984b -D taskmanager.cpu.cores=1.0 -D taskmanager.memory.task.off-heap.size=0b -D taskmanager.memory.jvm-metaspace.size=268435456b -D external-resources=none -D taskmanager.memory.jvm-overhead.min=214748368b -D taskmanager.memory.framework.off-heap.size=134217728b -D taskmanager.memory.network.max=166429984b -D taskmanager.memory.framework.heap.size=134217728b -D taskmanager.memory.managed.size=665719939b -D taskmanager.memory.task.heap.size=563714445b -D taskmanager.numberOfTaskSlots=1 -D taskmanager.memory.jvm-overhead.max=214748368b --configDir . -Djobmanager.rpc.address=flink-node-02 -Dpipeline.classpaths= -Dweb.port=0 -Djobmanager.memory.off-heap.size=134217728b -Dweb.tmpdir=/tmp/flink-web-5deb359d-87fb-49e3-bf4a-a9214dc667e8 -Djobmanager.rpc.port=44848 -Drest.address=flink-node-02 -Djobmanager.memory.jvm-overhead.max=201326592b -Djobmanager.memory.jvm-overhead.min=201326592b -Dtaskmanager.resource-id=container_e48_1655606936581_0285_01_000006 -Dexecution.target=embedded -Dinternal.taskmanager.resource-id.metadata=flink-node-06:45454 -Dpipeline.jars=file:/data/hadoop/yarn/local/usercache/hadoop/appcache/application_1655606936581_0285/container_e48_1655606936581_0285_01_000001/flink_dw_prod.jar -Djobmanager.memory.jvm-metaspace.size=268435456b -Djobmanager.memory.heap.size=469762048b </span><br><span class="line"></span><br><span class="line">[2022-08-12 12:36:02.322]Container killed on request. Exit code is 143</span><br><span class="line">[2022-08-12 12:36:02.330]Container exited with a non-zero exit code 143.</span><br></pre></td></tr></table></figure>
<p>该作业在 Flink History Server 的详情界面的 Exceptions 标签下可以看到以下错误信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Caused by: org.apache.flink.runtime.io.network.netty.exception.RemoteTransportException: Connection unexpectedly closed by remote task manager &#x27;flink-node-06/10.10.18.25:16407&#x27;. This might indicate that the remote task manager was lost.</span><br></pre></td></tr></table></figure>
<p>在 Exceptions 下的错误信息可以看到 Flink 集群的一个 TaskManager 节点连接不上。从 YARN 错误日志可以看出，该 TaskManager 节点连接不上，是因为 TaskManager 内存使用大小超出了容器的限制而被杀死。</p>
<p>既然问题是 TaskManager 内存不足引起的，那么尝试通过增加 TaskManager 内存的方式来解决该问题，将 TaskManager 内存由原来的 2048m 增加到 3072m，再次运行该作业，但它仍然每隔几天就报同样的错误。</p>
<p>调大 TaskManager 运行内存后，作业的启动参数如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-Djobmanager.memory.process.size=1024m -Dtaskmanager.memory.process.size=3072m</span><br></pre></td></tr></table></figure>
<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>YARN 日志的异常信息表明 TaskManager 消耗的内存比预期的要多。虽然 TaskManager 因为内存超限运行被 YARN 杀死，并不代表这里有内存泄漏。</p>
<p>我们知道，Flink 集群上的 TaskManager 本质上还是一个 Java 程序。Java 程序可能会消耗各种类型的内存：堆、直接、本地、元空间。在所有这些类型的内存当中，除了本地内存外，Flink 通过 JVM 参数设置了明确的上限，因此如果进程尝试使用超过限制的内存，则会抛出 <code>OutOfMemoryError</code>。但在 YARN 日志中并没有 OOM 相关的异常信息，唯一的可能是 Flink 使用了比计划更多的本地内存。</p>
<p>所以，这里再尝试增加 JVM Overhead 内存占比，让 Flink 在容器中预留更多的本地内存。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>通过设置 <code>taskmanager.memory.jvm-overhead.fraction</code> 参数来增加 JVM Overhead 内存占比，以达到在容器中预留更多的本地内存。该参数的默认值为 0.1，修改为 0.2 后，重新启动该作业，后续观察该作业的运行情况，没有再出现因为内存超限运行被 YARN 杀死的异常。</p>
<p>修改后作业的启动参数如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-Djobmanager.memory.process.size=1024m -Dtaskmanager.memory.process.size=3072m -Dtaskmanager.memory.jvm-overhead.fraction=0.2</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
        <tag>备忘录</tag>
      </tags>
  </entry>
  <entry>
    <title>【Git常用命令】删除本地/远程分支</title>
    <url>/2022/05/23/how-to-delete-a-local-and-remote-git-branch/</url>
    <content><![CDATA[<h2 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a><strong>删除本地分支</strong></h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d 分支名称</span><br></pre></td></tr></table></figure>
<p>注意：删除某个分支时，需先切换到另一个分支上。例如，删除分支 <code>ljx</code> 的操作如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先切换至 master 分支</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支 ljx</span></span><br><span class="line">git branch -d ljx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line">* master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/ljx</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/bugfix</span><br></pre></td></tr></table></figure>
<h2 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin --delete 分支名称</span><br></pre></td></tr></table></figure>
<p>如删除远程分支 <code>ljx</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin --delete ljx</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下修改与刷新hosts配置文件</title>
    <url>/2022/08/30/edit-hosts-in-windows/</url>
    <content><![CDATA[<p>hosts 文件位置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\windows\system32\drivers\etc</span><br></pre></td></tr></table></figure>
<p>选中 hosts 文件，右键，使用文本工具（如 Notepad++、VS Code、Sublime Text、记事本等）打开修改即可。如添加以下 host 配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10.10.18.21     bigdata1.johnson.com     bigdata1</span><br></pre></td></tr></table></figure>
<p>为使刚刚的更改生效，需要刷新 DNS 配置，具体步骤如下：</p>
<ol>
<li><p>打开 命令提示符 应用：</p>
<p> 快捷键：win + r</p>
<p> 输入 cmd，回车，即可打开 命令提示符 应用。</p>
</li>
<li><p>在打开的 命令提示符，输入 ipconfig /flushdns，回车，即可：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure>
</li>
<li><p>显示 DNS 缓存内容：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipconfig /displaydns</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
  </entry>
  <entry>
    <title>【Git常用命令】解决在本地还能看到已删除的Git远程分支</title>
    <url>/2022/05/24/how-to-clean-up-git-branches/</url>
    <content><![CDATA[<p>在使用 Git 进行代码管理时，通常会遇到某个开发分支已经在代码仓库中删除了，但在本地环境中还能查看到该被删除分支的情况。</p>
<p>为解决该问题，Git 提供了以下两个命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure>
<p>或：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git fetch origin --prune</span><br></pre></td></tr></table></figure>
<p>例如，我们在 GitLab 代码仓库删除项目的开发分支 <code>ljx</code> ，但在本地环境中通过命令 <code>git branch -a</code> 还可以查看到该分支还存在的情况：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">* master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/ljx</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/patch-2032</span><br></pre></td></tr></table></figure>
<p>这时，我们可以通过命令 <code>git remote prune origin</code> 来解决：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  mydw git:(master) git remote prune origin</span><br><span class="line">warning: redirecting to https://git.linjiangxiong.com/bigdatabase/mydw.git/</span><br><span class="line">Pruning origin</span><br><span class="line">URL: https://git.linjiangxiong.com/bigdatabase/mydw</span><br><span class="line"> * [pruned] origin/ljx</span><br></pre></td></tr></table></figure>
<p>这时，再查看本地环境的分支，发现 <code>ljx</code> 分支已经不存在了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">* master</span><br><span class="line">  remotes/origin/HEAD -&gt; origin/master</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/patch-2032</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux常用命令】查看主机名</title>
    <url>/2022/06/27/how-to-find-hostname-in-linux/</url>
    <content><![CDATA[<p>主机名（英语：hostname），也称计算机名，是指分配给计算机的一串唯一标识码，用于在网络上唯一识别该计算机。通常由字母、数字组成，也可以包含一些特殊字符，如英文连字符（-）、英文句点（.）和下划线（_）。典型的主机名最多包含 253 个字符。</p>
<p>在大多数 Linux 发行版中，主机名通常存储在 <em>/etc/hostname</em> 文件中。默认情况下，通过 <code>ssh</code> 命令在终端成功连接到目标服务器时，也可以看到目标服务器的主机名。如以下命令可以看到目标服务器的主机名为 kafka-eagle。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh hadoop@10.10.18.8</span><br><span class="line">Last login: Fri May 13 20:50:56 2022 from 10.10.18.215</span><br><span class="line"></span><br><span class="line">Welcome to Alibaba Cloud Elastic Compute Service !</span><br><span class="line"></span><br><span class="line">[hadoop@kafka-eagle ~]$</span><br></pre></td></tr></table></figure>
<p>介绍完主机名的概念，接下来，我们一起了解在 Linux 操作系统中其他各种查找主机名的命令。</p>
<h2 id="使用-hostname-命令"><a href="#使用-hostname-命令" class="headerlink" title="使用 hostname 命令"></a>使用 hostname 命令</h2><p><code>hostname</code> 命令用于显示 Linux 系统的 DNS 名称和主机名。它还允许用户更改或设置主机名。</p>
<p>要在 Linux 中查找主机名，请运行不带任何选项的 <code>hostname</code> 命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hostname</span><br><span class="line">kafka-eagle</span><br></pre></td></tr></table></figure>
<p>从输出中可以看到，当前 Linux 系统的主机名是 <strong>kafka-eagle</strong>。</p>
<p>如果要显示完全限定域名（FQDN，Fully Qualified Domain Name），请运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostname --fqdn</span><br></pre></td></tr></table></figure>
<h2 id="使用-hostnamectl-命令"><a href="#使用-hostnamectl-命令" class="headerlink" title="使用 hostnamectl 命令"></a>使用 hostnamectl 命令</h2><p><code>hostnamectl</code> 命令用于获取和设置 Linux 系统的主机名及其相关设置。</p>
<p>要显示 Linux 机器的主机名，请运行不带任何选项的 <code>hostnamectl</code> 命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl</span><br></pre></td></tr></table></figure>
<p>输出示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hostnamectl</span><br><span class="line">   Static hostname: kafka-eagle</span><br><span class="line">         Icon name: computer-vm</span><br><span class="line">           Chassis: vm</span><br><span class="line">        Machine ID: 20200817109743110641424667768813</span><br><span class="line">           Boot ID: f650bio8ec6440979b3ac70f8cdbe62b</span><br><span class="line">    Virtualization: kvm</span><br><span class="line">  Operating System: CentOS Linux 7 (Core)</span><br><span class="line">       CPE OS Name: cpe:/o:centos:centos:7</span><br><span class="line">            Kernel: Linux 3.10.0-1127.19.1.el7.x86_64</span><br><span class="line">      Architecture: x86-64</span><br></pre></td></tr></table></figure>
<p>与 <code>hostname</code> 命令不同，<code>hostnamectl</code> 显示了系统更多的详细信息，例如</p>
<ul>
<li>系统类型（chassis，笔记本电脑或台式机等，具体值列表：”desktop”, “laptop”, “server”, “tablet”, “handset”, “watch”, “embedded”, “vm”, “container”）；</li>
<li>引导和机器 ID（Machine ID、Boot ID）；</li>
<li>操作系统信息（Operating System、CPE OS Name）；</li>
<li>内核版本（Kernel）；</li>
<li>处理器架构（Architecture）等。</li>
</ul>
<p>如果只显示主机名，请使用 <code>--static</code> 选项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hostnamectl --static</span><br><span class="line">kafka-eagle</span><br></pre></td></tr></table></figure>
<h2 id="使用-uname-命令"><a href="#使用-uname-命令" class="headerlink" title="使用 uname 命令"></a>使用 uname 命令</h2><p><code>uname</code> 命令用于打印所有系统信息，例如主机名、内核版本、发布版本、操作系统和处理器架构等。</p>
<p>要使用 uname 命令查看主机名，请使用 -n 选项运行它：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">uname</span> -n</span><br><span class="line">kafka-eagle</span><br></pre></td></tr></table></figure>
<h2 id="通过-cat-命令读取-etc-hostname-文件获取主机名"><a href="#通过-cat-命令读取-etc-hostname-文件获取主机名" class="headerlink" title="通过 cat 命令读取 /etc/hostname 文件获取主机名"></a>通过 cat 命令读取 /etc/hostname 文件获取主机名</h2><p>如前所述，在大多数 Linux 发行版中，主机名存储在 <em>/etc/hostname</em> 文件中。要获取 Linux 系统的主机名，只需显示 <em>/etc/hostname</em> 文件的内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/hostname</span><br><span class="line">kafka-eagle</span><br></pre></td></tr></table></figure>
<p>上面这些命令是在 Linux 中最常用的查找主机名的命令。下面列出的这些则是不常见的命令，以供参考。</p>
<h2 id="使用-nmcli-命令"><a href="#使用-nmcli-命令" class="headerlink" title="使用 nmcli 命令"></a>使用 nmcli 命令</h2><p><code>nmcli</code> 命令用于控制 NetworkManager 并报告网络状态。使用 <code>nmcli</code>，我们可以创建、显示、编辑、删除、激活和停用网络连接，以及控制和显示网络设备状态。</p>
<p>要使用 <code>nmcli</code> 命令检查 Linux 系统的主机名，请运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nmcli general hostname</span><br><span class="line">kafka-eagle</span><br></pre></td></tr></table></figure>
<h2 id="使用-sysctl-命令"><a href="#使用-sysctl-命令" class="headerlink" title="使用 sysctl 命令"></a>使用 sysctl 命令</h2><p><code>sysctl</code> 命令用于在运行时列出和修改内核参数。</p>
<p>我们可以使用下面的 <code>sysctl</code> 命令行打印 Linux 系统的主机名：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sysctl kernel.hostname</span><br><span class="line">kernel.hostname = kafka-eagle</span><br></pre></td></tr></table></figure>
<h2 id="使用-ProcFS-查找-Linux-中的主机名"><a href="#使用-ProcFS-查找-Linux-中的主机名" class="headerlink" title="使用 ProcFS 查找 Linux 中的主机名"></a>使用 ProcFS 查找 Linux 中的主机名</h2><p>Proc 文件系统（或简称 procfs）是由 Linux 内核维护的虚拟文件系统。它有时也被称为进程信息伪文件系统。它不包含“真实”文件，但包含运行时系统信息，例如系统内存、挂载的设备、硬件配置等。所有这些信息都可以在 Linux 中名为 <em>/proc</em> 的特殊目录下找到。</p>
<p>要使用 prcfs 确定 Linux 的主机名，请运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /proc/sys/kernel/hostname</span><br><span class="line">kafka-eagle</span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文介绍了什么是主机名及如何查看 Linux 系统主机名的不同方法。</p>
<ul>
<li>分配给计算机的一串唯一标识码，用于在网络上唯一识别该计算机；</li>
<li>由字母、数字、英文连字符、英文句点和下划线组成[A-Z, a-z, 0-9, -_.]；</li>
<li>典型的主机名最多包含 253 个字符。</li>
</ul>
<p>查看 Linux 系统主机名常用方法：</p>
<ul>
<li><code>hostname</code></li>
<li><code>hostnamectl</code></li>
<li><code>uname -n</code></li>
<li><code>cat /etc/hostname</code></li>
</ul>
<p>不常用方法：</p>
<ul>
<li><code>nmcli general hostname</code></li>
<li><code>sysctl kernel.hostname</code></li>
<li><code>cat /proc/sys/kernel/hostname</code></li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux常用命令】用户与用户组</title>
    <url>/2022/08/23/how-to-create-user-and-group-in-linux/</url>
    <content><![CDATA[<h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><p>添加用户命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd 用户名</span><br></pre></td></tr></table></figure>
<p>修改用户密码命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd 用户名</span><br></pre></td></tr></table></figure>
<p>e.g. </p>
<p>添加 lemon 用户：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd lemon</span><br></pre></td></tr></table></figure>
<p>为 lemon 用户设置密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd lemon</span><br></pre></td></tr></table></figure>
<p>根据提示输入新密码即可，提示/输出内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node01 bigdata]# passwd lemon</span><br><span class="line">Changing password <span class="keyword">for</span> user lemon.</span><br><span class="line">New password: </span><br><span class="line">BAD PASSWORD: The password is shorter than 8 characters</span><br><span class="line">Retype new password: </span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure>
<h2 id="添加用户组"><a href="#添加用户组" class="headerlink" title="添加用户组"></a>添加用户组</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd 组名</span><br></pre></td></tr></table></figure>
<p>e.g.</p>
<p>添加 group2 组：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd group2</span><br></pre></td></tr></table></figure>
<h2 id="查询系统所有用户"><a href="#查询系统所有用户" class="headerlink" title="查询系统所有用户"></a>查询系统所有用户</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd</span><br></pre></td></tr></table></figure>
<h2 id="查询系统所有组"><a href="#查询系统所有组" class="headerlink" title="查询系统所有组"></a>查询系统所有组</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/group</span><br></pre></td></tr></table></figure>
<h2 id="查看用户登录历史记录"><a href="#查看用户登录历史记录" class="headerlink" title="查看用户登录历史记录"></a>查看用户登录历史记录</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">last</span><br></pre></td></tr></table></figure>
<h2 id="查看当前登录用户"><a href="#查看当前登录用户" class="headerlink" title="查看当前登录用户"></a>查看当前登录用户</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">who</span></span><br></pre></td></tr></table></figure>
<h2 id="查看系统所有用户（仅显示用户名）"><a href="#查看系统所有用户（仅显示用户名）" class="headerlink" title="查看系统所有用户（仅显示用户名）"></a>查看系统所有用户（仅显示用户名）</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cut</span> -d : -f 1 /etc/passwd</span><br></pre></td></tr></table></figure>
<h2 id="查看可以登录系统的用户（仅显示用户名）"><a href="#查看可以登录系统的用户（仅显示用户名）" class="headerlink" title="查看可以登录系统的用户（仅显示用户名）"></a>查看可以登录系统的用户（仅显示用户名）</h2><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd | grep -v /sbin/nologin | <span class="built_in">cut</span> -d : -f 1</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux常用命令】tar压缩和解压文件或文件夹</title>
    <url>/2022/08/23/how-to-compress-and-decompress-files-or-folders-in-linux/</url>
    <content><![CDATA[<h2 id="压缩文件"><a href="#压缩文件" class="headerlink" title="压缩文件"></a>压缩文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zcvf ljx.tar.gz ./linjiangxiong/</span><br></pre></td></tr></table></figure>
<p>该命令表示压缩当前文件夹下的文件夹 <em>linjiangxiong</em>，压缩后的文件名为 <em>ljx.tar.gz</em> 。</p>
<p>如果需要压缩多个文件，只需要在命令末尾追加需要压缩的文件即可，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zcvf ljx.tar.gz ./linjiangxiong/ ./ljx/</span><br></pre></td></tr></table></figure>
<h2 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzvf ljx.tar.gz</span><br></pre></td></tr></table></figure>
<p>该命令表示把后缀为 <em>.tar.gz</em> 的文件解压到当前文件夹下。</p>
<p>如果需要将文件解压缩到其他目录，则使用命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzvf ljx.tar.gz -C /opt/ljx</span><br></pre></td></tr></table></figure>
<p>该命令表示把后缀为 <em>.tar.gz</em> 的文件解压到 /opt/ljx 目录下。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>【elasticsearch】删除文档后如何释放存储大小</title>
    <url>/2022/08/03/how-to-free-store-size-after-deleting-documents/</url>
    <content><![CDATA[<p>在使用 Elasticsearch 的过程中，经常会有删除某个索引历史数据的需求。比如存储飞机票信息的索引，通常只需要保留今日及今日之后的机票信息。为提升索引的效率和防止索引过大，同时尽量避免删除过程中影响线上环境稳定性，一般会选在业务低峰期的时候删除历史数据。</p>
<p>如以下 DSL 通过调用 <code>_delete_by_query</code> 方法删除 <code>flight_v20220107</code> 索引中日期（dt）在 20220729 ~ 20220802 之间的机票信息数据：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /flight_v20220107/_delete_by_query?size=1000000&amp;conflicts=proceed</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;range&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;dt&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;from&quot;</span>: <span class="string">&quot;20220729&quot;</span>,</span><br><span class="line">            <span class="string">&quot;to&quot;</span>: <span class="string">&quot;20220802&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但在执行完删除命令之后，并不会马上释放该索引的存储大小。因为在 Elasticsearch 中，删除文档并不是真正的删除，而是将这些文档标记为已删除，使它们不会被搜索到而已。如果要回收磁盘空间，释放索引的存储大小，还必须优化索引，即使用 <code>_forcemerge</code> 命令合并段减少分片中段数量、删除冗余数据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /flight_v20220107/_forcemerge?only_expunge_deletes=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><code>_forcemerge</code> 命令说明：</p>
<ul>
<li><p>优化所有索引：</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /_forcemerge?only_expunge_deletes=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>优化单个索引（其中 <code>index_name</code> 为索引名称）：</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /index_name/_forcemerge?only_expunge_deletes=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>优化多个索引（其中 <code>index_name_1</code> 和 <code>index_name_2</code> 为索引名称）：</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /index_name_1,index_name_2/_forcemerge?only_expunge_deletes=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Presto的LEFT JOIN，有一个很容易被忽略的点</title>
    <url>/2022/10/31/presto-left-join-intro/</url>
    <content><![CDATA[<p>LEFT JOIN 在 SQL 查询中是一种很常见的数据查询操作，其查询出来的数据是以左表为主表，保留左表的记录，如果右表没有匹配的记录，依然会返回左表的记录，此时右表的字段用 NULL 填充。</p>
<p>但是，在 Presto 中使用 LEFT JOIN 联结表查询，并需要对左表或右表进行过滤时，有一个特别容易忽略的地方是过滤条件的位置——<strong>对左表过滤时条件应写在 where 语句后，对右表过滤时条件应写在 on 后面。</strong></p>
<p>如果对左表的过滤条件写在 on 后面，那么左表的每一行记录都会被保留，相当于没有过滤左表的数据。如果对右表的过滤条件写在 where 后面，那么 LEFT JOIN 查询出来的结果就后 JOIN 查询出来的结果一样，左表没有与右表匹配的记录也会被过滤。</p>
<p>下面通过一个例子来说明。</p>
<p>有两张表——用户信息表和用户地址表，表名分别为：tmp_user 和 tmp_addr，表中的记录如下：</p>
<p>表 tmp_user： </p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>nickname</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>jack</td>
</tr>
<tr>
<td>2</td>
<td>johnson</td>
</tr>
<tr>
<td>3</td>
<td>marry</td>
</tr>
</tbody>
</table>
</div>
<p>表 tmp_addr：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>city</th>
<th>country</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Nanjing</td>
<td>China</td>
</tr>
<tr>
<td>2</td>
<td>NewYork</td>
<td>USA</td>
</tr>
</tbody>
</table>
</div>
<p>这里省略建表、插入数据步骤，直接使用 <code>WITH</code> 和 <code>UNION ALL</code> 关键字来模型这两张表的数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> tmp_user <span class="keyword">as</span> (</span><br><span class="line">	<span class="keyword">select</span> </span><br><span class="line">		<span class="number">1</span> <span class="keyword">as</span> user_id,</span><br><span class="line">		<span class="string">&#x27;jack&#x27;</span> <span class="keyword">as</span> nickname</span><br><span class="line">	<span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line">	<span class="keyword">select</span> </span><br><span class="line">		<span class="number">2</span> <span class="keyword">as</span> user_id,</span><br><span class="line">		<span class="string">&#x27;johnson&#x27;</span> <span class="keyword">as</span> nickname</span><br><span class="line">	<span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line">	<span class="keyword">select</span> </span><br><span class="line">		<span class="number">3</span> <span class="keyword">as</span> user_id,</span><br><span class="line">		<span class="string">&#x27;marry&#x27;</span> <span class="keyword">as</span> nickname</span><br><span class="line">),</span><br><span class="line"></span><br><span class="line">tmp_addr <span class="keyword">as</span> (</span><br><span class="line">	<span class="keyword">select</span> </span><br><span class="line">		<span class="number">1</span> <span class="keyword">as</span> user_id, </span><br><span class="line">		<span class="string">&#x27;Nanjing&#x27;</span> <span class="keyword">as</span> city,</span><br><span class="line">		<span class="string">&#x27;China&#x27;</span> <span class="keyword">as</span> country</span><br><span class="line">	<span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line">	<span class="keyword">select</span></span><br><span class="line">		<span class="number">2</span> <span class="keyword">as</span> user_id,</span><br><span class="line">		<span class="string">&#x27;NewYork&#x27;</span> <span class="keyword">as</span> city,</span><br><span class="line">		<span class="string">&#x27;USA&#x27;</span> <span class="keyword">as</span> country</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>现在使用 LEFT JOIN，以表 tmp_user 为主表联结表 tmp_addr 进行查询。</p>
<p>首先，两张表都不加过滤条件：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">	<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	tmp_user t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> tmp_addr t2 <span class="keyword">on</span></span><br><span class="line">	t1.user_id <span class="operator">=</span> t2.user_id</span><br></pre></td></tr></table></figure>
<p>其查询结果如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>nickname</th>
<th>user_id</th>
<th>city</th>
<th>country</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>jack</td>
<td>1</td>
<td>Nanjing</td>
<td>China</td>
</tr>
<tr>
<td>2</td>
<td>johnson</td>
<td>2</td>
<td>NewYork</td>
<td>USA</td>
</tr>
<tr>
<td>3</td>
<td>marry</td>
<td>[NULL]</td>
<td>[NULL]</td>
<td>[NULL]</td>
</tr>
</tbody>
</table>
</div>
<p>user_id 为 3 的用户，没有对应的地址信息，右表的字段使用 NULL 填充。与我们预期的结果一致。</p>
<p>接下来，对左表应用过滤条件，只查 user_id = 1 的用户。</p>
<p>过滤条件写在 where 语句后：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">	<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	tmp_user t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> tmp_addr t2 <span class="keyword">on</span></span><br><span class="line">	t1.user_id <span class="operator">=</span> t2.user_id</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">	t1.user_id <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>其查询出来的结果如下，与我们预期的一致：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>nickname</th>
<th>user_id</th>
<th>city</th>
<th>country</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>jack</td>
<td>1</td>
<td>Nanjing</td>
<td>China</td>
</tr>
</tbody>
</table>
</div>
<p>过滤条件写在 on 后：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">	<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	tmp_user t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> tmp_addr t2 <span class="keyword">on</span></span><br><span class="line">	t1.user_id <span class="operator">=</span> t2.user_id</span><br><span class="line">	<span class="keyword">and</span> t1.user_id <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>nickname</th>
<th>user_id</th>
<th>city</th>
<th>country</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>jack</td>
<td>1</td>
<td>Nanjing</td>
<td>China</td>
</tr>
<tr>
<td>3</td>
<td>marry</td>
<td>[NULL]</td>
<td>[NULL]</td>
<td>[NULL]</td>
</tr>
<tr>
<td>2</td>
<td>johnson</td>
<td>[NULL]</td>
<td>[NULL]</td>
<td>[NULL]</td>
</tr>
</tbody>
</table>
</div>
<p>左表 tmp_user 的每一行记录都返回来了。</p>
<p>最后，对右表应用过滤条件，只查出 country = ‘China’ 的地址。</p>
<p>过滤条件写在 where 后：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">	<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	tmp_user t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> tmp_addr t2 <span class="keyword">on</span></span><br><span class="line">	t1.user_id <span class="operator">=</span> t2.user_id</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">	t2.country <span class="operator">=</span> <span class="string">&#x27;China&#x27;</span></span><br></pre></td></tr></table></figure>
<p>返回结果：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>nickname</th>
<th>user_id</th>
<th>city</th>
<th>country</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>jack</td>
<td>1</td>
<td>Nanjing</td>
<td>China</td>
</tr>
</tbody>
</table>
</div>
<p>结果与我们期望的不一致，我们希望即使用户地址表的 country 字段不是 China，也要返回左表的数据。</p>
<p>过滤条件写在 on 后：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">	<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	tmp_user t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> tmp_addr t2 <span class="keyword">on</span></span><br><span class="line">	t1.user_id <span class="operator">=</span> t2.user_id</span><br><span class="line">	<span class="keyword">and</span> t2.country <span class="operator">=</span> <span class="string">&#x27;China&#x27;</span></span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>nickname</th>
<th>user_id</th>
<th>city</th>
<th>country</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>jack</td>
<td>1</td>
<td>Nanjing</td>
<td>China</td>
</tr>
<tr>
<td>3</td>
<td>marry</td>
<td>[NULL]</td>
<td>[NULL]</td>
<td>[NULL]</td>
</tr>
<tr>
<td>2</td>
<td>johnson</td>
<td>[NULL]</td>
<td>[NULL]</td>
<td>[NULL]</td>
</tr>
</tbody>
</table>
</div>
<p>与我们期望的一致。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>【Redis】flushall命令——清空所有缓存数据</title>
    <url>/2022/08/25/flush-all-cache-data-in-redis/</url>
    <content><![CDATA[<p>如何清空 Redis 集群的所有缓存数据？即删除所有数据库的所有 key。</p>
<hr>
<p>使用 Redis 的 <code>flushall</code> 命令。</p>
<p>该命令适用 Redis 版本：≥ 1.0.0</p>
<p>执行结果总是返回：OK。</p>
<p><strong>NOTE：生产环境谨慎操作！！！除非你很清楚自己正在做什么！</strong></p>
<p>具体步骤如下：</p>
<ol>
<li><p>在终端命令行窗口，输入连接 Redis 指令：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli -h 192.168.182.227 -p 1379</span><br></pre></td></tr></table></figure>
<p> 参数说明：</p>
<ul>
<li><p><code>-h</code>：Redis Host（连接地址，如果连接地址为 127.0.0.1，可忽略该参数）；</p>
</li>
<li><p><code>-p</code>：Redis Port（端口号，如果端口号为 6379，可忽略该参数）；</p>
</li>
<li><p><code>-a</code>：Redis 连接密码（如有密码的话，需要上该参数，如  -a 1234567890k）</p>
</li>
</ul>
</li>
<li><p>连接成功后，输入 <code>flushall</code> 指令即可清空 Redis 所有缓存数据：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flushall</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ redis-cli -h 192.168.182.227 -p 1379</span><br><span class="line">192.168.182.227:1379&gt; flushall</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程 Q&amp;A</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>在Presto中实现Hive LATERAL VIEW EXPLODE</title>
    <url>/2022/08/24/lateral-view-explode-in-presto/</url>
    <content><![CDATA[<p>我是 Presto 新手，我们公司数据仓库中有一张表（表名：dwd_user_country），记录了用户到访过的国家与地区。这里为简化问题描述，将该表结构抽象为两个字段：user_id 和 countries，其中 countries 字段的值采用英文逗号连接用户到访过的国家与地区。</p>
<p>表数据如下表所示：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>countries</th>
</tr>
</thead>
<tbody>
<tr>
<td>26841018</td>
<td>中国,马来西亚,美国,瑞士,泰国,冰岛</td>
</tr>
</tbody>
</table>
</div>
<p>现在，我需要从该表中统计每个国家或地区的到访人数，在 Hive 语法中，我可以使用 <em>LATERAL VIEW EXPLODE</em> 将该表的数据转成以下格式，再按 country 字段做 GROUP BY 统计。如果现在是使用 Presto 该怎么做呢？</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>user_id</th>
<th>country</th>
</tr>
</thead>
<tbody>
<tr>
<td>26841018</td>
<td>中国</td>
</tr>
<tr>
<td>26841018</td>
<td>马来西亚</td>
</tr>
<tr>
<td>26841018</td>
<td>美国</td>
</tr>
<tr>
<td>26841018</td>
<td>瑞士</td>
</tr>
<tr>
<td>26841018</td>
<td>泰国</td>
</tr>
<tr>
<td>26841018</td>
<td>冰岛</td>
</tr>
</tbody>
</table>
</div>
<hr>
<p><strong>Hive 查询</strong></p>
<p>首先使用 <code>split</code> 函数将 countries 字段分割成数组，再使用 <strong><em>lateral view explode()</em></strong> 将数组炸开：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- hive</span></span><br><span class="line"><span class="keyword">select</span>  t1.user_id,</span><br><span class="line">        t2.country</span><br><span class="line"><span class="keyword">from</span> dwd_user_country t1 <span class="keyword">lateral</span> <span class="keyword">view</span> explode(split(t1.countries, <span class="string">&#x27;,&#x27;</span>)) t2 <span class="keyword">as</span> country</span><br></pre></td></tr></table></figure>
<p><strong>Presto 查询</strong></p>
<p>首先使用 <code>split</code> 函数将 countries 字段分割成数组，再使用 <strong><em>cross join unnest()</em></strong> 将数组炸开：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- presto</span></span><br><span class="line"><span class="keyword">select</span>  t1.user_id,</span><br><span class="line">        t2.country</span><br><span class="line"><span class="keyword">from</span> dwd_user_country t1</span><br><span class="line"><span class="keyword">cross</span> <span class="keyword">join</span> <span class="built_in">unnest</span>(split(countries, <span class="string">&#x27;,&#x27;</span>)) <span class="keyword">as</span> t2(country)</span><br></pre></td></tr></table></figure>
<p>t2 是由 <em>cross join unnest()</em> 隐式创建的表的别名。因此，可以在 SELECT 语句中将 country 写成 t2.country。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程 Q&amp;A</category>
      </categories>
      <tags>
        <tag>Hive</tag>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Gson将字符串转成JsonObject对象</title>
    <url>/2022/08/03/gson-string-to-jsonobject/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>当在 Java 项目中使用 Gson 库处理 JSON 时，我们可以将原始 JSON 字符串转换成更容易使用的类对象或数据结构。如将 JSON 字符串转换为 <code>**Map&lt;String, Object&gt;**</code> 对象，或者其他自定义类型的对象。但有些时候将 JSON 字符串转换为通用对象会更方便使用。</p>
<p>本文将演示如何使用 Gson 将 JSON 字符串转为 <code>**JsonObject**</code> 对象。</p>
<h2 id="配置Maven依赖"><a href="#配置Maven依赖" class="headerlink" title="配置Maven依赖"></a>配置Maven依赖</h2><p>首先，在 <em>pom.xml</em> 文件中配置 <em>gson</em> 依赖项：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>gson</em> 版本根据实际情况进行选择，建议使用最新版本（见 <a href="https://search.maven.org/search?q=g:com.google.code.gson%20AND%20a:gson&amp;core=gav">Maven Central</a> ）。</p>
<p>本文使用的是 <em>2.9.1</em> 版本（当前最新版本）。 </p>
<h2 id="方法一：-JsonParser"><a href="#方法一：-JsonParser" class="headerlink" title="方法一：*JsonParser*"></a>方法一：<strong>*</strong>JsonParser<strong>*</strong></h2><p>先使用 <em>JsonParser</em> 类的 <code>parseString()</code> 方法将 JSON 字符串转化 <em>JsonElement</em> 类型，再调用 <em>JsonElement</em> 类的 <code>getAsJsonObject()</code> 方法，即可得到 <em>JsonObject</em> 类对象。</p>
<p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">strJson</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;id\&quot;:20990981,\&quot;name\&quot;:\&quot;Johnson\&quot;,\&quot;tag\&quot;:\&quot;Javaer,Student\&quot;,\&quot;platform\&quot;:\&quot;AL\&quot;&#125;&quot;</span>;</span><br><span class="line">    <span class="type">JsonElement</span> <span class="variable">jsonElement</span> <span class="operator">=</span> JsonParser.parseString(strJson);</span><br><span class="line">    <span class="type">JsonObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> jsonElement.getAsJsonObject();</span><br><span class="line"></span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;id&quot;</span>).getAsInt());</span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;name&quot;</span>).getAsString());</span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;tag&quot;</span>).getAsString());</span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;platform&quot;</span>).getAsString());</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">20990981</span></span><br><span class="line"><span class="comment">Johnson</span></span><br><span class="line"><span class="comment">Javaer,Student</span></span><br><span class="line"><span class="comment">AL</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="方法二：-fromJson"><a href="#方法二：-fromJson" class="headerlink" title="方法二：*fromJson*"></a>方法二：<strong>*</strong>fromJson<strong>*</strong></h2><p>使用 Gson 对象的 <code>fromJson()</code> 方法，该方法将指定的 JSON 字符串反序列化为指定类的对象。</p>
<p>如以下示例代码展示了如何将 JSON 字符串反序列化为 <em>JsonObject</em> 类对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">strJson</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;id\&quot;:20990981,\&quot;name\&quot;:\&quot;Johnson\&quot;,\&quot;tag\&quot;:\&quot;Javaer,Student\&quot;,\&quot;platform\&quot;:\&quot;AL\&quot;&#125;&quot;</span>;</span><br><span class="line">    <span class="type">JsonElement</span> <span class="variable">jsonElement</span> <span class="operator">=</span> JsonParser.parseString(strJson);</span><br><span class="line">    <span class="type">JsonObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(strJson, JsonObject.class);</span><br><span class="line"></span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;id&quot;</span>).getAsInt());</span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;name&quot;</span>).getAsString());</span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;tag&quot;</span>).getAsString());</span><br><span class="line">    System.out.println(jsonObject.get(<span class="string">&quot;platform&quot;</span>).getAsString());</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">20990981</span></span><br><span class="line"><span class="comment">Johnson</span></span><br><span class="line"><span class="comment">Javaer,Student</span></span><br><span class="line"><span class="comment">AL</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文讲述了在 Java 项目中使用 Gson 库将 JSON 格式的字符串转为 <em>JsonObject</em> 对象的两种不同的方法。我们可以根据实际需要选择最合适的方法。</p>
<p>P.S. 本文示例代码托管在 GitHub 上。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>如何查看 Ambari 版本</title>
    <url>/2022/08/02/how-to-find-ambari-version/</url>
    <content><![CDATA[<p><strong>如何查看 Ambari 版本？</strong></p>
<p>打开 Ambari web 界面（默认端口：8080，如 <a href="http://ambari:8080/#/login">http://ambari:8080/#/login</a> ），成功登录之后，点击右上角用户名，在下拉框中点击 About，即可查看当前 Ambari 的版本。</p>
<p>具体如下图所示：<br><img src="/image/2022/20220802213426-01.png" alt="图 1"></p>
<p><img src="/image/2022/20220802213426-2.png" alt="图 2"></p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Ambari</tag>
      </tags>
  </entry>
  <entry>
    <title>卸载CentOS系统自带数据库MariaDB</title>
    <url>/2022/04/13/centos-uninstall-mariadb/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在 CentOS 7 系统中，执行命令时：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm -Uvh mysql-community-common-5.7.36-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>
<p>出现 conflicts 错误（即文件冲突），类似错误信息如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file /usr/share/mysql/czech/errmsg.sys from install of mysql-community-common-5.7.36-1.el7.x86_64 conflicts with file from package mariadb-libs-1:5.5.68-1.el7.x86_64</span><br><span class="line">file /usr/share/mysql/danish/errmsg.sys from install of mysql-community-common-5.7.36-1.el7.x86_64 conflicts with file from package mariadb-libs-1:5.5.68-1.el7.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>从错误日志中可以看到 <strong><em>mariadb</em></strong> 相关信息，由此可确定问题是由于 mysql 和 mariadb 之间存在文件冲突引起的。</p>
<p>解决方法可以直接缷载 mariadb，步骤如下：</p>
<ol>
<li>先查找 mariadb 安装版本：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep mariadb</span><br></pre></td></tr></table></figure>
<p>可以看到该命令显示以下输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -qa|grep mariadb</span><br><span class="line">mariadb-libs-5.5.68-1.el7.x86_64</span><br></pre></td></tr></table></figure>
<ol>
<li>根据步骤 1 的结果，执行缷载命令，如下：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm -e --nodeps mariadb-libs-5.5.68-1.el7.x86_64</span><br></pre></td></tr></table></figure>
<p>最后再重新执行安装 MySQL 命令即可。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>生产环境MySQL慢查询问题定位</title>
    <url>/2022/07/31/how-identify-mysql-performance-issues-slow-queries/</url>
    <content><![CDATA[<p>本文根据实际项目经验，详细描述 MySQL 慢查询问题的发现及排查解决过程。在不影响读者阅读理解的前提下，对部分原始数据进行脱敏处理。</p>
<hr>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>生产环境 MySQL 硬件配置：32C/64G/2T ESSD </p>
<p>MySQL 版本：5.7.28</p>
<p>存储数据主要来源：主要是 Flink 实时计算的指标，少部分 Presto 准实时计算的指标，同时还有部分离线数仓模型也会每天同步一份至该 MySQL，用于加速客户端查询和提升并发查询能力。</p>
<h2 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h2><p>之前收到运维的反馈，生产环境上用于存放 Flink 实时计算指标的 MySQL 有告警——每分钟慢查询数超过告警阈值，需及时跟进。当时通过 MySQL 监控面板查看到部分关键指标如下：</p>
<p>慢查询数</p>
<p><img src="/image/2022/20220731222821-01.png" alt="Untitled"></p>
<p>QPS</p>
<p><img src="/image/2022/20220731222821-02.png" alt="Untitled"></p>
<p><img src="/image/2022/20220731222821-03.png" alt="Untitled"></p>
<p>TPS</p>
<p><img src="/image/2022/20220731222821-04.png" alt="Untitled"></p>
<p>网络流量（流入、流出）</p>
<p><img src="/image/2022/20220731222821-05.png" alt="Untitled"></p>
<p>表锁</p>
<p><img src="/image/2022/20220731222821-06.png" alt="Untitled"></p>
<p>慢日志明细部分 SQL（当时只拉取一小部分的慢 SQL，以下这些语句是 Flink SQL 写入 MySQL 的）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># <span class="type">Time</span>: <span class="number">2022</span><span class="number">-07</span><span class="number">-28</span>T01:<span class="number">16</span>:<span class="number">52.760142</span>Z</span><br><span class="line"># <span class="keyword">User</span><span class="variable">@Host</span>: bigdata[bigdata] @  [<span class="number">10.10</span><span class="number">.18</span><span class="number">.251</span>]  Id: <span class="number">356218187</span></span><br><span class="line"># Query_time: <span class="number">16.126934</span>  Lock_time: <span class="number">0.000123</span> Rows_sent: <span class="number">0</span>  Rows_examined: <span class="number">0</span></span><br><span class="line">use db_name;</span><br><span class="line"><span class="keyword">SET</span> <span class="type">timestamp</span><span class="operator">=</span><span class="number">1658971012</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_1`(`col1`, `col2`, `col3`, `col4`, `col5`) <span class="keyword">VALUES</span> (xxx, <span class="string">&#x27;2022-07-28&#x27;</span>, <span class="string">&#x27;xxxxx&#x27;</span>, xx, xx) <span class="keyword">ON</span> DUPLICATE KEY <span class="keyword">UPDATE</span> `col1`<span class="operator">=</span><span class="keyword">VALUES</span>(`col1`), `col2`<span class="operator">=</span><span class="keyword">VALUES</span>(`col2`), `col3`<span class="operator">=</span><span class="keyword">VALUES</span>(`col3`), `col4`<span class="operator">=</span><span class="keyword">VALUES</span>(`col4`), `col5`<span class="operator">=</span><span class="keyword">VALUES</span>(`col5`);</span><br><span class="line"># <span class="type">Time</span>: <span class="number">2022</span><span class="number">-07</span><span class="number">-28</span>T01:<span class="number">16</span>:<span class="number">52.760581</span>Z</span><br><span class="line"># <span class="keyword">User</span><span class="variable">@Host</span>: bigdata[bigdata] @  [<span class="number">10.10</span><span class="number">.18</span><span class="number">.252</span>]  Id: <span class="number">375588733</span></span><br><span class="line"># Query_time: <span class="number">1.086578</span>  Lock_time: <span class="number">0.000123</span> Rows_sent: <span class="number">0</span>  Rows_examined: <span class="number">0</span></span><br><span class="line"><span class="keyword">SET</span> <span class="type">timestamp</span><span class="operator">=</span><span class="number">1658971012</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_2`(`col1`, `col2`, `col3`) <span class="keyword">VALUES</span> (<span class="string">&#x27;2022-07-28&#x27;</span>, <span class="string">&#x27;665902615870&#x27;</span>, <span class="string">&#x27;xxxx&#x27;</span>) <span class="keyword">ON</span> DUPLICATE KEY <span class="keyword">UPDATE</span> `col1`<span class="operator">=</span><span class="keyword">VALUES</span>(`col1`), `col2`<span class="operator">=</span><span class="keyword">VALUES</span>(`col2`), `col3`<span class="operator">=</span><span class="keyword">VALUES</span>(`col3`);</span><br><span class="line"># <span class="type">Time</span>: <span class="number">2022</span><span class="number">-07</span><span class="number">-28</span>T01:<span class="number">16</span>:<span class="number">52.761442</span>Z</span><br><span class="line"># <span class="keyword">User</span><span class="variable">@Host</span>: bigdata[bigdata] @  [<span class="number">10.10</span><span class="number">.18</span><span class="number">.249</span>]  Id: <span class="number">356218191</span></span><br><span class="line"># Query_time: <span class="number">16.525038</span>  Lock_time: <span class="number">0.000159</span> Rows_sent: <span class="number">0</span>  Rows_examined: <span class="number">0</span></span><br><span class="line"><span class="keyword">SET</span> <span class="type">timestamp</span><span class="operator">=</span><span class="number">1658971012</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tb_1`(`col1`, `col2`, `col3`, `col4`, `col5`) <span class="keyword">VALUES</span> (xxx, <span class="string">&#x27;2022-07-28&#x27;</span>, <span class="string">&#x27;xxxxx&#x27;</span>, xx, xx) <span class="keyword">ON</span> DUPLICATE KEY <span class="keyword">UPDATE</span> `col1`<span class="operator">=</span><span class="keyword">VALUES</span>(`col1`), `col2`<span class="operator">=</span><span class="keyword">VALUES</span>(`col2`), `col3`<span class="operator">=</span><span class="keyword">VALUES</span>(`col3`), `col4`<span class="operator">=</span><span class="keyword">VALUES</span>(`col4`), `col5`<span class="operator">=</span><span class="keyword">VALUES</span>(`col5`);</span><br></pre></td></tr></table></figure>
<h2 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h2><p>从 MySQL 监控面板看到，慢查询的情况每天都在发生，而且呈现一定的规律：</p>
<ul>
<li>一个是每天固定时段（凌晨 4 点半到 6 点之间，上午 9 点 15 到 20 分之间）会出现一次；</li>
<li>另一个是有周期性，大概每 20 分钟、每一小时都会出现一次。<ul>
<li>每 20 分钟出现一次的情况：从每小时 06 分开始，每隔 20 分钟触发一次，如 08:06，08:26，08:46，09:06 等；</li>
<li>每一小时出现一次的情况：从每小时 15 分触发一次，如 08:15，09:15，10:15 等。</li>
</ul>
</li>
</ul>
<p>初步判断，慢查询问题应该是由离线数仓模型数据同步至 MySQL 和准实时系统 Presto 定时写数据到 MySQL 引起的。因为每天出现慢查询的固定时段与离线数仓计算的时段一致，而且也只有 Presto 是定时触发计算并写数据至 MySQL 的。</p>
<p>但为进一步排除是否由 Flink SQL 实时写 MySQL 导致的，这里也对部分慢 SQL 进行抽样验证——执行这些 SQL 是否真的很慢。如前文贴出的慢 SQL，涉及到两张表 tb_1 与 tb_2，查了表记录数，tb_1 为 7 万多，tb_2 不到 158 万。数据量都不算大，按理说这些 <code>insert … on duplicate key update</code> 不应该会出现慢查询情况。然后在非上述出现慢查询时段，手动执行一次该 SQL 进行验证，发现执行很快就完成，不存在执行时长十几秒的情况。</p>
<p>另外，如果慢查询是由 Flink 写 MySQL 导致的，那么 MySQL 的监控面板的慢查询数的趋势情况应该如下图所示，而不会出现某些时段慢查询数为 0 的情况。因为 Flink 写到 MySQL 的表，都是热点表，具有高频的写操作，高峰的时候可能会出现一秒内需要更新某一张表的某一行某一列多达 100 多次，最低峰的时候也会在十秒内更新一次。</p>
<p><img src="/image/2022/20220731222821-07.png" alt="Untitled"></p>
<h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>经过初步分析，基本上可以排除 Flink 实时写入导致慢查询，接下来开始重点关注离线数仓部分模型同步和 Presto 准实时写入的情况。</p>
<h3 id="两种定位慢SQL方式"><a href="#两种定位慢SQL方式" class="headerlink" title="两种定位慢SQL方式"></a>两种定位慢SQL方式</h3><p>最简单粗暴的方式，是审查（Review）离线数仓数据清洗代码和 Presto 准实时调度代码，逐一排查与当前 MySQL 实例有关的代码，找出有问题的 SQL 并修复。这种方式虽然看起来直接简单，但没有针对性，效率并不高，一个是代码量较大，查找较费时，另一个是就算找到与当前 MySQL 实例有关的代码，这个代码也不一定是有问题的代码。</p>
<p>另一种方式，是拉取 MySQL 的 binlog 日志和慢查询日志进行定位。针对慢查询出现时段，定位该时段前、时段中，MySQL 在做什么操作。这种方式比较有针对性，效率也会高一些。本次定位慢 SQL 就采用该方式。</p>
<p>首先，从 MySQL 实例所在服务器下载慢日志文件（mysql1-slow.log）和慢查询出现时段的 binlog 日志文件（mysql-bin.012209）。</p>
<p>其次，在本地使用 <code>mysqlbinlog</code> 命令解析 binlog 日志文件，比如解析慢 SQL 出现时段的 binlog 日志（2022-07-28 08:10 ~ 08:30）至文本文件 binlog.txt 上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqlbinlog -v --base64-output=decode-rows  --start-datetime=<span class="string">&quot;2022-07-28T08:10:00&quot;</span> --stop-datetime=<span class="string">&quot;2022-07-28T08:30:00&quot;</span> mysql-bin.012209 &gt; binlog.txt</span><br></pre></td></tr></table></figure>
<p>使用 VS Code 打开 binlog.txt 文件，即可查看这个时段 MySQL 做了哪些操作。需要注意的是 binlog 日志并不记录查询（select 语句）相关的操作。</p>
<p>再次，使用 VS Code 打开慢日志文件（mysql1-slow.log），直接通过搜索日期的方式（如搜索 2022-07-28T00:10）定位到慢 SQL 出现时段都有哪些慢 SQL。如果慢日志文件太大的话，还可以使用 <code>tail</code> 命令，根据需要输出一万行，或十万行，或一百万行，或两百万行至另一个日志文件，再打开。如从慢日志文件输出十万行至 slow_072800.log 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -n 100000 mysql1-slow.log &gt; slow_072800.log</span><br></pre></td></tr></table></figure>
<p>最后，结合这两个日志文件（优先是使用慢日志文件），找出慢 SQL 语句，并根据需要进行 SQL 优化等。</p>
<h3 id="定位慢SQL示例-1"><a href="#定位慢SQL示例-1" class="headerlink" title="定位慢SQL示例 1"></a>定位慢SQL示例 1</h3><p>以本次慢查询为例，注意到 08:00 ~ 08:10 这个时段有大量的慢查询，我们可以先在慢日志文件中查找该时段都有哪些慢 SQL，主要关注两个重要指标：</p>
<ul>
<li><strong>Rows_sent：慢查询返回记录；</strong></li>
<li><strong>Rows_examined：慢查询扫描过的行数。</strong></li>
</ul>
<p>在该时段的慢 SQL 中，我们发现在 2022-07-28T00:06:32（此为UTC时间，北京时间需加 8 小时），有一条 SQL 的 Rows_examined 指标值为 6621900，即执行该 SQL 需要扫描 660 多万行数据：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Time: 2022-07-28T00:06:32.782972Z</span></span><br><span class="line"><span class="comment"># User@Host: bigdata[bigdata] @  [10.10.18.246]  Id: 392436436</span></span><br><span class="line"><span class="comment"># Query_time: 6.668395  Lock_time: 0.000710 Rows_sent: 0  Rows_examined: 6621900</span></span><br><span class="line">SET timestamp=1658966792;</span><br><span class="line">insert into db.tb_3(col1,col2,...,col_n)</span><br><span class="line"><span class="keyword">select</span> a.col1,a.col2,h.xxx,h.xxx,<span class="built_in">sum</span>(xxx) as gmv,<span class="built_in">sum</span>(xxxx), ..., col3 as gmv_target_acc  from ......;</span><br></pre></td></tr></table></figure>
<p>该 IP 地址 10.10.18.246，是 Presto 集群其中一个节点地址，可以断定这里的慢 SQL 来源于准实时调度。我们再以该 SQL 语句前面非参数部分内容（如 <code>insert into db.tb_3</code>）进行搜索，结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Time: 2022-07-28T00:26:30.317576Z</span></span><br><span class="line"><span class="comment"># User@Host: bigdata[bigdata] @  [10.10.18.246]  Id: 392439306</span></span><br><span class="line"><span class="comment"># Query_time: 6.652504  Lock_time: 0.000511 Rows_sent: 0  Rows_examined: 6622063</span></span><br><span class="line">SET timestamp=1658967990;</span><br><span class="line">insert into db.tb_3(col1,col2,...,col_n)</span><br><span class="line"><span class="keyword">select</span> a.col1,a.col2,h.xxx,h.xxx,<span class="built_in">sum</span>(xxx) as gmv,<span class="built_in">sum</span>(xxxx), ..., col3 as gmv_target_acc  from ......;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Time: 2022-07-28T00:46:28.910383Z</span></span><br><span class="line"><span class="comment"># User@Host: bigdata[bigdata] @  [10.10.18.246]  Id: 392442555</span></span><br><span class="line"><span class="comment"># Query_time: 6.624683  Lock_time: 0.000689 Rows_sent: 0  Rows_examined: 6622124</span></span><br><span class="line">SET timestamp=1658969188;</span><br><span class="line">insert into db.tb_3(col1,col2,...,col_n)</span><br><span class="line"><span class="keyword">select</span> a.col1,a.col2,h.xxx,h.xxx,<span class="built_in">sum</span>(xxx) as gmv,<span class="built_in">sum</span>(xxxx), ..., col3 as gmv_target_acc  from ......;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Time: 2022-07-28T01:06:03.600122Z</span></span><br><span class="line"><span class="comment"># User@Host: bigdata[bigdata] @  [10.10.18.246]  Id: 392445518</span></span><br><span class="line"><span class="comment"># Query_time: 6.610967  Lock_time: 0.000662 Rows_sent: 0  Rows_examined: 6622390</span></span><br><span class="line">SET timestamp=1658970363;</span><br><span class="line">insert into db.tb_3(col1,col2,...,col_n)</span><br><span class="line"><span class="keyword">select</span> a.col1,a.col2,h.xxx,h.xxx,<span class="built_in">sum</span>(xxx) as gmv,<span class="built_in">sum</span>(xxxx), ..., col3 as gmv_target_acc  from ......;</span><br></pre></td></tr></table></figure>
<p>可以看到，该 <code>insert into … select</code> 语句每 20 分钟执行一次，每次执行都扫描 600 多万行数据，每次执行该 SQL 都会阻塞其他 SQL 正常执行，导致大量的慢查询。</p>
<h3 id="定位慢SQL示例-2"><a href="#定位慢SQL示例-2" class="headerlink" title="定位慢SQL示例 2"></a>定位慢SQL示例 2</h3><p>接下来排查 08:10 ~ 08:20 时段的慢查询问题。该时段对应的网络流量指标面板，可以看到流出的流量有明显的上升，服务器若无其他特殊操作，一般可以断定此时段是由于返回大量数据导致了流出流量上升。这时就没有必要去 binlog 日志文件查找 08:10 ~ 08:20 这个时段的 MySQL 操作，而是要去慢日志文件查找 08:10 ~ 08:20 时段的 select 语句。</p>
<p>通过慢日志，我们发现是以下这段查询 SQL 语句导到了慢查询：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Time: 2022-07-28T00:17:23.830780Z</span></span><br><span class="line"><span class="comment"># User@Host: bigdata[bigdata] @  [10.10.18.205]  Id: 392438045</span></span><br><span class="line"><span class="comment"># Query_time: 71.781578  Lock_time: 0.000164 Rows_sent: 4012608  Rows_examined: 4012608</span></span><br><span class="line">SET timestamp=1658967443;</span><br><span class="line">SELECT `col1`, `col2`, `col3`, `col4`, `col5` FROM `db`.`tb_1213`;</span><br></pre></td></tr></table></figure>
<p>可以看到，执行该 SQL 语句需要扫描行数 400 多万，返回记录数 400 多万。一次查询就返回 400 多万数据，这是非常不合理的，也是流出流量异常上升的原因。</p>
<p>接着，再以该 SQL 语句前面非参数部分内容进行搜索，结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Time: 2022-07-28T01:16:52.759317Z</span></span><br><span class="line"><span class="comment"># User@Host: bigdata[bigdata] @  [10.10.18.9]  Id: 392447299</span></span><br><span class="line"><span class="comment"># Query_time: 20.966529  Lock_time: 0.000057 Rows_sent: 4012739  Rows_examined: 4012739</span></span><br><span class="line">SET timestamp=1658971012;</span><br><span class="line">SELECT `col1`, `col2`, `col3`, `col4`, `col5` FROM `db`.`tb_1213`;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Time: 2022-07-28T02:19:00.598622Z</span></span><br><span class="line"><span class="comment"># User@Host: bigdata[bigdata] @  [10.10.18.15]  Id: 392457198</span></span><br><span class="line"><span class="comment"># Query_time: 20.029628  Lock_time: 0.000049 Rows_sent: 4012988  Rows_examined: 4012988</span></span><br><span class="line">SET timestamp=1658974740;</span><br><span class="line">SELECT `col1`, `col2`, `col3`, `col4`, `col5` FROM `db`.`tb_1213`;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Time: 2022-07-28T03:19:37.546786Z</span></span><br><span class="line"><span class="comment"># User@Host: bigdata[bigdata] @  [10.10.18.9]  Id: 392466949</span></span><br><span class="line"><span class="comment"># Query_time: 34.584755  Lock_time: 0.000090 Rows_sent: 4013249  Rows_examined: 4013249</span></span><br><span class="line">SET timestamp=1658978377;</span><br><span class="line">SELECT `col1`, `col2`, `col3`, `col4`, `col5` FROM `db`.`tb_1213`;</span><br></pre></td></tr></table></figure>
<p>可以看出，在每小时的 10 ~ 20 分这个时段的慢查询，是执行该 SQL 导致的，这期间服务器流出流量都会明显上升，而且 QPS/TPS 也出现明显的下降。</p>
<h3 id="定位慢SQL示例-3"><a href="#定位慢SQL示例-3" class="headerlink" title="定位慢SQL示例 3"></a>定位慢SQL示例 3</h3><p>如果细心查看服务器的流量指标，会发现在 09:10 ~ 09:20 这个时段，服务器的流入流量有明显的上升（绿色的线）。如果此期间没有上传文件到服务器等特殊操作的话，说明此时段有大量的写操作。而且通过表锁指标看板，可以看到此时候的表锁次数也是明显的上升。基本上可以从这两个指标判断，此时段极有可能在执行类似 <code>insert into … select</code> 的 SQL 语句，插入大量数据，导致该操作从行锁升级成了表锁。</p>
<p>不过，在慢查询日志文件查找该时段的慢查询 SQL 时，并没有找到记录。但查找该时段的 binlog 日志，发现一个批量写入：以 BEGIN 开头，接着是 100 条 INSERT INTO 语句，然后才以 COMMIT 结尾。而且在 9 时 17 分 23~24 这两秒内，总共记录了 985 个批次。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># at 934275431</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934275511 CRC32 0xca3d2f40 	Query	thread_id=392447433	exec_time=0	error_code=0</span></span><br><span class="line">SET TIMESTAMP=1658971043/*!*/;</span><br><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 934275511</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934275880 CRC32 0x6488b977 	Table_map: `db`.`xxxx_tmp` mapped to number 5186539</span></span><br><span class="line"><span class="comment"># at 934275880</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934283461 CRC32 0x1017377a 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934283461</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934291002 CRC32 0x47d0d2d8 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934291002</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934298475 CRC32 0x30e8b18c 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934298475</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934306225 CRC32 0xf2904319 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934306225</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934313839 CRC32 0x9f6c134b 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934313839</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934321038 CRC32 0x90fe2e6c 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934321038</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934328898 CRC32 0xc8edc33c 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934328898</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934337005 CRC32 0xe92df56b 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934337005</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934344475 CRC32 0x4bf97a67 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934344475</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934352308 CRC32 0x5c4719a9 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934352308</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934359765 CRC32 0x3e789e0e 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934359765</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934367519 CRC32 0xbee8cc37 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934367519</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934375162 CRC32 0x6b911b20 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934375162</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934382613 CRC32 0xfc1645f3 	Write_rows: table id 5186539</span></span><br><span class="line"><span class="comment"># at 934382613</span></span><br><span class="line"><span class="comment">#220728  9:17:23 server id 1  end_log_pos 934383790 CRC32 0x587f985a 	Write_rows: table id 5186539 flags: STMT_END_F</span></span><br><span class="line"><span class="comment">### INSERT INTO `db`.`xxxx_tmp`</span></span><br><span class="line"><span class="comment">### SET</span></span><br><span class="line"><span class="comment">###   @1=1227520</span></span><br><span class="line"><span class="comment">###   @2=&#x27;156xxxxxxxx&#x27;</span></span><br><span class="line"><span class="comment">###   @3=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @4=&#x27;http://xxxxxxx/132&#x27;</span></span><br><span class="line"><span class="comment">###   @5=&#x27;xxx斌&#x27;</span></span><br><span class="line"><span class="comment">###   @6=128245</span></span><br><span class="line"><span class="comment">###   @7=&#x27;&#x27;</span></span><br><span class="line"><span class="comment">###   @8=1</span></span><br><span class="line"><span class="comment">###   @9=&#x27;xxxx&#x27;</span></span><br><span class="line"><span class="comment">###   @10=0</span></span><br><span class="line"><span class="comment">###   @11=0</span></span><br><span class="line"><span class="comment">###   @12=0</span></span><br><span class="line"><span class="comment">###   @13=2</span></span><br><span class="line"><span class="comment">###   @14=0</span></span><br><span class="line"><span class="comment">###   @15=&#x27;156xxxxxxxx&#x27;</span></span><br><span class="line"><span class="comment">###   @16=&#x27;&#x27;</span></span><br><span class="line"><span class="comment">###   @17=&#x27;&#x27;</span></span><br><span class="line"><span class="comment">###   @18=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @19=1</span></span><br><span class="line"><span class="comment">###   @20=1</span></span><br><span class="line"><span class="comment">###   @21=9</span></span><br><span class="line"><span class="comment">###   @22=&#x27;&#x27;</span></span><br><span class="line"><span class="comment">###   @23=&#x27;&#x27;</span></span><br><span class="line"><span class="comment">###   @24=&#x27;&#x27;</span></span><br><span class="line"><span class="comment">###   @25=1</span></span><br><span class="line"><span class="comment">###   @26=&#x27;xxx&#x27;</span></span><br><span class="line"><span class="comment">###   @27=206485299</span></span><br><span class="line"><span class="comment">###   @28=206485297</span></span><br><span class="line"><span class="comment">###   @29=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @30=&#x27;***&#x27;</span></span><br><span class="line"><span class="comment">###   @31=&#x27;2017-08-10 16:53:16&#x27;</span></span><br><span class="line"><span class="comment">###   @32=0</span></span><br><span class="line"><span class="comment">###   @33=2</span></span><br><span class="line"><span class="comment">###   @34=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @35=NULL</span></span><br><span class="line"><span class="comment">###   @36=NULL</span></span><br><span class="line"><span class="comment">###   @37=0</span></span><br><span class="line"><span class="comment">###   @38=970</span></span><br><span class="line"><span class="comment">###   @39=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @40=NULL</span></span><br><span class="line"><span class="comment">###   @41=NULL</span></span><br><span class="line"><span class="comment">###   @42=61</span></span><br><span class="line"><span class="comment">###   @43=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @44=&#x27;123456X&#x27;</span></span><br><span class="line"><span class="comment">###   @45=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @46=*******</span></span><br><span class="line"><span class="comment">###   @47=&#x27;123456X&#x27;</span></span><br><span class="line"><span class="comment">###   @48=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @49=NULL</span></span><br><span class="line"><span class="comment">###   @50=NULL</span></span><br><span class="line"><span class="comment">###   @51=NULL</span></span><br><span class="line"><span class="comment">###   @52=NULL</span></span><br><span class="line"><span class="comment">###   @53=NULL</span></span><br><span class="line"><span class="comment">###   @54=227520</span></span><br><span class="line"><span class="comment">###   @55=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @56=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @57=97</span></span><br><span class="line"><span class="comment">###   @58=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @59=NULL</span></span><br><span class="line"><span class="comment">###   @60=NULL</span></span><br><span class="line"><span class="comment">###   @61=NULL</span></span><br><span class="line"><span class="comment">###   @62=NULL</span></span><br><span class="line"><span class="comment">###   @63=NULL</span></span><br><span class="line"><span class="comment">###   @64=NULL</span></span><br><span class="line"><span class="comment">###   @65=NULL</span></span><br><span class="line"><span class="comment">###   @66=NULL</span></span><br><span class="line"><span class="comment">###   @67=NULL</span></span><br><span class="line"><span class="comment">###   @68=NULL</span></span><br><span class="line"><span class="comment">###   @69=*******</span></span><br><span class="line"><span class="comment">###   @70=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @71=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @72=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @73=96</span></span><br><span class="line"><span class="comment">###   @74=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @75=97</span></span><br><span class="line"><span class="comment">###   @76=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @77=NULL</span></span><br><span class="line"><span class="comment">###   @78=NULL</span></span><br><span class="line"><span class="comment">###   @79=61</span></span><br><span class="line"><span class="comment">###   @80=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @81=97</span></span><br><span class="line"><span class="comment">###   @82=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @83=NULL</span></span><br><span class="line"><span class="comment">###   @84=NULL</span></span><br><span class="line"><span class="comment">###   @85=61</span></span><br><span class="line"><span class="comment">###   @86=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @87=&#x27;2022-06-17 02:11:07&#x27;</span></span><br><span class="line"><span class="comment">###   @88=&#x27;2022-07-27 18:40:14&#x27;</span></span><br><span class="line"><span class="comment">###   @89=NULL</span></span><br><span class="line"><span class="comment">###   @90=NULL</span></span><br><span class="line"><span class="comment">###   @91=&#x27;2022-07-13 00:17:12&#x27;</span></span><br><span class="line"><span class="comment">###   @92=&#x27;2022-07-27 18:41:30&#x27;</span></span><br><span class="line"><span class="comment">###   @93=&#x27;2018-09-20 02:13:12&#x27;</span></span><br><span class="line"><span class="comment">###   @94=&#x27;2022-07-27 15:35:08&#x27;</span></span><br><span class="line"><span class="comment">###   @95=&#x27;2018-09-20 02:13:12&#x27;</span></span><br><span class="line"><span class="comment">###   @96=&#x27;2022-07-26 01:13:35&#x27;</span></span><br><span class="line"><span class="comment">###   @97=&#x27;2018-09-30 09:03:03&#x27;</span></span><br><span class="line"><span class="comment">###   @98=&#x27;2022-07-27 13:37:14&#x27;</span></span><br><span class="line"><span class="comment">###   @99=&#x27;2018-09-30 19:40:30&#x27;</span></span><br><span class="line"><span class="comment">###   @100=&#x27;2019-04-20 21:31:47&#x27;</span></span><br><span class="line"><span class="comment">###   @101=&#x27;2018-05-02 18:08:04&#x27;</span></span><br><span class="line"><span class="comment">###   @102=NULL</span></span><br><span class="line"><span class="comment">###   @103=NULL</span></span><br><span class="line"><span class="comment">###   @104=&#x27;2018-05-02 18:08:04&#x27;</span></span><br><span class="line"><span class="comment">###   @105=440100</span></span><br><span class="line"><span class="comment">###   @106=&#x27;中国&#x27;</span></span><br><span class="line"><span class="comment">###   @107=&#x27;广东&#x27;</span></span><br><span class="line"><span class="comment">###   @108=&#x27;广州&#x27;</span></span><br><span class="line"><span class="comment">###   @109=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @110=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @111=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @112=&#x27;*******&#x27;</span></span><br><span class="line"><span class="comment">###   @113=*******</span></span><br><span class="line"><span class="comment">###   @114=*******</span></span><br><span class="line"><span class="comment">###   @115=*******</span></span><br><span class="line"><span class="comment">###   @116=*******</span></span><br><span class="line"><span class="comment">###   @117=&#x27;*******&#x27;</span></span><br><span class="line"></span><br><span class="line">...... （这里省略其他 99 条 INSERT INTO 语句）</span><br><span class="line"><span class="comment"># at 1051816055</span></span><br><span class="line"><span class="comment">#220728  9:17:42 server id 1  end_log_pos 1051816136 CRC32 0xc2a23324 	Query	thread_id=392447433	exec_time=0	error_code=0</span></span><br><span class="line">SET TIMESTAMP=1658971062/*!*/;</span><br><span class="line">COMMIT</span><br><span class="line">/*!*/;</span><br></pre></td></tr></table></figure>
<p>根据此 SQL 的表名（<code>db`.`xxxx_tmp</code>），查了离线数仓和准实时的代码，发现在离线数仓中，有一个 shell 脚本调用 <code>sqoop</code> 命令将一个离线模型的数据（该模型记录数为 98467）导出到 MySQL。</p>
<p><code>sqoop</code> 命令是以批的方式将 hive 的数据导出到 MySQL 的，所以这里只看到服务器的流入流量明显上升，但并没有产生慢 SQL。此时段的慢查询其实是示例 2 的 SQL 产生的，在 <code>sqoop</code> 执行批量写入的同时，准实时也恰好在该时段执行慢查询的 select 语句。</p>
<h3 id="优化后"><a href="#优化后" class="headerlink" title="优化后"></a>优化后</h3><p>如下图所示，经过上述方式，找出慢 SQL 并优化后，后续没有再出现慢查询的情况。</p>
<p><img src="/image/2022/20220731222821-08.png" alt="Untitled"></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文根据实际项目经验，主要记录了生产环境 MySQL 慢查询的排查过程。关于如何优化已发现的问题 SQL，本文没有涉及到。常见的优化手段一般是通过 <code>explain</code> 命令来查看 SQL 执行计划，并以此调整 SQL 的写法。</p>
<p>多数据情况下，定位慢 SQL 都是通过慢查询日志进行定位的。借助服务器的部分关键指标，可以有效提高排查效率。</p>
<p>例如，我们知道导致慢 SQL 最常见的原因是大事务。而大事务通常是没有限定好 SQL 扫描表的行数，导致每次执行，都要扫描几十万行，甚至几百万行数据。如 SQL 语句是往目标表写入几百万行数据，或者是从目标表查询返回几十万行数据等。执行这样的 SQL 语句，有一个特征是 MySQL 实例所在服务器的网络流量会有明显的变化：</p>
<ul>
<li>写入大量数据，服务器的流入流量会明显上升；</li>
<li>查询返回大量数据，服务器的流出流量也会有明显的上升。</li>
</ul>
<p>我们可以根据该特征来判断某个时段的慢查询是由于写入还是查询导致的。并根据出现慢查询的时段，快速定位慢查询日志文件中的慢 SQL。</p>
<p>需要注意的是，慢查询日志文件中记录的慢 SQL，不一定都是有问题的 SQL，因为有可能是某条正在执行慢 SQL 语句，阻塞了其他 SQL 语句正常执行。这种情况一般可以通过慢查询日志中的 Rows_sent（慢查询返回记录）和 Rows_examined（慢查询扫描过的行数）两个指标快速排查。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>备忘录</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Java 中如何使用 Gson 库序列化 NULL 字段</title>
    <url>/2022/08/16/how-to-serialize-a-null-field-using-gson-library-in-java/</url>
    <content><![CDATA[<p>默认情况下，<em>Gson</em> 对象不会将值为 <em>NULL</em> 的字段序列化到 <em>JSON</em> 对象中。如果要序列化值为 <em>NULL</em> 的字段，可以在创建 <em>Gson</em> 对象之前，先调用 <em>GsonBuilder</em> 实例的 <code>serializeNulls()</code> 方法，再由 <em>GsonBuilder</em> 创建 <em>Gson</em> 实例，即可在序列化后的 <em>JSON</em> 中包含 <em>NULL</em> 值的字段。</p>
<p>具体示例代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.GsonBuilder;</span><br><span class="line"><span class="keyword">import</span> com.johnson.gson.model.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NullFieldSerializeDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">GsonBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>();</span><br><span class="line">        builder.serializeNulls();</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> builder.setPrettyPrinting().create();</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">12</span>, <span class="string">&quot;username&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(user);</span><br><span class="line">        System.out.println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  &quot;id&quot;: 12,</span></span><br><span class="line"><span class="comment">  &quot;name&quot;: &quot;username&quot;,</span></span><br><span class="line"><span class="comment">  &quot;tag&quot;: null,</span></span><br><span class="line"><span class="comment">  &quot;platform&quot;: null</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>User 类定义如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String tag;</span><br><span class="line">    <span class="keyword">private</span> String platform;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer id, String name, String tag, String platform)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.tag = tag;</span><br><span class="line">        <span class="built_in">this</span>.platform = platform;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTag</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> tag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTag</span><span class="params">(String tag)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.tag = tag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPlatform</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> platform;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPlatform</span><span class="params">(String platform)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.platform = platform;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>P.S. 本文示例代码托管在 GitHub 上。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>用户画像是什么</title>
    <url>/2022/09/08/user-portrait-intro/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在大数据领域，用户画像一般指用户信息标签化。首先，通过多种渠道方式，尽可能多地收集用户各种各样维度的数据，如用户信息、消费水平、消费习惯、购买产品类目偏好等；其次，综合收集到的数据，对用户特征进行刻画与抽象；最后再对这些特征进行分析、统计和推断，挖掘潜在价值。</p>
<p>一个完善的用户画像系统，不仅可以帮助企业进行精细化运营管理，如提升用户购买转化率、商品的曝光/点击率等运营指标，甚至为企业的战略决策提供支持。现在，互联网上常见的针对用户进行个性化推荐、精准营销（如定向广告投放）、个性化服务等，有不少是直接依赖用户画像。例如，不同用户打开同一个外卖 APP，用户极有可能在 APP 首页上看到的是不同的推荐商家，即所谓的“千人千面”，其背后就是用户画像的一个应用场景——根据用户当前所在位置、历史订单数据（口味、消费水平等），给用户打上“标签”，并根据标签给用户推荐合适的商家。</p>
<p>根据打标签的方式，可以将标签分为以下三大类：</p>
<ul>
<li><strong>统计类标签</strong>，通过对用户信息、访问记录、下单消费等常规数据直接进行统计得到，如用户性别、常驻地、年龄、设备类型、近 30 日活跃天数、近 30 日下单天数、近 30 日订单量等。统计类标签是最常见的用户标签，是用户画像的构成基础。</li>
<li><strong>规则类标签</strong>，通过对用户的常规数据加上一定的规则进行统计得到，如用户的流失程度标签（轻度流失用户、中度流失用户、重度流失用户），对轻度流失用户这一口径的定义为“用户最后访问 APP 的日期距离当前日期的天数在[30, 60) 之间”。规则类标签也是常见的用户标签，其中的规则定义一般由业务运营人员（熟悉业务）和数据分析人员（熟悉数据的分布特征）协商确定。</li>
<li><strong>机器学习挖掘类标签</strong>，通过机器学习算法挖掘产生，如根据用户浏览的商品信息、购买的历史记录等数据，计算用户对购买某商品的概率。因为此类标签的开发周期长、开发成本高，相对而言比较少见。</li>
</ul>
<h2 id="给用户打“标签”例子"><a href="#给用户打“标签”例子" class="headerlink" title="给用户打“标签”例子"></a>给用户打“标签”例子</h2><p>下图的用户画像，是某电商平台通过该用户实名时填写的基本信息、购买的产品类型、以及其他搜索行为等维度数据，给用户打的标签：宝妈，孩子年龄 1-3 岁，家有宠物猫，IT 从业者，爱阅读，热心公益与时政等。</p>
<p><img src="/image/2022/user-portrait-220908.png" alt="用户画像"></p>
<p>“打标签”的逻辑如下：</p>
<p>从用户实名时填写的基本信息和埋点数据，可以统计出该用户的年龄段（18-24岁）、性别（女）、常驻地广州；</p>
<p>从用户购买的商品名称、商品类目、购买频次、数量等信息，可以推断出该用户大概率是 IT 从业者和喜欢阅读，因为经常购买 Hive、Flink、Python、Kudu 等技术类与非技术类书籍；家里应该有养宠物猫，因为该用户购买比瑞吉猫粮、皮旦猫窝等宠物类目商品的频次较高；爱看电影，每月都有购买电影票商品的记录；用户有可能是一名宝妈，孩子年龄应该在 1-3 岁，因为经常定期购买美赞臣奶粉、尤妮佳纸尿裤和拉拉裤，按奶粉段数可推断孩子年龄段；从用户购买商品信息与购买频次，还可以推断出用户的购物喜好品牌是比瑞吉、美赞臣、蕉下、皮旦、尤妮佳等。</p>
<p>从用户浏览的文章类型和其他渠道来源信息，可以推断出用户热心公益与时政，因为用户设置了每月定期公益捐款、经常浏览时政类新闻等。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>在大数据领域，用户画像是指用户信息标签化。根据打标签的方式，可以将标签分为统计类标签、规则类标签和机器学习挖掘类标签。用户画像一般应用在企业精细化运营管理，针对用户进行个性化推荐、精准营销（如定向广告投放）、个性化服务等。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>用户画像</category>
      </categories>
      <tags>
        <tag>用户画像</tag>
      </tags>
  </entry>
  <entry>
    <title>如果Java在技术上落后，为什么人们还在使用Java呢</title>
    <url>/2022/08/29/why-do-people-still-use-java-if-java-is-behind-technologically/</url>
    <content><![CDATA[<p>本文翻译至<a href="https://blog.ifeanyiokeakwalam.com/post/65/Programming/why-do-people-still-use-java-if-java-is-behind-technologically">《Why do people still use Java, if Java is behind technologically》</a>。</p>
<hr>
<p>首先，Java 开发人员有很多工作岗位，这是一个原因，但为什么人们仍然使用 Java，包括在新项目中使用呢？</p>
<p>最近流行的高级语言，如 Python、Ruby，因其代码简便性和简洁性，可以很好地提高开发人员的生产力、灵活性和快速迭代。这些语言的动态特性对于许多广泛的应用程序来说非常棒，但是，当项目变得非常大、涉及到大量开发人员或者当速度和容错性至关重要时，它们就会开始崩溃。</p>
<p>有一些技术和约定可以解决动态类型的代码稳定性问题，但是技术和约定意味着人们需要遵循它们，即使这样，也存在难以预防的漏洞。以 PHP 为例，它在整个 Facebook 中用于后端编码，Facebook 对其进行了扩展，为其提供静态类型和动态编译，以便它可以提供使用 Java 等技术时所获得的速度和稳定性。Scala、Haskel、Erlang 和 Golang 等外来语言将主要用于最适合它们的特定应用程序。</p>
<p>另一方面，对于许多应用程序来说，Java 仍然是同类中最好的。这是构建坚如磐石、快速、可扩展、无错误的后端系统的最佳方式。它拥有最快的 JVM。只有 C 或 C++ 更快，并且仅在某些狭窄的情况下，如计算算法优化。Java 也是 Android 的语言，Android 是地球上部署最广泛的智能手机操作系统。</p>
<p>有人在评论中指出，Rust 是一种新兴语言，而 Go 作为可扩展的后端服务器语言正在站稳脚跟。Java 在抽象和执行速度方面可能不是当今“最好的”，但它仍然拥有庞大的库安装基础，这些新语言还没有，而且可能在很长一段时间内都不会。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>运行第一个Flink应用</title>
    <url>/2022/10/08/the-first-apache-flink-job/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>基于 UNIX 环境</li>
</ul>
<p>如果使用的是 Windows 环境，可以安装虚拟机软件（如 VMware Workstation Pro）并配置一个 Linux 系统（如 CentOS 8，Ubuntu 等）的虚拟机，也可以安装 Cygwin（ 一个 Windows 下的 Linux 环境），或者配置 WSL (Windows Subsystem for Linux, Windows 10 中新加的功能）。</p>
<p>这里运行环境为 Windows 10 的 Linux 子系统：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  /opt <span class="built_in">cat</span> /proc/version</span><br><span class="line">Linux version 4.4.0-19041-Microsoft (Microsoft@Microsoft.com) (gcc version 5.4.0 (GCC) ) <span class="comment">#488-Microsoft Mon Sep 01 13:43:00 PST 2020</span></span><br><span class="line">➜  /opt <span class="built_in">cat</span> /etc/issue</span><br><span class="line">Ubuntu 20.04.4 LTS \n \l</span><br></pre></td></tr></table></figure>
<ul>
<li>安装 Java 8</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  /opt java -version</span><br><span class="line">java version <span class="string">&quot;1.8.0_311&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_311-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.311-b11, mixed mode)</span><br></pre></td></tr></table></figure>
<ul>
<li>安装 Maven</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  /opt mvn --version</span><br><span class="line">Apache Maven 3.8.6 (84538c9988a25aec085021c365c560670ad80f63)</span><br><span class="line">Maven home: /mnt/d/opt/maven</span><br><span class="line">Java version: 1.8.0_311, vendor: Oracle Corporation, runtime: /mnt/d/opt/java/jdk1.8.0_311/jre</span><br><span class="line">Default locale: en, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">&quot;linux&quot;</span>, version: <span class="string">&quot;4.4.0-19041-microsoft&quot;</span>, <span class="built_in">arch</span>: <span class="string">&quot;amd64&quot;</span>, family: <span class="string">&quot;unix&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="安装Flink"><a href="#安装Flink" class="headerlink" title="安装Flink"></a>安装Flink</h2><ol>
<li><p>从 Apache Flink 官网（<a href="https://flink.apache.org/">https://flink.apache.org/</a>）下载基于 Scala 2.12 的 Apache Flink 1.15.2 二进制发行版。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dlcdn.apache.org/flink/flink-1.15.2/flink-1.15.2-bin-scala_2.12.tgz</span><br></pre></td></tr></table></figure>
</li>
<li><p>解压文件：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzf flink-1.15.2-bin-scala_2.12.tgz</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入 Flink 目录：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> flink-1.15.2</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动本地 Flink 集群：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/start-cluster.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p> 输出如下：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  /opt wget https://dlcdn.apache.org/flink/flink-1.15.2/flink-1.15.2-bin-scala_2.12.tgz</span><br><span class="line">➜  /opt</span><br><span class="line">➜  /opt tar -xzf flink-1.15.2-bin-scala_2.12.tgz</span><br><span class="line">➜  /opt</span><br><span class="line">➜  /opt <span class="built_in">cd</span> flink-1.15.2</span><br><span class="line">➜  flink-1.15.2</span><br><span class="line">➜  flink-1.15.2 ./bin/start-cluster.sh</span><br><span class="line">Starting cluster.</span><br><span class="line">Starting standalonesession daemon on host airoo1Oi.</span><br><span class="line">Starting taskexecutor daemon on host airoo1Oi.</span><br></pre></td></tr></table></figure>
</li>
<li><p>在浏览器中输入 <a href="http://localhost:8081/">http://localhost:8081/</a>，打开 Flink Web UI：</p>
<p> <img src="/image/2022/20221008000.png" alt="Apache Flink Web UI 概览页"></p>
<p> Apache Flink Web UI 概览页</p>
<p> 可以看到 Flink 集群信息：一个 TaskManager（Flink 工作进程），一个可用的 Task Slot（任务槽，TaskManager 所提供的资源单元）。</p>
</li>
</ol>
<h2 id="基于Flink实现词频统计功能"><a href="#基于Flink实现词频统计功能" class="headerlink" title="基于Flink实现词频统计功能"></a>基于Flink实现词频统计功能</h2><p>以下步骤详细介绍了如何使用 Flink 实时统计从 Socket 接收到的字符串中单词出现次数。</p>
<h3 id="使用Maven命令创建项目"><a href="#使用Maven命令创建项目" class="headerlink" title="使用Maven命令创建项目"></a>使用Maven命令创建项目</h3><p><strong>Maven命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn archetype:generate                \</span><br><span class="line">  -DarchetypeGroupId=org.apache.flink   \</span><br><span class="line">  -DarchetypeArtifactId=flink-quickstart-java \</span><br><span class="line">  -DarchetypeVersion=1.15.2</span><br></pre></td></tr></table></figure>
<p>在执行该命令的过程中会提示输入 groupId、artifactId、version 和 package。</p>
<p>这里填入的是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">groupId: com.johnson.flink</span><br><span class="line">artifactId: flink-tutorial</span><br><span class="line">version: 1.0-SNAPSHOT</span><br><span class="line">package: com.johnson.flink</span><br></pre></td></tr></table></figure>
<p>项目目录如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜  flink-tutorial tree</span><br><span class="line">.</span><br><span class="line">├── pom.xml</span><br><span class="line">└── src</span><br><span class="line">    └── main</span><br><span class="line">        ├── java</span><br><span class="line">        │   └── com</span><br><span class="line">        │       └── johnson</span><br><span class="line">        │           └── flink</span><br><span class="line">        │               └── DataStreamJob.java</span><br><span class="line">        └── resources</span><br><span class="line">            └── log4j2.properties</span><br></pre></td></tr></table></figure>
<h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><p>新建 Java 类 <code>WordCountJob</code> 并放在 <code>job</code> 包下，完整代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.flink.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.functions.FlatMapFunction;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.java.tuple.Tuple2;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.datastream.DataStreamSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.util.Collector;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 词频统计</span></span><br><span class="line"><span class="comment"> * 统计从 Socket 接收到的字符串中单词出现次数。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/9 20:21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCountJob</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 设置执行环境</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">StreamExecutionEnvironment</span> <span class="variable">env</span> <span class="operator">=</span> StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Socket 地址、端口</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">hostname</span> <span class="operator">=</span> <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Source：读取数据</span></span><br><span class="line">        DataStreamSource&lt;String&gt; stream = env.socketTextStream(hostname, port);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Transform：将每行数据按任何非单词字符分割成单词，再按单词分组统计单词数量</span></span><br><span class="line">        SingleOutputStreamOperator&lt;Tuple2&lt;String, Integer&gt;&gt; sum = stream.flatMap(<span class="keyword">new</span> <span class="title class_">WordCountFlatMap</span>())</span><br><span class="line">                .keyBy(p -&gt; p.f0).sum(<span class="number">1</span>).uid(<span class="string">&quot;Transform&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Sink：直接打印输出</span></span><br><span class="line">        sum.print();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行程序</span></span><br><span class="line">        env.execute(<span class="string">&quot;词频统计&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">WordCountFlatMap</span> <span class="keyword">implements</span> <span class="title class_">FlatMapFunction</span>&lt;String, Tuple2&lt;String, Integer&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">flatMap</span><span class="params">(String s, Collector&lt;Tuple2&lt;String, Integer&gt;&gt; collector)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            <span class="comment">// 先转为小写，再按任何非单词字符进行分割</span></span><br><span class="line">            String[] words = s.toLowerCase().split(<span class="string">&quot;\\W+&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">                <span class="keyword">if</span> (word.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">// 回收器回收长度大于0的单词，将该单词的出现次数计为1</span></span><br><span class="line">                    collector.collect(<span class="keyword">new</span> <span class="title class_">Tuple2</span>&lt;&gt;(word, <span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="打包程序"><a href="#打包程序" class="headerlink" title="打包程序"></a>打包程序</h3><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure>
<p>将打包好的 jar 包复制到 Flink 目录下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  flink-tutorial <span class="built_in">cp</span> target/flink-tutorial-1.0-SNAPSHOT.jar /opt/flink-1.15.2</span><br><span class="line">➜  flink-tutorial</span><br></pre></td></tr></table></figure>
<p>进入 Flink 安装目录，此时 Flink 目录如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  flink-tutorial <span class="built_in">cd</span> /opt/flink-1.15.2</span><br><span class="line">➜  flink-1.15.2 ll </span><br><span class="line">total 732K</span><br><span class="line">-rw-r--r-- 1 1709996467 staff  12K Aug 17 20:10 LICENSE</span><br><span class="line">-rw-r--r-- 1 1709996467 staff 600K Aug 18 00:42 NOTICE</span><br><span class="line">-rw-r--r-- 1 1709996467 staff 1.3K Aug 17 20:10 README.txt</span><br><span class="line">drwxr-xr-x 1 1709996467 staff 4.0K Aug 18 00:42 bin</span><br><span class="line">drwxr-xr-x 1 1709996467 staff 4.0K Aug 18 00:42 conf</span><br><span class="line">drwxr-xr-x 1 1709996467 staff 4.0K Aug 18 00:42 examples</span><br><span class="line">-rwxr-xr-x 1 root       root  8.1K Oct 10 21:24 flink-tutorial-1.0-SNAPSHOT.jar</span><br><span class="line">drwxr-xr-x 1 1709996467 staff 4.0K Aug 18 00:42 lib</span><br><span class="line">drwxr-xr-x 1 1709996467 staff 4.0K Aug 18 00:42 licenses</span><br><span class="line">drwxr-xr-x 1 1709996467 staff 4.0K Oct  9 17:12 <span class="built_in">log</span></span><br><span class="line">drwxr-xr-x 1 1709996467 staff 4.0K Aug 18 00:42 opt</span><br><span class="line">drwxr-xr-x 1 1709996467 staff 4.0K Aug 18 00:42 plugins</span><br><span class="line">➜  flink-tutorial</span><br></pre></td></tr></table></figure>
<h3 id="使用-nc-命令监听-3000-端口"><a href="#使用-nc-命令监听-3000-端口" class="headerlink" title="使用 nc 命令监听 3000 端口"></a>使用 <code>nc</code> 命令监听 3000 端口</h3><p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -l 3000</span><br></pre></td></tr></table></figure>
<h3 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><p>进行 Flink 目录，指定应用程序的入口类和 jar 文件，在本地集群上运行作业：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/flink run -c com.johnson.flink.job.WordCountJob flink-tutorial-1.0-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>
<p>返回结果显示作业已提交，作业的 ID 为 47a66fb7968d8b04dfe574f520bde7af，如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜  flink-1.15.2 ./bin/flink run -c com.johnson.flink.job.WordCountJob flink-tutorial-1.0-SNAPSHOT.jar</span><br><span class="line">Job has been submitted with JobID 47a66fb7968d8b04dfe574f520bde7af</span><br></pre></td></tr></table></figure>
<p>打开 Flink Web UI，可以看到“Running Jobs List“列表中有一个作业。点击该作业，可以看到该作业的运行情况概览：数据流程图、算子的实时指标等：</p>
<p><img src="/image/2022/20221008001.png" alt="展示运行作业的 Apache Flink Web UI 截图"></p>
<p>展示运行作业的 Apache Flink Web UI 截图</p>
<p>作业的打印输出（<code>sum.print()</code>）会写入 Flink 工作进程的标准输出中，默认情况下它会重定向到 Flink 安装目录的 <em>log</em> 子目录下的文件。可以使用 <code>tail</code> 命令查看输出的 log 文件来观察统计结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f ./log/flink-&lt;user&gt;-taskexecutor-&lt;n&gt;-&lt;hostname&gt;.out</span><br></pre></td></tr></table></figure>
<p>如查看本示例的输出结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f <span class="built_in">log</span>/flink-root-taskexecutor-1-airoo1Oi.out</span><br></pre></td></tr></table></figure>
<p>在 <code>nc</code> 命令的窗口中，输入以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a is <span class="keyword">for</span> apple</span><br><span class="line">b is <span class="keyword">for</span> ball</span><br><span class="line">c is <span class="keyword">for</span> cake</span><br></pre></td></tr></table></figure>
<p>可以看到文件中写入了和下面类似的文本行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  flink-1.15.2 <span class="built_in">tail</span> -f <span class="built_in">log</span>/flink-root-taskexecutor-1-airoo1Oi.out</span><br><span class="line">(a,1)</span><br><span class="line">(is,1)</span><br><span class="line">(<span class="keyword">for</span>,1)</span><br><span class="line">(apple,1)</span><br><span class="line">(b,1)</span><br><span class="line">(is,2)</span><br><span class="line">(<span class="keyword">for</span>,2)</span><br><span class="line">(ball,1)</span><br><span class="line">(c,1)</span><br><span class="line">(is,3)</span><br><span class="line">(<span class="keyword">for</span>,3)</span><br><span class="line">(cake,1)</span><br></pre></td></tr></table></figure>
<p>第一字段是单词，第二个字段是该单词当前出现的频率。</p>
<h3 id="停止程序"><a href="#停止程序" class="headerlink" title="停止程序"></a>停止程序</h3><p>在 Flink Web UI 选定作业进入作业的详情页面，然后单击页面右上方的 Cancel Job 按钮取消作业。</p>
<h3 id="停止Flink集群"><a href="#停止Flink集群" class="headerlink" title="停止Flink集群"></a>停止Flink集群</h3><p>进入 Flink 安装目录，运行以下命令停止集群：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/stop-cluster.sh</span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文讲述了如何安装、启动 Flink 本地集群，并运行一个词频统计的 Flink 流式程序，让你对 Flink 有一个初步印象。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>如何查看MySQL版本</title>
    <url>/2023/09/23/how-to-view-mysql-version/</url>
    <content><![CDATA[<p>MySQL 是一种常用的关系型数据库管理系统，它被广泛应用于各种类型的应用程序中。在进行数据库维护和开发过程中，了解当前所使用的 MySQL 版本是非常重要的。本文将介绍几种简单的查看 MySQL 版本方法。</p>
<h2 id="方法一：通过-SQL-查询语句"><a href="#方法一：通过-SQL-查询语句" class="headerlink" title="方法一：通过 SQL 查询语句"></a>方法一：通过 SQL 查询语句</h2><ol>
<li>打开 MySQL 客户端工具，例如 MySQL 命令行或者图形化界面工具（如 MySQL Workbench）。</li>
<li>连接到要查询版本的数据库实例。</li>
<li>在 SQL 查询编辑器中输入以下查询语句：<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> VERSION();</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>或者<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@VERSION</span>;</span><br></pre></td></tr></table></figure></p>
<ol>
<li>执行查询语句，可在结果中获得 MySQL 的版本信息。<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> VERSION()  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5.7</span><span class="number">.31</span><span class="operator">-</span>log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.06</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="方法二：通过命令行"><a href="#方法二：通过命令行" class="headerlink" title="方法二：通过命令行"></a>方法二：通过命令行</h2><ol>
<li>打开命令行终端。</li>
<li>输入以下命令：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql --version</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>按下回车键执行该命令，在输出结果中看到 MySQL 的版本信息。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysql --version</span></span><br><span class="line">mysql  Ver 14.14 Distrib 5.7.31, for Linux (x86_64) using  EditLine wrapper</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="方法三：通过-MySQL-管理工具"><a href="#方法三：通过-MySQL-管理工具" class="headerlink" title="方法三：通过 MySQL 管理工具"></a>方法三：通过 MySQL 管理工具</h2><p>如果你使用了一些图形化界面的 MySQL 管理工具，比如 phpMyAdmin、DBeaver 或 Navicat，则可以通过以下步骤查看 MySQL 版本：</p>
<ol>
<li>打开 MySQL 管理工具并连接到数据库实例。</li>
<li>导航到关于或系统信息等类似选项。</li>
<li>在相应的选项卡或视图中，可以看到 MySQL 版本信息。</li>
</ol>
<p>如在 DBeaver 中，将鼠标停留在已连接的数据库连接上，DBeaver 会浮窗显示当前连接的名称、URL 和连接用户名外，还会显示对应的数据库实例的版本信息。</p>
<h2 id="方法四：终端登录-MySQL"><a href="#方法四：终端登录-MySQL" class="headerlink" title="方法四：终端登录 MySQL"></a>方法四：终端登录 MySQL</h2><p>在终端通过命令行 <code>mysql</code> 连接服务器之后，也会显示服务器的版本信息，如：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ mysql <span class="operator">-</span>uroot <span class="operator">-</span>h <span class="number">192.168</span><span class="number">.123</span><span class="number">.156</span></span><br><span class="line">Enter password: <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"></span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL connection id <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">Server version: <span class="number">5.7</span><span class="number">.37</span><span class="operator">-</span>log MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2022</span>, Oracle <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle <span class="keyword">is</span> a registered trademark <span class="keyword">of</span> Oracle Corporation <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks <span class="keyword">of</span> their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> help. Type <span class="string">&#x27;\c&#x27;</span> <span class="keyword">to</span> clear the <span class="keyword">current</span> input statement.</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="方法五：通过-STATUS-命令"><a href="#方法五：通过-STATUS-命令" class="headerlink" title="方法五：通过 STATUS 命令"></a>方法五：通过 STATUS 命令</h2><p>连接到 MySQL 实例后，输入 STATUS 命令可以查看 MySQL 版本信息：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> STATUS;</span><br><span class="line"><span class="comment">--------------</span></span><br><span class="line">mysql  Ver <span class="number">14.14</span> Distrib <span class="number">5.7</span><span class="number">.37</span>, <span class="keyword">for</span> Linux (x86_64) <span class="keyword">using</span>  EditLine wrapper</span><br><span class="line"></span><br><span class="line">Connection id:          <span class="number">4</span></span><br><span class="line"><span class="keyword">Current</span> database:</span><br><span class="line"><span class="keyword">Current</span> <span class="keyword">user</span>:           root<span class="variable">@192</span><span class="number">.168</span><span class="number">.247</span><span class="number">.100</span></span><br><span class="line">SSL:                    Cipher <span class="keyword">in</span> use <span class="keyword">is</span> ECDHE<span class="operator">-</span>RSA<span class="operator">-</span>AES128<span class="operator">-</span>GCM<span class="operator">-</span>SHA256</span><br><span class="line"><span class="keyword">Current</span> pager:          less</span><br><span class="line"><span class="keyword">Using</span> outfile:          <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">Using</span> delimiter:        ;</span><br><span class="line">Server version:         <span class="number">5.7</span><span class="number">.37</span><span class="operator">-</span>log MySQL Community Server (GPL)</span><br><span class="line">Protocol version:       <span class="number">10</span></span><br><span class="line">Connection:             <span class="number">192.168</span><span class="number">.247</span><span class="number">.100</span> via TCP<span class="operator">/</span>IP</span><br><span class="line">Server characterset:    latin1</span><br><span class="line">Db     characterset:    latin1</span><br><span class="line">Client characterset:    utf8</span><br><span class="line">Conn.  characterset:    utf8</span><br><span class="line">TCP port:               <span class="number">3306</span></span><br><span class="line">Uptime:                 <span class="number">22</span> min <span class="number">33</span> sec</span><br><span class="line"></span><br><span class="line">Threads: <span class="number">3</span>  Questions: <span class="number">21</span>  Slow queries: <span class="number">0</span>  Opens: <span class="number">199</span>  Flush tables: <span class="number">1</span>  <span class="keyword">Open</span> tables: <span class="number">54</span>  Queries <span class="keyword">per</span> <span class="keyword">second</span> avg: <span class="number">0.015</span></span><br><span class="line"><span class="comment">--------------</span></span><br></pre></td></tr></table></figure></p>
<h2 id="方法六：通过-MySQL-变量"><a href="#方法六：通过-MySQL-变量" class="headerlink" title="方法六：通过 MySQL 变量"></a>方法六：通过 MySQL 变量</h2><p>连接到 MySQL 实例后，执行命令 <code>SHOW VARIABLES WHERE variable_name LIKE &#39;version%&#39;</code> 可以查看 MySQL 版本信息：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">WHERE</span> variable_name <span class="keyword">LIKE</span> <span class="string">&#x27;version%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name           <span class="operator">|</span> <span class="keyword">Value</span>                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> version                 <span class="operator">|</span> <span class="number">5.7</span><span class="number">.37</span><span class="operator">-</span>log                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> version_comment         <span class="operator">|</span> MySQL Community Server (GPL) <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> version_compile_machine <span class="operator">|</span> x86_64                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> version_compile_os      <span class="operator">|</span> Linux                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>查看 MySQL 版本的六种方法分别是通过 SQL 查询语句、命令行、MySQL 管理工具、在终端登录 MySQL 时返回的提示信息、STATUS 命令和 MySQL 变量。以上这些方法都可以帮助我们方便地获取所使用的 MySQL 版本信息。在进行数据库维护、优化和开发时，了解版本信息对于确保兼容性和利用新功能是非常重要的。</p>
<p>希望本文能对您有所帮助！</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>了解分位数：定义与应用</title>
    <url>/2023/09/24/what-is-a-quantile/</url>
    <content><![CDATA[<p>在统计学和数据分析中，摘要统计（如中位数、第一四分位数和第三四分位数等）是数据集位置的度量。这是因为这些数字指示了数据分布中特定比例的位置。例如，中位数是研究数据的中间位置。一半的数据值小于中位数。类似地，25% 的数据值小于第一四分位数，75% 的数据值小于第三四分位数。</p>
<p>这一概念可以进一步概括。一种方式是考虑百分位数（percentiles）。第 90 个百分位数表示有 90% 的数据值小于这个数。更一般地说，第 p 个百分位数是一个数 n，使得有 p% 的数据值小于 n。换句话说，它表示了分布中的一个点，使得给定百分比的数据值小于该点。</p>
<h2 id="连续随机变量的分位数"><a href="#连续随机变量的分位数" class="headerlink" title="连续随机变量的分位数"></a>连续随机变量的分位数</h2><p>虽然中位数、第一四分位数和第三四分位数的序数统计通常是在离散数据集的情况下介绍的，但实际上它们也适用于连续随机变量。对于连续分布，我们使用积分来定义分位数。第 p 个百分位数是一个数 n，使得：</p>
<p>$\int^{n}_{-\infty}{f(x)dx}=p/100$</p>
<p>其中，$f(x)$是连续分布的概率密度函数，$[-\infty, n]$表示从某个起始点到 n 的积分范围，p 是百分位数的百分比值。</p>
<p>这样，我们可以通过积分求得连续分布的任意百分位数。换句话说，第 p 个百分位数是一个值 n，使得从分布的起始点到 n 的累积概率等于 p%。</p>
<h2 id="分位数"><a href="#分位数" class="headerlink" title="分位数"></a>分位数</h2><p>再进一步地概括，分位数是对分布的划分，用来将数据集分成若干部分。中位数将数据集一分为二，而连续分布的中位数或第 50 个百分位数则将分布按面积划分为两半。第一四分位数、中位数和第三四分位数将数据划分为四个具有相同数量的部分。我们可以使用上述积分方法得到第 25、50 和 75 百分位数，将连续分布分成面积相等的四个区域。</p>
<p>我们可以将这个过程进行概括，而不仅仅局限于划分成四分位数或百分位数。当给定一个自然数 n 时，我们可以思考如何将一个变量的分布均匀地划分成 n 个大小相等的部分。这个问题与分位数的概念紧密相关，因为我们可以通过确定每个分位数的值来实现将分布分割成指定数量的部分。</p>
<p>要近似找到数据集的第 n 个分位数，我们可以首先对数据进行排序，然后在排序后的数据上通过 n-1 个等间距的点来划分。这些划分点将数据集分割成 n 个大致相等的部分，从而得到其对应的 n 个分位数。通过这种方式，我们可以在不需要知道具体分布函数的情况下，对数据进行分位数的估计。</p>
<p>如果我们有一个连续随机变量的概率密度函数，我们可以使用上述积分来找到分位数。对于 n 个分位数，我们希望：</p>
<ul>
<li>第一个分位数的左侧区域占整个分布面积的 1/n。</li>
<li>第二个分位数的左侧区域占整个分布面积的 2/n。</li>
<li>第 r 个分位数的左侧区域占整个分布面积的 r/n。</li>
<li>最后一个分位数的左侧区域占整个分布面积的 (n-1)/n。</li>
</ul>
<p>我们可以看到，对于任何自然数 n，n 个分位数对应于 100r/n 的百分位数，其中 r 可以是从 1 到 n-1 的任何自然数。</p>
<p>也就是说，对于连续随机变量的概率密度函数，我们可以通过计算不同分位数的区域比例来确定它们的值。这些区域比例与百分位数的关系是简单的整数倍关系。例如，对于四分位数，第一个分位数对应于 25% 的百分位数，第二个分位数对应于 50% 的百分位数，第三个分位数对应于 75% 的百分位数。通过这种方式，我们可以将分位数的概念与百分位数联系起来，并用相对面积的概念来描述它们的位置。</p>
<h2 id="常见的分位数"><a href="#常见的分位数" class="headerlink" title="常见的分位数"></a>常见的分位数</h2><p>某些类型的分位数非常常用，因此有特定的名称。下面是这些分位数的列表：</p>
<ul>
<li>2 分位数被称为中位数</li>
<li>3 分位数被称为三分位数</li>
<li>4 分位数被称为四分位数</li>
<li>5 分位数被称为五分位数</li>
<li>6 分位数被称为六分位数</li>
<li>7 分位数被称为七分位数</li>
<li>8 分位数被称为八分位数</li>
<li>10 分位数被称为十分位数</li>
<li>12 分位数被称为十二分位数</li>
<li>20 分位数被称为二十分位数</li>
<li>100 分位数被称为百分位数</li>
<li>1000 分位数被称为千分位数</li>
</ul>
<p>当然，除了上述列表中的分位数之外，还存在其他分位数。很多时候，所使用的特定分位数与从连续分布中取样的样本大小相匹配。这意味着在实际应用中，根据需要选择合适的分位数来描述数据的分布情况。</p>
<p>在常见的统计学和数据分析中，一些分位数具有特定的名称和用途。其中包括：</p>
<ol>
<li>中位数（50% 分位数）：将数据集分为两等分的值。</li>
<li>四分位数：将数据集分为四等分的值。 <ul>
<li>第一四分位数（25% 分位数）：将数据的前 25% 与后 75% 分开的值。</li>
<li>第二四分位数（中位数，50% 分位数）：将数据的前 50% 与后 50% 分开的值。</li>
<li>第三四分位数（75% 分位数）：将数据的前 75% 与后 25% 分开的值。</li>
</ul>
</li>
<li>百分位数：根据特定的百分比值划分数据分布的值。 <ul>
<li>第 90 个百分位数：将数据的前 90% 与后 10% 分开的值。</li>
<li>第 95 个百分位数：将数据的前 95% 与后 5% 分开的值。</li>
<li>第 99 个百分位数：将数据的前 99% 与后 1% 分开的值。</li>
</ul>
</li>
</ol>
<p>这些特定的分位数在统计学和数据分析中经常使用，有助于理解和描述数据的分布特征。</p>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>除了确定数据集的位置之外，分位数在其他方面也很有帮助。假设我们从一个未知分布的总体中得到了一个简单随机样本。为了确定像正态分布或韦伯分布这样的模型是否适合我们所抽取的总体，我们可以观察我们的数据和模型的分位数。</p>
<p>通过将我们的样本数据的分位数与某个特定概率分布的分位数进行匹配，我们得到了一组配对数据。我们将这些数据绘制在散点图上，称为分位数-分位数图或 q-q 图。如果得到的散点图大致呈线性关系，那么该模型就适合我们的数据。</p>
<p>这也就是说，分位数不仅可以用来确定数据的位置，还可以用于其他方面的应用。当我们从一个未知分布的总体中获取了一个简单随机样本时，我们可以通过比较样本数据和特定概率分布模型的分位数来评估模型的适配程度。通过将样本数据的分位数与概率分布模型的分位数进行配对，并绘制在散点图上，我们可以判断模型是否适合描述我们的数据。如果得到的散点图大致呈线性关系，说明该模型适合我们的数据。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>中位数、四分位数和百分位数是常用的摘要统计，用于度量数据集的位置。在连续随机变量的情况下，我们使用积分来定义分位数。这些统计量有助于理解和描述数据的分布特征，并可以应用于模型拟合和数据对比等分析。常见的分位数包括中位数、四分位数和百分位数，在统计学和数据分析中经常使用。它们有助于确定数据的位置，并可以用于模型拟合和数据对比等应用。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>分位数：定义及简易查找方法</title>
    <url>/2023/09/13/quantile-definition-and-how-to-find-them-in-easy-steps/</url>
    <content><![CDATA[<h2 id="什么是分位数？"><a href="#什么是分位数？" class="headerlink" title="什么是分位数？"></a>什么是分位数？</h2><p>“分位数（quantile）”一词源于”quantity”。简单地说，分位数就是将样本划分为大小相等、相邻的子组（这就是为什么有时称为 “fractile”）。它也可以指将概率分布划分为具有相等概率的区域。</p>
<p>中位数是一种分位数；在概率分布中，中位数被放置在这样一个位置，使得恰好有一半的数据小于中位数，另一半的数据大于中位数。中位数将一个分布切割成两个相等的区域，因此有时也被称为 2-分位数。</p>
<p><img src="/image/2023/20230913-median.png" alt="https://www.statisticshowto.com/wp-content/uploads/2013/09/median.png"></p>
<p>四分位数也是一种分位数；它将分布划分为四个相等的部分。百分位数是将分布划分为 100 个相等部分的分位数，而十分位数是将分布划分为 10 个相等部分的分位数。</p>
<p>有些作者将中位数称为 0.5 分位数，这意味着该比例的值（一半）将位于中位数之下，而另一半则在中位数之上。如果你想在一个数据集中找到特定的分位数（如中位数），使用以下公式来估计第 i 个观测值：</p>
<p>第 i 个观测值 = q * (n + 1)</p>
<p>其中，q 代表你要寻找的第 i 个值以下的比例，n 代表数据集中的项目数量。</p>
<p>上述方程可能有些令人费解，最好通过一个示例来解释。</p>
<h2 id="如何找到分位数？"><a href="#如何找到分位数？" class="headerlink" title="如何找到分位数？"></a>如何找到分位数？</h2><p><strong>例题：</strong>从以下数据集中找到一个数，使得 20% 的值低于它，80% 的值高于它：<br>1 3 5 6 9 11 12 13 19 21 22 32 35 36 45 44 55 68 79 80 81 88 90 91 92 100 112 113 114 120 121 132 145 146 149 150 155 180 189 190</p>
<p><strong>思路：</strong></p>
<ul>
<li>步骤 1：将数据从小到大排序。问题中的数据已经按升序排列。</li>
<li>步骤 2：计算数据集中观测值的数量。这个特定的数据集有 40 个项目。</li>
<li>步骤 3：将任何百分比转换为小数形式的 q。我们要找到其中 20% 的值位于其下方的数字，因此将其转换为 0.2。</li>
<li>步骤 4：将数值代入公式：</li>
</ul>
<p>第 i 个观测值 = q <em> (n + 1)<br>第 i 个观测值 = 0.2 </em> (40 + 1) = 8.2</p>
<p><strong>答案：</strong>第 i 个观测值为 8.2，所以我们向下取整到 8（记住，这个公式是一个估计）。数据集中的第 8 个数字是 13，它是其中 20% 的值低于它的数字。</p>
<p>参考资料<br>Quantile: Definition and How to Find Them in Easy Steps：<br><a href="https://www.statisticshowto.com/quantile-definition-find-easy-steps/">https://www.statisticshowto.com/quantile-definition-find-easy-steps/</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>分位数的概念及其应用</title>
    <url>/2023/09/25/understanding-quantiles-definitions-and-uses/</url>
    <content><![CDATA[<p>分位数是统计学中常用的一个概念，用于描述数据集的分布情况。它将数据集按大小排序并将其分为几个等份，从而能够更加深入地了解数据集的中心趋势和离散程度。在统计学和数据分析领域，分位数是一个常用的工具。</p>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>把顺序排列的一组数据分割为若干相等部分的分割点的数值即为相应的<strong>分位数（quantile）</strong>。</p>
<p>常见的分位数有：</p>
<ul>
<li><strong>二分位数：</strong>分位数中最简单的一种，它将数据等分成两分。</li>
<li><strong>四分位数（Quartile）：</strong>将数据按照大小顺序排序后，把数据分割成四等分的三个分割点上的数值。对原始数据，四分位数的位置一般为$\frac{n+1}{4}$，$\frac{2(n+1)}{4}$，$\frac{3(n+1)}{4}$。如果四分位数的位置不是整数，则四分位数等于前后两个数的加权平均。</li>
<li><strong>十分位数（Deciles）：</strong>将数据按照大小顺序排序后，把数据分割成十等分的九个分割点上的数值。</li>
<li><strong>百分位数（Percentile）：</strong>将数据按照大小顺序排序后，把数据分割成一百等分的九十九个分割点上的数值。常见的有 1% 分位数、5% 分位数、25% 分位数、50% 分位数（中位数）、75% 分位数、95% 分位数、99% 分位数等。</li>
</ul>
<h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>分位数直观地反映了样本分布，通过分位数可以大致判断出样本的中心位置、散布范围和偏态形状，是理解和分析数据分布的有效工具。其在实际中的应用非常广泛，常用于：</p>
<ol>
<li>判断样本分布的中心位置和散布范围<br>通过分位数可以判断出样本分布的中间值、上下四分位数间距来大致判断样本的中心位置和散布范围。</li>
<li>判断学生成绩高低<br>可以用分位数来设置学生成绩的排名，如将 95% 分位数设为 A+，90% 分位数设为 A 等。</li>
<li>理解网站访问量分布<br>可以计算网站访问量的分位数,来判断用户访问高峰和低谷。</li>
<li>设置产品的质量阈值<br>如设置制造产品某指标的 1% 分位数为质量标准值,作为产品质量的下限要求。</li>
</ol>
<p>参考资料<br>分位数：<br><a href="http://www.stats.gov.cn/zsk/snapshoot?reference=d466cfa12a8d807d0c267a76a75d1e42_C932AD0D2073D7EFCE896A526F5D4F00">http://www.stats.gov.cn/zsk/snapshoot?reference=d466cfa12a8d807d0c267a76a75d1e42_C932AD0D2073D7EFCE896A526F5D4F00</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>如何找回DBeaver连接中保存的数据库密码？</title>
    <url>/2023/09/26/how-to-retrieve-the-password-in-dbeaver/</url>
    <content><![CDATA[<p>DBeaver 是一款功能强大的数据库管理工具，支持多种数据库平台。它提供了一个方便的方式来管理和操作数据库，包括连接、查询、导入导出等功能，但如果我们忘记了保存在其中的数据库密码，我们需要一种方法来恢复它。本文将介绍一种方法来找回 DBeaver 保存的数据库密码。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>以下是找回 DBeaver 连接中保存的数据库密码的步骤：</p>
<ol>
<li>找到 DBeaver 的 workspace 位置：在 DBeaver 的界面中，点击“窗口”菜单，选择“首选项”选项。弹出的对话框中，点击“Workspace”按钮（中文名称：工作空间），即可找到 workspace 的位置。</li>
</ol>
<p><img src="/image/2023/20230926-001.png" alt="image.png"></p>
<ol>
<li>在 workspace 位置下，可以找到 General 文件夹。</li>
<li>找到密码文件的位置：在 General 文件夹中，我们需要找到名为<code>credentials-config.json</code>的文件，该文件保存了 DBeaver 中连接的密码信息。 </li>
<li>解码密码文件：为了解码密码文件，我们需要使用 OpenSSL 工具。在本例中，使用了 Windows 10 上的 Linux 子系统 Ubuntu 18，并在终端中执行了以下命令： </li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openssl aes-128-cbc -d \</span><br><span class="line">  -K babb4a9f774ab853c96c2d653dfe544a \</span><br><span class="line">  -iv 00000000000000000000000000000000 \</span><br><span class="line">  -in credentials-config.json | \</span><br><span class="line">  dd bs=1 skip=16 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p>其中，<code>-K</code>参数的值可以参考 DBeaver 源码中的<code>DefaultSecureStorage.java</code>文件。</p>
<ol>
<li>获取密码：执行以上命令后，你将得到保存在 credentials-config.json 文件中的加密密码。通过该方法，你可以找回 DBeaver 连接中保存的数据库密码。</li>
</ol>
<p>如果你的项目不是保存在默认位置中，可以通过以下方式查看具体的存放位置：在 DBeaver 的界面中，点击左边“项目”导航栏，选中对应的项目，再点击该导航栏上侧的设置按钮图标，弹出的对话框中，点击“Resource”按钮，即可找到存放密码文件的位置。具体操作如下图所示：</p>
<p><img src="/image/2023/20230926-002.png" alt="image.png"></p>
<p><img src="/image/2023/20230926-003.png" alt="image.png"></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文介绍了一种找回 DBeaver 连接中保存的数据库密码的方法。通过按照以上步骤，你可以解码保存在 credentials-config.json 文件中的密码，并重新获得对数据库的访问权限。</p>
<p>请注意，本文所提供的方法需要一定的技术基础，并假设你已经安装了 OpenSSL 工具。此外，为了保护个人信息的安全，请谨慎处理和妥善保管密码文件。</p>
<p>希望这篇博客对你有所帮助！</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>解决MySQL 8中“Public Key Retrieval is not allowed”问题</title>
    <url>/2023/09/26/mysql8-public-key-retrieval-is-not-allowed/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>从 MySQL 8 开始，身份验证插件更改为“<strong>caching_sha2_password</strong>”。因此，使用 JDBC 或其他客户端工具连接 MySQL 时，可能会遇到“<strong>Public Key Retrieval is not allowed</strong>”的问题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Public Key Retrieval is not allowed</span><br></pre></td></tr></table></figure>
<h2 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h2><p>在连接 MySQL 时，设置以下参数，允许客户端自动向服务器请求公钥。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allowPublicKeyRetrieval=true</span><br></pre></td></tr></table></figure><br>如：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jdbc:mysql://localhost:3306/mysql_database?useSSL=false&amp;allowPublicKeyRetrieval=true</span><br></pre></td></tr></table></figure></p>
<h2 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h2><p>我们可以将身份验证插件更改回“<strong>mysql_native_password</strong>”来解决该问题。</p>
<ol>
<li>在终端中执行以下命令以使用 root 用户登录 MySQL： <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>进入<code>mysql</code>数据库： <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>查看当前用户表中的 host 和用户信息： <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select host, user, plugin from user;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>可以看到一个结果列表，其中包含用户和对应的 host：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| host      | user             | plugin                |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| %         | hadoop           | caching_sha2_password |</span><br><span class="line">| %         | root             | caching_sha2_password |</span><br><span class="line">| localhost | mysql.infoschema | caching_sha2_password |</span><br><span class="line">| localhost | mysql.session    | caching_sha2_password |</span><br><span class="line">| localhost | mysql.sys        | caching_sha2_password |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">5 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>
<ol>
<li>将 root 用户的身份验证插件更改为“<strong>mysql_native_password</strong>”并设置新密码。执行以下命令： <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;Your New Password&#x27;;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>刷新权限： <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>具体如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; select host, user, plugin from user;</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| host      | user             | plugin                |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| %         | hadoop           | caching_sha2_password |</span><br><span class="line">| %         | root             | caching_sha2_password |</span><br><span class="line">| localhost | mysql.infoschema | caching_sha2_password |</span><br><span class="line">| localhost | mysql.session    | caching_sha2_password |</span><br><span class="line">| localhost | mysql.sys        | caching_sha2_password |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">5 rows in set (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;Your New Password&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.08 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select host, user, plugin from user;</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| host      | user             | plugin                |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">| %         | hadoop           | caching_sha2_password |</span><br><span class="line">| %         | root             | mysql_native_password |</span><br><span class="line">| localhost | mysql.infoschema | caching_sha2_password |</span><br><span class="line">| localhost | mysql.session    | caching_sha2_password |</span><br><span class="line">| localhost | mysql.sys        | caching_sha2_password |</span><br><span class="line">+-----------+------------------+-----------------------+</span><br><span class="line">5 rows in set (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>以上步骤完成后，您就成功将 MySQL 8 的身份验证插件更改为“<strong>mysql_native_password</strong>”并设置了新密码。现在，您应该能够使用 JDBC 或其他客户端工具连接到 MySQL 服务器，而不再遇到“Public Key Retrieval is not allowed”的问题。</p>
<p>希望本文对解决 MySQL 8 中的身份验证插件问题有所帮助！</p>
<p>参考资料<br>Caching SHA-2 Pluggable Authentication：<br><a href="https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html">https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL整数类型INT(5)和INT(11)的区别</title>
    <url>/2023/09/27/what-does-int5-and-int11-means-in-mysql/</url>
    <content><![CDATA[<p>MySQL 支持 SQL 标准整数类型 INTEGER（或 INT）和 SMALLINT。作为标准的扩展，MySQL 还支持 TINYINT、MEDIUMINT 和 BIGINT 整数类型。下表显示了每种整数类型所需的存储空间和范围。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>存储 (Bytes)</strong></th>
<th><strong>最小值（有符号）</strong></th>
<th><strong>最小值（无符号）</strong></th>
<th><strong>最大值（有符号）</strong></th>
<th><strong>最大值（无符号）</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>TINYINT</strong></td>
<td>1</td>
<td>-128</td>
<td>0</td>
<td>127</td>
<td>255</td>
</tr>
<tr>
<td><strong>SMALLINT</strong></td>
<td>2</td>
<td>-32768</td>
<td>0</td>
<td>32767</td>
<td>65535</td>
</tr>
<tr>
<td><strong>MEDIUMINT</strong></td>
<td>3</td>
<td>-8388608</td>
<td>0</td>
<td>8388607</td>
<td>16777215</td>
</tr>
<tr>
<td><strong>INT</strong></td>
<td>4</td>
<td>-2147483648</td>
<td>0</td>
<td>2147483647</td>
<td>4294967295</td>
</tr>
<tr>
<td><strong>BIGINT</strong></td>
<td>8</td>
<td>-263</td>
<td>0</td>
<td>263-1</td>
<td>264-1</td>
</tr>
</tbody>
</table>
</div>
<p>这些整数类型后面的数字表示最大显示宽度，并不影响实际存储范围。例如，INT(5) 和 INT(11) 的存储范围和大小完全一样，都是 -2147483648 ~ 2147483647，占 4 个字节。(5) 和 (11) 只是表示显示宽度，即 INT(5) 显示结果的最大宽度为 5 位，不足会用空格（默认）补齐；INT(11) 显示结果的最大宽度为 11 位。</p>
<p>下面通过一个具体的例子来说明。</p>
<p>首先，创建一张名为 <code>tbl_integer</code> 的数据表，包含两列 <code>id_5</code> 和 <code>id_11</code>，数据类型均为整数类型，最大显示宽度分别为 5 和 11，并都设置成无符号且填充零（UNSIGNED ZEROFILL），即当数值位数未达到设置的显示宽度时，会在数值前面填充零直到满足设定的显示宽度。其中 <code>id_5</code> 列是主键，表的存储引擎为 InnoDB，字符集为 utf8mb4。</p>
<p>表 DDL 如下：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tbl_integer` (</span><br><span class="line">  `id_5` <span class="type">int</span>(<span class="number">5</span>) unsigned zerofill <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `id_11` <span class="type">int</span>(<span class="number">11</span>) unsigned zerofill <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id_5`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4</span><br></pre></td></tr></table></figure><br>依次执行以下插入语句：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_integer <span class="keyword">values</span>(<span class="number">12</span>,<span class="number">12</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tbl_integer <span class="keyword">values</span>(<span class="number">123456</span>,<span class="number">1234567890</span>);</span><br></pre></td></tr></table></figure><br>最后，执行以下查询语句：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tbl_integer;</span><br></pre></td></tr></table></figure><br>返回结果如下：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id_5   <span class="operator">|</span> id_11       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">00012</span> <span class="operator">|</span> <span class="number">00000000012</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">123456</span> <span class="operator">|</span> <span class="number">01234567890</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>可以看到，如果数字的位数少于指定的显示宽度，MySQL 会使用 0 来填充左侧以保持显示宽度一致。如在列 <code>id_5</code> 中，数字 12 会显示为 00012。</p>
<blockquote>
<p>注：上述示例是在 MySQL CLI（即命令行界面）进行操作，部分 MySQL 客户端工具可能会自动去掉整数前面的 0，查询出来的结果不会显示左边的 0。</p>
</blockquote>
<p>另外需要注意的是，显示宽度并不影响实际存储大小和性能。INT(5) 和 INT(11) 占用存储空间完全相同，处理速度也一样。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>INT(5) 和 INT(11) 之间的唯一区别是显示宽度的设置。这些设置只影响结果的显示，在存储和计算上没有任何实际变化。记住，INT 类型的取值范围与显示宽度无关，仍然是 -2,147,483,648 到 2,147,483,647。在选择使用哪种显示宽度时，可以根据实际需要和美观度进行选择。</p>
<p>以上简单介绍了 MySQL 中 INT(5) 和 INT(11) 的区别，希望可以帮助大家更好地使用 MySQL 的整数类型。</p>
<p>参考资料：</p>
<ol>
<li>MySQL Documentation: <a href="https://dev.mysql.com/doc/refman/8.0/en/integer-types.html">https://dev.mysql.com/doc/refman/8.0/en/integer-types.html</a></li>
</ol>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Kafka: a Distributed Messaging System for Log Processing</title>
    <url>/2023/10/10/kafka_a_distributed_messaging_system_for_log_processing/</url>
    <content><![CDATA[<h2 id="ABSTRACT"><a href="#ABSTRACT" class="headerlink" title="ABSTRACT"></a>ABSTRACT</h2><p>Log processing has become a critical component of the data pipeline for consumer internet companies. We introduce Kafka, a distributed messaging system that we developed for collecting and delivering high volumes of log data with low latency. Our system incorporates ideas from existing log aggregators and messaging systems, and is suitable for both offline and online message consumption. We made quite a few unconventional yet practical design choices in Kafka to make our system efficient and scalable. Our experimental results show that Kafka has superior performance when compared to two popular messaging systems. We have been using Kafka in production for some time and it is processing hundreds of gigabytes of new data each day.</p>
<p><strong>General Terms</strong><br>Management, Performance, Design, Experimentation.</p>
<p><strong>Keywords</strong><br>messaging, distributed, log processing, throughput, online.</p>
<h2 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h2><p>There is a large amount of “log” data generated at any sizable internet company. This data typically includes (1) user activity events corresponding to logins, pageviews, clicks, “likes”, sharing, comments, and search queries; (2) operational metrics such as service call stack, call latency, errors, and system metrics such as CPU, memory, network, or disk utilization on each machine. Log data has long been a component of analytics used to track user engagement, system utilization, and other metrics. However recent trends in internet applications have made activity data a part of the production data pipeline used directly in site features. These uses include (1) search relevance, (2) recommendations which may be driven by item popularity or cooccurrence in the activity stream, (3) ad targeting and reporting, and (4) security applications that protect against abusive behaviors such as spam or unauthorized data scraping, and (5) newsfeed features that aggregate user status updates or actions for their “friends” or “connections” to read.</p>
<p>This production, real-time usage of log data creates new challenges for data systems because its volume is orders of magnitude larger than the “real” data. For example, search, recommendations, and advertising often require computing granular click-through rates, which generate log records not only for every user click, but also for dozens of items on each page that are not clicked. Every day, China Mobile collects 5–8TB of phone call records [11] and Facebook gathers almost 6TB of various user activity events [12].</p>
<p>Many early systems for processing this kind of data relied on physically scraping log files off production servers for analysis. In recent years, several specialized distributed log aggregators have been built, including Facebook’s Scribe [6], Yahoo’s Data Highway [4], and Cloudera’s Flume [3]. Those systems are primarily designed for collecting and loading the log data into a data warehouse or Hadoop [8] for offline consumption. At LinkedIn (a social network site), we found that in addition to traditional offline analytics, we needed to support most of the real-time applications mentioned above with delays of no more than a few seconds.</p>
<p>We have built a novel messaging system for log processing called Kafka [18] that combines the benefits of traditional log aggregators and messaging systems. On the one hand, Kafka is distributed and scalable, and offers high throughput. On the other hand, Kafka provides an API similar to a messaging system and allows applications to consume log events in real time. Kafka has been open sourced and used successfully in production at LinkedIn for more than 6 months. It greatly simplifies our infrastructure, since we can exploit a single piece of software for both online and offline consumption of the log data of all types. The rest of the paper is organized as follows. We revisit traditional messaging systems and log aggregators in Section 2. In Section 3, we describe the architecture of Kafka and its key design principles. We describe our deployment of Kafka at LinkedIn in Section 4 and the performance results of Kafka in Section 5. We discuss future work and conclude in Section 6.</p>
<h2 id="2-Related-Work"><a href="#2-Related-Work" class="headerlink" title="2. Related Work"></a>2. Related Work</h2><p>Traditional enterprise messaging systems [1][7][15][17] have existed for a long time and often play a critical role as an event bus for processing asynchronous data flows. However, there are a few reasons why they tend not to be a good fit for log processing. First, there is a mismatch in features offered by enterprise systems. Those systems often focus on offering a rich set of delivery guarantees. For example, IBM Websphere MQ [7] has transactional supports that allow an application to insert messages into multiple queues atomically. The JMS [14] specification allows each individual message to be acknowledged after consumption, potentially out of order. Such delivery guarantees are often overkill for collecting log data. For instance, losing a few pageview events occasionally is certainly not the end of the world. Those unneeded features tend to increase the complexity of both the API and the underlying implementation of those systems. Second, many systems do not focus as strongly on throughput as their primary design constraint. For example, JMS has no API to allow the producer to explicitly batch multiple messages into a single request. This means each message requires a full TCP/IP roundtrip, which is not feasible for the throughput requirements of our domain. Third, those systems are weak in distributed support. There is no easy way to partition and store messages on multiple machines. Finally, many messaging systems assume near immediate consumption of messages, so the queue of unconsumed messages is always fairly small. Their performance degrades significantly if messages are allowed to accumulate, as is the case for offline consumers such as data warehousing applications that do periodic large loads rather than continuous consumption.</p>
<p>A number of specialized log aggregators have been built over the last few years. Facebook uses a system called Scribe. Each frontend machine can send log data to a set of Scribe machines over sockets. Each Scribe machine aggregates the log entries and periodically dumps them to HDFS [9] or an NFS device. Yahoo’s data highway project has a similar dataflow. A set of machines aggregate events from the clients and roll out “minute” files, which are then added to HDFS. Flume is a relatively new log aggregator developed by Cloudera. It supports extensible “pipes” and “sinks”, and makes streaming log data very flexible. It also has more integrated distributed support. However, most of those systems are built for consuming the log data offline, and often expose implementation details unnecessarily (e.g. “minute files”) to the consumer. Additionally, most of them use a “push” model in which the broker forwards data to consumers. At LinkedIn, we find the “pull” model more suitable for our applications since each consumer can retrieve the messages at the maximum rate it can sustain and avoid being flooded by messages pushed faster than it can handle. The pull model also makes it easy to rewind a consumer and we discuss this benefit at the end of Section 3.2.</p>
<p>More recently, Yahoo! Research developed a new distributed pub/sub system called HedWig [13]. HedWig is highly scalable and available, and offers strong durability guarantees. However, it is mainly intended for storing the commit log of a data store.</p>
<h2 id="3-Kafka-Architecture-and-Design-Principles"><a href="#3-Kafka-Architecture-and-Design-Principles" class="headerlink" title="3. Kafka Architecture and Design Principles"></a>3. Kafka Architecture and Design Principles</h2><p>Because of limitations in existing systems, we developed a new messaging-based log aggregator Kafka. We first introduce the basic concepts in Kafka. A stream of messages of a particular type is defined by a topic. A producer can publish messages to a topic. The published messages are then stored at a set of servers called brokers. A consumer can subscribe to one or more topics from the brokers, and consume the subscribed messages by pulling data from the brokers. </p>
<p>Messaging is conceptually simple, and we have tried to make the Kafka API equally simple to reflect this. Instead of showing the exact API, we present some sample code to show how the API is used. The sample code of the producer is given below. A message is defined to contain just a payload of bytes. A user can choose her favorite serialization method to encode a message. For efficiency, the producer can send a set of messages in a single publish request.  </p>
<p><strong>Sample producer code:</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">producer <span class="operator">=</span> <span class="keyword">new</span> Producer(…);</span><br><span class="line">message <span class="operator">=</span> <span class="keyword">new</span> Message(“test message str”.getBytes());</span><br><span class="line"><span class="keyword">set</span> <span class="operator">=</span> <span class="keyword">new</span> MessageSet(message);</span><br><span class="line">producer.send(“topic1”, <span class="keyword">set</span>);</span><br></pre></td></tr></table></figure>
<p>To subscribe to a topic, a consumer first creates one or more message streams for the topic. The messages published to that topic will be evenly distributed into these sub-streams. The details about how Kafka distributes the messages are described later in Section 3.2. Each message stream provides an iterator interface over the continual stream of messages being produced. The consumer then iterates over every message in the stream and processes the payload of the message. Unlike traditional iterators, the message stream iterator never terminates. If there are currently no more messages to consume, the iterator blocks until new messages are published to the topic. We support both the point-topoint delivery model in which multiple consumers jointly consume a single copy of all messages in a topic, as well as the publish/subscribe model in which multiple consumers each retrieve its own copy of a topic.  </p>
<p><strong>Sample consumer code:</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">streams[] <span class="operator">=</span> Consumer.createMessageStreams(“topic1”, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> (message : streams[<span class="number">0</span>]) &#123;</span><br><span class="line"> bytes <span class="operator">=</span> message.payload();</span><br><span class="line"> <span class="operator">/</span><span class="operator">/</span> do something <span class="keyword">with</span> the bytes</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The overall architecture of Kafka is shown in Figure 1. Since Kafka is distributed in nature, an Kafka cluster typically consists of multiple brokers. To balance load, a topic is divided into multiple partitions and each broker stores one or more of those partitions. Multiple producers and consumers can publish and retrieve messages at the same time. In Section 3.1, we describe the layout of a single partition on a broker and a few design choices that we selected to make accessing a partition efficient. In Section 3.2, we describe how the producer and the consumer interact with multiple brokers in a distributed setting. We discuss the delivery guarantees of Kafka in Section 3.3.  </p>
<p><img src="/image/2023/20231010-figure1.png" alt="figure-1.png"></p>
<h3 id="3-1-Efficiency-on-a-Single-Partition"><a href="#3-1-Efficiency-on-a-Single-Partition" class="headerlink" title="3.1 Efficiency on a Single Partition"></a>3.1 Efficiency on a Single Partition</h3><p>We made a few decisions in Kafka to make the system efficient. </p>
<p><strong>Simple storage:</strong> Kafka has a very simple storage layout. Each partition of a topic corresponds to a logical log. Physically, a log is implemented as a set of segment files of approximately the same size (e.g., 1GB). Every time a producer publishes a message to a partition, the broker simply appends the message to the last segment file. For better performance, we flush the segment files to disk only after a configurable number of messages have been published or a certain amount of time has elapsed. A message is only exposed to the consumers after it is flushed.  </p>
<p>Unlike typical messaging systems, a message stored in Kafka doesn’t have an explicit message id. Instead, each message is addressed by its logical offset in the log. This avoids the overhead of maintaining auxiliary, seek-intensive random-access index structures that map the message ids to the actual message locations. Note that our message ids are increasing but not consecutive. To compute the id of the next message, we have to add the length of the current message to its id. From now on, we will use message ids and offsets interchangeably. </p>
<p>A consumer always consumes messages from a particular partition sequentially. If the consumer acknowledges a particular message offset, it implies that the consumer has received all messages prior to that offset in the partition. Under the covers, the consumer is issuing asynchronous pull requests to the broker to have a buffer of data ready for the application to consume. Each pull request contains the offset of the message from which the consumption begins and an acceptable number of bytes to fetch. Each broker keeps in memory a sorted list of offsets, including the offset of the first message in every segment file. The broker locates the segment file where the requested message resides by searching the offset list, and sends the data back to the consumer. After a consumer receives a message, it computes the offset of the next message to consume and uses it in the next pull request. The layout of an Kafka log and the in-memory index is depicted in Figure 2. Each box shows the offset of a message.  </p>
<p><img src="/image/2023/20231010-figure2.png" alt="figure-2.png"></p>
<p><strong>Efficient transfer:</strong> We are very careful about transferring data in and out of Kafka. Earlier, we have shown that the producer can submit a set of messages in a single send request. Although the end consumer API iterates one message at a time, under the covers, each pull request from a consumer also retrieves multiple messages up to a certain size, typically hundreds of kilobytes. </p>
<p>Another unconventional choice that we made is to avoid explicitly caching messages in memory at the Kafka layer. Instead, we rely on the underlying file system page cache. This has the main benefit of avoiding double buffering—-messages are only cached in the page cache. This has the additional benefit of retaining warm cache even when a broker process is restarted. Since Kafka doesn’t cache messages in process at all, it has very little overhead in garbage collecting its memory, making efficient implementation in a VM-based language feasible. Finally, since both the producer and the consumer access the segment files sequentially, with the consumer often lagging the producer by a small amount, normal operating system caching heuristics are very effective (specifically write-through caching and readahead). We have found that both the production and the consumption have consistent performance linear to the data size, up to many terabytes of data. </p>
<p>In addition we optimize the network access for consumers. Kafka is a multi-subscriber system and a single message may be consumed multiple times by different consumer applications. A typical approach to sending bytes from a local file to a remote socket involves the following steps: (1) read data from the storage media to the page cache in an OS, (2) copy data in the page cache to an application buffer, (3) copy application buffer to another kernel buffer, (4) send the kernel buffer to the socket. This includes 4 data copying and 2 system calls. On Linux and other Unix operating systems, there exists a sendfile API [5] that can directly transfer bytes from a file channel to a socket channel. This typically avoids 2 of the copies and 1 system call introduced in steps (2) and (3). Kafka exploits the sendfile API to efficiently deliver bytes in a log segment file from a broker to a consumer. </p>
<p><strong>Stateless broker:</strong> Unlike most other messaging systems, in Kafka, the information about how much each consumer has consumed is not maintained by the broker, but by the consumer itself. Such a design reduces a lot of the complexity and the overhead on the broker. However, this makes it tricky to delete a message, since a broker doesn’t know whether all subscribers have consumed the message. Kafka solves this problem by using a simple time-based SLA for the retention policy. A message is automatically deleted if it has been retained in the broker longer than a certain period, typically 7 days. This solution works well in practice. Most consumers, including the offline ones, finish consuming either daily, hourly, or in real-time. The fact that the performance of Kafka doesn’t degrade with a larger data size makes this long retention feasible. </p>
<p>There is an important side benefit of this design. A consumer can deliberately rewind back to an old offset and re-consume data. This violates the common contract of a queue, but proves to be an essential feature for many consumers. For example, when there is an error in application logic in the consumer, the application can re-play certain messages after the error is fixed. This is particularly important to ETL data loads into our data warehouse or Hadoop system. As another example, the consumed data may be flushed to a persistent store only periodically (e.g, a full-text indexer). If the consumer crashes, the unflushed data is lost. In this case, the consumer can checkpoint the smallest offset of the unflushed messages and re-consume from that offset when it’s restarted. We note that rewinding a consumer is much easier to support in the pull model than the push model.  </p>
<h3 id="3-2-Distributed-Coordination"><a href="#3-2-Distributed-Coordination" class="headerlink" title="3.2 Distributed Coordination"></a>3.2 Distributed Coordination</h3><p>We now describe how the producers and the consumers behave in a distributed setting. Each producer can publish a message to either a randomly selected partition or a partition semantically determined by a partitioning key and a partitioning function. We will focus on how the consumers interact with the brokers. </p>
<p>Kafka has the concept of <em>consumer groups</em>. Each consumer group consists of one or more consumers that jointly consume a set of subscribed topics, i.e., each message is delivered to only one of the consumers within the group. Different consumer groups each independently consume the full set of subscribed messages and no coordination is needed across consumer groups. The consumers  within the same group can be in different processes or on different machines. Our goal is to divide the messages stored in the brokers evenly among the consumers, without introducing too much coordination overhead. </p>
<p>Our first decision is to make a partition within a topic the smallest unit of parallelism. This means that at any given time, all messages from one partition are consumed only by a single consumer within each consumer group. Had we allowed multiple consumers to simultaneously consume a single partition, they would have to coordinate who consumes what messages, which necessitates locking and state maintenance overhead. In contrast, in our design consuming processes only need co-ordinate when the consumers rebalance the load, an infrequent event. In order for the load to be truly balanced, we require many more partitions in a topic than the consumers in each group. We can easily achieve this by over partitioning a topic. </p>
<p>The second decision that we made is to not have a central “master” node, but instead let consumers coordinate among themselves in a decentralized fashion. Adding a master can complicate the system since we have to further worry about master failures. To facilitate the coordination, we employ a highly available consensus service Zookeeper [10]. Zookeeper has a very simple, file system like API. One can create a path, set the value of a path, read the value of a path, delete a path, and list the children of a path. It does a few more interesting things: (a) one can register a watcher on a path and get notified when the children of a path or the value of a path has changed; (b) a path can be created as ephemeral (as oppose to persistent), which means that if the creating client is gone, the path is automatically removed by the Zookeeper server; (c) zookeeper replicates its data to multiple servers, which makes the data highly reliable and available. </p>
<p>Kafka uses Zookeeper for the following tasks: (1) detecting the addition and the removal of brokers and consumers, (2) triggering a rebalance process in each consumer when the above events happen, and (3) maintaining the consumption relationship and keeping track of the consumed offset of each partition. Specifically, when each broker or consumer starts up, it stores its information in a broker or consumer registry in Zookeeper. The broker registry contains the broker’s host name and port, and the set of topics and partitions stored on it. The consumer registry includes the consumer group to which a consumer belongs and the set of topics that it subscribes to. Each consumer group is associated with an ownership registry and an offset registry in Zookeeper. The ownership registry has one path for every subscribed partition and the path value is the id of the consumer currently consuming from this partition (we use the terminology that the consumer owns this partition). The offset registry stores for each subscribed partition, the offset of the last consumed message in the partition. </p>
<p>The paths created in Zookeeper are ephemeral for the broker registry, the consumer registry and the ownership registry, and persistent for the offset registry. If a broker fails, all partitions on it are automatically removed from the broker registry. The failure of a consumer causes it to lose its entry in the consumer registry and all partitions that it owns in the ownership registry. Each consumer registers a Zookeeper watcher on both the broker registry and the consumer registry, and will be notified whenever a change in the broker set or the consumer group occurs. </p>
<p>During the initial startup of a consumer or when the consumer is notified about a broker/consumer change through the watcher, the consumer initiates a rebalance process to determine the new subset of partitions that it should consume from. The process is described in Algorithm 1. By reading the broker and the consumer registry from Zookeeper, the consumer first computes the set (PT) of partitions available for each subscribed topic T and the set (CT) of consumers subscribing to T. It then range-partitions PT into |CT| chunks and deterministically picks one chunk to own. For each partition the consumer picks, it writes itself as the new owner of the partition in the ownership registry. Finally, the consumer begins a thread to pull data from each owned partition, starting from the offset stored in the offset registry. As messages get pulled from a partition, the consumer periodically updates the latest consumed offset in the offset registry. </p>
<p><img src="/image/2023/20231010-alg.png" alt="alg.png"></p>
<p>When there are multiple consumers within a group, each of them will be notified of a broker or a consumer change. However, the notification may come at slightly different times at the consumers. So, it is possible that one consumer tries to take ownership of a partition still owned by another consumer. When this happens, the first consumer simply releases all the partitions that it currently owns, waits a bit and retries the rebalance process. In practice, the rebalance process often stabilizes after only a few retries. </p>
<p>When a new consumer group is created, no offsets are available in the offset registry. In this case, the consumers will begin with either the smallest or the largest offset (depending on a configuration) available on each subscribed partition, using an API that we provide on the brokers.  </p>
<h3 id="3-3-Delivery-Guarantees"><a href="#3-3-Delivery-Guarantees" class="headerlink" title="3.3 Delivery Guarantees"></a>3.3 Delivery Guarantees</h3><p>In general, Kafka only guarantees at-least-once delivery. Exactlyonce delivery typically requires two-phase commits and is not necessary for our applications. Most of the time, a message is delivered exactly once to each consumer group. However, in the case when a consumer process crashes without a clean shutdown, the consumer process that takes over those partitions owned by the failed consumer may get some duplicate messages that are after the last offset successfully committed to zookeeper. If an application cares about duplicates, it must add its own deduplication logic, either using the offsets that we return to the consumer or some unique key within the message. This is usually a more cost-effective approach than using two-phase commits.</p>
<p>Kafka guarantees that messages from a single partition are delivered to a consumer in order. However, there is no guarantee on the ordering of messages coming from different partitions.  </p>
<p>To avoid log corruption, Kafka stores a CRC for each message in the log. If there is any I/O error on the broker, Kafka runs a recovery process to remove those messages with inconsistent CRCs. Having the CRC at the message level also allows us to check network errors after a message is produced or consumed. </p>
<p>If a broker goes down, any message stored on it not yet consumed becomes unavailable. If the storage system on a broker is permanently damaged, any unconsumed message is lost forever. In the future, we plan to add built-in replication in Kafka to redundantly store each message on multiple brokers.  </p>
<h2 id="4-Kafka-Usage-at-LinkedIn"><a href="#4-Kafka-Usage-at-LinkedIn" class="headerlink" title="4. Kafka Usage at LinkedIn"></a>4. Kafka Usage at LinkedIn</h2><p>In this section, we describe how we use Kafka at LinkedIn. Figure 3 shows a simplified version of our deployment. We have one Kafka cluster co-located with each datacenter where our userfacing services run. The frontend services generate various kinds of log data and publish it to the local Kafka brokers in batches. We rely on a hardware load-balancer to distribute the publish requests to the set of Kafka brokers evenly. The online consumers of Kafka run in services within the same datacenter.  </p>
<p><img src="/image/2023/20231010-figure3.png" alt="figure-3.png"></p>
<p>We also deploy a cluster of Kafka in a separate datacenter for offline analysis, located geographically close to our Hadoop cluster and other data warehouse infrastructure. This instance of Kafka runs a set of embedded consumers to pull data from the Kafka instances in the live datacenters. We then run data load jobs to pull data from this replica cluster of Kafka into Hadoop and our data warehouse, where we run various reporting jobs and analytical process on the data. We also use this Kafka cluster for prototyping and have the ability to run simple scripts against the raw event streams for ad hoc querying. Without too much tuning, the end-to-end latency for the complete pipeline is about 10 seconds on average, good enough for our requirements.  </p>
<p>Currently, Kafka accumulates hundreds of gigabytes of data and close to a billion messages per day, which we expect will grow significantly as we finish converting legacy systems to take advantage of Kafka. More types of messages will be added in the future. The rebalance process is able to automatically redirect the consumption when the operation staffs start or stop brokers for software or hardware maintenance. </p>
<p>Our tracking also includes an auditing system to verify that there is no data loss along the whole pipeline. To facilitate that, each message carries the timestamp and the server name when they are generated. We instrument each producer such that it periodically generates a monitoring event, which records the number of messages published by that producer for each topic within a fixed time window. The producer publishes the monitoring events to Kafka in a separate topic. The consumers can then count the number of messages that they have received from a given topic and validate those counts with the monitoring events to validate the correctness of data. </p>
<p>Loading into the Hadoop cluster is accomplished by implementing a special Kafka input format that allows MapReduce jobs to directly read data from Kafka. A MapReduce job loads the raw data and then groups and compresses it for efficient processing in the future. The stateless broker and client-side storage of message offsets again come into play here, allowing the MapReduce task management (which allows tasks to fail and be restarted) to handle the data load in a natural way without duplicating or losing messages in the event of a task restart. Both data and offsets are stored in HDFS only on the successful completion of the job. </p>
<p>We chose to use Avro [2] as our serialization protocol since it is efficient and supports schema evolution. For each message, we store the id of its Avro schema and the serialized bytes in the payload. This schema allows us to enforce a contract to ensure compatibility between data producers and consumers. We use a lightweight schema registry service to map the schema id to the actual schema. When a consumer gets a message, it looks up in the schema registry to retrieve the schema, which is used to decode the bytes into an object (this lookup need only be done once per schema, since the values are immutable).  </p>
<h2 id="5-Experimental-Results"><a href="#5-Experimental-Results" class="headerlink" title="5. Experimental Results"></a>5. Experimental Results</h2><p>We conducted an experimental study, comparing the performance of Kafka with Apache ActiveMQ v5.4 [1], a popular open-source implementation of JMS, and RabbitMQ v2.4 [16], a message system known for its performance. We used ActiveMQ’s default persistent message store KahaDB. Although not presented here, we also tested an alternative AMQ message store and found its performance very similar to that of KahaDB. Whenever possible, we tried to use comparable settings in all systems.  </p>
<p>We ran our experiments on 2 Linux machines, each with 8 2GHz cores, 16GB of memory, 6 disks with RAID 10. The two machines are connected with a 1Gb network link. One of the machines was used as the broker and the other machine was used as the producer or the consumer.  </p>
<p><strong>Producer Test:</strong> We configured the broker in all systems to asynchronously flush messages to its persistence store. For each system, we ran a single producer to publish a total of 10 million messages, each of 200 bytes. We configured the Kafka producer to send messages in batches of size 1 and 50. ActiveMQ and RabbitMQ don’t seem to have an easy way to batch messages and we assume that it used a batch size of 1. The results are shown in Figure 4. The x-axis represents the amount of data sent to the broker over time in MB, and the y-axis corresponds to the producer throughput in messages per second. On average, Kafka can publish messages at the rate of 50,000 and 400,000 messages per second for batch size of 1 and 50, respectively. These numbers are orders of magnitude higher than that of ActiveMQ, and at least 2 times higher than RabbitMQ.  </p>
<p><img src="/image/2023/20231010-figure4.png" alt="figure-4.png"></p>
<p>There are a few reasons why Kafka performed much better. First, the Kafka producer currently doesn’t wait for acknowledgements from the broker and sends messages as faster as the broker can handle. This significantly increased the throughput of the publisher. With a batch size of 50, a single Kafka producer almost saturated the 1Gb link between the producer and the broker. This is a valid optimization for the log aggregation case, as data must be sent asynchronously to avoid introducing any latency into the live serving of traffic. We note that without acknowledging the producer, there is no guarantee that every published message is actually received by the broker. For many types of log data, it is desirable to trade durability for throughput, as long as the number of dropped messages is relatively small. However, we do plan to address the durability issue for more critical data in the future.  </p>
<p>Second, Kafka has a more efficient storage format. On average, each message had an overhead of 9 bytes in Kafka, versus 144 bytes in ActiveMQ. This means that ActiveMQ was using 70% more space than Kafka to store the same set of 10 million messages. One overhead in ActiveMQ came from the heavy message header, required by JMS. Another overhead was the cost of maintaining various indexing structures. We observed that one of the busiest threads in ActiveMQ spent most of its time accessing a B-Tree to maintain message metadata and state. Finally, batching greatly improved the throughput by amortizing the RPC overhead. In Kafka, a batch size of 50 messages improved the throughput by almost an order of magnitude.  </p>
<p><strong>Consumer Test:</strong> In the second experiment, we tested the performance of the consumer. Again, for all systems, we used a single consumer to retrieve a total of 10 millions messages. We configured all systems so that each pull request should prefetch approximately the same amount data—-up to 1000 messages or about 200KB. For both ActiveMQ and RabbitMQ, we set the consumer acknowledge mode to be automatic. Since all messages fit in memory, all systems were serving data from the page cache of the underlying file system or some in-memory buffers. The results are presented in Figure 5.  </p>
<p><img src="/image/2023/20231010-figure5.png" alt="figure-5.png"></p>
<p>On average, Kafka consumed 22,000 messages per second, more than 4 times that of ActiveMQ and RabbitMQ. We can think of several reasons. First, since Kafka has a more efficient storage format, fewer bytes were transferred from the broker to the consumer in Kafka. Second, the broker in both ActiveMQ and RabbitMQ had to maintain the delivery state of every message. We observed that one of the ActiveMQ threads was busy writing KahaDB pages to disks during this test. In contrast, there were no disk write activities on the Kafka broker. Finally, by using the sendfile API, Kafka reduces the transmission overhead. </p>
<p>We close the section by noting that the purpose of the experiment is not to show that other messaging systems are inferior to Kafka. After all, both ActiveMQ and RabbitMQ have more features than Kafka. The main point is to illustrate the potential performance gain that can be achieved by a specialized system. </p>
<h2 id="6-Conclusion-and-Future-Works"><a href="#6-Conclusion-and-Future-Works" class="headerlink" title="6. Conclusion and Future Works"></a>6. Conclusion and Future Works</h2><p>We present a novel system called Kafka for processing huge volume of log data streams. Like a messaging system, Kafka employs a pull-based consumption model that allows an application to consume data at its own rate and rewind the consumption whenever needed. By focusing on log processing applications, Kafka achieves much higher throughput than conventional messaging systems. It also provides integrated distributed support and can scale out. We have been using Kafka successfully at LinkedIn for both offline and online applications. </p>
<p>There are a number of directions that we’d like to pursue in the future. First, we plan to add built-in replication of messages across multiple brokers to allow durability and data availability guarantees even in the case of unrecoverable machine failures. We’d like to support both asynchronous and synchronous replication models to allow some tradeoff between producer latency and the strength of the guarantees provided. An application can choose the right level of redundancy based on its requirement on durability, availability and throughput. Second, we want to add some stream processing capability in Kafka. After retrieving messages from Kafka, real time applications often perform similar operations such as window-based counting and joining each message with records in a secondary store or with messages in another stream. At the lowest level this is supported by semantically partitioning messages on the join key during publishing so that all messages sent with a particular key go to the same partition and hence arrive at a single consumer process. This provides the foundation for processing distributed streams across a cluster of consumer machines. On top of this we feel a library of helpful stream utilities, such as different windowing functions or join techniques will be beneficial to this kind of applications.  </p>
<h2 id="7-REFERENCES"><a href="#7-REFERENCES" class="headerlink" title="7. REFERENCES"></a>7. REFERENCES</h2><p>[1] <a href="http://activemq.apache.org/">http://activemq.apache.org/</a><br>[2] <a href="http://avro.apache.org/">http://avro.apache.org/</a><br>[3] Cloudera’s Flume, <a href="https://github.com/cloudera/flume">https://github.com/cloudera/flume</a><br>[4] <a href="http://developer.yahoo.com/blogs/hadoop/posts/2010/06/ena">http://developer.yahoo.com/blogs/hadoop/posts/2010/06/ena</a><br>bling_hadoop_batch_processi_1/<br>[5] Efficient data transfer through zero copy:<br><a href="https://www.ibm.com/developerworks/linux/library/jzerocopy/">https://www.ibm.com/developerworks/linux/library/jzerocopy/</a><br>[6] Facebook’s Scribe,<br><a href="http://www.facebook.com/note.php?note_id=32008268919">http://www.facebook.com/note.php?note_id=32008268919</a><br>[7] IBM Websphere MQ: <a href="http://www01.ibm.com/software/integration/wmq/">http://www01.ibm.com/software/integration/wmq/</a><br>[8] <a href="http://hadoop.apache.org/">http://hadoop.apache.org/</a><br>[9] <a href="http://hadoop.apache.org/hdfs/">http://hadoop.apache.org/hdfs/</a><br>[10] <a href="http://hadoop.apache.org/zookeeper/">http://hadoop.apache.org/zookeeper/</a><br>[11] <a href="http://www.slideshare.net/cloudera/hw09-hadoop-baseddata-mining-platform-for-the-telecom-industry">http://www.slideshare.net/cloudera/hw09-hadoop-baseddata-mining-platform-for-the-telecom-industry</a><br>[12] <a href="http://www.slideshare.net/prasadc/hive-percona-2009">http://www.slideshare.net/prasadc/hive-percona-2009</a><br>[13] <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-775">https://issues.apache.org/jira/browse/ZOOKEEPER-775</a><br>[14] JAVA Message Service:<br><a href="http://download.oracle.com/javaee/1.3/jms/tutorial/1_3_1-">http://download.oracle.com/javaee/1.3/jms/tutorial/1_3_1-</a><br>fcs/doc/jms_tutorialTOC.html.<br>[15] Oracle Enterprise Messaging Service:<br><a href="http://www.oracle.com/technetwork/middleware/ias/index093455.html">http://www.oracle.com/technetwork/middleware/ias/index093455.html</a><br>[16] <a href="http://www.rabbitmq.com/">http://www.rabbitmq.com/</a><br>[17] TIBCO Enterprise Message Service:<br><a href="http://www.tibco.com/products/soa/messaging/">http://www.tibco.com/products/soa/messaging/</a><br>[18] Kafka, <a href="http://sna-projects.com/kafka/">http://sna-projects.com/kafka/</a></p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Kafka</tag>
        <tag>大数据论文</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch文档ID的长度限制</title>
    <url>/2023/10/13/elasticsearch-doc-id-limit-512-bytes/</url>
    <content><![CDATA[<p>在 Elasticsearch 中，每个文档都有唯一的文档 ID，用于标识该文档在索引中的位置。文档ID是一个重要的概念，了解它的长度限制非常重要。</p>
<p><strong>Elasticsearch 文档 ID 的长度限制是 512 Bytes。</strong>这意味着文档 ID 不能超过 512 字节的大小。如果你尝试创建一个超过 512 字节的文档 ID，Elasticsearch 将会返回一个错误。这个限制是为了保证索引的性能和稳定性。</p>
<p>以下通过示例来说明 Elasticsearch 文档 ID 的长度限制。</p>
<blockquote>
<p>Elasticsearch 版本：7.1.0<br>API 调用均在 Kibana 开发工具上操作</p>
</blockquote>
<p>首先，创建一个名为 <em>test_idx</em> 索引：<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT test_idx </span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;number_of_shards&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br>然后，插入一个 ID 长度为 678 的文档：<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST test_idx/_doc/oooooooooojirgrjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span><span class="string">&quot;nick&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br>可以看到返回错误信息 <code>Validation Failed: 1: id is too long, must be no longer than 512 bytes but was: 678</code>，具体结果如下：<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;root_cause&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;action_request_validation_exception&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Validation Failed: 1: id is too long, must be no longer than 512 bytes but was: 678;&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;action_request_validation_exception&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Validation Failed: 1: id is too long, must be no longer than 512 bytes but was: 678;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">400</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br><strong>如果要插入的文档 ID 为中文的话，则长度不能超过 170。</strong>因为大部分中文字符，在 UTF-8 中是采用 3 个字节进行存储的，所以文档 ID 为中文时最大长度为：512/3=170.7。</p>
<p>例如，插入 ID 值为<code>_舒客泡感牙膏专业系列防蛀美白含氟清新口气清洁口腔旗舰店家庭装舒客泡感牙膏专业系列防蛀美白含氟清新口气清洁口腔旗舰店家庭装舒客泡感牙膏专业系列防蛀美白含氟清新口气清洁口腔旗舰店家庭装舒客泡感牙膏专业系列防蛀美白含氟清新口气清洁口腔旗舰店家庭装舒客泡感牙膏专业系列防蛀美白含氟清新口气清洁口腔旗舰店家庭装舒客泡感牙膏专业系列防蛀美白含氟清新口气清洁口腔旗舰店家庭装_</code>的文档，该 ID 的长度为 180，540 字节（注意：对于中文的文档 ID，在调用 API 时，需要先进行 URLEncode）：<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST test_idx/_doc/%E8%<span class="number">88</span>%<span class="number">92</span>%E5%AE%A2%E6%B3%A1%E6%<span class="number">84</span>%<span class="number">9</span>F%E7%<span class="number">89</span>%<span class="number">99</span>%E8%<span class="number">86</span>%<span class="number">8</span>F%E4%B8%<span class="number">93</span>%E4%B8%<span class="number">9</span>A%E7%B3%BB%E5%<span class="number">88</span>%<span class="number">97</span>%E9%<span class="number">98</span>%B2%E8%<span class="number">9</span>B%<span class="number">80</span>%E7%BE%<span class="number">8</span>E%E7%<span class="number">99</span>%BD%E5%<span class="number">90</span>%AB%E6%B0%<span class="number">9</span>F%E6%B8%<span class="number">85</span>%E6%<span class="number">96</span>%B0%E5%<span class="number">8</span>F%A3%E6%B0%<span class="number">94</span>%E6%B8%<span class="number">85</span>%E6%B4%<span class="number">81</span>%E5%<span class="number">8</span>F%A3%E8%<span class="number">85</span>%<span class="number">94</span>%E6%<span class="number">97</span>%<span class="number">97</span>%E8%<span class="number">88</span>%B0%E5%BA%<span class="number">97</span>%E5%AE%B6%E5%BA%AD%E8%A3%<span class="number">85</span>%E8%<span class="number">88</span>%<span class="number">92</span>%E5%AE%A2%E6%B3%A1%E6%<span class="number">84</span>%<span class="number">9</span>F%E7%<span class="number">89</span>%<span class="number">99</span>%E8%<span class="number">86</span>%<span class="number">8</span>F%E4%B8%<span class="number">93</span>%E4%B8%<span class="number">9</span>A%E7%B3%BB%E5%<span class="number">88</span>%<span class="number">97</span>%E9%<span class="number">98</span>%B2%E8%<span class="number">9</span>B%<span class="number">80</span>%E7%BE%<span class="number">8</span>E%E7%<span class="number">99</span>%BD%E5%<span class="number">90</span>%AB%E6%B0%<span class="number">9</span>F%E6%B8%<span class="number">85</span>%E6%<span class="number">96</span>%B0%E5%<span class="number">8</span>F%A3%E6%B0%<span class="number">94</span>%E6%B8%<span class="number">85</span>%E6%B4%<span class="number">81</span>%E5%<span class="number">8</span>F%A3%E8%<span class="number">85</span>%<span class="number">94</span>%E6%<span class="number">97</span>%<span class="number">97</span>%E8%<span class="number">88</span>%B0%E5%BA%<span class="number">97</span>%E5%AE%B6%E5%BA%AD%E8%A3%<span class="number">85</span>%E8%<span class="number">88</span>%<span class="number">92</span>%E5%AE%A2%E6%B3%A1%E6%<span class="number">84</span>%<span class="number">9</span>F%E7%<span class="number">89</span>%<span class="number">99</span>%E8%<span class="number">86</span>%<span class="number">8</span>F%E4%B8%<span class="number">93</span>%E4%B8%<span class="number">9</span>A%E7%B3%BB%E5%<span class="number">88</span>%<span class="number">97</span>%E9%<span class="number">98</span>%B2%E8%<span class="number">9</span>B%<span class="number">80</span>%E7%BE%<span class="number">8</span>E%E7%<span class="number">99</span>%BD%E5%<span class="number">90</span>%AB%E6%B0%<span class="number">9</span>F%E6%B8%<span class="number">85</span>%E6%<span class="number">96</span>%B0%E5%<span class="number">8</span>F%A3%E6%B0%<span class="number">94</span>%E6%B8%<span class="number">85</span>%E6%B4%<span class="number">81</span>%E5%<span class="number">8</span>F%A3%E8%<span class="number">85</span>%<span class="number">94</span>%E6%<span class="number">97</span>%<span class="number">97</span>%E8%<span class="number">88</span>%B0%E5%BA%<span class="number">97</span>%E5%AE%B6%E5%BA%AD%E8%A3%<span class="number">85</span>%E8%<span class="number">88</span>%<span class="number">92</span>%E5%AE%A2%E6%B3%A1%E6%<span class="number">84</span>%<span class="number">9</span>F%E7%<span class="number">89</span>%<span class="number">99</span>%E8%<span class="number">86</span>%<span class="number">8</span>F%E4%B8%<span class="number">93</span>%E4%B8%<span class="number">9</span>A%E7%B3%BB%E5%<span class="number">88</span>%<span class="number">97</span>%E9%<span class="number">98</span>%B2%E8%<span class="number">9</span>B%<span class="number">80</span>%E7%BE%<span class="number">8</span>E%E7%<span class="number">99</span>%BD%E5%<span class="number">90</span>%AB%E6%B0%<span class="number">9</span>F%E6%B8%<span class="number">85</span>%E6%<span class="number">96</span>%B0%E5%<span class="number">8</span>F%A3%E6%B0%<span class="number">94</span>%E6%B8%<span class="number">85</span>%E6%B4%<span class="number">81</span>%E5%<span class="number">8</span>F%A3%E8%<span class="number">85</span>%<span class="number">94</span>%E6%<span class="number">97</span>%<span class="number">97</span>%E8%<span class="number">88</span>%B0%E5%BA%<span class="number">97</span>%E5%AE%B6%E5%BA%AD%E8%A3%<span class="number">85</span>%E8%<span class="number">88</span>%<span class="number">92</span>%E5%AE%A2%E6%B3%A1%E6%<span class="number">84</span>%<span class="number">9</span>F%E7%<span class="number">89</span>%<span class="number">99</span>%E8%<span class="number">86</span>%<span class="number">8</span>F%E4%B8%<span class="number">93</span>%E4%B8%<span class="number">9</span>A%E7%B3%BB%E5%<span class="number">88</span>%<span class="number">97</span>%E9%<span class="number">98</span>%B2%E8%<span class="number">9</span>B%<span class="number">80</span>%E7%BE%<span class="number">8</span>E%E7%<span class="number">99</span>%BD%E5%<span class="number">90</span>%AB%E6%B0%<span class="number">9</span>F%E6%B8%<span class="number">85</span>%E6%<span class="number">96</span>%B0%E5%<span class="number">8</span>F%A3%E6%B0%<span class="number">94</span>%E6%B8%<span class="number">85</span>%E6%B4%<span class="number">81</span>%E5%<span class="number">8</span>F%A3%E8%<span class="number">85</span>%<span class="number">94</span>%E6%<span class="number">97</span>%<span class="number">97</span>%E8%<span class="number">88</span>%B0%E5%BA%<span class="number">97</span>%E5%AE%B6%E5%BA%AD%E8%A3%<span class="number">85</span>%E8%<span class="number">88</span>%<span class="number">92</span>%E5%AE%A2%E6%B3%A1%E6%<span class="number">84</span>%<span class="number">9</span>F%E7%<span class="number">89</span>%<span class="number">99</span>%E8%<span class="number">86</span>%<span class="number">8</span>F%E4%B8%<span class="number">93</span>%E4%B8%<span class="number">9</span>A%E7%B3%BB%E5%<span class="number">88</span>%<span class="number">97</span>%E9%<span class="number">98</span>%B2%E8%<span class="number">9</span>B%<span class="number">80</span>%E7%BE%<span class="number">8</span>E%E7%<span class="number">99</span>%BD%E5%<span class="number">90</span>%AB%E6%B0%<span class="number">9</span>F%E6%B8%<span class="number">85</span>%E6%<span class="number">96</span>%B0%E5%<span class="number">8</span>F%A3%E6%B0%<span class="number">94</span>%E6%B8%<span class="number">85</span>%E6%B4%<span class="number">81</span>%E5%<span class="number">8</span>F%A3%E8%<span class="number">85</span>%<span class="number">94</span>%E6%<span class="number">97</span>%<span class="number">97</span>%E8%<span class="number">88</span>%B0%E5%BA%<span class="number">97</span>%E5%AE%B6%E5%BA%AD%E8%A3%<span class="number">85</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span><span class="string">&quot;nick&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br> 返回的结果如下：<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;root_cause&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;action_request_validation_exception&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Validation Failed: 1: id is too long, must be no longer than 512 bytes but was: 540;&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;action_request_validation_exception&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Validation Failed: 1: id is too long, must be no longer than 512 bytes but was: 540;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">400</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br>可以看到返回同样的错误：<code>id is too long, must be no longer than 512 byte</code>。</p>
<p>另外，在 Elasticsearch 的源码中也可以找到这个文档 ID 的限制：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Maximal allowed length (in bytes) of the document ID.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_DOCUMENT_ID_LENGTH_IN_BYTES</span> <span class="operator">=</span> <span class="number">512</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (id != <span class="literal">null</span> &amp;&amp; id.getBytes(StandardCharsets.UTF_8).length &gt; MAX_DOCUMENT_ID_LENGTH_IN_BYTES) &#123;</span><br><span class="line">    validationException = addValidationError(</span><br><span class="line">        <span class="string">&quot;id [&quot;</span></span><br><span class="line">        + id</span><br><span class="line">        + <span class="string">&quot;] is too long, must be no longer than &quot;</span></span><br><span class="line">        + MAX_DOCUMENT_ID_LENGTH_IN_BYTES</span><br><span class="line">        + <span class="string">&quot; bytes but was: &quot;</span></span><br><span class="line">        + id.getBytes(StandardCharsets.UTF_8).length,</span><br><span class="line">        validationException</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>具体源码可以查看 <code>IndexRequest</code> 这个类：<br><a href="https://github.com/elastic/elasticsearch/blob/main/server/src/main/java/org/elasticsearch/action/index/IndexRequest.java">https://github.com/elastic/elasticsearch/blob/main/server/src/main/java/org/elasticsearch/action/index/IndexRequest.java</a></p>
<p>为什么要限制文档 ID 的长度呢？这是因为文档 ID 在索引中扮演着非常重要的角色。文档 ID 被用来查找文档、更新文档、删除文档和排序文档。如果文档 ID 太长，那么每个文档的存储空间就会增加，这会导致索引的性能下降。此外，如果文档 ID 太长，那么 Elasticsearch 集群的内存和磁盘空间的使用也会增加，从而降低整个集群的性能。</p>
<p>为了避免文档 ID 过长，开发人员应该尽可能地使用简短而且唯一的文档 ID。通常，可以使用 UUID 或者数字作为文档 ID。如果需要一个更有意义的文档 ID，可以使用有限的字符集合和适当的编码方法来缩短文档 ID 的长度。</p>
<p>了解 Elasticsearch 文档 ID 的长度限制是非常重要的，它对于确保 Elasticsearch 索引的性能和稳定性至关重要。如果你是一个 Elasticsearch 开发人员，你应该遵守这个限制，并且尽可能地使用简短而且唯一的文档 ID。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>什么是Consumer Internet？</title>
    <url>/2023/10/08/consumer-internet/</url>
    <content><![CDATA[<p><strong>消费互联网(Consumer Internet)</strong> 指的是面向消费者的互联网产品、服务和商业模式。它将互联网技术和平台应用于满足个人消费需求的领域，为消费者提供各种产品和服务。基于互联网和移动互联网技术，通过电子商务平台、在线支付系统、社交媒体平台等为消费者提供便捷、丰富的消费体验。它与过去面向企业用户的互联网有着明显的不同。</p>
<h2 id="一、消费互联网的主要特点"><a href="#一、消费互联网的主要特点" class="headerlink" title="一、消费互联网的主要特点"></a>一、消费互联网的主要特点</h2><ol>
<li>以消费者为中心。消费互联网满足消费者的各种需求，如娱乐、社交、购物等。</li>
<li>强调用户体验。消费互联网产品追求简单、便捷的用户体验，降低消费者的使用门槛。</li>
<li>商业模式多样。消费互联网的商业模式包括广告、交易佣金、增值服务、订阅等。</li>
<li>高度依赖移动互联网。消费互联网大量应用手机等移动终端，可以随时随地接入服务。</li>
</ol>
<h2 id="二、消费互联网的主要领域"><a href="#二、消费互联网的主要领域" class="headerlink" title="二、消费互联网的主要领域"></a>二、消费互联网的主要领域</h2><ol>
<li>娱乐 - 视频、音乐、游戏等娱乐内容。例如抖音、网易云音乐。</li>
<li>社交 - 社交网络、即时通讯。例如微信、微博。</li>
<li>电子商务 - 电商购物、外卖订餐等电子商务。例如淘宝、美团。</li>
<li>资讯 - 获取信息和知识。例如今日头条、知乎。</li>
<li>旅游 - 酒店预订、旅游攻略等旅游服务。例如携程、途家。</li>
<li>在线支付 - 在线支付系统使得消费者可以通过手机轻松完成支付，方便快捷。例如支付宝、微信支付。</li>
</ol>
<h2 id="三、消费互联网的发展趋势"><a href="#三、消费互联网的发展趋势" class="headerlink" title="三、消费互联网的发展趋势"></a>三、消费互联网的发展趋势</h2><ol>
<li>向本地生活服务延伸，满足更丰富的生活需求。</li>
<li>利用人工智能提供更个性化的产品和服务。</li>
<li>进一步整合线上线下资源，提供无缝的全渠道用户体验。</li>
<li>加强数据安全和隐私保护，提高用户信任。</li>
<li>不断创新商业模式，创造新的消费场景。</li>
</ol>
<h2 id="四、小结"><a href="#四、小结" class="headerlink" title="四、小结"></a>四、小结</h2><p>随着互联网和移动互联网的快速发展，我们的生活方式和消费习惯也发生了翻天覆地的变化。消费互联网作为新时代的代表，已经深入到我们的生活中，正在深刻重塑人们的生活和消费方式。</p>
<p>消费互联网已经成为互联网发展的主流，并将继续发展壮大，随着人工智能、大数据等技术的应用，购物体验将更加智能化和个性化。消费者对于品质、体验的要求也将不断提高，推动着商家不断创新和提升服务质量。这也将带来巨大的商业机会和变革影响。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
  </entry>
  <entry>
    <title>Apache Flink 1.17 发版公告</title>
    <url>/2023/03/25/apache-flink-release-1_17/</url>
    <content><![CDATA[<p>本文翻译自 Apache Flink 社区博文——<a href="https://flink.apache.org/2023/03/23/announcing-the-release-of-apache-flink-1.17/">《Announcing the Release of Apache Flink 1.17》</a></p>
<hr>
<p>Apache Flink PMC（项目管理委员会）很高兴地宣布发布 Apache Flink 1.17.0 版。Apache Flink 是领先的流处理标准，统一的流和批数据处理概念正被越来越多的公司成功采用。得益于我们优秀的社区和贡献者，Apache Flink 作为一项技术在不断发展壮大，并且仍然是 Apache 软件基金会中最活跃的项目之一。Flink 1.17 版本有 172 位贡献者热情参与，完成了 7 个 FLIP 和 600 多个问题，为社区带来了许多令人兴奋的新功能和改进。</p>
<h2 id="迈向流式仓库"><a href="#迈向流式仓库" class="headerlink" title="迈向流式仓库"></a>迈向流式仓库</h2><p>为了在流式仓库领域实现更高的效率，Flink 1.17 在批处理性能和流处理语义方面进行了大量改进。这些改进标志着朝创建更高效、更精简的数据仓库迈出的重要一步，使其能够实时处理大量数据。</p>
<p>对于批处理而言，此版本包含了多项新功能和改进：</p>
<ul>
<li><strong>流式仓库 API：</strong>FLIP-282 在 Flink SQL 中引入了新的删除和更新 API，该 API 仅在批处理模式下工作。像 Flink Table Store 这样的外部存储系统可以通过这个新的 API 实现行级修改。ALTER TABLE 语法得到了增强，包括添加/修改/删除列、主键和水印的能力，使用户更容易维护表的模式。</li>
<li><strong>批处理执行改进：</strong>在 Flink 1.17 中，批处理工作负载的执行在性能、稳定性和可用性方面都得到了显著改进。在性能方面，通过策略和运算符优化，如新的连接重排序和自适应本地哈希聚合、Hive 聚合函数改进以及混合洗牌模式（Hybrid Shuffle Mode）增强，10T 数据集的 TPC-DS 性能提高了 26%。在稳定性方面，推测执行（Speculative Execution）现在支持所有运算符，并且自适应批处理调度器（Adaptive Batch Scheduler）对数据倾斜更加健壮。在易用性方面，批处理工作负载所需的调优工作得到了简化。混合洗牌模式现在是批处理模式的默认调度器。混合洗牌模式与推测执行和自适应批处理调度器兼容，并简化了各种配置。</li>
<li><strong>SQL 客户端/网关：</strong>Apache Flink 1.17 为 SQL 客户端引入了“网关模式”，允许用户向 SQL 网关提交 SQL 查询以获得增强功能。用户可以使用 SQL 语句来管理作业生命周期，包括显示作业信息和停止正在运行的作业。这为管理 Flink 作业提供了强大的工具。</li>
</ul>
<p>流处理方面实现了以下功能和改进：</p>
<ul>
<li><strong>流式 SQL 语义：</strong>非确定性操作可能会带来错误的结果或异常，在流式 SQL 中这是一个有挑战性的问题。修复了不正确的优化计划和功能问题，并引入了 PLAN_ADVICE 实验性功能，以向 SQL 用户提供潜在的正确性风险和优化建议信息。</li>
<li><strong>检查点改进：</strong>通用增量检查点改进提高了检查点过程的速度和稳定性，在 Flink 1.17 中，非对齐检查点在背压情况下的稳定性得到了改善，并且已经达到了生产就绪状态。用户可以在作业运行时通过新引入的触发检查点的 REST 接口来手动触发具有自定义检查点类型的检查点。</li>
<li><strong>水印对齐增强：</strong>高效的水印处理直接影响事件时间应用程序的执行效率。在 Flink 1.17 中，FLIP-217 引入了一种改进的水印对齐方式，通过对源操作符内的分片进行数据发射对齐，从而更有效地协调源中的水印进度，从而减少下游操作符的过度缓冲，提高流作业执行的整体效率。</li>
<li><strong>状态后端升级：</strong>FRocksDB 升级到 6.20.3-ververica-2.0 版本，为 RocksDBStateBackend 带来了改进，如在插槽之间共享内存，并且现在支持苹果芯片（如 Mac M1）。</li>
</ul>
<h2 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h2><p>作为一个统一的流和批处理数据引擎，Flink 在流处理领域尤为突出。为了提高其批处理能力，社区贡献者在 1.17 版本中投入了大量精力来改进 Flink 的批处理性能和生态系统。这使得用户可以更轻松地基于 Flink 构建流式仓库。</p>
<h3 id="推测执行（Speculative-Execution）"><a href="#推测执行（Speculative-Execution）" class="headerlink" title="推测执行（Speculative Execution）"></a>推测执行（Speculative Execution）</h3><p>现在支持 Sink 的推测执行（Speculative Execution）。以前，为了避免不稳定或错误的结果，Sink 未启用推测执行。在 Flink 1.17 中，改进了 Sink 的上下文，使得 Sink（包括新的 Sink 和 OutputFormat Sink 在内）能够感知到尝试次数。有了尝试次数，即使多个尝试同时运行，Sink 也能够隔离同一子任务的不同尝试产生的数据。此外，还改进了 FinalizeOnMaster 接口，使得 OutputFormat Sink 可以查看哪些尝试已经完成，然后正确提交已写入的数据。一旦 Sink 能够很好地处理并发尝试，就可以实现装饰接口 SupportsConcurrentExecutionAttempts，从而允许对其进行推测执行。一些内置的 Sink 已经启用了推测执行，包括 DiscardingSink、PrintSinkFunction、PrintSink、FileSink、FileSystemOutputFormat 和 HiveTableSink。</p>
<p>推测执行的慢任务检测也得到了改进。以前，确定哪些任务较慢时只考虑任务的执行时间。现在还考虑了任务的输入数据量。执行时间较长但同时消耗更多数据的任务可能不被视为慢任务。这一改进有助于消除数据倾斜对慢任务检测的负面影响。</p>
<h3 id="自适应批处理调度器（Adaptive-Batch-Scheduler）"><a href="#自适应批处理调度器（Adaptive-Batch-Scheduler）" class="headerlink" title="自适应批处理调度器（Adaptive Batch Scheduler）"></a>自适应批处理调度器（Adaptive Batch Scheduler）</h3><p>Adaptive Batch Scheduler 现在默认用于批处理作业。该调度器可以根据每个作业任务处理的数据量自动确定适当的并行度。它也是唯一支持推测执行的调度器。</p>
<p>Adaptive Batch Scheduler 的配置得到了改进，更易于使用。用户不再需要显式地将全局默认并行度设置为 -1，就能自动决定并行度。相反，如果设置了全局默认并行度，那么在决定并行度时，全局默认并行度将被用作上限。Adaptive Batch Scheduler 配置选项的键名也已更名，以便更易于理解。</p>
<p>Adaptive Batch Scheduler 的功能也得到了改进。它现在支持根据细粒度的数据分布信息将数据均匀地分发给下游任务。不再需要并行度只能是 2 的幂次的限制，因此取消了这一限制。</p>
<h3 id="混合洗牌模式（Hybrid-Shuffle-Mode）"><a href="#混合洗牌模式（Hybrid-Shuffle-Mode）" class="headerlink" title="混合洗牌模式（Hybrid Shuffle Mode）"></a>混合洗牌模式（Hybrid Shuffle Mode）</h3><p>本次发布中对混合洗牌模式进行了多项重要改进。</p>
<p>混合洗牌模式现在支持自适应批处理调度器（Adaptive Batch Scheduler）和推测执行（Speculative Execution）。</p>
<p>混合洗牌模式现在支持在可能的情况下重复使用中间数据，这带来了显著的性能提升。</p>
<p>改进了稳定性，以避免在大规模生产中出现稳定性问题。</p>
<p>更多详细信息请参阅文档中的<a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/ops/batch/batch_shuffle/#hybrid-shuffle">混合洗牌（Hybrid-Shuffle）</a>部分。</p>
<h3 id="TPC-DS-基准"><a href="#TPC-DS-基准" class="headerlink" title="TPC-DS 基准"></a>TPC-DS 基准</h3><p>从 Flink 1.16 开始，批处理引擎的性能不断得到优化。在 Flink 1.16 中，引入了动态分区剪枝，但并非所有 TPC-DS 查询都可以被优化。在 Flink 1.17 中，该算法已得到改进，现在大多数 TPC-DS 结果都得到了优化。在 Flink 1.17 中，引入了一种动态规划连接重排算法，与先前的算法相比，它的工作效果更好，搜索空间更大。查询计划器可以根据查询中连接的数量自动选择适当的连接重排算法，因此用户无需关注连接重排算法。（注意：连接重排默认情况下是禁用的，运行 TPC-DS 时需要启用）。在算子层面上，引入了动态哈希局部聚合策略，它可以根据数据分布动态确定是否需要进行局部哈希聚合操作以提高性能。在运行时层面上，去除了一些不必要的虚拟函数调用，以加速执行速度。总之，在使用分区表的 10T 数据集上，与 Flink 1.16 相比，Flink 1.17 的性能提高了 26%。</p>
<p><img src="https://flink.apache.org/img/blog/2023-03-23-release-1.17.0/tpc-ds-benchmark.png" alt="image.png"></p>
<h3 id="SQL-客户端-网关（SQL-Client-Gateway）"><a href="#SQL-客户端-网关（SQL-Client-Gateway）" class="headerlink" title="SQL 客户端/网关（SQL Client / Gateway）"></a>SQL 客户端/网关（SQL Client / Gateway）</h3><p>Apache Flink 1.17 为 SQL Client 引入了一项名为“网关模式”（gateway mode）的新功能，它允许 SQL Client 连接到远程网关，并像在嵌入式模式下一样提交 SQL 查询，从而增强了 SQL Client 的功能。这种新模式为用户在使用 SQL Gateway 时提供了更多的便利。</p>
<p>此外，SQL Client/SQL Gateway 现在还为通过 SQL 语句管理作业生命周期提供了新的支持。用户可以使用 SQL 语句显示存储在 JobManager 中的所有作业信息，并使用唯一的作业 ID 停止运行中的作业。有了这项新功能，SQL Client/Gateway 现在几乎具备了与 Flink CLI 相同的功能，成为管理 Flink 作业的又一强大工具。</p>
<h3 id="SQL-API"><a href="#SQL-API" class="headerlink" title="SQL API"></a>SQL API</h3><p>行级 SQL 删除和更新在现代大数据工作流中变得越来越重要。使用案例包括为遵守法规而删除一组行，为纠正数据而更新一组行等。许多流行的引擎（如 Trino 或 Hive）已经支持了这些功能。在 Flink 1.17 中，Flink 引入了新的删除和更新 API，该 API 以批处理模式工作，并暴露给连接器。现在，外部存储系统可以通过这个新 API 实现行级修改。此外，ALTER TABLE 语法还扩展了添加/修改/删除列、主键和水印的功能。这些增强功能为用户提供了根据自身需要维护表模式元数据的灵活性。</p>
<h3 id="Hive-兼容性"><a href="#Hive-兼容性" class="headerlink" title="Hive 兼容性"></a>Hive 兼容性</h3><p>Apache Flink 1.17 对 Hive 表 Sink 进行了改进，使其比以往更加高效。在以前的版本中，Hive 表 Sink 只支持流模式下的自动文件压缩，而不支持批处理模式。在 Flink 1.17 中，Hive 表 Sink 现在也能在批处理模式下自动压缩新写入的文件。这一功能可以大大减少小文件的数量。此外，为了通过 HiveModule 使用 Hive 内置函数，Flink 在 HiveModule 中引入了多个原生 Hive 聚合函数，包括 SUM/COUNT/AVG/MIN/MAX。这些函数可以使用基于哈希的聚合算子来执行，从而显著提高性能。</p>
<h2 id="流处理"><a href="#流处理" class="headerlink" title="流处理"></a>流处理</h2><p>在 Flink 1.17 中，解决了流式 SQL 语义难点和正确性问题，优化了检查点性能，增强了水印对齐功能，扩展了流 FileSink 对 ABFS（Azure Blob Filesystem）的支持，并将 Calcite 和 FRocksDB 升级到了更新的版本。这些改进进一步增强了 Flink 在流处理领域的能力。</p>
<h3 id="流式-SQL-语义"><a href="#流式-SQL-语义" class="headerlink" title="流式 SQL 语义"></a>流式 SQL 语义</h3><p>在正确性和语义增强方面，Flink 1.17 引入了实验性功能 PLAN_ADVICE，用于检测潜在的正确性风险并提供优化建议。例如，如果通过 EXPLAIN PLAN_ADVICE 检测到 NDU（非确定性更新）问题，优化器就会在物理计划末尾附加建议，然后将建议 ID 标记到相关操作的关系节点上，并建议用户相应地更新配置。通过向用户提供这些具体建议，优化器可以帮助用户提高查询结果的准确性和可靠性。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">== Optimized Physical Plan With Advice ==</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">advice[1]: [WARNING] The column(s): day(generated by non-deterministic function: CURRENT_TIMESTAMP ) can not satisfy the determinism requirement for correctly processing update message(&#x27;UB&#x27;/&#x27;UA&#x27;/&#x27;D&#x27; in changelogMode, not &#x27;I&#x27; only), this usually happens when input node has no upsertKey(upsertKeys=[&#123;&#125;]) or current node outputs non-deterministic update messages. Please consider removing these non-deterministic columns or making them deterministic by using deterministic functions.</span><br></pre></td></tr></table></figure>
<p>PLAN_ADVICE 还能帮助用户提高查询的性能和效率。例如，当检测到 GroupAggregate 操作时，可将其优化为更高效的本地-全局聚合。通过向用户提供这种具体的优化建议，优化器能让用户轻松提高查询的性能和效率。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">== Optimized Physical Plan With Advice ==</span><br><span class="line">...</span><br><span class="line">advice[1]: [ADVICE] You might want to enable local-global two-phase optimization by configuring (&#x27;table.optimizer.agg-phase-strategy&#x27; to &#x27;AUTO&#x27;).</span><br></pre></td></tr></table></figure>
<p>此外，Flink 1.17 还解决了几个错误的计划优化问题，这些问题导致了 FLINK-29849、FLINK-30006 和 FLINK-30841 中报告的错误结果。</p>
<h3 id="检查点改进"><a href="#检查点改进" class="headerlink" title="检查点改进"></a>检查点改进</h3><p>通用增量检查点（Generic Incremental Checkpoint，GIC）旨在提高检查点过程的速度和稳定性。WordCount 案例的部分实验结果如下所示。更多详情可参阅这篇<a href="https://www.ververica.com/blog/generic-log-based-incremental-checkpoint">博文</a>。</p>
<p>表 1： 在 WordCount 案例中启用 GIC 后的优势</p>
<p><img src="https://flink.apache.org/img/blog/2023-03-23-release-1.17.0/beneifts-after-enabling-gic-in-wordcount-case.png" alt="https://flink.apache.org/img/blog/2023-03-23-release-1.17.0/beneifts-after-enabling-gic-in-wordcount-case.png"></p>
<p>表 2：在 WordCount 案例中启用 GIC 后的代价</p>
<p><img src="https://flink.apache.org/img/blog/2023-03-23-release-1.17.0/costs-after-enabling-gic-in-wordcount-case.png" alt="https://flink.apache.org/img/blog/2023-03-23-release-1.17.0/costs-after-enabling-gic-in-wordcount-case.png"></p>
<p>非对齐检查点（Unaligned Checkpoints，UC）显著提高了在背压情况下检查点的完成率。之前的 UC 实现会写入许多小文件，这可能会给 HDFS 的 namenode 带来高负载。本版本解决了这一问题，使 UC 在生产环境中更加可用。</p>
<p>在 1.17 版本中，提供了一个 REST API，用户可以在作业运行时使用自定义的检查点类型手动触发检查点。例如，对于使用增量检查点运行的作业，用户可以定期或手动触发全量检查点，以中断增量检查点链，避免引用很久以前的文件。</p>
<h3 id="水印对齐支持"><a href="#水印对齐支持" class="headerlink" title="水印对齐支持"></a>水印对齐支持</h3><p>在早期的版本中，FLIP-182 提出了一种名为水印对齐（watermark alignment）的解决方案，用于解决事件时间应用中由于数据源不平衡造成的数据倾斜问题。然而，它有一个局限性，即源算子的并行度必须与分片数相匹配。这是因为，如果一个分片比另一个分片更快地发送数据，具有多个分片的源算子可能需要缓冲大量数据。为解决这一限制，Flink 1.17 引入了 FLIP-217，它增强了水印对齐功能，在考虑水印边界的同时，对源算子内各分片的数据发射进行对齐。这一增强功能可确保源算子中的水印进度更加协调，防止下游算子缓冲过多数据，并提高流作业的执行效率。</p>
<h3 id="流-FileSink-扩展"><a href="#流-FileSink-扩展" class="headerlink" title="流 FileSink 扩展"></a>流 FileSink 扩展</h3><p>在添加 ABFS 支持后，FileSink 现在能够在流模式下使用总共五种不同的文件系统： HDFS、S3、OSS、ABFS 和本地。这一扩展有效地涵盖了大多数主要文件系统，为用户提供了全面的选择范围和更高的通用性。</p>
<h3 id="RocksDBStateBackend-升级"><a href="#RocksDBStateBackend-升级" class="headerlink" title="RocksDBStateBackend 升级"></a>RocksDBStateBackend 升级</h3><p>此版本将 FRocksDB 升级到了 6.20.3-ververica-2.0，为 RocksDBStateBackend 带来了改进：</p>
<ol>
<li>支持在苹果 Silicon 芯片组上构建 FRocksDB Java，如 Mac M1 和 M2</li>
<li>通过避免昂贵的 ToString() 来提高压缩过滤器的性能</li>
<li>升级 FRocksDB 的 ZLIB 版本以避免内存崩溃</li>
<li>为 RocksJava 添加 periodic_compaction_seconds 选项</li>
</ol>
<p>详情请参见 <a href="https://issues.apache.org/jira/browse/FLINK-30836">FLINK-30836</a>。</p>
<p>此版本还将插槽（slot）之间共享内存的范围扩大到 TaskManager，这有助于在 TaskManager 中插槽内存使用不均衡的情况下提高内存效率。此外，经过调整后，它还能减少整体内存消耗，但会牺牲资源隔离性能。了解有关 <a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/deployment/config/#state-backend-rocksdb-memory-fixed-per-tm">state.backend.rocksdb.memory.fixed-per-tm</a> 配置的更多信息。</p>
<h3 id="Calcite-升级"><a href="#Calcite-升级" class="headerlink" title="Calcite 升级"></a>Calcite 升级</h3><p>Flink 1.17 将 Calcite 升级到 1.29.0 版本，以提高 Flink SQL 系统的性能和效率。Flink 1.16 使用的是 Calcite 1.26.0，该版本在 RexNode 简化方面存在严重问题，这是由 SEARCH 操作符引起的。如 CALCITE-4325 和 CALCITE-4352 中报告的那样，这会导致查询优化时产生错误数据。通过升级 Calcite 版本，Flink 可以在 Flink SQL 处理中充分利用其改进的性能和新特性。这解决了多个错误，并加快了查询处理时间。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="PyFlink"><a href="#PyFlink" class="headerlink" title="PyFlink"></a>PyFlink</h3><p>Flink 1.17 版本对 Apache Flink 的 Python 接口 PyFlink 进行了更新。值得注意的改进包括对 Python 3.10 的支持，以及在 Apple Silicon 芯片组上（如 Mac M1 和 M2 计算机）的执行能力。此外，该版本还包括了一些小的优化，增强了 Java 和 Python 进程之间的跨进程通信稳定性，通过字符串来指定 Python UDF 的数据类型以提高可用性，并支持在 Python UDF 中访问作业参数。该版本主要关注改进 PyFlink 的功能和可用性，而不是引入新的主要特性。但是，这些增强功能有望改善用户体验，促进高效的数据处理。</p>
<h3 id="每日性能基准测试"><a href="#每日性能基准测试" class="headerlink" title="每日性能基准测试"></a>每日性能基准测试</h3><p>在 Flink 1.17 中，每日性能监控已经集成到 <a href="https://apache-flink.slack.com/archives/C0471S0DFJ9">#flink-dev-benchmarks Slack</a> 频道中。这个功能对于快速发现回归问题并确保代码质量非常重要。一旦通过 Slack 频道或 speed center 发现了回归问题，开发人员可以参考<a href="https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=115511847">基准测试的 Wiki</a> 中提供的指导来有效解决问题。这个功能有助于社区采取主动的方式来确保系统性能，从而实现更好的产品并提高用户满意度。</p>
<h3 id="子任务级火焰图"><a href="#子任务级火焰图" class="headerlink" title="子任务级火焰图"></a>子任务级火焰图</h3><p>从 Flink 1.17 开始，Flame Graph 提供了对任务级别的“向下钻取”可视化功能，使用户能够更详细地了解任务的性能。与 Flame Graph 以前的版本相比，这一功能有了重大改进，因为它使用户能够选择感兴趣的子任务并查看相应的火焰图。通过这种方式，用户可以确定其任务可能遇到性能问题的特定区域，并采取措施加以解决。这将大大提高数据处理管道的整体效率和有效性。</p>
<p><img src="https://flink.apache.org/img/blog/2023-03-23-release-1.17.0/subtask-level-flame-graph.png" alt="https://flink.apache.org/img/blog/2023-03-23-release-1.17.0/subtask-level-flame-graph.png"></p>
<h3 id="通用授权令牌支持"><a href="#通用授权令牌支持" class="headerlink" title="通用授权令牌支持"></a>通用授权令牌支持</h3><p>之前，Flink 支持 Kerberos 认证和基于 Hadoop 的令牌。通过完成 FLIP-272，Flink 的授权令牌框架被泛化，使其与认证协议无关。这将允许贡献者在未来添加对非 Hadoop 兼容框架的支持，在这些框架中，身份验证协议并非基于 Kerberos。此外，FLIP-211 的实现改善了 Flink 与 Kerberos 的交互：它减少了在 Flink 中交换授权令牌所需的请求数量。</p>
<h2 id="升级注意事项"><a href="#升级注意事项" class="headerlink" title="升级注意事项"></a>升级注意事项</h2><p>Flink 社区尽力确保升级过程尽可能无缝。然而，在升级到 1.17 版时，某些变化可能会要求用户对程序的某些部分进行调整。请参阅<a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/release-notes/flink-1.17/">版本说明</a>，了解在升级过程中需要进行的调整和需要检查的问题的完整列表。</p>
<h2 id="贡献者名单"><a href="#贡献者名单" class="headerlink" title="贡献者名单"></a>贡献者名单</h2><p>Apache Flink 社区向所有促成此版本发布的贡献者表示感谢：</p>
<p>Ahmed Hamdy, Aitozi, Aleksandr Pilipenko, Alexander Fedulov, Alexander Preuß, Anton Kalashnikov, Arvid Heise, Bo Cui, Brayno, Carlos Castro, ChangZhuo Chen (陳昌倬), Chen Qin, Chesnay Schepler, Clemens, ConradJam, Danny Cranmer, Dawid Wysakowicz, Dian Fu, Dong Lin, Dongjoon Hyun, Elphas Toringepi, Eric Xiao, Fabian Paul, Ferenc Csaky, Gabor Somogyi, Gen Luo, Gunnar Morling, Gyula Fora, Hangxiang Yu, Hong Liang Teoh, HuangXingBo, Jacky Lau, Jane Chan, Jark Wu, Jiale, Jin, Jing Ge, Jinzhong Li, Joao Boto, John Roesler, Jun He, JunRuiLee, Junrui Lee, Juntao Hu, Krzysztof Chmielewski, Leonard Xu, Licho, Lijie Wang, Mark Canlas, Martijn Visser, MartijnVisser, Martin Liu, Marton Balassi, Mason Chen, Matt, Matthias Pohl, Maximilian Michels, Mingliang Liu, Mulavar, Nico Kruber, Noah, Paul Lin, Peter Huang, Piotr Nowojski, Qing Lim, QingWei, Qingsheng Ren, Rakesh, Ran Tao, Robert Metzger, Roc Marshal, Roman Khachatryan, Ron, Rui Fan, Ryan Skraba, Salva Alcántara, Samrat, Samrat Deb, Samrat002, Sebastian Mattheis, Sergey Nuyanzin, Seth Saperstein, Shengkai, Shuiqiang Chen, Smirnov Alexander, Sriram Ganesh, Steven van Rossum, Tartarus0zm, Timo Walther, Venkata krishnan Sowrirajan, Wei Zhong, Weihua Hu, Weijie Guo, Xianxun Ye, Xintong Song, Yash Mayya, YasuoStudyJava, Yu Chen, Yubin Li, Yufan Sheng, Yun Gao, Yun Tang, Yuxin Tan, Zakelly, Zhanghao Chen, Zhenqiu Huang, Zhu Zhu, ZmmBigdata, bzhaoopenstack, chengshuo.cs, chenxujun, chenyuzhi, chenyuzhi459, chenzihao, dependabot[bot], fanrui, fengli, frankeshi, fredia, godfreyhe, gongzhongqiang, harker2015, hehuiyuan, hiscat, huangxingbo, hunter-cloud09, ifndef-SleePy, jeremyber-aws, jiangjiguang, jingge, kevin.cyj, kristoffSC, kurt, laughingman7743, libowen, lincoln lee, lincoln.lil, liujiangang, liujingmao, liuyongvs, liuzhuang2017, luoyuxia, mas-chen, moqimoqidea, muggleChen, noelo, ouyangwulin, ramkrish86, saikikun, sammieliu, shihong90, shuiqiangchen, snuyanzin, sunxia, sxnan, tison, todd5167, tonyzhu918, wangfeifan, wenbingshen, xuyang, yiksanchan, yunfengzhou-hub, yunhong, yuxia Luo, yuzelin, zhangjingcun, zhangmang, zhengyunhong.zyh, zhouli, zoucao, 沈嘉琦</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
  </entry>
  <entry>
    <title>Apache Flink的核心特性</title>
    <url>/2023/09/09/apache-flink-features/</url>
    <content><![CDATA[<p>在大数据和实时数据处理的时代，Apache Flink 以其卓越的性能和灵活性成为了业界的明星。本文将深入探讨这款框架的核心特性，以帮助我们更好地理解其在大数据分析和实时数据处理方面的优势和应用场景。</p>
<h2 id="批流一体"><a href="#批流一体" class="headerlink" title="批流一体"></a>批流一体</h2><p>Flink 采用了统一的流处理架构，可以用相同的编程模型和运行时系统支持有界数据的批处理和无界数据的实时流处理。这种设计理念使 Flink 在企业技术选型中具有重要意义：</p>
<p>首先，Flink 消除了批处理和流处理之间的鸿沟，企业无需再采用多套框架分别实现两者。这简化了架构设计，降低了系统复杂度。其次，统一的编程模型可以重用批处理和流处理的代码逻辑，提高开发效率。开发人员无需学习多种编程模型，大大减少了学习和开发成本。最后，单一的运行时系统简化了运维工作，无须部署和维护多套框架，可以节省大量运维成本。</p>
<p>也就是说，Flink 的统一流处理架构为企业提供了一个高效、灵活、易于使用的大数据处理解决方案。如果 Flink 能够满足业务需求，就无须用两种甚至多种框架分别实现批处理和流处理，这大大降低了架构设计、开发、运维的复杂度，可以节省大量人力成本。这是 Flink 相比其他框架的一个重要优势。</p>
<h2 id="复杂的状态管理"><a href="#复杂的状态管理" class="headerlink" title="复杂的状态管理"></a>复杂的状态管理</h2><p>Flink 支持有状态计算。Flink 原生的分布式一致状态管理机制，为状态密集型应用提供了稳定可靠的状态存储和访问接口，可以支持各种复杂的有状态计算应用。这是构建实时数据应用的关键能力之一。 </p>
<h2 id="多种时间语义"><a href="#多种时间语义" class="headerlink" title="多种时间语义"></a>多种时间语义</h2><p>Flink 提供了<strong>事件时间（event-time）和处理时间（processing-time）</strong>两种语义，这使其在处理乱序事件流时能够提供一致且准确的结果。在流处理中，数据到达 Flink 系统的顺序可能与事件本身发生的时间顺序不一致，这是很常见的数据乱序现象，但 Flink 可以确保结果的准确性。</p>
<p>使用事件时间可以对数据按事件发生的时间进行排序等操作，从而得到精确的结果。虽然使用处理时间不一定能得到精确结果，但可以满足低延迟的需求。这两种时间语义使 Flink 能够在结果准确性和低延迟之间达到平衡，以满足不同的应用需求。</p>
<h2 id="良好的容错性和故障恢复能力"><a href="#良好的容错性和故障恢复能力" class="headerlink" title="良好的容错性和故障恢复能力"></a>良好的容错性和故障恢复能力</h2><p>Apache Flink 具备良好的容错性和故障恢复能力。它可以自动监控任务执行过程中的错误，并在发生故障时进行恢复。这种容错机制保证了长时间运行的大规模数据处理场景下的可靠性，使得 Apache Flink 能够提供稳定可靠的服务。并且，Flink 存储状态采用了<strong>轻量级分布式快照</strong>，使得状态存储的操作过程是十分轻量的分布式过程。</p>
<h2 id="支持多种一致性语义"><a href="#支持多种一致性语义" class="headerlink" title="支持多种一致性语义"></a>支持多种一致性语义</h2><p>Flink 提供了“至少一次”（at least once）语义和“恰好一次”（exactly once）语义的状态一致性保证。它能够确保在发生故障或重新启动时，数据流的一致性得到保障。这样，用户可以放心地进行精确计算和数据操作，而不必担心出现数据不一致的情况。</p>
<p>在外部系统的配合下，Flink 也可以实现端到端的“恰好一次”语义。这意味着在处理数据时，Flink 可以确保每个事件被处理一次且仅一次，这对于避免数据重复或丢失非常重要。</p>
<h2 id="丰富的API和库"><a href="#丰富的API和库" class="headerlink" title="丰富的API和库"></a>丰富的API和库</h2><p>Apache Flink 提供了丰富的 API 和库，以支持各种数据处理需求。它支持流处理和批处理，并提供了多个层级的 API 以及易于使用的操作符和函数。用户可以根据实际情况，在追求表达力和追求易用性之间做出权衡，而且不同层级的 API 可以混用，这使得开发人员能够快速开发和调试数据处理逻辑。</p>
<p>此外，Flink 还提供与其他开源生态系统（如Hadoop、Kafka 等）的无缝集成，进一步方便了数据采集、存储和处理的过程。</p>
<h2 id="低延迟、高吞吐量和高可用性"><a href="#低延迟、高吞吐量和高可用性" class="headerlink" title="低延迟、高吞吐量和高可用性"></a>低延迟、高吞吐量和高可用性</h2><p>Apache Flink 在处理实时数据时表现出色，具有低延迟和高吞吐量的特性。通过将计算任务分解为多个并行的子任务并进行优化，Flink 实现了快速处理和高效利用资源。这意味着 Flink 可以每秒处理数百万个事件，并且延迟时间仅在毫秒级别。这对于需要在实时数据流中快速做出决策的应用场景非常有用，比如金融市场的交易、物流运输的实时跟踪、实时推荐系统、欺诈检测等。Apache Flink 的高性能保证了实时数据能够在最短的时间内被准确处理。</p>
<p>此外，Flink 也具有高可用性，其本身是高可用的设置，并与Kubernetes、YARN 紧密集成，这使得 Flink 能够以极少的停机时间全天候运行。这种高可用性对于需要不间断运行的应用场景来说至关重要。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>Apache Flink 作为一款功能强大、灵活可扩展的流式处理框架，具备多个核心特性，包括流批一体、复杂的状态管理、多种时间语义、良好的容错性和故障恢复能力、支持多种一致性语义、丰富的 API 和库，以及低延迟、高吞吐量和高可用性。</p>
<p>实际上，Flink 的特性远不止这些，还包括丰富的连接器、多平台部署等。这些特性使得 Apache Flink 成为处理实时数据的首选框架，并在各个行业的数据处理需求中广泛应用。使用 Apache Flink，企业可以轻松应对海量数据处理的挑战，实现更高效、更精确的数据计算和操作。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>用户画像：从数据到人群特征</title>
    <url>/2023/10/16/user-profile-intro/</url>
    <content><![CDATA[<p>当下，随着互联网技术的发展和普及，用户数据逐渐成为重要的商业资源，企业和组织越来越重视对用户的了解和分析。用户画像作为一种有效的工具，可以帮助企业更好地了解目标用户的特点和需求，进而进行精准的市场定位、产品设计和营销推广等活动。</p>
<h2 id="一、什么是用户画像"><a href="#一、什么是用户画像" class="headerlink" title="一、什么是用户画像"></a>一、什么是用户画像</h2><p>用户画像（User Profile），指通过数据分析、挖掘和整合，对特定用户群体进行描述和分类的过程。它包括用户的个人信息、兴趣爱好、使用行为、社交网络等多个方面的数据，可以帮助企业或组织更好地了解用户需求和习惯，提供个性化的产品和服务。</p>
<h2 id="二、用户画像的应用场景"><a href="#二、用户画像的应用场景" class="headerlink" title="二、用户画像的应用场景"></a>二、用户画像的应用场景</h2><ol>
<li>市场定位：通过用户画像，企业可以了解目标用户的年龄、性别、地域、收入等基本信息，从而确定产品的定位和目标市场。 </li>
<li>产品设计：用户画像可以帮助企业了解用户的需求和使用习惯，提供更符合用户需求的产品和服务。 </li>
<li>营销推广：通过用户画像，企业可以根据用户的兴趣爱好、购买行为、社交网络等信息，进行精准的广告投放和营销推广，提高广告的点击率和转化率。 </li>
<li>客户服务：用户画像可以帮助企业了解用户的消费习惯和偏好，提供更优质的客户服务和售后支持。 </li>
</ol>
<h2 id="三、用户画像的数据来源"><a href="#三、用户画像的数据来源" class="headerlink" title="三、用户画像的数据来源"></a>三、用户画像的数据来源</h2><ol>
<li>用户行为数据：通过用户在互联网上的行为（浏览记录、搜索记录等）和使用行为（购买记录、评论、评分等）收集，了解用户的兴趣爱好和需求。 </li>
<li>社交网络数据：通过社交平台获取用户的关注和粉丝列表、社交互动行为等信息，了解用户的社交特点和影响力。 </li>
<li>第三方数据：通过购买第三方数据或与第三方合作收集用户数据，了解用户的人口学特征、消费习惯等信息。 </li>
</ol>
<h2 id="四、用户画像的构建流程"><a href="#四、用户画像的构建流程" class="headerlink" title="四、用户画像的构建流程"></a>四、用户画像的构建流程</h2><ol>
<li>数据收集：采集各个渠道和来源的用户数据，存储在数据仓库中。 </li>
<li>数据清洗：对数据进行清洗和去重，排除异常和无用数据，确保数据的可靠性和一致性。 </li>
<li>数据分析：通过数据分析和挖掘工具，对用户数据进行分析和建模，提取有价值的用户特征和属性。 </li>
<li>用户分类：根据用户特征和属性，将用户划分为不同的群体和类型。 </li>
<li>用户画像展示：将用户分类结果呈现在可视化的图表和报告中，帮助企业更好地了解用户特点和需求。 </li>
</ol>
<h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>用户画像作为一种有效的用户分析工具，可以帮助企业更好地了解目标用户的特点和需求，提供个性化的产品和服务，优化营销策略和客户关系管理。但用户画像的构建需要大量的数据收集和分析工作，并且要保证数据的可靠性和合法性。因此，企业需要精细化管理用户数据，确保用户数据的隐私和安全。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>用户画像</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon 0.5正式发布</title>
    <url>/2023/09/06/apache-paimon-release-0_5/</url>
    <content><![CDATA[<p>Apache Paimon 0.5.0-incubating 版本终于在今天正式发布了。有近 100 位贡献者参与了此版本的开发，共完成了 500 多次代码提交，为社区带来了许多令人兴奋的新功能和改进。</p>
<p>该版本的主要亮点功能如下：</p>
<ul>
<li>CDC 数据入湖的功能已经成熟。</li>
<li>引入了标签的概念，为离线数据仓库提供不可变视图。</li>
<li>主键表的动态桶模式已投入生产。</li>
<li>引入仅追加模式可扩展表，以取代 Hive 表。</li>
</ul>
<h2 id="CDC摄入"><a href="#CDC摄入" class="headerlink" title="CDC摄入"></a>CDC摄入</h2><p>Paimon 支持多种方式将数据导入 Paimon 表，并支持模式演化。在 0.5 版本中，新增了许多新功能，包括：</p>
<ul>
<li><p>MySQL 数据表同步</p>
<ul>
<li>支持将分片数据同步到一个 Paimon 表中。</li>
<li>支持将所有字段类型映射为字符串。</li>
</ul>
</li>
<li><p>MySQL 数据库同步</p>
<ul>
<li>支持合并多个数据库中的多个分片数据。</li>
<li>支持 <code>--mode combined</code> 模式，将所有表整合到一个统一的数据汇中进行同步，并支持在不重启作业的情况下同步新增的表。</li>
</ul>
</li>
<li><p>从 Kafka 同步数据表</p>
<ul>
<li>将 Kafka 主题里的数据表同步到 Paimon 表中。</li>
<li>支持 Canal 和 OGG 格式。</li>
</ul>
</li>
<li><p>从 Kafka 同步数据库</p>
<ul>
<li>将包含多张数据表的一个 Kafka 主题或各包含一张表的多个主题同步到一个 Paimon 数据库中。</li>
<li>支持 Canal 和 OGG 格式。</li>
</ul>
</li>
<li><p>MongoDB 集合同步</p>
<ul>
<li>将 MongoDB 中的一个集合同步到一个 Paimon 表中。</li>
</ul>
</li>
<li><p>MongoDB 数据库同步</p>
<ul>
<li>将整个 MongoDB 数据库同步到一个 Paimon 数据库中。</li>
</ul>
</li>
</ul>
<h2 id="主键表"><a href="#主键表" class="headerlink" title="主键表"></a><strong>主键表</strong></h2><p>通过在创建表时的 DDL 中指定主键，就可以得到一张主键表（Primary Key Table），它可以接受插入、更新或删除记录操作。</p>
<h3 id="动态分桶（Dynamic-Bucket）"><a href="#动态分桶（Dynamic-Bucket）" class="headerlink" title="动态分桶（Dynamic Bucket）"></a>动态分桶（Dynamic Bucket）</h3><p>通过配置 <code>&#39;bucket&#39; = &#39;-1&#39;</code>，Paimon 可以动态维护索引，自动扩展桶的数量。</p>
<ul>
<li>选项 1：<code>&#39;dynamic-bucket.target-row-num&#39;</code>：控制一个桶的目标行数。</li>
<li>选项 2：<code>&#39;dynamic-bucket.assigner-parallelism&#39;</code>：分配器操作符的并行度，控制初始化桶的数量。</li>
</ul>
<p>动态分桶模式使用哈希索引来维护从键到桶的映射关系，相比固定桶模式，它需要更多的内存。为了提高性能：</p>
<ol>
<li>一般来说，不会有性能损失，但会额外消耗一些内存。例如，对于一个包含 1 亿个条目的分区，会额外占用 1 GB 的内存。不活跃的分区不会占用内存空间。</li>
<li>对于更新频率较低的表，推荐使用动态分桶模式，以显著提高性能。</li>
</ol>
<h3 id="部分更新（Partial-Update）：序列组（Sequence-Group）"><a href="#部分更新（Partial-Update）：序列组（Sequence-Group）" class="headerlink" title="部分更新（Partial-Update）：序列组（Sequence Group）"></a>部分更新（Partial-Update）：序列组（Sequence Group）</h3><p>序列字段可能无法解决部分更新表在多流更新时的无序问题，因为在多流更新时，序列字段可能会被另一个数据流的最新数据覆盖。因此，我们为部分更新表引入了序列组机制。它可以解决以下问题：</p>
<ol>
<li>在多个数据流更新期间的无序问题。每个数据流都定义自己的序列组。</li>
<li>真正的部分更新，而不仅仅是非空值的更新。</li>
<li>接受删除记录来撤销部分列。</li>
</ol>
<h3 id="首行合并引擎"><a href="#首行合并引擎" class="headerlink" title="首行合并引擎"></a>首行合并引擎</h3><p>通过指定 <code>&#39;merge-engine&#39; = &#39;first-row&#39;</code>，用户可以保留相同主键的第一行数据。与 <code>deduplicate</code> 合并引擎不同，在 <code>first-row</code> 合并引擎中，只会生成插入类型的更改日志。</p>
<p>这对于在流计算中替换日志去重非常有帮助。</p>
<h3 id="Lookup-Changelog-Producer"><a href="#Lookup-Changelog-Producer" class="headerlink" title="Lookup Changelog-Producer"></a>Lookup Changelog-Producer</h3><p>Lookup Changelog-Producer 在生产环境中可用，这可以大大减少需要生成更改日志的表的延迟。</p>
<p>（注意：请增加 <code>&#39;execution.checkpointing.max-concurrent-checkpoints&#39;</code> 的 Flink 配置，这对性能非常重要）。</p>
<h3 id="序列自动填充"><a href="#序列自动填充" class="headerlink" title="序列自动填充"></a>序列自动填充</h3><p>当记录被更新或删除时，<code>sequence.field</code> 必须变大，不能保持不变。对于 <code>-U</code> 和 <code>+U</code> 操作，它们的序列字段必须不同。如果无法满足此要求，Paimon 可以提供自动填充序列字段的选项。</p>
<p>配置 <code>&#39;sequence.auto-padding&#39; = &#39;row-kind-flag&#39;</code>：如果对 -U 和 +U 使用相同的值，就像 Mysql Binlog 中的 “op_ts”（在数据库中进行更改的时间）一样，建议使用自动填充行类型标志，它会自动区分 -U (-D) 和 +U (+I)。</p>
<h3 id="异步压缩"><a href="#异步压缩" class="headerlink" title="异步压缩"></a>异步压缩</h3><p>压缩本质上是异步进行的，但如果你希望它完全异步且不阻塞写入操作，并期望以最大写入吞吐量模式运行，可以慢慢地进行压缩而不急于处理。你可以为表使用以下策略：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">num-sorted-run.stop-trigger = 2147483647</span><br><span class="line">sort-spill-threshold = 10</span><br></pre></td></tr></table></figure>
<p>这个配置在高峰写入期间会生成更多的文件，并在写入低峰期逐渐合并为最佳读取性能。</p>
<h3 id="Avro文件格式"><a href="#Avro文件格式" class="headerlink" title="Avro文件格式"></a>Avro文件格式</h3><p>如果希望实现最佳压缩性能，可以考虑使用行存储文件格式 AVRO。</p>
<ul>
<li>这样做的好处是可以实现较高的写入吞吐量和压缩性能。</li>
<li>其缺点是分析查询速度会变慢，行存储的最大问题在于它没有查询投影功能。例如，如果表有 100 列，但只查询了几列，那么行存储的 IO 就不容忽视。此外，压缩效率会降低，存储成本会增加。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file.format = avro</span><br><span class="line">metadata.stats-mode = none</span><br></pre></td></tr></table></figure>
<p>如果不想将所有文件修改为 Avro 格式，至少可以考虑将前几层的文件修改为 Avro 格式。可以使用 <code>&#39;file.format.per.level&#39; = &#39;0:avro,1:avro&#39;</code> 来指定前两层的文件使用 Avro 格式。</p>
<h2 id="仅追加表"><a href="#仅追加表" class="headerlink" title="仅追加表"></a>仅追加表</h2><h3 id="仅追加可扩展表"><a href="#仅追加可扩展表" class="headerlink" title="仅追加可扩展表"></a>仅追加可扩展表</h3><p>通过对非主键表定义 <code>&#39;bucket&#39;=&#39;-1&#39;</code>，可以将其指定为“仅追加可扩展表”。在这种模式下，表不再有 bucket 的概念，读写是并发的。我们将此表视为批量离线表（尽管我们仍然可以流式读写）。</p>
<p>使用这种模式，你可以将 Hive 表替换为湖表。</p>
<p>默认情况下，该模式开启了小文件自动合并功能。也可以使用 <code>Sort Compact</code> 操作对整个分区进行排序，使用 zorder 排序器，这可以大大加快查询时跳过数据的速度。</p>
<h2 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h2><p>Paimon 的快照为查询历史数据提供了一种简便的方法。但在大多数情况下，作业会产生过多的快照，表会根据表的配置使旧快照过期。快照过期也会删除旧的数据文件，过期快照中的历史数据将无法再查询。</p>
<p>要解决这个问题，可以根据快照创建一个标签。标签会维护快照的清单和数据文件。典型的用法是每天创建一个标签，然后就可以维护每天的历史数据，以便批量读取。</p>
<p>Paimon 支持在写作业中自动创建标签。可以使用 <code>&#39;tag.automatic-creation&#39;</code> 来自动创建标签。</p>
<p>而且还可以查询标签（或快照）的增量数据，Flink 和 Spark 都支持增量查询。</p>
<h2 id="引擎"><a href="#引擎" class="headerlink" title="引擎"></a>引擎</h2><h3 id="Flink"><a href="#Flink" class="headerlink" title="Flink"></a>Flink</h3><p>Flink 发布 1.17 版后，Paimon 进行了非常深入的集成。</p>
<ul>
<li>ALTER TABLE 语法通过增加 ADD/MODIFY/DROP 列的功能得到了增强，使用户更容易维护其表模式。</li>
<li>您需要使用 Hive 元存储。然后，您就可以使用 Paimon、Hive 和 Flink 通用表（Kafka 和其他表）中的所有表！</li>
<li>在使用 FlinkGenericCatalog 时，需要使用 Hive 元存储（metastore）。这样就可以使用 Paimon、Hive 和 Flink Generic Table（Kafka 和其他表）中的所有表！</li>
<li>动态分区覆盖，Flink 的默认覆盖模式是动态分区覆盖（这意味着 Paimon 只删除覆盖数据中出现的分区）。可以通过配置 dynamic-partition-overwrite 将其改为静态覆盖。</li>
<li>将分区同步到 Hive 元存储，在默认情况下，Paimon 不会将新创建的分区同步到 Hive 元存储中。如果想在 Hive 中看到分区表，并将新创建的分区同步到 Hive 元存储中，请将表属性 metastore.partitioned-table 设置为 true。</li>
<li>重试 Lookup Join，支持重试 Lookup Join 和异步  Lookup Join。</li>
</ul>
<h3 id="Spark"><a href="#Spark" class="headerlink" title="Spark"></a>Spark</h3><p>Spark 是 Paimon 第二大深度集成的计算引擎，在 Paimon 0.5 版本中引入了多种写特性。</p>
<ul>
<li>支持 INSERT OVERWRITE 分区覆盖，Spark 的默认覆盖模式是静态分区覆盖，也可以启用动态覆盖。</li>
<li>支持分区管理：支持 DROP PARTITION、SHOW PARTITIONS。</li>
<li>支持将 DataFrame 保存到 Paimon 位置。</li>
<li>模式合并写入：可以将 write.merge-schema 设置为 true，以便使用模式合并功能进行写入。</li>
<li>流式 sink：可以使用 Spark streaming 的 foreachBatch API 将数据流式写入 Paimon。</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://paimon.apache.org/docs/0.5/project/download/">点击此处下载。</a></p>
<h2 id="接下来"><a href="#接下来" class="headerlink" title="接下来"></a>接下来</h2><p>Paimon 将长期致力于解决以下问题：</p>
<ol>
<li>CDC 数据湖化加速：实时写入、实时查询，并通过使用标签实现离线不可变分区视图。</li>
<li>丰富合并引擎，改进流式计算：Partial-Update 表、Aggregation 表、First Row 表。</li>
<li>Changelog 流式读取，基于湖仓存储构建增量流处理。</li>
<li>Append 模式加速 Hive 离线表，实时写入并在排序后带来查询加速。</li>
<li>Append 模式替代部分消息队列场景，按输入顺序流式读取，无数据 TTL。</li>
</ol>
<p>原文链接：<br><a href="https://paimon.apache.org/release-0.5/">https://paimon.apache.org/release-0.5/</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Kafka 如何通过全局和针对特定 Topic 设置消息的保留时长</title>
    <url>/2023/03/30/configuring-message-retention-period-in-apache-kafka/</url>
    <content><![CDATA[<p>在使用 Kafka 作为消息队列缓冲数据时，在某些业务使用场景中，我们可能需要根据实际情况调整消息在 Kafka 的保留时长。例如，对于用户行为埋点日志的数据，因为数据量较大，而且也没有必要保留 7 天（Kafka 默认消息保留时长），为减少 Kafka 集群的压力，此时就可以通过针对保存该类消息的 Topic 设置消息保留时长为 3 天。本文介绍如何通过全局和针对特定 Topic 设置 Kafka 的消息保留时长。</p>
<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>本文的演示示例基于 CentOS 7 操作系统，使用的是 Apache Kafka，版本为 2.2.1，Scala 版本为 2.11，安装目录位于 <em>/opt/kafka</em>。</p>
<h2 id="Kafka-全局消息保留时长设置"><a href="#Kafka-全局消息保留时长设置" class="headerlink" title="Kafka 全局消息保留时长设置"></a>Kafka 全局消息保留时长设置</h2><p>首先，进入 Kafka 的配置文件目录，通常位于 Kafka 安装目录下的 <em>config</em> 目录下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/kafka/config</span><br></pre></td></tr></table></figure>
<p>打开 Kafka 服务端的配置文件 <em>server.properties</em>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim server.properties</span><br></pre></td></tr></table></figure>
<p>找到配置项 <code>log.retention.hours</code>，可以看到该配置项默认为 168 小时，即 7 天，将其修改为 72 小时，保存并退出，接着重启 Kafka 以使刚刚的修改生效。</p>
<p>修改如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">log.retention.hours=72</span><br></pre></td></tr></table></figure>
<p>需要注意的是，通过该方式设置消息保留时长是对所有的 Topic 都生效。</p>
<blockquote>
<p>说明：设置 Kafka 消息保留时长除了 <code>log.retention.hours</code> 这一配置项外，还有 <code>log.retention.minutes</code> 和 <code>log.retention.ms</code> 这两个配置项。这三个配置项都是控制一条消息的保留时长，只是它们的控制粒度不同，分别为小时级别、分钟级别和毫秒级别。<strong>从优先级上来说 ms 设置最高、minutes 次之、hours 最低。</strong></p>
</blockquote>
<h2 id="针对特定-Topic-消息保留时长设置"><a href="#针对特定-Topic-消息保留时长设置" class="headerlink" title="针对特定 Topic 消息保留时长设置"></a>针对特定 Topic 消息保留时长设置</h2><p>实际上，我们可以在不重启 Kafka 实例的情况下，针对 Kafka 中数据量大的 Topic 进行单独设置消息保留时长。</p>
<p>下面以名称是 test_a 的 Topic 为例，全局默认消息保留时长为 7 天，现在将其调整为 3 天。</p>
<p>首先，进入 Kafka 安装目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/kafka</span><br></pre></td></tr></table></figure>
<p>执行以下命令，查看 Topic test_a 的动态配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/kafka-configs.sh --zookeeper zk1:2181/kafka --entity-type topics --entity-name test_a --describe</span><br></pre></td></tr></table></figure>
<p>结果输出如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Configs for topic &#x27;test_a&#x27; are cleanup.policy=compact</span><br></pre></td></tr></table></figure>
<p>设置 Topic 的消息保留时长为 3 天，即 259200000 毫秒：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/kafka-configs.sh --zookeeper zk1:2181/kafka --entity-type topics --entity-name test_a --alter --add-config retention.ms=259200000</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Completed Updating config for entity: topic &#x27;test_a&#x27;.</span><br></pre></td></tr></table></figure>
<p>再次查看该 Topic 的动态配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/kafka-configs.sh --zookeeper zk1:2181/kafka --entity-type topics --entity-name test_a --describe</span><br></pre></td></tr></table></figure>
<p>输出结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Configs for topic &#x27;test_a&#x27; are cleanup.policy=compact,retention.ms=259200000</span><br></pre></td></tr></table></figure>
<p>可以看到，该 Topic 的消息保留时长已成功设置为 259200000 毫秒。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文介绍了通过全局和针对特定 Topic 两种方法设置 Kafka 的消息保留时长。并具体示例演示了具体的操作方法。需要注意的是，不同的 Kafka 版本命令可能会有所不同。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Endpoint 是什么？</title>
    <url>/2023/04/19/what-is-an-endpoint/</url>
    <content><![CDATA[<p>Endpoint 翻译成中文是端点、终点或终结点的意思。在通信领域，Endpoint 是指连接到网络系统的物理设备，例如移动设备、台式计算机、虚拟机、嵌入式设备和服务器。</p>
<h2 id="Endpoint-定义"><a href="#Endpoint-定义" class="headerlink" title="Endpoint 定义"></a>Endpoint 定义</h2><p>广义上，Endpoint 一般是指连接到计算机网络并与之交换信息的物理设备。Endpoint 的一些例子是手机移动设备、台式计算机、虚拟机、嵌入式设备和服务器。物联网设备——如摄像头、照明、冰箱、安全系统、智能扬声器和恒温器——也是 Endpoint。</p>
<p>但在计算机网络应用领域上，Endpoint 是指网络上的一个接口或地址，通过它可以访问网络服务或应用程序。它通常向客户端提供一组可调用的接口或API。</p>
<p>举些例子：</p>
<ul>
<li>REST API 的 URL 就是 Endpoint，客户端可以通过这个 Endpoint 访问 API 提供的服务。</li>
<li>WebSocket 的 URL 就是 Endpoint，客户端可以通过这个 Endpoint 与服务器建立双向通信。</li>
<li>SMTP 邮件服务器的域名就是 email 发送的 Endpoint。</li>
<li>数据库服务器监听的 IP 和端口就是数据库的 Endpoint。</li>
</ul>
<p>总结来说，Endpoint 有以下特征：</p>
<ol>
<li><p>它是一个网络上的接口或地址；</p>
</li>
<li><p>它提供一组客户端可以调用的接口或 API；</p>
</li>
<li><p>它允许客户端与网络服务或应用程序交互；</p>
</li>
<li><p>它可以是 URL、域名、IP 地址加端口等。</p>
</li>
</ol>
<h2 id="HTTP-Endpoint-API-Endpoint"><a href="#HTTP-Endpoint-API-Endpoint" class="headerlink" title="HTTP Endpoint / API Endpoint"></a>HTTP Endpoint / API Endpoint</h2><p>HTTP Endpoint 是一种网络 API 的访问点。它包含以下信息:</p>
<ul>
<li>协议：HTTP 或 HTTPS</li>
<li>主机名(Hostname)：服务器的域名或 IP 地址</li>
<li>端口(Port)：服务器监听的端口号，默认为 80(HTTP)或 443(HTTPS)</li>
<li>路径(Path)：API 的访问路径，比如 /users 或 /posts/1</li>
</ul>
<p>所以一个典型的 HTTP Endpoint 的写法是:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.example.com/users</span><br></pre></td></tr></table></figure>
<p>这个端点表示:</p>
<ul>
<li>使用 HTTPS 协议</li>
<li>服务器域名是 <a href="http://api.example.com/">api.example.com</a></li>
<li>端口默认为 443</li>
<li>路径是 /users，表示访问 users API</li>
</ul>
<p>访问这个 HTTP Endpoint，我们可以使用各种 HTTP 请求方法：</p>
<ul>
<li>GET /users - 获取用户列表</li>
<li>POST /users - 新建用户</li>
<li>GET /users/1 - 获取 ID 为 1 的用户</li>
<li>PUT /users/1 - 更新 ID 为 1 的用户</li>
<li>DELETE /users/1 - 删除 ID 为 1 的用户</li>
</ul>
<p>实际上，HTTP Endpoint 就是一个 Web API 能够接受的访问点和路径，可以通过不同的 HTTP 请求在这个端点进行资源的 CRUD 操作。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
  </entry>
  <entry>
    <title>Filebeat 配置 Http Endpoint</title>
    <url>/2023/04/18/filebeat-http-endpoint/</url>
    <content><![CDATA[<p>Filebeat 可以通过 HTTP 终点来暴露内部的指标。这些指标对于监控 Beat 的内部状态很有用。但出于安全原因，该功能默认是禁用的。要开启该功能，需要在 filebeat.yml 文件中添加以下配置项：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">http:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>开启了该功能后，在浏览器访问地址 <a href="http://localhost:5066/stats">http://localhost:5066/stats</a> 即可查看各项统计指标。要美化 JSON 输出数据格式，可以在该地址后面加上 <em>?pretty</em> ，即：<a href="http://localhost:5066/stats?pretty">http://localhost:5066/stats?pretty</a></p>
<blockquote>
<p>需要注意的是，这个功能目前还是实验性的。</p>
</blockquote>
<h2 id="HTTP-终点配置说明"><a href="#HTTP-终点配置说明" class="headerlink" title="HTTP 终点配置说明"></a>HTTP 终点配置说明</h2><div class="table-container">
<table>
<thead>
<tr>
<th>配置</th>
<th>可选/必填</th>
<th>默认</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>http.enabled</td>
<td>(可选）</td>
<td>false</td>
<td>启用 HTTP 终点。</td>
</tr>
<tr>
<td>http.host</td>
<td>(可选）</td>
<td>localhost</td>
<td>绑定到这个主机名、IP 地址、unix 套接字（unix:///var/run/filebeat.sock）或 Windows 命名的管道（npipe:///filebeat）。建议只使用 localhost。默认为 localhost。</td>
</tr>
<tr>
<td>http.port</td>
<td>(可选）</td>
<td>5066</td>
<td>HTTP 终点将绑定的端口。默认为 5066。</td>
</tr>
<tr>
<td>http.named_pipe.user</td>
<td>(可选）</td>
<td>当前用户</td>
<td>用于创建命名管道的用户，只在 Windows 下工作，默认为当前用户。</td>
</tr>
<tr>
<td>http.named_pipe.security_descriptor</td>
<td>(可选）</td>
<td>当前用户的读和写权限</td>
<td>以 SDDL 格式定义的 Windows 安全描述符字符串。默认为当前用户的读和写权限。</td>
</tr>
<tr>
<td>http.pprof.enabled</td>
<td>(可选）</td>
<td>false</td>
<td>在提供 HTTP 服务时启用 /debug/pprof/ 终点。建议只在 localhost 上启用，因为这些终点可能会泄露数据。默认为 false。</td>
</tr>
<tr>
<td></td>
</tr>
<tr>
<td>http.pprof.block_profile_rate</td>
<td>(可选）</td>
<td>0</td>
<td>block_profile_rate 控制在 /debug/pprof/block 提供的阻塞配置文件中报告的 goroutine 阻塞事件的比例。剖析器的目标是对每一个阻塞率纳秒的阻塞事件进行平均采样。要在剖析中包括每个阻塞事件，通过率 = 1。要完全关闭剖析，pass rate ⇐ 0。 默认为 0。</td>
</tr>
<tr>
<td>http.pprof.mem_profile_rate</td>
<td>(可选）</td>
<td>524288</td>
<td>mem_profile_rate 控制在 /debug/pprof/heap 提供的内存配置文件中记录和报告的内存分配比例。剖析器的目标是平均每分配一个 mem_profile_rate 字节就采样一次分配。要在剖析中包括每个分配的块，请将 mem_profile_rate 设置为 1。要完全关闭剖析，请将 mem_profile_rate 设置为 0。 默认值为 524288。</td>
</tr>
<tr>
<td>http.pprof.mutex_profile_rate</td>
<td>(可选）</td>
<td>0</td>
<td>mutex_profile_rate 控制在 /debug/pprof/mutex 提供的 mutex profile 中报告的 mutex 争夺事件的比例。平均有 1/rate 的事件被报告。要完全关闭剖析，请将速率设为 0。默认值是 0。</td>
</tr>
</tbody>
</table>
</div>
<h2 id="返回示例"><a href="#返回示例" class="headerlink" title="返回示例"></a>返回示例</h2><p><em><a href="http://localhost:5066">http://localhost:5066</a> 返回内容如下：</em></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;beat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filebeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;binary_arch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;amd64&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_commit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9b77c2c135c228c2eedc310f6e975bb1a76169b1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-02-12T04:37:19.000Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;elastic_licensed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ephemeral_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9e04d8fb-b69b-4549-9b8e-d24628b74b9c&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;gid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hostname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fb-01&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fb-01&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;root&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uuid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;25b97e60-5065-43d5-bf28-75fc0a59083c&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8.6.2&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>以上 JSON 字符串各字段的含义如下：</p>
<p>beat：beat 类型，这里是 filebeat；</p>
<p>binary_arch：处理器架构，这里是 amd64；</p>
<p>build_commit：Filebeat 的构建提交编号 9b77c2c135c228c2eedc310f6e975bb1a76169b1；</p>
<p>build_time：Filebeat 的构建时间 2023-02-12T04:37:19.000Z；</p>
<p>elastic_licensed：是否已购买 Elastic 许可证，此处为 true；</p>
<p>ephemeral_id：临时ID 1af792df-38b1-4799-be0c-f1c3f7182afa；</p>
<p>gid：groupid，这里是 0，即 root；</p>
<p>hostname：主机名；</p>
<p>name：计算机名称；</p>
<p>uid：userid，这里是 0，即 root；</p>
<p>username：用户名，这里是 root；</p>
<p>uuid：唯一标识符 cafeb55a-b083-476d-aae1-58ff02b54cda；</p>
<p>version：filebeat 的版本，这里是 8.6.2</p>
<p><em><a href="http://localhost:5066/stats?pretty">http://localhost:5066/stats?pretty</a> 返回内容如下：</em></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;beat&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;cpu&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;system&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;ticks&quot;</span><span class="punctuation">:</span> <span class="number">30670</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;ms&quot;</span><span class="punctuation">:</span> <span class="number">30670</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;ticks&quot;</span><span class="punctuation">:</span> <span class="number">39480</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;ms&quot;</span><span class="punctuation">:</span> <span class="number">39480</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">39480</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;ticks&quot;</span><span class="punctuation">:</span> <span class="number">8810</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;ms&quot;</span><span class="punctuation">:</span> <span class="number">8810</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;handles&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;limit&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;hard&quot;</span><span class="punctuation">:</span> <span class="number">4096</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;soft&quot;</span><span class="punctuation">:</span> <span class="number">1024</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;open&quot;</span><span class="punctuation">:</span> <span class="number">13</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;info&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;ephemeral_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9e04d8fb-b69b-4549-9b8e-d24628b74b9c&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filebeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uptime&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;ms&quot;</span><span class="punctuation">:</span> <span class="number">435000666</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8.6.2&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;memstats&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gc_next&quot;</span><span class="punctuation">:</span> <span class="number">19509800</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;memory_alloc&quot;</span><span class="punctuation">:</span> <span class="number">9710592</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;memory_sys&quot;</span><span class="punctuation">:</span> <span class="number">30229512</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;memory_total&quot;</span><span class="punctuation">:</span> <span class="number">771926000</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;rss&quot;</span><span class="punctuation">:</span> <span class="number">16318464</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;runtime&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;goroutines&quot;</span><span class="punctuation">:</span> <span class="number">60</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;filebeat&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;events&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;active&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;added&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;done&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;harvester&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;closed&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;open_files&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;running&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;skipped&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;started&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;input&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;log&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;files&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;renamed&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;truncated&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;netflow&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;flows&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;packets&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;dropped&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;received&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;libbeat&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;config&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;running&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;starts&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;stops&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;reloads&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scans&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;events&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;acked&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;active&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;batches&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dropped&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;duplicates&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;toomany&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;read&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;errors&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;console&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;write&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;bytes&quot;</span><span class="punctuation">:</span> <span class="number">9557</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;errors&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pipeline&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;clients&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;events&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;active&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dropped&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;published&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;retry&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;queue&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;acked&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;max_events&quot;</span><span class="punctuation">:</span> <span class="number">4096</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;registrar&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;states&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;cleanup&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;update&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;writes&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;fail&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;success&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;system&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;cpu&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;cores&quot;</span><span class="punctuation">:</span> <span class="number">8</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;load&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;1&quot;</span><span class="punctuation">:</span> <span class="number">0.52</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;5&quot;</span><span class="punctuation">:</span> <span class="number">0.58</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;15&quot;</span><span class="punctuation">:</span> <span class="number">0.59</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;norm&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;1&quot;</span><span class="punctuation">:</span> <span class="number">0.065</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;5&quot;</span><span class="punctuation">:</span> <span class="number">0.0725</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;15&quot;</span><span class="punctuation">:</span> <span class="number">0.0738</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>返回的 JSON 字符串包含了 filebeat 进程的详细运行信息，主要包含以下几个部分:</p>
<ul>
<li>beat 部分：包含 filebeat 进程基本信息，如版本、启动时间、CPU、内存使用情况等。</li>
<li>filebeat 部分：包含 filebeat 本身的运行数据，如已读取和处理的事件数、Harvester 情况、输入通道(如文件、Netflow)情况等。</li>
<li>libbeat 部分：包含 filebeat 作为 beats 的一员所共有的运行数据，如模块加载情况、输出通道情况、pipeline 情况等。</li>
<li>registrar 部分：包含 filebeat 运行期间数据发送至 registrar 的情况，如失败、成功、更新事件数等。</li>
<li>system 部分：包含宿主服务器的一些基本信息，如 CPU 核心数、负载情况等。</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Filebeat</tag>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>Flink Table Store文件存储结构——LSM树</title>
    <url>/2023/03/10/lsm-tree-intro/</url>
    <content><![CDATA[<p>本文简要介绍了 Flink Table Store 底层文件存储的数据结构——LSM 树的相关概念。</p>
<blockquote>
<p>LSM 树，亦称日志结构合并树，英文为 log-structured merge-tree。</p>
</blockquote>
<h2 id="Sorted-Runs"><a href="#Sorted-Runs" class="headerlink" title="Sorted Runs"></a><strong>Sorted Runs</strong></h2><p>如下图所示，LSM 树将文件组织成若干个 Sorted Run，一个 Sorted Run 由一个或多个数据文件组成，每个数据文件只会隶属一个 Sorted Run。数据文件中的记录按主键排序，在一个 Sorted Run 中，数据文件的主键范围不会有重叠的情况。但在不同的 Sorted Run 中主键范围有可能会重叠，甚至是包含相同的主键。</p>
<p><img src="/image/2023/20230310.png" alt="LSM 树"></p>
<p>当查询 LSM 树时，必须先合并所有的 Sorted Run，根据用户指定的合并引擎和每条记录的时间戳合并具有相同主键的所有记录。而新的记录在写到 LSM 树之前会先缓存在内存中，当内存缓冲区满时，内存中的所有记录会先进行排序，然后再刷到磁盘上，此时就创建了一个新的 Sorted Run。</p>
<h2 id="Compaction"><a href="#Compaction" class="headerlink" title="Compaction"></a><strong>Compaction</strong></h2><p>随着越来越多的记录写入 LSM 树，Sorted Run 的数量也会越来越多。因为查询 LSM 树需要先合并所有的 Sorted Run，而过多的 Sorted Run 会导致查询性能不佳，甚至是内存不足。为了限制 Sorted Run 的数量，必须时不时地将几个 Sorted Run 合并成一个大的 Sorted Run，我们称这个过程为文件合并（Compation）。</p>
<p>文件合并是一个资源密集型的过程，会消耗一定的 CPU 时间和磁盘 IO，过于频繁的合并操作可能会导致写入速度变慢。这是查询和写入性能之间的权衡。Flink Table Store 目前采用了类似于 Rocksdb 的通用合并策略。</p>
<p>默认情况下，Flink Table Store 写入器追加记录到 LSM 树时，也会根据需要进行文件合并操作。用户也可以选择在一个专门的文件合并作业中执行文件合并操作。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
        <tag>Flink Table Store</tag>
      </tags>
  </entry>
  <entry>
    <title>Filebeat工作原理</title>
    <url>/2023/03/01/how-filebeat-works/</url>
    <content><![CDATA[<p>本文主要介绍 Filebeat 的两个关键组件以及它们如何共同协作完成数据采集和转发工作。理解并熟练掌握这些组件的工作原理将对后面深入学习 Filebeat 的各种功能和特性，尤其是为特定使用场景配置 Filebeat 时大有裨益。</p>
<hr>
<p>Filebeat 由两个关键组件构成：输入（Input）和采集器（Harvester，[ˈhɑːrvɪstər]）。这些组件共同协作，跟踪日志文件，并将事件数据发送到指定的输出上。</p>
<h2 id="采集器"><a href="#采集器" class="headerlink" title="采集器"></a>采集器</h2><p>采集器逐行读取文件内容并将其转换为事件，然后发送到指定的输出上。一个采集器只会跟踪一个日志文件。需要注意的是，采集器还负责文件的打开与关闭——采集文件之前需要先打开文件，采集结束之后需要关闭文件。在采集的过程中，文件会一直保持打开的状态。也就是说，如果在采集期间移除或重命名文件，采集器仍会继续读取该文件，这会导致磁盘空间不被释放，除非关闭采集器。</p>
<p>默认情况下，Filebeat 保持文件为打开状态的时长取决于配置项 <code>close_inactive</code> 设置的时长。如果一个文件在设定的时间内没有新增数据，即 Filebeat 在设定的时间内没有从该文件中采集到数据，那么 Filebeat 就会关闭该文件。</p>
<p>关闭采集器的后续行为：</p>
<ul>
<li>如果文件在采集器运行期间就被删除，那么关闭采集器就会关闭该文件从而释放底层资源。</li>
<li>被关闭的采集器只有在 <code>scan_frequency</code> 过后，才会再次开始启动采集。</li>
<li>在关闭采集器后移动或删除文件，就不会再采集该文件。</li>
</ul>
<blockquote>
<p>控制采集器关闭行为的相关配置，可参考 <code>close_*</code> 配置项说明。</p>
</blockquote>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>输入负责管理采集器和查找所有要采集的源。</p>
<p>如果输入的类型是 <code>log</code>，那么输入会查找驱动上所有与定义的通配符匹配操作符相匹配的文件，并为每个文件启动一个采集器。每个输入都运行在自己的 Go 协程中。</p>
<p>下面的例子配置了 Filebeat 采集 <em>/var/log</em> 和 <em>/var/path2</em> 两个路径下所有文件扩展名为 <em>log</em> 的文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/log/*.log</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/path2/*.log</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Filebeat 目前支持几种输入类型。每种输入类型都可以定义多次。<code>log</code> 类型输入会检查每个文件，看是否需要启动采集器，是否已经在运行，或者是否可以忽略该文件（见 <code>ignore_older</code> 配置项）。采集器关闭后，只有当文件的大小发生变化时，才会继续采集新行。</p>
<h2 id="保存文件状态"><a href="#保存文件状态" class="headerlink" title="保存文件状态"></a>保存文件状态</h2><p>Filebeat 会保存每个文件的状态，并频繁把状态写到磁盘的注册表文件中。状态用于记录采集器最后一次读取的偏移量和确保所有的日志行都成功发送。如果指定的输出（如 Elasticsearch、Logstash）出现不可用，Filebeat 会持续跟踪最后发送的日志行的状态，一旦输出再次可用，就会继续读取文件。Filebeat 在运行时，每个输入的状态信息也会保存在内存中。当 Filebeat 重新启动时，会从磁盘上的注册表文件恢复数据状态，每个采集器也会从上一次发送成功的位置继续采集。</p>
<p>对于每个输入，Filebeat 会保存它所找到的每个文件的状态。因为文件可以被重命名或移动，所以文件名和路径并不能唯一标识一个文件。对于每个文件，Filebeat 都会存储唯一的标识符，以检测文件之前是否被采集过。</p>
<h2 id="至少一次"><a href="#至少一次" class="headerlink" title="至少一次"></a>至少一次</h2><p>Filebeat 提供至少一次保障，这意味着所有事件最终都会被处理，虽然有些可能会被处理多次，但不会有数据丢失的情况。Filebeat 能够实现该功能，是因为它将每个事件的发送状态持久化到磁盘的文件中。</p>
<p>如果 Filebeat 的输出（Output）出现阻塞、无法确认事件已经接收完毕，Filebeat 会一直尝试发送这些事件，直接输出确认已接收到事件为止。</p>
<p>如果 Filebeat 在发送事件的过程中关闭，它不会等待输出确认所有事件后再关闭。任何发送到输出的事件，但在 Filebeat 关闭前没有确认，在 Filebeat 重新启动时将再次发送。这样可以确保每个事件至少发送一次，但最终可能会将重复的事件发送到输出。可以通过设置 <code>shutdown_timeout</code> 配置项将Filebeat配置为在关闭前等待特定的时间。</p>
<blockquote>
<p>注意：Filebeat的至少一次交付保证有一个限制，涉及日志轮换和删除旧文件。如果日志文件写入磁盘和旋转的速度超过Filebeat处理它们的速度，或者如果在输出不可用时删除文件，则数据可能会丢失。在Linux上，由于inode重用，Filebeat也可能会跳过行。有关inode重用问题的更多详细信息，请参见常见问题。</p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Filebeat</tag>
      </tags>
  </entry>
  <entry>
    <title>Flink依赖配置：Table API &amp; SQL</title>
    <url>/2023/02/16/flink-sql-table-api-configuration-dependency/</url>
    <content><![CDATA[<p>我是 Flink 初学者，现在我要在 Flink 应用程序中添加支持使用 Flink SQL 进行数据统计的功能，但我不知道应该添加哪些依赖。</p>
<p>程序使用 Java 语言开发，Flink 版本是当前最新的 1.16.1 版本，程序的功能是使用 Flink SQL 从 Kafka 读取数据，并把读取到数据直接进行标准输出。Kafka 的数据为 Canal 程序采集 MySQL 的 Binlog 日志，所以这里我使用到的 Table API 连接器有 Kafka Connector，Canal Connector。</p>
<p>pom.xml 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-streaming-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-clients<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-slf4j-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 以下三个依赖是我自己添加的 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-table-api-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-table-planner-loader<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-table-runtime<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-connector-kafka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>程序代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">StreamExecutionEnvironment</span> <span class="variable">env</span> <span class="operator">=</span> StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line">        <span class="type">EnvironmentSettings</span> <span class="variable">settings</span> <span class="operator">=</span> EnvironmentSettings</span><br><span class="line">                .newInstance()</span><br><span class="line">                .inStreamingMode()</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">TableConfig</span> <span class="variable">tableConfig</span> <span class="operator">=</span> TableConfig.getDefault();</span><br><span class="line">        tableConfig.setIdleStateRetention(Duration.ofDays(<span class="number">1L</span>));</span><br><span class="line">        <span class="type">TableEnvironment</span> <span class="variable">tableEnv</span> <span class="operator">=</span> TableEnvironment.create(settings);</span><br><span class="line"></span><br><span class="line">        tableEnv.executeSql(<span class="string">&quot;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;CREATE TABLE `tb_user` ( &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `id` INT, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `area_code` STRING, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `phone` STRING, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `password` STRING, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `nickname` STRING, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `avatar` STRING &quot;</span> +</span><br><span class="line">                <span class="string">&quot;) WITH ( &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;connector&#x27; = &#x27;kafka&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;topic&#x27; = &#x27;dwd_user&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;properties.bootstrap.servers&#x27; = &#x27;kafka1:9092,kafka2:9092,kafka3:9092&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;properties.group.id&#x27; = &#x27;dwd_user_v230215&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;scan.startup.mode&#x27; = &#x27;earliest-offset&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;format&#x27; = &#x27;canal-json&#x27; &quot;</span> +</span><br><span class="line">                <span class="string">&quot;)&quot;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> tableEnv.sqlQuery(<span class="string">&quot;select * from tb_user&quot;</span>);</span><br><span class="line">        table.printSchema();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里要把 Table 转成流进行打印输出，但这里缺少相关方法，编译不通过？</span></span><br><span class="line">        DataStream&lt;Row&gt; resultStream = tableEnv.from(table);</span><br><span class="line"></span><br><span class="line">        resultStream.print();</span><br><span class="line"></span><br><span class="line">        env.execute(<span class="string">&quot;TT&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>上面代码中，Flink SQL 所使用的 Kafka 连接器和解析 Canal Json 格式的连接器的依赖是对的。</p>
<p>Flink Table API 的 Kafka 连接器依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-connector-kafka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Flink Table API 的 Canal Json 解析连接器依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;flink.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>因为你的应用中需要将 Table 类型转为 DataStream 类型进行打印输出，即需要混合使用 DataStream API 和 Table API &amp; SQL 这两种类型 API，那么你需要添加的是 flink-table-api-java-bridge 依赖，而不是 flink-table-api-java 依赖。</p>
<p>flink-table-api-java-bridge 依赖如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-table-api-java-bridge<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修改完依赖后，你的应用程序代码修改如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">StreamExecutionEnvironment</span> <span class="variable">env</span> <span class="operator">=</span> StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line">        <span class="type">EnvironmentSettings</span> <span class="variable">settings</span> <span class="operator">=</span> EnvironmentSettings</span><br><span class="line">                .newInstance()</span><br><span class="line">                .inStreamingMode()</span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">TableConfig</span> <span class="variable">tableConfig</span> <span class="operator">=</span> TableConfig.getDefault();</span><br><span class="line">        tableConfig.setIdleStateRetention(Duration.ofDays(<span class="number">1L</span>));</span><br><span class="line">        **<span class="type">StreamTableEnvironment</span> <span class="variable">tableEnv</span> <span class="operator">=</span> StreamTableEnvironmentImpl.create(env, settings);**</span><br><span class="line"></span><br><span class="line">        tableEnv.executeSql(<span class="string">&quot;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;CREATE TABLE `tb_user` ( &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `id` INT, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `area_code` STRING, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `phone` STRING, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `password` STRING, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `nickname` STRING, &quot;</span> +</span><br><span class="line">                <span class="string">&quot;  `avatar` STRING &quot;</span> +</span><br><span class="line">                <span class="string">&quot;) WITH ( &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;connector&#x27; = &#x27;kafka&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;topic&#x27; = &#x27;dwd_user&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;properties.bootstrap.servers&#x27; = &#x27;kafka1:9092,kafka2:9092,kafka3:9092&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;properties.group.id&#x27; = &#x27;dwd_user_v230215&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;scan.startup.mode&#x27; = &#x27;earliest-offset&#x27;, &quot;</span> +</span><br><span class="line">                <span class="string">&quot; &#x27;format&#x27; = &#x27;canal-json&#x27; &quot;</span> +</span><br><span class="line">                <span class="string">&quot;)&quot;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> tableEnv.sqlQuery(<span class="string">&quot;select * from tb_user&quot;</span>);</span><br><span class="line">        table.printSchema();</span><br><span class="line"></span><br><span class="line">        **DataStream&lt;Row&gt; resultStream = tableEnv.toChangelogStream(table);**</span><br><span class="line"></span><br><span class="line">        resultStream.print();</span><br><span class="line"></span><br><span class="line">        env.execute(<span class="string">&quot;TT&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>NOTE：Flink 提供了两种主要的 API：Datastream API 和 Table API &amp; SQL。根据你的使用场景，它们既可以单独使用，也可以混合使用。</p>
<p>API 与依赖项对应如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>要使用的 API</th>
<th>需要添加的依赖项</th>
</tr>
</thead>
<tbody>
<tr>
<td>DataStream</td>
<td>flink-streaming-java</td>
</tr>
<tr>
<td>DataStream with Scala</td>
<td>flink-streaming-scala_2.12</td>
</tr>
<tr>
<td>Table API</td>
<td>flink-table-api-java</td>
</tr>
<tr>
<td>Table API with Scala</td>
<td>flink-table-api-scala_2.12</td>
</tr>
<tr>
<td>Table API + DataStream</td>
<td>flink-table-api-java-bridge</td>
</tr>
<tr>
<td>Table API + DataStream with Scala</td>
<td>flink-table-api-scala-bridge_2.12</td>
</tr>
</tbody>
</table>
</div>
<p>这里 API 按 Java 还是 Scala 语言，是单独使用还是混合使用，划分为六个依赖项，具体使用哪个 API，取决于你的应用场景。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程 Q&amp;A</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 标签管理——代码切换到指定的 Tag 上</title>
    <url>/2023/04/10/git-tag-checkout/</url>
    <content><![CDATA[<p>本文以 Github 上的 <a href="https://github.com/logstash-plugins/logstash-filter-geoip">logstash-filter-geoip</a> 项目为例，演示如何将代码切换到指定的 Tag 上。</p>
<hr>
<p>使用 <code>git clone</code> 从 Github 上将 logstash-filter-geoip 代码克隆至本地：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/logstash-plugins/logstash-filter-geoip.git</span><br></pre></td></tr></table></figure>
<p>进入代码目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> logstash-filter-geoip</span><br></pre></td></tr></table></figure>
<p>使用 <code>git tag</code> 查看所有的 Tag：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure>
<p>结果如下（注意，显示的标签列表不是按标签创建时间顺序来排序的，而是按字母排序的）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">v0.1.0</span><br><span class="line">v0.1.1</span><br><span class="line">v0.1.10</span><br><span class="line">v0.1.2</span><br><span class="line">......</span><br><span class="line">v7.2.1</span><br><span class="line">v7.2.10</span><br><span class="line">v7.2.11</span><br><span class="line">v7.2.12</span><br><span class="line">v7.2.13</span><br><span class="line">v7.2.2</span><br><span class="line">v7.2.3</span><br><span class="line">v7.2.4</span><br><span class="line">v7.2.5</span><br><span class="line">v7.2.6</span><br><span class="line">v7.2.7</span><br><span class="line">v7.2.8</span><br><span class="line">v7.2.9</span><br></pre></td></tr></table></figure>
<p>使用 <code>git checkout</code> 切换至标签 v7.2.13：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout v7.2.13</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  logstash-filter-geoip git:(main) git checkout v7.2.13</span><br><span class="line">Note: switching to <span class="string">&#x27;v7.2.13&#x27;</span>.</span><br><span class="line"></span><br><span class="line">You are <span class="keyword">in</span> <span class="string">&#x27;detached HEAD&#x27;</span> state. You can look around, make experimental</span><br><span class="line">changes and commit them, and you can discard any commits you make <span class="keyword">in</span> this</span><br><span class="line">state without impacting any branches by switching back to a branch.</span><br><span class="line"></span><br><span class="line">If you want to create a new branch to retain commits you create, you may</span><br><span class="line"><span class="keyword">do</span> so (now or later) by using -c with the switch <span class="built_in">command</span>. Example:</span><br><span class="line"></span><br><span class="line">  git switch -c &lt;new-branch-name&gt;</span><br><span class="line"></span><br><span class="line">Or undo this operation with:</span><br><span class="line"></span><br><span class="line">  git switch -</span><br><span class="line"></span><br><span class="line">Turn off this advice by setting config variable advice.detachedHead to <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">HEAD is now at fc2df01 [DOC] Add documentation <span class="keyword">for</span> database downloader setting (#210)</span><br><span class="line">➜  logstash-filter-geoip git:(fc2df01)</span><br></pre></td></tr></table></figure>
<p>从提示中可以看出当前处于一个“detached HEAD”状态，不允许修改代码，因为标签也是版本库的一个快照。如果想要在某个 Tag 代码的基础上做修改，可以在这个 Tag 代码基础上创建一个分支：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b branch_name tag_name</span><br></pre></td></tr></table></figure>
<p>比如在 v7.2.13 在基础上创建分支 hotfix：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b hotfix v7.2.13</span><br></pre></td></tr></table></figure>
<p>后续在这个分支上的操作，就和普通的分支 git 操作一样了。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Gson基本使用：序列化与反序列化操作详解</title>
    <url>/2023/09/05/gson-bases/</url>
    <content><![CDATA[<p>在本文中，我们将学习如何使用 Gson 进行序列化和反序列化操作。</p>
<h2 id="在Maven中使用Gson"><a href="#在Maven中使用Gson" class="headerlink" title="在Maven中使用Gson"></a>在Maven中使用Gson</h2><p>要在 Maven 中使用 Gson，可以通过添加以下依赖关系，使用 Maven Central 中的 Gson 版本：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  Gson: Java to JSON conversion --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>现在，我们的 Maven 项目已经成功地集成了 Gson。</p>
<h2 id="序列化与反序列化原始类型"><a href="#序列化与反序列化原始类型" class="headerlink" title="序列化与反序列化原始类型"></a>序列化与反序列化原始类型</h2><p>以下代码演示了使用 Gson 库对基本数据类型进行序列化和反序列化的示例。</p>
<p>首先，在 <code>main</code> 方法中创建一个 <code>Gson</code> 对象，通过 <code>gson.toJson()</code> 方法可以将基本数据类型和字符串对象序列化为 JSON 格式的字符串，并使用 <code>System.out.println()</code> 打印出来。例如，<code>System.out.println(&quot;INT类型：&quot; + gson.toJson(8080));</code> 将整数 8080 序列化为 JSON 字符串并打印出来。</p>
<p>接下来，将整数数组 <code>intArray</code> 序列化为JSON字符串：<code>System.out.println(gson.toJson(intArray));</code>。</p>
<p>然后，通过 <code>gson.fromJson()</code> 方法可以将 JSON 字符串反序列化为相应的基本数据类型或对象，并将其打印出来。例如，<code>int i = gson.fromJson(&quot;8080&quot;, int.class);</code> 将字符串 <code>&quot;8080&quot;</code> 反序列化为整数并赋值给变量 <code>i</code>，然后将其打印出来。</p>
<p>其他的反序列化示例包括将字符串反序列化为 <code>Integer</code> 对象、<code>Long</code> 对象、<code>Boolean</code> 对象、字符串对象、字符串数组等，并将它们打印出来。</p>
<p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimitiveExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        System.out.println(<span class="string">&quot;基本数据类型序列化：&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;INT类型：&quot;</span> + gson.toJson(<span class="number">8080</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;Long类型：&quot;</span> + gson.toJson(Long.MAX_VALUE));</span><br><span class="line">        System.out.println(<span class="string">&quot;String类型：&quot;</span> + gson.toJson(<span class="string">&quot;Daddy finger daddy finger where are you&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;整数数组序列化：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] intArray = &#123;<span class="number">8080</span>, <span class="number">8081</span>, <span class="number">8090</span>&#125;;</span><br><span class="line">        System.out.println(gson.toJson(intArray));</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;基本数据类型反序列化：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> gson.fromJson(<span class="string">&quot;8080&quot;</span>, <span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">intObj</span> <span class="operator">=</span> gson.fromJson(<span class="string">&quot;8081&quot;</span>, Integer.class);</span><br><span class="line">        <span class="type">Long</span> <span class="variable">longObj</span> <span class="operator">=</span> gson.fromJson(<span class="string">&quot;10000&quot;</span>, Long.class);</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">boolObj</span> <span class="operator">=</span> gson.fromJson(<span class="string">&quot;true&quot;</span>, Boolean.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> gson.fromJson(<span class="string">&quot;\&quot;abc\&quot;&quot;</span>, String.class);</span><br><span class="line">        String[] strArray = gson.fromJson(<span class="string">&quot;[\&quot;abc\&quot;,\&quot;plain text\&quot;]&quot;</span>, String[].class);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;int: &quot;</span> + i);</span><br><span class="line">        System.out.println(<span class="string">&quot;Integer: &quot;</span> + intObj);</span><br><span class="line">        System.out.println(<span class="string">&quot;Long: &quot;</span> + longObj);</span><br><span class="line">        System.out.println(<span class="string">&quot;Boolean: &quot;</span> + boolObj);</span><br><span class="line">        System.out.println(<span class="string">&quot;String: &quot;</span> + str);</span><br><span class="line">        System.out.println(<span class="string">&quot;String[]: &quot;</span> + Arrays.toString(strArray));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">基本数据类型序列化：</span></span><br><span class="line"><span class="comment">INT类型：8080</span></span><br><span class="line"><span class="comment">Long类型：9223372036854775807</span></span><br><span class="line"><span class="comment">String类型：&quot;Daddy finger daddy finger where are you&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">整数数组序列化：</span></span><br><span class="line"><span class="comment">[8080,8081,8090]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">基本数据类型反序列化：</span></span><br><span class="line"><span class="comment">int: 8080</span></span><br><span class="line"><span class="comment">Integer: 8081</span></span><br><span class="line"><span class="comment">Long: 10000</span></span><br><span class="line"><span class="comment">Boolean: true</span></span><br><span class="line"><span class="comment">String: abc</span></span><br><span class="line"><span class="comment">String[]: [abc, plain text]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="对Java对象进行序列化"><a href="#对Java对象进行序列化" class="headerlink" title="对Java对象进行序列化"></a>对Java对象进行序列化</h2><p>使用 Gson 进行序列化非常简单。以下是一个示例，我们将使用实体类 <code>PrimitiveBundle</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimitiveBundle</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span> byteValue;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">short</span> shortValue;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> intValue;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> longValue;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> floatValue;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> doubleValue;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> booleanValue;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> charValue;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">byte</span> <span class="title function_">getByteValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> byteValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setByteValue</span><span class="params">(<span class="type">byte</span> byteValue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.byteValue = byteValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">short</span> <span class="title function_">getShortValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> shortValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShortValue</span><span class="params">(<span class="type">short</span> shortValue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.shortValue = shortValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getIntValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> intValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIntValue</span><span class="params">(<span class="type">int</span> intValue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.intValue = intValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getLongValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> longValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLongValue</span><span class="params">(<span class="type">long</span> longValue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.longValue = longValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">getFloatValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> floatValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFloatValue</span><span class="params">(<span class="type">float</span> floatValue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.floatValue = floatValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getDoubleValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> doubleValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDoubleValue</span><span class="params">(<span class="type">double</span> doubleValue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.doubleValue = doubleValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isBooleanValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> booleanValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBooleanValue</span><span class="params">(<span class="type">boolean</span> booleanValue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.booleanValue = booleanValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">getCharValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> charValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCharValue</span><span class="params">(<span class="type">char</span> charValue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.charValue = charValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>首先，我们使用一些测试值来初始化一个实例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">PrimitiveBundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrimitiveBundle</span>();</span><br><span class="line">bundle.setByteValue((<span class="type">byte</span>) <span class="number">0x00000011</span>);</span><br><span class="line">bundle.setShortValue((<span class="type">short</span>) <span class="number">125</span>);</span><br><span class="line">bundle.setIntValue(<span class="number">125</span>);</span><br><span class="line">bundle.setLongValue(<span class="number">125L</span>);</span><br><span class="line">bundle.setFloatValue(<span class="number">3.14159F</span>);</span><br><span class="line">bundle.setDoubleValue(<span class="number">3.14159</span>);</span><br><span class="line">bundle.setBooleanValue(<span class="literal">true</span>);</span><br><span class="line">bundle.setCharValue(<span class="string">&#x27;X&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>接下来，对其进行序列化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"><span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(bundle);</span><br></pre></td></tr></table></figure>
<p>格式化后的输出结果如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;byteValue&quot;</span><span class="punctuation">:</span><span class="number">17</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;shortValue&quot;</span><span class="punctuation">:</span><span class="number">125</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;intValue&quot;</span><span class="punctuation">:</span><span class="number">125</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;longValue&quot;</span><span class="punctuation">:</span><span class="number">125</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;floatValue&quot;</span><span class="punctuation">:</span><span class="number">3.14159</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doubleValue&quot;</span><span class="punctuation">:</span><span class="number">3.14159</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;booleanValue&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;charValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;X&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>完整的代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ObjectExample</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">PrimitiveBundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrimitiveBundle</span>();</span><br><span class="line">        bundle.setByteValue((<span class="type">byte</span>) <span class="number">0x00000011</span>);</span><br><span class="line">        bundle.setShortValue((<span class="type">short</span>) <span class="number">125</span>);</span><br><span class="line">        bundle.setIntValue(<span class="number">125</span>);</span><br><span class="line">        bundle.setLongValue(<span class="number">125L</span>);</span><br><span class="line">        bundle.setFloatValue(<span class="number">3.14159F</span>);</span><br><span class="line">        bundle.setDoubleValue(<span class="number">3.14159</span>);</span><br><span class="line">        bundle.setBooleanValue(<span class="literal">true</span>);</span><br><span class="line">        bundle.setCharValue(<span class="string">&#x27;X&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(bundle);</span><br><span class="line"></span><br><span class="line">        System.out.println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;&quot;byteValue&quot;:17,&quot;shortValue&quot;:125,&quot;intValue&quot;:125,&quot;longValue&quot;:125,&quot;floatValue&quot;:3.14159,&quot;doubleValue&quot;:3.14159,&quot;booleanValue&quot;:true,&quot;charValue&quot;:&quot;X&quot;&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>在示例中，我们应该注意一些细节。首先，<code>byte</code> 值不会像实例中定义一样被序列化为一串位。此外，<code>short</code>、<code>int</code> 和 <code>long</code> 之间没有区别。同样，浮点数和双精度数之间也没有区别。</p>
<p>另一个需要注意的是，使用字符串来表示字符值。</p>
<p>实际上，这些细节与 Gson 无关，而是由 JSON 的定义方式决定的。</p>
<h2 id="对JSON字符串进行反序列化"><a href="#对JSON字符串进行反序列化" class="headerlink" title="对JSON字符串进行反序列化"></a>对JSON字符串进行反序列化</h2><p>现在让我们来看看如何对上一个示例中获取的 JSON 字符串进行反序列化。</p>
<p>反序列化和序列化一样简单：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"><span class="type">PrimitiveBundle</span> <span class="variable">model</span> <span class="operator">=</span> gson.fromJson(json, PrimitiveBundle.class);</span><br></pre></td></tr></table></figure>
<p>最后，我们可以打印输出该对象 <code>model</code>，验证是否包含所需的值：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(model);</span><br></pre></td></tr></table></figure>
<p>输出结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PrimitiveBundle&#123;byteValue=17, shortValue=125, intValue=125, longValue=125, floatValue=3.14159, doubleValue=3.14159, booleanValue=true, charValue=X&#125;</span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文介绍了如何使用 Gson 库进行序列化和反序列化操作。</p>
<p>首先，使用 Maven 中央仓库中的 Gson 版本，在 Maven 项目中添加相关依赖。然后，通过创建 Gson 对象，可以将基本数据类型和字符串对象序列化为 JSON 格式的字符串。示例代码还演示了将整数数组序列化为 JSON 字符串的方法。</p>
<p>接下来，通过使用 <code>gson.fromJson()</code> 方法，可以将 JSON 字符串反序列化为相应的基本数据类型或对象。示例还包括将字符串反序列化为 Integer、Long、Boolean、字符串对象和字符串数组的示例。</p>
<p>另外，文章还展示了如何使用 Gson 将 Java 对象进行序列化和反序列化操作。通过创建一个实体类，设置属性的值，然后使用 Gson 将对象序列化为 JSON 字符串。反序列化操作与序列化类似，只需使用 <code>gson.fromJson()</code> 方法将 JSON 字符串反序列化为相应的对象。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>HiveSQL内置函数——concat_ws</title>
    <url>/2023/07/21/hive-sql-built-in-functions-concat_ws/</url>
    <content><![CDATA[<h2 id="定义与使用"><a href="#定义与使用" class="headerlink" title="定义与使用"></a>定义与使用</h2><p>函数 <code>concat_ws()</code> 将两个或多个表达式与分隔符添加在一起。</p>
<p><strong>注：</strong>另请参阅 CONCAT() 函数。</p>
<h2 id="语法1"><a href="#语法1" class="headerlink" title="语法1"></a>语法1</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">concat_ws(string SEP, string A, string B...)</span><br></pre></td></tr></table></figure>
<p><strong>参数值</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>SEP</td>
<td>必填。在每个表达式之间添加的分隔符。如果分隔符为 NULL，则返回 NULL。</td>
</tr>
<tr>
<td>A,<br/>B,<br/>等</td>
<td>必填。要连接的字符串。值为 NULL 的字符串将被跳过。</td>
</tr>
</tbody>
</table>
</div>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">	concat_ws(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;Johnson&#x27;</span>, <span class="string">&#x27;Lin&#x27;</span>), </span><br><span class="line">	concat_ws(<span class="string">&#x27;-&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;Lin&#x27;</span>), </span><br><span class="line">	concat_ws(<span class="keyword">NULL</span>, <span class="string">&#x27;Johnson&#x27;</span>, <span class="string">&#x27;Lin&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>以上代码的查询结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-----------+---+----+</span><br><span class="line">|_c0        |_c1|_c2 |</span><br><span class="line">+-----------+---+----+</span><br><span class="line">|Johnson-Lin|Lin|NULL|</span><br><span class="line">+-----------+---+----+</span><br></pre></td></tr></table></figure>
<h2 id="语法2"><a href="#语法2" class="headerlink" title="语法2"></a>语法2</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">concat_ws(string SEP, <span class="keyword">array</span><span class="operator">&lt;</span>string<span class="operator">&gt;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>参数值</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>SEP</td>
<td>必填。在每个表达式之间添加的分隔符。如果分隔符为 NULL，则返回 NULL。</td>
</tr>
<tr>
<td>array<string></td>
<td>必填。字符串数组。</td>
</tr>
</tbody>
</table>
</div>
<p><strong>技术细节</strong></p>
<p>从 Hive 0.9.0 开始支持</p>
<p><strong>示例 1</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> concat_ws(<span class="string">&#x27;_&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;rain&#x27;</span>, <span class="string">&#x27;rain&#x27;</span>, <span class="string">&#x27;go&#x27;</span>, <span class="string">&#x27;away&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p>以上代码的查询结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-----------------+</span><br><span class="line">|_c0              |</span><br><span class="line">+-----------------+</span><br><span class="line">|rain_rain_go_away|</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure>
<p><strong>示例 2</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> concat_ws(<span class="string">&#x27;_&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;rain&#x27;</span>, <span class="string">&#x27;rain&#x27;</span>, <span class="string">&#x27;go&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;away&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p>以上代码的查询结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+----------------------+</span><br><span class="line">|_c0                   |</span><br><span class="line">+----------------------+</span><br><span class="line">|rain_rain_go_null_away|</span><br><span class="line">+----------------------+</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon 0.5版本震撼发布：数据导入、查询性能再升级</title>
    <url>/2023/09/11/apache-paimon-0_5_0-incubating-release/</url>
    <content><![CDATA[<p>昨日，Apache Paimon 0.5.0-incubating 版本正式发布。这个版本是在近 100 位贡献者的共同努力下完成的，共提交了 500 多次代码改进，为社区带来了许多令人兴奋的新功能和改进。</p>
<p>其中的亮点之一是 CDC（Change Data Capture）数据入湖的功能已经成熟。在 0.5 版本中，引入了标签的概念，为离线数据仓库提供了不可变视图。此外，主键表的动态桶模式也已经投入生产，并引入了仅追加模式可扩展表来取代 Hive 表。</p>
<p>Paimon 支持多种方式将数据导入 Paimon 表，并且支持模式演化。在 0.5 版本中，新增了许多新功能，例如 MySQL 同步表和数据库、Kafka 同步表和数据库以及 MongoDB 同步集合和数据库。</p>
<p>主键表可以通过在创建表的 DDL（数据定义语言）中指定主键来创建，它接受插入、更新或删除记录操作。而动态桶（Dynamic Bucket）模式是通过将 <code>&#39;bucket&#39;</code> 参数设置为 <code>&#39;-1&#39;</code> 来实现的，Paimon 可以动态维护索引并自动扩展桶的数量。用户可以通过控制目标行数和分配器操作符的并行度来优化动态桶的性能。</p>
<p>针对部分更新表在多流更新时的无序问题，引入了序列组（Sequence Group）机制，每个数据流都可以定义自己的序列分组，实现真正的部分更新。</p>
<p>为了提升查询性能，新增了首行（<code>first-row</code>）合并引擎，用户可以保留相同主键的第一行数据。此外，还引入了 Lookup Changelog-Producer 来大大减少需要生成更改日志的表的延迟。</p>
<p>针对压缩的需求，Paimon 支持异步压缩，用户可以慢慢地进行压缩而不会阻塞写入操作，并且以最大写入吞吐量模式运行。同时，推荐使用 AVRO 文件格式以实现最佳压缩性能。</p>
<p>除了以上功能，0.5 版本还引入了仅追加可扩展表的概念，通过对非主键表定义 <code>&quot;bucket&quot;=&quot;-1&quot;</code> 来实现。在这种模式下，表可以并发读写，被视为批量离线表，同时支持小文件自动合并功能。</p>
<p>此外，引入标签管理功能，可以方便地查询历史数据，并提供了自动创建标签和增量查询的支持。</p>
<p>在计算引擎方面，Paimon 在 Flink 和 Spark 上进行了深度集成。在 Flink 1.17 版本中，Paimon 提供了更强大的 ALTER TABLE 语法以及基于 Hive metastore 的 FlinkGenericCatalog，使得用户可以方便地使用 Paimon、Hive 和 Flink Generic Tables（如 Kafka 等表）的所有表。</p>
<p>在 Spark 集成方面，Paimon 0.5 版本引入了许多写特性，例如分区覆盖、分区管理、模式合并写以及流式 sink 的支持。可以看出 Paimon 在 Spark 集成上进行了大量工作，为用户提供了更丰富的功能。</p>
<p>未来，Paimon 将继续努力解决加速将 CDC 数据导入数据湖、丰富 Merge 引擎以提升流计算、Changelog 流式读取以及追加模式加速 Hive 离线表等场景的需求。同时，Paimon 也将进一步改进批处理路径，为 Hive 提供更多优化。</p>
<p>Paimon 0.5 版本在功能上有了大量的增强和改进，提供了更丰富的数据导入方式和计算引擎集成选项，为用户构建统一的存储和计算引擎提供了更多选择。可以预见，Paimon 未来会在批流一体场景上有更多创新。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive表备份</title>
    <url>/2023/08/22/how-to-backup-hive-tables/</url>
    <content><![CDATA[<p>在数据处理和分析的过程中，随着业务的发展和变化，我们可能需要对已有的 Hive 表进行调整、清理或修改表结构。为了确保操作的安全性，我们可以在进行这些操作之前先对 Hive 表进行备份。这样一来，即使在操作过程中发生了任何问题，我们也可以通过回退到备份数据来恢复之前的状态。</p>
<p>此外，在测试和开发环境中，我们经常需要使用真实的生产数据或者对数据进行一些实验性的操作。为了确保测试和开发工作不会对真实的生产数据造成影响，我们可以从 Hive 表中复制一份数据出来，创建一个安全的数据副本供测试和开发使用。从而可以在不影响真实生产数据的前提下进行各种实验和调试工作。</p>
<p>那么，如何快速备份或复制 Hive 表呢？本文将向大家介绍两种简单易行的复制 Hive 表的方法，以确保我们的数据始终处于安全可靠的状态。</p>
<h2 id="方法一：使用-create-table-as"><a href="#方法一：使用-create-table-as" class="headerlink" title="方法一：使用 create table ... as ..."></a>方法一：使用 <code>create table ... as ...</code></h2><p>直接使用 <code>create table ... as ...</code> 复制表数据、表字段。语法如下：<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> 表名</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 要备份的表名</span><br></pre></td></tr></table></figure></p>
<p>使用该方法虽然可以复制表的数据与字段，但表的属性会被修改。比如，如果要备份的表是分区表，那么使用该方法创建的表，分区字段将会变成普通字段，分区不存在。并且，该方法无法复制字段的 <code>comment</code> 备注信息。</p>
<p>下面的示例演示了如何使用该方法备份表。</p>
<p>首先，在 Hive 中创建分区表 test.dwd_user_info_snap_day：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test.dwd_user_info_snap_day`(</span><br><span class="line">  `user_id` <span class="type">int</span> COMMENT <span class="string">&#x27;用户ID&#x27;</span>,  </span><br><span class="line">  `nickname` string COMMENT <span class="string">&#x27;昵称&#x27;</span>, </span><br><span class="line">  `real_name` string COMMENT <span class="string">&#x27;真实姓名&#x27;</span>,   </span><br><span class="line">  `create_time` string COMMENT <span class="string">&#x27;注册时间&#x27;</span>, </span><br><span class="line">  `country` string COMMENT <span class="string">&#x27;常驻国家&#x27;</span>, </span><br><span class="line">  `province` string COMMENT <span class="string">&#x27;常驻省份&#x27;</span>, </span><br><span class="line">  `city` string COMMENT <span class="string">&#x27;常驻城市&#x27;</span></span><br><span class="line">)</span><br><span class="line">COMMENT <span class="string">&#x27;用户快照表&#x27;</span></span><br><span class="line">PARTITIONED <span class="keyword">BY</span> ( </span><br><span class="line">  `dt` string COMMENT <span class="string">&#x27;日期,格式yyyyMMdd&#x27;</span>)</span><br><span class="line"><span class="type">ROW</span> FORMAT SERDE </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe&#x27;</span> </span><br><span class="line">STORED <span class="keyword">AS</span> INPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat&#x27;</span> </span><br><span class="line">OUTPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat&#x27;</span></span><br></pre></td></tr></table></figure>
<p>然后，模拟两条数据，写入表 test.dwd_user_info_snap_day 的 20230730 分区上：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> tmp <span class="keyword">as</span> (</span><br><span class="line">	<span class="keyword">select</span> <span class="number">1466</span>, <span class="string">&#x27;ziyilon&#x27;</span>, <span class="string">&#x27;Long Ziyi&#x27;</span>, <span class="string">&#x27;2018-06-05 21:47:30&#x27;</span>, <span class="string">&#x27;United Kingdom&#x27;</span>, <span class="string">&#x27;Liverpool&#x27;</span>, <span class="string">&#x27;Liverpool&#x27;</span></span><br><span class="line">	<span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line">	<span class="keyword">select</span> <span class="number">453</span>, <span class="string">&#x27;xiaoming8&#x27;</span>, <span class="string">&#x27;Zhao Xiaoming&#x27;</span>, <span class="string">&#x27;2003-12-31 17:40:33&#x27;</span>, <span class="string">&#x27;United Kingdom&#x27;</span>, <span class="string">&#x27;Birmingham&#x27;</span>, <span class="string">&#x27;Birmingham&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> `test.dwd_user_info_snap_day` <span class="keyword">partition</span>(dt<span class="operator">=</span><span class="string">&#x27;20230730&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tmp;</span><br></pre></td></tr></table></figure>
<p>此时，查询该表的数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `test.dwd_user_info_snap_day`</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br><span class="line">| user_id | nickname  | real_name     | create_time         | country        | province   | city       | dt       |</span><br><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br><span class="line">|    1466 | ziyilon   | Long Ziyi     | 2018-06-05 21:47:30 | United Kingdom | Liverpool  | Liverpool  | 20230730 |</span><br><span class="line">|     453 | xiaoming8 | Zhao Xiaoming | 2003-12-31 17:40:33 | United Kingdom | Birmingham | Birmingham | 20230730 |</span><br><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br></pre></td></tr></table></figure>
<p>现在，使用 <code>create table ... as ...</code> 复制表数据、表字段，新的表名为 test.dwd_user_info_snap_day_bak：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> test.dwd_user_info_snap_day_bak </span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.dwd_user_info_snap_day;</span><br></pre></td></tr></table></figure>
<p>查询表 test.dwd_user_info_snap_day_bak 数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.dwd_user_info_snap_day_bak;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br><span class="line">| user_id | nickname  | real_name     | create_time         | country        | province   | city       | dt       |</span><br><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br><span class="line">|    1466 | ziyilon   | Long Ziyi     | 2018-06-05 21:47:30 | United Kingdom | Liverpool  | Liverpool  | 20230730 |</span><br><span class="line">|     453 | xiaoming8 | Zhao Xiaoming | 2003-12-31 17:40:33 | United Kingdom | Birmingham | Birmingham | 20230730 |</span><br><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br></pre></td></tr></table></figure>
<p>查看表 test.dwd_user_info_snap_day_bak 的定义：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> test.dwd_user_info_snap_day_bak;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test.dwd_user_info_snap_day_bak`(</span><br><span class="line">  `user_id` <span class="type">int</span>, </span><br><span class="line">  `nickname` string, </span><br><span class="line">  `real_name` string, </span><br><span class="line">  `create_time` string, </span><br><span class="line">  `country` string, </span><br><span class="line">  `province` string, </span><br><span class="line">  `city` string, </span><br><span class="line">  `dt` string)</span><br><span class="line"><span class="type">ROW</span> FORMAT SERDE </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe&#x27;</span> </span><br><span class="line">STORED <span class="keyword">AS</span> INPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.mapred.TextInputFormat&#x27;</span> </span><br><span class="line">OUTPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat&#x27;</span></span><br><span class="line">LOCATION</span><br><span class="line">  <span class="string">&#x27;hdfs://cluster/apps/hive/warehouse/test.db/dwd_user_info_snap_day_bak&#x27;</span></span><br><span class="line">TBLPROPERTIES (</span><br><span class="line">  <span class="string">&#x27;COLUMN_STATS_ACCURATE&#x27;</span><span class="operator">=</span><span class="string">&#x27;&#123;\&quot;BASIC_STATS\&quot;:\&quot;true\&quot;&#125;&#x27;</span>, </span><br><span class="line">  <span class="string">&#x27;numFiles&#x27;</span><span class="operator">=</span><span class="string">&#x27;2&#x27;</span>, </span><br><span class="line">  <span class="string">&#x27;numRows&#x27;</span><span class="operator">=</span><span class="string">&#x27;2&#x27;</span>, </span><br><span class="line">  <span class="string">&#x27;rawDataSize&#x27;</span><span class="operator">=</span><span class="string">&#x27;179&#x27;</span>, </span><br><span class="line">  <span class="string">&#x27;totalSize&#x27;</span><span class="operator">=</span><span class="string">&#x27;181&#x27;</span>, </span><br><span class="line">  <span class="string">&#x27;transient_lastDdlTime&#x27;</span><span class="operator">=</span><span class="string">&#x27;1692683800&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>通过对比表 test.dwd_user_info_snap_day 的定义，我们可以发现该表的属性存在差异，并且字段的备注信息也已经丢失。</p>
<h2 id="方法二：先创建表，再入插数据-推荐"><a href="#方法二：先创建表，再入插数据-推荐" class="headerlink" title="方法二：先创建表，再入插数据(推荐)"></a>方法二：先创建表，再入插数据(推荐)</h2><p>1) 先建表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> 新表名 <span class="keyword">like</span> 旧表名;</span><br></pre></td></tr></table></figure>
<p>2) 再插入数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 新表名 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 旧表名</span><br></pre></td></tr></table></figure>
<p>使用此方法可以复制表的数据与字段，但表的属性也会保持一致。</p>
<p>以前述的示例为例，创建新的表 test.dwd_user_info_snap_day_bak0822：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> test.dwd_user_info_snap_day_bak0822 <span class="keyword">like</span> test.dwd_user_info_snap_day;</span><br></pre></td></tr></table></figure>
<p>插入数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition.mode<span class="operator">=</span>nonstrict;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> test.dwd_user_info_snap_day_bak0822 <span class="keyword">partition</span>(dt) <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.dwd_user_info_snap_day;</span><br></pre></td></tr></table></figure>
<p>查询表 test.dwd_user_info_snap_day_bak0822 数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.dwd_user_info_snap_day_bak0822;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br><span class="line">| user_id | nickname  | real_name     | create_time         | country        | province   | city       | dt       |</span><br><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br><span class="line">|    1466 | ziyilon   | Long Ziyi     | 2018-06-05 21:47:30 | United Kingdom | Liverpool  | Liverpool  | 20230730 |</span><br><span class="line">|     453 | xiaoming8 | Zhao Xiaoming | 2003-12-31 17:40:33 | United Kingdom | Birmingham | Birmingham | 20230730 |</span><br><span class="line">+---------+-----------+---------------+---------------------+----------------+------------+------------+----------+</span><br></pre></td></tr></table></figure>
<p>查看表 test.dwd_user_info_snap_day_bak0822 的定义：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test.dwd_user_info_snap_day_bak0822`(</span><br><span class="line">  `user_id` <span class="type">int</span> COMMENT <span class="string">&#x27;用户ID&#x27;</span>, </span><br><span class="line">  `nickname` string COMMENT <span class="string">&#x27;昵称&#x27;</span>, </span><br><span class="line">  `real_name` string COMMENT <span class="string">&#x27;真实姓名&#x27;</span>, </span><br><span class="line">  `create_time` string COMMENT <span class="string">&#x27;注册时间&#x27;</span>, </span><br><span class="line">  `country` string COMMENT <span class="string">&#x27;常驻国家&#x27;</span>, </span><br><span class="line">  `province` string COMMENT <span class="string">&#x27;常驻省份&#x27;</span>, </span><br><span class="line">  `city` string COMMENT <span class="string">&#x27;常驻城市&#x27;</span>)</span><br><span class="line">PARTITIONED <span class="keyword">BY</span> ( </span><br><span class="line">  `dt` string COMMENT <span class="string">&#x27;日期,格式yyyyMMdd&#x27;</span>)</span><br><span class="line"><span class="type">ROW</span> FORMAT SERDE </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe&#x27;</span> </span><br><span class="line">STORED <span class="keyword">AS</span> INPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat&#x27;</span> </span><br><span class="line">OUTPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat&#x27;</span></span><br><span class="line">LOCATION</span><br><span class="line">  <span class="string">&#x27;hdfs://cluster/apps/hive/warehouse/test.db/dwd_user_info_snap_day_bak0822&#x27;</span></span><br><span class="line">TBLPROPERTIES (</span><br><span class="line">  <span class="string">&#x27;transient_lastDdlTime&#x27;</span><span class="operator">=</span><span class="string">&#x27;1692684821&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>对比表 test.dwd_user_info_snap_day 的定义，我们可以发现表 test.dwd_user_info_snap_day_bak0822 的属性一致，而且字段的备注信息也没有丢失。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文介绍了两种简单易行的复制 Hive 表的方法，以确保数据的安全可靠性。</p>
<p>方法一：使用 create table … as …</p>
<p>该方法是直接使用 create table … as … 的语法来复制表数据和字段。但需要注意的是，该方法无法复制分区表的分区字段和字段的备注信息。</p>
<p>方法二：先创建表，再插入数据</p>
<p>这种方法先创建一个与原表结构相同的新表，然后通过 insert into … select * from … 的方式将数据插入新表中。与方法一不同的是，该方法可以完整地复制表的数据、字段以及属性，包括分区字段和字段的备注信息。在实际开发工作中，更推荐使用该方法复制表。</p>
<p>无论使用哪种方法，通过复制 Hive 表可以快速备份数据或创建安全的数据副本，以便进行调整、清理、修改表结构或在测试和开发环境中进行实验和调试工作，而不会对真实生产数据造成任何影响。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive表重命名</title>
    <url>/2022/10/30/hive-rename-table/</url>
    <content><![CDATA[<p>表更名 SQL：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 rename <span class="keyword">to</span> 新表名;</span><br></pre></td></tr></table></figure>
<p>执行该命令之后，表数据所在的位置（LOCATION）会移动到新的路径下。</p>
<p>例如，将表 <em>test.dws_staff_kpi_day</em> 重命名为 <em>test.dws_staff_kpi_month</em>。</p>
<p>在更名前，查看表 <em>test.dws_staff_kpi_day</em> 所在的位置：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> test.dws_staff_kpi_day;</span><br></pre></td></tr></table></figure>
<p>结果如下所示，可以看到表数据位于 <em>hdfs://hdp-cluster/apps/hive/warehouse/test.db/dws_staff_kpi_day</em> 目录下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test.dws_staff_kpi_day`(</span><br><span class="line">  `user_id` <span class="type">int</span> COMMENT <span class="string">&#x27;用户ID&#x27;</span>, </span><br><span class="line">  `phone` string COMMENT <span class="string">&#x27;手机号码&#x27;</span>, </span><br><span class="line">  ...)</span><br><span class="line">COMMENT <span class="string">&#x27;用户核心指标模型&#x27;</span></span><br><span class="line">PARTITIONED <span class="keyword">BY</span> ( </span><br><span class="line">  `dt` string COMMENT <span class="string">&#x27;日期,格式yyyyMMdd&#x27;</span>)</span><br><span class="line"><span class="type">ROW</span> FORMAT SERDE </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe&#x27;</span> </span><br><span class="line">STORED <span class="keyword">AS</span> INPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat&#x27;</span> </span><br><span class="line">OUTPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat&#x27;</span></span><br><span class="line">LOCATION</span><br><span class="line">  <span class="string">&#x27;hdfs://hdp-cluster/apps/hive/warehouse/test.db/dws_staff_kpi_day&#x27;</span></span><br><span class="line">TBLPROPERTIES (</span><br><span class="line">  <span class="string">&#x27;last_modified_by&#x27;</span><span class="operator">=</span><span class="string">&#x27;hadoop&#x27;</span>, </span><br><span class="line">  <span class="string">&#x27;last_modified_time&#x27;</span><span class="operator">=</span><span class="string">&#x27;1667206490&#x27;</span>, </span><br><span class="line">  <span class="string">&#x27;parquet.compression&#x27;</span><span class="operator">=</span><span class="string">&#x27;SNAPPY&#x27;</span>, </span><br><span class="line">  <span class="string">&#x27;transient_lastDdlTime&#x27;</span><span class="operator">=</span><span class="string">&#x27;1667206490&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>现在，将表 <em>test.dws_staff_kpi_day</em> 重命名为 <em>test.dws_staff_kpi_month</em>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test.dws_staff_kpi_day rename <span class="keyword">to</span> test.dws_staff_kpi_month;</span><br></pre></td></tr></table></figure>
<p>查看重命名后的表 test.dws_staff_kpi_month 的数据位置</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> test.dws_staff_kpi_month;</span><br></pre></td></tr></table></figure>
<p>结果如下，表数据目录更新为 <em>hdfs://hdp-cluster/apps/hive/warehouse/test.db/dws_staff_kpi_month</em>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test.dws_staff_kpi_day`(</span><br><span class="line">  `user_id` <span class="type">int</span> COMMENT <span class="string">&#x27;用户ID&#x27;</span>, </span><br><span class="line">  `phone` string COMMENT <span class="string">&#x27;手机号码&#x27;</span>, </span><br><span class="line">  ...)</span><br><span class="line">COMMENT <span class="string">&#x27;用户核心指标模型&#x27;</span></span><br><span class="line">PARTITIONED <span class="keyword">BY</span> ( </span><br><span class="line">  `dt` string COMMENT <span class="string">&#x27;日期,格式yyyyMMdd&#x27;</span>)</span><br><span class="line"><span class="type">ROW</span> FORMAT SERDE </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe&#x27;</span> </span><br><span class="line">STORED <span class="keyword">AS</span> INPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat&#x27;</span> </span><br><span class="line">OUTPUTFORMAT </span><br><span class="line">  <span class="string">&#x27;org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat&#x27;</span></span><br><span class="line">LOCATION</span><br><span class="line">  <span class="string">&#x27;hdfs://hdp-cluster/apps/hive/warehouse/test.db/dws_staff_kpi_month&#x27;</span></span><br><span class="line">TBLPROPERTIES (</span><br><span class="line">  ......)</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive中校验两张表中的数据是否相同的方法</title>
    <url>/2023/09/12/compare-data-between-two-tables-with-same-structure-in-hive/</url>
    <content><![CDATA[<p>Hive 作为一种开源的分布式数据仓库解决方案，被广泛应用于大数据处理和数据分析领域。在实际应用中，我们经常需要对两个或多个表中的数据进行比对，以确保数据的一致性和准确性。下面将介绍如何在 Hive 中校验两张表中数据是否相同的方法。</p>
<h2 id="对比两张表的记录数是否相同"><a href="#对比两张表的记录数是否相同" class="headerlink" title="对比两张表的记录数是否相同"></a>对比两张表的记录数是否相同</h2><p>在进行数据比较之前，首先需要确认两张表（表结构完全相同）的记录数是否相同。比如，假设我们有表 mydw.dwd_user 和表 test.dwd_user，可以通过以下 SQL 分别获取表 mydw.dwd_user 和表 test.dwd_user 的记录数：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> c1 <span class="keyword">from</span> test.dwd_user;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> c2 <span class="keyword">from</span> mydw.dwd_user;</span><br></pre></td></tr></table></figure>
<p>如果 c1 和 c2 不相等，则表不完全相同。</p>
<h2 id="对比两张表去重后的记录数是否相同"><a href="#对比两张表去重后的记录数是否相同" class="headerlink" title="对比两张表去重后的记录数是否相同"></a>对比两张表去重后的记录数是否相同</h2><p>使用以下 SQL 统计表去重后的记录数，如果 dc1 和 dc2 不相等，则说明表不完全相同：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> dc1</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> <span class="operator">*</span> <span class="keyword">from</span> mydw.dwd_user) t;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> dc2</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> <span class="operator">*</span> <span class="keyword">from</span> test.dwd_user) t;</span><br></pre></td></tr></table></figure>
<h2 id="使用UNION操作"><a href="#使用UNION操作" class="headerlink" title="使用UNION操作"></a>使用UNION操作</h2><p>现在获取对两张表进行联合后得到的记录数。使用下面的 SQL 获取两张表联合后的记录数：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">	<span class="built_in">count</span> (<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">from</span>(</span><br><span class="line">	<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mydw.dwd_user</span><br><span class="line">  <span class="keyword">union</span></span><br><span class="line">	<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.dwd_user) t</span><br></pre></td></tr></table></figure>
<p>如果两张表去重后的记录数等于两张表联合后得到的记录数，则可以说明两张表中的数据是相同的。</p>
<h2 id="使用HASH函数比较哈希总和"><a href="#使用HASH函数比较哈希总和" class="headerlink" title="使用HASH函数比较哈希总和"></a>使用HASH函数比较哈希总和</h2><p>如果不需要从表中找出不同的数据，并且两张表的表结构又完全相同，最好的办法是计算每个表的哈希总和，然后比较哈希总和。无论表有多少列，也无论数据类型如何，只要两张表的表结构相同，就可以使用下面的查询进行比较（只需比较返回值即可）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(hash(<span class="operator">*</span>)) <span class="keyword">from</span> test.dwd_user;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(hash(<span class="operator">*</span>)) <span class="keyword">from</span> mydw.dwd_user;</span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>校验两张表中的数据是否相同是 Hive 中常见的任务之一。本文介绍了如何在 Hive 中校验两张表中数据是否相同的方法。通过合理运用这些方法，我们可以方便地检查表中的数据一致性，确保数据处理的准确性和可靠性。在实际应用中，根据具体情况选择合适的方法进行数据比对，可以帮助我们更好地管理和维护数据。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 如何将 Iterator 转换为 List</title>
    <url>/2023/03/24/java-convert-iterator-to-list/</url>
    <content><![CDATA[<p>在本文中，我们将学习在 Java 中如何把一个 <code>Iterator</code> 转换成一个 <code>List</code>。</p>
<p>为便于代码测试，我们在所有的示例代码中使用一个元素为字符串类型的 <code>Iterator</code> ：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Iterator&lt;String&gt; iterator = Arrays.asList(<span class="string">&quot;MONDAY&quot;</span>, <span class="string">&quot;TUESDAY&quot;</span>, <span class="string">&quot;WEDNESDAY&quot;</span>,</span><br><span class="line">                <span class="string">&quot;THURSDAY&quot;</span>, <span class="string">&quot;FRIDAY&quot;</span>, <span class="string">&quot;SATURDAY&quot;</span>, <span class="string">&quot;SUNDAY&quot;</span>).iterator();</span><br></pre></td></tr></table></figure>
<h2 id="方法一：使用-While-循环"><a href="#方法一：使用-While-循环" class="headerlink" title="方法一：使用 While 循环"></a>方法一：使用 While 循环</h2><p>一个容易想到的方法是使用 while 循环将 <code>Iterator</code> 转换为 <code>List</code>。具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此代码示例演示 while 循环方法的使用</span></span><br><span class="line"><span class="keyword">package</span> com.johnson.java.fundamentals.collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IteratorToList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Iterator&lt;String&gt; iterator = Arrays.asList(<span class="string">&quot;MONDAY&quot;</span>, <span class="string">&quot;TUESDAY&quot;</span>, <span class="string">&quot;WEDNESDAY&quot;</span>,</span><br><span class="line">                <span class="string">&quot;THURSDAY&quot;</span>, <span class="string">&quot;FRIDAY&quot;</span>, <span class="string">&quot;SATURDAY&quot;</span>, <span class="string">&quot;SUNDAY&quot;</span>).iterator();</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            list.add(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="方法二：使用-Java-8-的-Iterator-forEachRemaining-方法"><a href="#方法二：使用-Java-8-的-Iterator-forEachRemaining-方法" class="headerlink" title="方法二：使用 Java 8 的 Iterator.forEachRemaining 方法"></a>方法二：使用 Java 8 的 Iterator.forEachRemaining 方法</h2><p>如果项目使用的是 Java 8 或是更高的版本，那么可以利用 <code>Iterator</code> 的 <code>forEachRemaining()</code> 方法来构建 <code>List</code>。将 <code>List</code> 接口的 <code>add()</code> 方法作为方法引用传递，具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此代码示例演示 forEachRemaining() 循环方法的使用</span></span><br><span class="line"><span class="keyword">package</span> com.johnson.java.fundamentals.collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IteratorToList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Iterator&lt;String&gt; iterator = Arrays.asList(<span class="string">&quot;MONDAY&quot;</span>, <span class="string">&quot;TUESDAY&quot;</span>, <span class="string">&quot;WEDNESDAY&quot;</span>,</span><br><span class="line">                <span class="string">&quot;THURSDAY&quot;</span>, <span class="string">&quot;FRIDAY&quot;</span>, <span class="string">&quot;SATURDAY&quot;</span>, <span class="string">&quot;SUNDAY&quot;</span>).iterator();</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        iterator.forEachRemaining(list::add);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="方法三：使用-Java-8-Streams-API"><a href="#方法三：使用-Java-8-Streams-API" class="headerlink" title="方法三：使用 Java 8 Streams API"></a>方法三：使用 Java 8 Streams API</h2><p>同样，如果项目使用的 Java 版本是 8 或 8 以上，我们可以使用 Streams API 将 <code>Iterator</code> 转换为 <code>List</code>。为了使用 Stream API，需要先将 <code>Iterator</code> 转换成 <code>Iterable</code>，可以使用 Java 8 Lambda 表达式来做到这一点：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Iterable&lt;String&gt; iterable = () -&gt; iterator;</span><br></pre></td></tr></table></figure>
<p>接下来，使用 <code>StreamSupport</code> 类的 <code>stream()</code> 和 <code>collect()</code> 方法来构建 <code>List</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 此代码示例演示 Streams API 循环方法的使用</span></span><br><span class="line"><span class="keyword">package</span> com.johnson.java.fundamentals.collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.StreamSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IteratorToList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Iterator&lt;String&gt; iterator = Arrays.asList(<span class="string">&quot;MONDAY&quot;</span>, <span class="string">&quot;TUESDAY&quot;</span>, <span class="string">&quot;WEDNESDAY&quot;</span>,</span><br><span class="line">                <span class="string">&quot;THURSDAY&quot;</span>, <span class="string">&quot;FRIDAY&quot;</span>, <span class="string">&quot;SATURDAY&quot;</span>, <span class="string">&quot;SUNDAY&quot;</span>).iterator();</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Iterable&lt;String&gt; iterable = () -&gt; iterator;</span><br><span class="line">        list = StreamSupport</span><br><span class="line">                .stream(iterable.spliterator(), <span class="literal">false</span>)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="方法四：使用-Guava-库"><a href="#方法四：使用-Guava-库" class="headerlink" title="方法四：使用 Guava 库"></a>方法四：使用 Guava 库</h2><p>Google 的 Guava 库提供了创建可变和不可变 List 的方法，我们可以根据实际需要使用其中的一种。</p>
<p>添加 Guava 库依赖，建议使用最新版本（当前最新版本为 31.1-jre）：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.google.guava/guava --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>31.1-jre<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用 <code>ImmutableList.copyOf()</code> 方法创建一个不可变 <code>List</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.java.fundamentals.collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IteratorToList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Iterator&lt;String&gt; iterator = Arrays.asList(<span class="string">&quot;MONDAY&quot;</span>, <span class="string">&quot;TUESDAY&quot;</span>, <span class="string">&quot;WEDNESDAY&quot;</span>,</span><br><span class="line">                <span class="string">&quot;THURSDAY&quot;</span>, <span class="string">&quot;FRIDAY&quot;</span>, <span class="string">&quot;SATURDAY&quot;</span>, <span class="string">&quot;SUNDAY&quot;</span>).iterator();</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        list = ImmutableList.copyOf(iterator);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>使用 <code>Lists.newArrayList()</code> 方法创建一个可变的 <code>List</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.java.fundamentals.collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IteratorToList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Iterator&lt;String&gt; iterator = Arrays.asList(<span class="string">&quot;MONDAY&quot;</span>, <span class="string">&quot;TUESDAY&quot;</span>, <span class="string">&quot;WEDNESDAY&quot;</span>,</span><br><span class="line">                <span class="string">&quot;THURSDAY&quot;</span>, <span class="string">&quot;FRIDAY&quot;</span>, <span class="string">&quot;SATURDAY&quot;</span>, <span class="string">&quot;SUNDAY&quot;</span>).iterator();</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        list = Lists.newArrayList(iterator);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="方法五：使用-Apache-Commons-Collections-库"><a href="#方法五：使用-Apache-Commons-Collections-库" class="headerlink" title="方法五：使用 Apache Commons Collections 库"></a>方法五：使用 Apache Commons Collections 库</h2><p>Apache Commons Collections 库提供了 <code>IteratorUtils</code> 类可以将 一个 <code>Iterator</code> 转换成一个 <code>List</code>。</p>
<p>添加依赖，建议使用最新版本（当前最新版本为 3.2.2）：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用 <code>IteratorUtils.toList()</code> 将 <code>Iterator</code> 转换成 <code>List</code>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.java.fundamentals.collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.IteratorUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IteratorToList</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Iterator&lt;String&gt; iterator = Arrays.asList(<span class="string">&quot;MONDAY&quot;</span>, <span class="string">&quot;TUESDAY&quot;</span>, <span class="string">&quot;WEDNESDAY&quot;</span>,</span><br><span class="line">                <span class="string">&quot;THURSDAY&quot;</span>, <span class="string">&quot;FRIDAY&quot;</span>, <span class="string">&quot;SATURDAY&quot;</span>, <span class="string">&quot;SUNDAY&quot;</span>).iterator();</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        list = IteratorUtils.toList(iterator);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文介绍了五种将 <code>Iterator</code> 转换为 <code>List</code> 的常用方法：</p>
<ul>
<li>While 循环；</li>
<li>Java 8 高级特性：<ul>
<li>Iterator.forEachRemaining 方法</li>
<li>Streams API</li>
</ul>
</li>
<li>第三方类库：<ul>
<li>Google Guava 库</li>
<li>Apache Commons Collections 库</li>
</ul>
</li>
</ul>
<p>所有这些示例和代码片段的实现都可以在 GitHub 上找到。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java使用Gson库格式化输出JSON字符串</title>
    <url>/2023/07/24/java-json-pretty-print-with-gson/</url>
    <content><![CDATA[<p>在本文中，我们将深入探讨如何在 Java 中格式化 JSON 数据以增强其可读性。</p>
<p>在处理大量的 JSON 对象时，理解和调试它们可能是一项艰巨的任务。因此，采用格式化输出 JSON 对象的方法变得至关重要。</p>
<p>为此，我们可以使用 Gson 库的功能。Gson 提供了便捷的方法来生成格式良好的 JSON 输出。</p>
<p>首先，添加 Gson Maven 依赖项：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>gson</em> 版本根据实际情况进行选择，建议使用最新版本（见 <a href="https://mvnrepository.com/artifact/com.google.code.gson/gson">Maven Central</a> ）。</p>
<p>本文使用的是 <em>2.10.1</em> 版本（当前最新版本）。</p>
<p>为了格式化打印 JSON 字符串，我们将使用 <code>GsonBuilder</code> 的 <code>setPrettyPrinting()</code> 方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">prettyJson</span><span class="params">(String uglyJsonString)</span> &#123;</span><br><span class="line">    <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>().setPrettyPrinting().create();</span><br><span class="line">    <span class="type">JsonElement</span> <span class="variable">jsonElement</span> <span class="operator">=</span> JsonParser.parseString(uglyJsonString);</span><br><span class="line">    <span class="keyword">return</span> gson.toJson(jsonElement);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以下代码演示了如何使用 <code>prettyJson()</code> 方法来格式化并打印输出 JSON 字符串：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.GsonBuilder;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonElement;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonParser;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JsonFormatter</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">prettyJson</span><span class="params">(String uglyJsonString)</span> &#123;</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>().setPrettyPrinting().create();</span><br><span class="line">        <span class="type">JsonElement</span> <span class="variable">jsonElement</span> <span class="operator">=</span> JsonParser.parseString(uglyJsonString);</span><br><span class="line">        <span class="keyword">return</span> gson.toJson(jsonElement);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">uglyJsonString</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;distinct_id\&quot;:\&quot;8id2328069391\&quot;,\&quot;lib\&quot;:&#123;\&quot;$lib\&quot;:\&quot;MiniProgram\&quot;,\&quot;$lib_method\&quot;:\&quot;code\&quot;,\&quot;$lib_version\&quot;:\&quot;10.20.32\&quot;&#125;,\&quot;properties\&quot;:&#123;\&quot;$lib\&quot;:\&quot;MiniProgram\&quot;,\&quot;$lib_version\&quot;:\&quot;1.13.2\&quot;,\&quot;title\&quot;:\&quot;茅台（MOUTAI）贵州茅台酒 酱香型白酒 礼盒送礼酒水 茅台飞天43度500ml（带杯）\&quot;,\&quot;appName\&quot;:\&quot;活动商城\&quot;,\&quot;versionCode\&quot;:\&quot;2.1.39\&quot;,\&quot;appid\&quot;:\&quot;59f9f09a\&quot;,\&quot;$network_type\&quot;:\&quot;wifi\&quot;,\&quot;$manufacturer\&quot;:\&quot;devtools\&quot;,\&quot;$model\&quot;:\&quot;iPhone X\&quot;,\&quot;$screen_width\&quot;:375,\&quot;$screen_height\&quot;:812,\&quot;$os\&quot;:\&quot;iOS\&quot;,\&quot;$os_version\&quot;:\&quot;10.0.1\&quot;,\&quot;id\&quot;:81412,\&quot;user_id\&quot;:14969468,\&quot;phone\&quot;:\&quot;13725459365\&quot;,\&quot;$latest_scene\&quot;:\&quot;发现栏小程序主入口，“最近使用”列表\&quot;,\&quot;$referrer\&quot;:\&quot;shop/pages/data\&quot;,\&quot;$url_path\&quot;:\&quot;shop/pages/user/data\&quot;,\&quot;$is_first_day\&quot;:false&#125;,\&quot;type\&quot;:\&quot;track\&quot;,\&quot;event\&quot;:\&quot;$MPViewScreen\&quot;,\&quot;time\&quot;:1689648201789&#125;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">prettyJsonString</span> <span class="operator">=</span> prettyJson(uglyJsonString);</span><br><span class="line">        System.out.println(prettyJsonString);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行该代码，可以看到格式良好的 JSON 字符串在控制台上输出：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;distinct_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8id2328069391&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;$lib&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MiniProgram&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$lib_method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$lib_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.20.32&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;$lib&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MiniProgram&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$lib_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.13.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茅台（MOUTAI）贵州茅台酒 酱香型白酒 礼盒送礼酒水 茅台飞天43度500ml（带杯）&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;appName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;活动商城&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;versionCode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.1.39&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;appid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;59f9f09a&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$network_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wifi&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$manufacturer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;devtools&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iPhone X&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$screen_width&quot;</span><span class="punctuation">:</span> <span class="number">375</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$screen_height&quot;</span><span class="punctuation">:</span> <span class="number">812</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$os&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iOS&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$os_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">81412</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">14969468</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13725459365&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$latest_scene&quot;</span><span class="punctuation">:</span> <span class="string">&quot;发现栏小程序主入口，“最近使用”列表&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$referrer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shop/pages/data&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$url_path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shop/pages/user/data&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$is_first_day&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;track&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;event&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$MPViewScreen&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="number">1689648201789</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中Date类型与LocalDate或LocalDateTime相互转换</title>
    <url>/2022/11/20/java-convert-date-to-localdate-or-localdatetime-and-back/</url>
    <content><![CDATA[<p>在 Java 中，Date 类型是表示日期和时间的类，而 LocalDate 和 LocalDateTime 是从 Java 8 开始引入的新日期时间 API 中的类。为了在不同的 API 之间进行转换，我们可以使用一些简单的方法。下面我们来详细介绍一下它们之间的相互转换。</p>
<h2 id="Date类型转LocalDate或LocalDateTime类型"><a href="#Date类型转LocalDate或LocalDateTime类型" class="headerlink" title="Date类型转LocalDate或LocalDateTime类型"></a>Date类型转LocalDate或LocalDateTime类型</h2><p>要将 Date 类型转换为 LocalDate 或 LocalDateTime 类型，我们可以使用 Instant 类来辅助完成转换。Instant 类是 Java 8 中引入的用于表示时间戳的类。</p>
<p>使用以下方法将 Date 类型转换为 LocalDate：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="type">Instant</span> <span class="variable">instant</span> <span class="operator">=</span> date.toInstant();</span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">localDate</span> <span class="operator">=</span> instant.atZone(ZoneId.systemDefault()).toLocalDate();</span><br></pre></td></tr></table></figure></p>
<p>使用以下方法将 Date 类型转换为 LocalDateTime：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="type">Instant</span> <span class="variable">instant</span> <span class="operator">=</span> date.toInstant();</span><br><span class="line"><span class="type">LocalDateTime</span> <span class="variable">localDateTime</span> <span class="operator">=</span> instant.atZone(ZoneId.systemDefault()).toLocalDateTime();</span><br></pre></td></tr></table></figure></p>
<p>示例 1：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tests</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="type">Instant</span> <span class="variable">instant</span> <span class="operator">=</span> date.toInstant();</span><br><span class="line"></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">localDate</span> <span class="operator">=</span> instant.atZone(ZoneId.systemDefault()).toLocalDate();</span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">localDateTime</span> <span class="operator">=</span> instant.atZone(ZoneId.systemDefault()).toLocalDateTime();</span><br><span class="line"></span><br><span class="line">        System.out.println(localDate);</span><br><span class="line">        System.out.println(localDateTime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2022-11-20</span></span><br><span class="line"><span class="comment">2022-11-20T00:26:38.631</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p>
<h2 id="LocalDate或LocalDateTime类型转Date类型"><a href="#LocalDate或LocalDateTime类型转Date类型" class="headerlink" title="LocalDate或LocalDateTime类型转Date类型"></a>LocalDate或LocalDateTime类型转Date类型</h2><p>要将 LocalDate 或 LocalDateTime 类型转换为 Date 类型，我们可以使用 Date 类的 from() 方法。此方法将根据指定的时区和时间生成Date对象。</p>
<p>使用以下方法将 LocalDate 类型转换为 Date：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">LocalDate</span> <span class="variable">localDate</span> <span class="operator">=</span> LocalDate.now();</span><br><span class="line"><span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());</span><br></pre></td></tr></table></figure></p>
<p>使用以下方法将 LocalDateTime 类型转换为 Date：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">LocalDateTime</span> <span class="variable">localDateTime</span> <span class="operator">=</span> LocalDateTime.now();</span><br><span class="line"><span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> Date.from(localDateTime.atZone(ZoneId.systemDefault()).toInstant());</span><br></pre></td></tr></table></figure></p>
<p>示例 2：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tests2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">localDate</span> <span class="operator">=</span> LocalDate.now();</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());</span><br><span class="line">        System.out.println(date);</span><br><span class="line"></span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">localDateTime</span> <span class="operator">=</span> LocalDateTime.now();</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date2</span> <span class="operator">=</span> Date.from(localDateTime.atZone(ZoneId.systemDefault()).toInstant());</span><br><span class="line">        System.out.println(date2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sun Nov 20 00:00:00 CST 2022</span></span><br><span class="line"><span class="comment">Sun Nov 20 00:28:15 CST 2022</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p>
<p>请注意，上述两个代码示例中的<code>ZoneId.systemDefault()</code>表示使用系统默认时区。您可以根据需要替换为相应的时区。</p>
<p>通过以上方法，你可以在 Java 中实现 Date 类型与 LocalDate 或 LocalDateTime 之间的相互转换。这使得在不同的日期时间 API 之间进行操作和处理更加方便灵活。</p>
<p>希望本文能对您有所帮助！</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 常用命令 | pwgen 详解</title>
    <url>/2023/04/03/linux-commands-pwgen/</url>
    <content><![CDATA[<p><code>pwgen</code> 是一个生成密码的小工具，可以通过参数生成满足各种条件的密码，如生成的密码至少要包含一个特殊字符，或生成的密码不要包含数字，或生成长度为 16 的密码等。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在 Ubuntu 操作系统，可以直接通过 apt-get 方式安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install pwgen</span><br></pre></td></tr></table></figure>
<p>在 CentOS 操作系统，需要先安装 epel-release 软件包后才能使用 yum 方式安装 pwgen。</p>
<p>安装 epel-release：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>
<p>安装 pwgen：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y pwgen</span><br></pre></td></tr></table></figure>
<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwgen [ 选项 ] [ 密码长度 ] [ 密码数量 ]</span><br></pre></td></tr></table></figure>
<p>例如，生成 4 个长度为 8 的密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwgen 8 4</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen 8 4</span><br><span class="line">Hah8eeth ies6Yuxu iemoo1Ko aeB7shu4</span><br></pre></td></tr></table></figure>
<h2 id="pwgen-支持的选项"><a href="#pwgen-支持的选项" class="headerlink" title="pwgen 支持的选项"></a>pwgen 支持的选项</h2><div class="table-container">
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-c 或 —capitalize</td>
<td>在密码中至少包含一个大写字母</td>
</tr>
<tr>
<td>-A 或 —no-capitalize</td>
<td>不在密码中包含大写字母</td>
</tr>
<tr>
<td>-n 或 —numerals</td>
<td>在密码中至少包含一个数字</td>
</tr>
<tr>
<td>-0 或 —no-numerals</td>
<td>不在密码中包含数字</td>
</tr>
<tr>
<td>-y 或 —symbols</td>
<td>在密码中至少包括一个特殊符号</td>
</tr>
<tr>
<td>-r <chars> 或 —remove-chars=<chars></td>
<td>生成的密码不要包含字符集中任何字符</td>
</tr>
<tr>
<td>-s 或 —secure</td>
<td>生成完全随机的密码</td>
</tr>
<tr>
<td>-B 或 —ambiguous</td>
<td>不要在密码中包含模棱两可的字符</td>
</tr>
<tr>
<td>-h 或 —help</td>
<td>打印帮助信息</td>
</tr>
<tr>
<td>-H 或 —sha1=path/to/file[#seed]</td>
<td>使用指定文件的 sha1 哈希值作为（不那么）随机生成器</td>
</tr>
<tr>
<td>-C</td>
<td>以列的形式打印生成的密码</td>
</tr>
<tr>
<td>-1</td>
<td>不以列的形式打印生成的密码</td>
</tr>
<tr>
<td>-v 或 —no-vowels</td>
<td>不要使用任何元音字母，以避免出现偶然的不友好的单词。</td>
</tr>
</tbody>
</table>
</div>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>1、生成 8 个长度为 16 并且不要包含大写字母的密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen -A 16 8</span><br><span class="line">misive3ij3eebahz aiboo7ahhadu7kei soh6iez4tho4mai4 ruuthei6zoshie3u</span><br><span class="line">oop3shau4oor0ohc oomaid8aephaehai sahvamahyuibaa2c fai0ainaik1waeph</span><br></pre></td></tr></table></figure>
<p>2、生成 8 个长度为 16 并且不要包含大写字母和数字的密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen -A0 16 8</span><br><span class="line">eequahcaejiizooc thexeecaceizeeve heuxengeequiexai uquahsongoozohah</span><br><span class="line">uogumoochaelocoo oechiengiemaephi teesohceezaishoh wierohchoochehoo</span><br></pre></td></tr></table></figure>
<p>3、生成 10 个长度为 16 并且不要包含 y, a, b, c 这四个字符的密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen -r yabc 16 10</span><br><span class="line">eiuiVf10GInYqfqu tDLIoPgOdCZSGI4G KdTVlINs7vSfSlZE r10kMlEe4AOA7n0G</span><br><span class="line">CUiQZpLPWn6GpQrl 2QKjdCt71zidk2v8 Rl62WFT4Q0XioZml CDGLVuIN4Dq0VLvi</span><br><span class="line">hjfPLKiV6hGdT079 hx3Al0ZBkupKVMH9</span><br></pre></td></tr></table></figure>
<p>4、生成 10 个长度为 16 并且不要包含 y, a, b, c 这四个字符和大写字母的密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen -Ar yabc 16 10</span><br><span class="line">h9dfmhe9gum1sl76 50nggeu83f4h3qxv f7u7l9ssqqj4utvr 87nuqze1unlnler9</span><br><span class="line">n959l8eo1407uswz 2uffqtzor8iohxjs e45fzpsr0sedu7n4 564ld4nh0rttqmn0</span><br><span class="line">x4xvqekswq6mv5l8 s8f4q23qmhue3pvf</span><br></pre></td></tr></table></figure>
<p>注意，字符集需要紧跟在参数 <code>-r</code> 后面，如以下命令会出错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen -rA yabc 16 10</span><br><span class="line">Invalid password length: yabc</span><br></pre></td></tr></table></figure>
<p>5、以文件 <em>/opt/tt230330.log</em> 的 sha1 哈希值作为随机数生成器，生成 2 个长度为 8 的密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen -H /opt/tt230330.<span class="built_in">log</span> 8 2</span><br><span class="line">ahT0wuka aaV3sohv</span><br></pre></td></tr></table></figure>
<p>6、生成两个长度为 32 并且不包含大写字母和数字、但必须至少包含一个特殊符号的密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen -Ay0 32 2</span><br><span class="line">ealaechohheiwei*g.u-xooquopeenee me]ozeicoo<span class="string">&quot;chee,hohkieweeth%ahmu</span></span><br></pre></td></tr></table></figure>
<p>7、生成两个长度为 32 并且不包含大写字母和数字、但必须至少包含一个特殊符号的密码，不分列的形式打印（即以一列的形式输出）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen -Ay01 32 2</span><br><span class="line">aiguipiefaivaeyu(vei`roox:isah*c</span><br><span class="line">vaibohbee&#123;sh&gt;eiruquiefueseigeigi</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Linux常用命令</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Logstash如何将JSON第二层级的数据解析到第一层级</title>
    <url>/2023/03/28/how-to-parse-json-from-the-second-level-to-the-root-level-in-logstash/</url>
    <content><![CDATA[<p>此示例演示如何使用 Logstash 将 JSON 第二层级的数据解析到第一层级（JSON 根）。</p>
<p>例如，原始 JSON 数据格式如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;distinct_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;u24a21a5e262debf&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span><span class="string">&quot;1679912055733&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time_offset&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;track&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;event&quot;</span><span class="punctuation">:</span><span class="string">&quot;ExposureView&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;$app_version&quot;</span><span class="punctuation">:</span><span class="string">&quot;8.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$wifi&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$ip&quot;</span><span class="punctuation">:</span><span class="string">&quot;39.144.27.121&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$province&quot;</span><span class="punctuation">:</span><span class="string">&quot;河南&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$city&quot;</span><span class="punctuation">:</span><span class="string">&quot;郑州&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$screen_width&quot;</span><span class="punctuation">:</span><span class="number">390</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$screen_height&quot;</span><span class="punctuation">:</span><span class="number">844</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$os&quot;</span><span class="punctuation">:</span><span class="string">&quot;iOS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$manufacturer&quot;</span><span class="punctuation">:</span><span class="string">&quot;Apple&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$model&quot;</span><span class="punctuation">:</span><span class="string">&quot;iPhone14,5&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$os_version&quot;</span><span class="punctuation">:</span><span class="string">&quot;16.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$latitude&quot;</span><span class="punctuation">:</span><span class="string">&quot;34.740911&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;$longitude&quot;</span><span class="punctuation">:</span><span class="string">&quot;113.665855&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;product_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;0vYqgWyuBBwDA8u8eQ7tqNjWOC5&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;product_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;进口香蕉牛奶200ml*12盒&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;product_classify&quot;</span><span class="punctuation">:</span><span class="string">&quot;食品饮料/饮料冲调/牛奶&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;product_price&quot;</span><span class="punctuation">:</span><span class="number">309</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uuid&quot;</span><span class="punctuation">:</span><span class="string">&quot;85552fad9e1348ef9b355fa656789bfc&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>现需要将 <code>properties</code> 节点下的数据解析到 JSON 的根下，期望结果如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;distinct_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;u24a21a5e262debf&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span><span class="string">&quot;1679912055733&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time_offset&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;track&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;event&quot;</span><span class="punctuation">:</span><span class="string">&quot;ExposureView&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$app_version&quot;</span><span class="punctuation">:</span><span class="string">&quot;8.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$wifi&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$ip&quot;</span><span class="punctuation">:</span><span class="string">&quot;39.144.27.121&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$province&quot;</span><span class="punctuation">:</span><span class="string">&quot;河南&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$city&quot;</span><span class="punctuation">:</span><span class="string">&quot;郑州&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$screen_width&quot;</span><span class="punctuation">:</span><span class="number">390</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$screen_height&quot;</span><span class="punctuation">:</span><span class="number">844</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$os&quot;</span><span class="punctuation">:</span><span class="string">&quot;iOS&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$manufacturer&quot;</span><span class="punctuation">:</span><span class="string">&quot;Apple&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$model&quot;</span><span class="punctuation">:</span><span class="string">&quot;iPhone14,5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$os_version&quot;</span><span class="punctuation">:</span><span class="string">&quot;16.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$latitude&quot;</span><span class="punctuation">:</span><span class="string">&quot;34.740911&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;$longitude&quot;</span><span class="punctuation">:</span><span class="string">&quot;113.665855&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;product_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;0vYqgWyuBBwDA8u8eQ7tqNjWOC5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;product_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;进口香蕉牛奶200ml*12盒&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;product_classify&quot;</span><span class="punctuation">:</span><span class="string">&quot;食品饮料/饮料冲调/牛奶&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;product_price&quot;</span><span class="punctuation">:</span><span class="number">309</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uuid&quot;</span><span class="punctuation">:</span><span class="string">&quot;85552fad9e1348ef9b355fa656789bfc&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>在本示例中，假设要处理的数据在 <em>/mnt/e/log/ios.log</em> 文件中，那么 Logstash 处理文件 <em>logstash-test.conf</em> 配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">		file &#123;</span><br><span class="line">				path =&gt; [&quot;/mnt/e/log/ios.log&quot;]</span><br><span class="line">				type =&gt; &quot;log&quot;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">    json &#123;</span><br><span class="line">        source =&gt; &quot;message&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutate &#123;</span><br><span class="line">        add_field =&gt; &#123;&quot;@tmp&quot; =&gt; &quot;%&#123;properties&#125;&quot;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    json &#123;</span><br><span class="line">        source =&gt; &quot;@tmp&quot;</span><br><span class="line">        remove_field =&gt; [&quot;@tmp&quot;, &quot;properties&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">		stdout &#123;</span><br><span class="line">				codec =&gt; rubydebug &#123; metadata =&gt; true &#125;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用 <code>mutate</code> 将 <code>properties</code> 字段内容先赋给 <code>@tmp</code> 字段，再使用 <code>json</code> 解析 <code>@tmp</code> 字段，然后移除不需要的字段 <code>@tmp</code> 和 <code>properties</code>。</p>
<p>指定配置文件，运行 Logstash，本示例中 logstash 命令位于 <em>/usr/share/logstash/bin</em> 目录下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/logstash/bin/logstash -f /opt/logstash-test/logstash-test.conf</span><br></pre></td></tr></table></figure>
<p>使用 <code>echo</code> 命令往文件 <em>/mnt/e/log/ios.log</em> 写入一行记录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;&quot;distinct_id&quot;:&quot;u24a21a5e262debf&quot;,&quot;time&quot;:&quot;1679912055733&quot;,&quot;time_offset&quot;:&quot;0&quot;,&quot;type&quot;:&quot;track&quot;,&quot;event&quot;:&quot;ExposureView&quot;,&quot;properties&quot;:&#123;&quot;$app_version&quot;:&quot;8.3&quot;,&quot;$wifi&quot;:true,&quot;$ip&quot;:&quot;39.144.27.121&quot;,&quot;$province&quot;:&quot;河南&quot;,&quot;$city&quot;:&quot;郑州&quot;,&quot;$screen_width&quot;:390,&quot;$screen_height&quot;:844,&quot;$os&quot;:&quot;iOS&quot;,&quot;$manufacturer&quot;:&quot;Apple&quot;,&quot;$model&quot;:&quot;iPhone14,5&quot;,&quot;$os_version&quot;:&quot;16.3.1&quot;,&quot;$latitude&quot;:&quot;34.740911&quot;,&quot;$longitude&quot;:&quot;113.665855&quot;,&quot;product_id&quot;:&quot;0vYqgWyuBBwDA8u8eQ7tqNjWOC5&quot;,&quot;product_name&quot;:&quot;进口香蕉牛奶200ml*12盒&quot;,&quot;product_classify&quot;:&quot;食品饮料/饮料冲调/牛奶&quot;,&quot;product_price&quot;:309&#125;,&quot;uuid&quot;:&quot;85552fad9e1348ef9b355fa656789bfc&quot;&#125;&#x27;</span> &gt;&gt; /mnt/e/log/ios.log</span><br></pre></td></tr></table></figure>
<p>可以看到，在终端打印的结果如下，<code>properties</code> 字段的数据已经被解析到 JSON 的根下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">            <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">           <span class="string">&quot;<span class="variable">$province</span>&quot;</span> =&gt; <span class="string">&quot;河南&quot;</span>,</span><br><span class="line">           <span class="string">&quot;<span class="variable">$latitude</span>&quot;</span> =&gt; <span class="string">&quot;34.740911&quot;</span>,</span><br><span class="line">      <span class="string">&quot;<span class="variable">$screen_height</span>&quot;</span> =&gt; 844,</span><br><span class="line">       <span class="string">&quot;<span class="variable">$manufacturer</span>&quot;</span> =&gt; <span class="string">&quot;Apple&quot;</span>,</span><br><span class="line">                <span class="string">&quot;host&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;airoo1Oi&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">        <span class="string">&quot;product_name&quot;</span> =&gt; <span class="string">&quot;进口香蕉牛奶200ml*12盒&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;<span class="variable">$os</span>&quot;</span> =&gt; <span class="string">&quot;iOS&quot;</span>,</span><br><span class="line">          <span class="string">&quot;@timestamp&quot;</span> =&gt; 2023-03-28T09:24:25.482409200Z,</span><br><span class="line">         <span class="string">&quot;distinct_id&quot;</span> =&gt; <span class="string">&quot;u24a21a5e262debf&quot;</span>,</span><br><span class="line">          <span class="string">&quot;product_id&quot;</span> =&gt; <span class="string">&quot;0vYqgWyuBBwDA8u8eQ7tqNjWOC5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;<span class="variable">$app_version</span>&quot;</span> =&gt; <span class="string">&quot;8.3&quot;</span>,</span><br><span class="line">                <span class="string">&quot;uuid&quot;</span> =&gt; <span class="string">&quot;85552fad9e1348ef9b355fa656789bfc&quot;</span>,</span><br><span class="line">       <span class="string">&quot;<span class="variable">$screen_width</span>&quot;</span> =&gt; 390,</span><br><span class="line">         <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> =&gt; <span class="string">&quot;16.3.1&quot;</span>,</span><br><span class="line">               <span class="string">&quot;<span class="variable">$city</span>&quot;</span> =&gt; <span class="string">&quot;郑州&quot;</span>,</span><br><span class="line">         <span class="string">&quot;time_offset&quot;</span> =&gt; <span class="string">&quot;0&quot;</span>,</span><br><span class="line">               <span class="string">&quot;<span class="variable">$wifi</span>&quot;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">          <span class="string">&quot;<span class="variable">$longitude</span>&quot;</span> =&gt; <span class="string">&quot;113.665855&quot;</span>,</span><br><span class="line">                <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;track&quot;</span>,</span><br><span class="line">                <span class="string">&quot;time&quot;</span> =&gt; <span class="string">&quot;1679912055733&quot;</span>,</span><br><span class="line">              <span class="string">&quot;<span class="variable">$model</span>&quot;</span> =&gt; <span class="string">&quot;iPhone14,5&quot;</span>,</span><br><span class="line">             <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;&#123;\&quot;distinct_id\&quot;:\&quot;u24a21a5e262debf\&quot;,\&quot;time\&quot;:\&quot;1679912055733\&quot;,\&quot;time_offset\&quot;:\&quot;0\&quot;,\&quot;type\&quot;:\&quot;track\&quot;,\&quot;event\&quot;:\&quot;ExposureView\&quot;,\&quot;properties\&quot;:&#123;\&quot;<span class="variable">$app_version</span>\&quot;:\&quot;8.3\&quot;,\&quot;<span class="variable">$wifi</span>\&quot;:true,\&quot;<span class="variable">$ip</span>\&quot;:\&quot;39.144.27.121\&quot;,\&quot;<span class="variable">$province</span>\&quot;:\&quot;河南\&quot;,\&quot;<span class="variable">$city</span>\&quot;:\&quot;郑州\&quot;,\&quot;<span class="variable">$screen_width</span>\&quot;:390,\&quot;<span class="variable">$screen_height</span>\&quot;:844,\&quot;<span class="variable">$os</span>\&quot;:\&quot;iOS\&quot;,\&quot;<span class="variable">$manufacturer</span>\&quot;:\&quot;Apple\&quot;,\&quot;<span class="variable">$model</span>\&quot;:\&quot;iPhone14,5\&quot;,\&quot;<span class="variable">$os_version</span>\&quot;:\&quot;16.3.1\&quot;,\&quot;<span class="variable">$latitude</span>\&quot;:\&quot;34.740911\&quot;,\&quot;<span class="variable">$longitude</span>\&quot;:\&quot;113.665855\&quot;,\&quot;product_id\&quot;:\&quot;0vYqgWyuBBwDA8u8eQ7tqNjWOC5\&quot;,\&quot;product_name\&quot;:\&quot;进口香蕉牛奶200ml*12盒\&quot;,\&quot;product_classify\&quot;:\&quot;食品饮料/饮料冲调/牛奶\&quot;,\&quot;product_price\&quot;:309&#125;,\&quot;uuid\&quot;:\&quot;85552fad9e1348ef9b355fa656789bfc\&quot;&#125;&quot;</span>,</span><br><span class="line">       <span class="string">&quot;product_price&quot;</span> =&gt; 309,</span><br><span class="line">               <span class="string">&quot;event&quot;</span> =&gt; <span class="string">&quot;ExposureView&quot;</span>,</span><br><span class="line">    <span class="string">&quot;product_classify&quot;</span> =&gt; <span class="string">&quot;食品饮料/饮料冲调/牛奶&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;log&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;file&quot;</span> =&gt; &#123;</span><br><span class="line">            <span class="string">&quot;path&quot;</span> =&gt; <span class="string">&quot;/mnt/e/log/ios.log&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">                 <span class="string">&quot;<span class="variable">$ip</span>&quot;</span> =&gt; <span class="string">&quot;39.144.27.121&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果不需要 <code>message</code>，<code>@version</code>，<code>log</code>，<code>host</code>，<code>@metadata</code>，<code>@timestamp</code> 等字段，可以把这些字段添加到 json 解析过滤器上的 <code>remove_field</code> 配置项，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">json &#123;</span><br><span class="line">        <span class="built_in">source</span> =&gt; <span class="string">&quot;@tmp&quot;</span></span><br><span class="line">        remove_field =&gt; [<span class="string">&quot;@tmp&quot;</span>, <span class="string">&quot;properties&quot;</span>, <span class="string">&quot;message&quot;</span>, <span class="string">&quot;@version&quot;</span>, <span class="string">&quot;log&quot;</span>, <span class="string">&quot;host&quot;</span>, <span class="string">&quot;@metadata&quot;</span>, <span class="string">&quot;@timestamp&quot;</span>]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>修改完之后重新运行 logstash，再往日志文件写一条日志数据，最终打印的结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="string">&quot;<span class="variable">$app_version</span>&quot;</span> =&gt; <span class="string">&quot;8.3&quot;</span>,</span><br><span class="line">       <span class="string">&quot;<span class="variable">$screen_width</span>&quot;</span> =&gt; 390,</span><br><span class="line">       <span class="string">&quot;<span class="variable">$manufacturer</span>&quot;</span> =&gt; <span class="string">&quot;Apple&quot;</span>,</span><br><span class="line">                <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;track&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;<span class="variable">$ip</span>&quot;</span> =&gt; <span class="string">&quot;39.144.27.121&quot;</span>,</span><br><span class="line">           <span class="string">&quot;<span class="variable">$province</span>&quot;</span> =&gt; <span class="string">&quot;河南&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;<span class="variable">$os</span>&quot;</span> =&gt; <span class="string">&quot;iOS&quot;</span>,</span><br><span class="line">           <span class="string">&quot;<span class="variable">$latitude</span>&quot;</span> =&gt; <span class="string">&quot;34.740911&quot;</span>,</span><br><span class="line">               <span class="string">&quot;event&quot;</span> =&gt; <span class="string">&quot;ExposureView&quot;</span>,</span><br><span class="line">          <span class="string">&quot;product_id&quot;</span> =&gt; <span class="string">&quot;0vYqgWyuBBwDA8u8eQ7tqNjWOC5&quot;</span>,</span><br><span class="line">               <span class="string">&quot;<span class="variable">$wifi</span>&quot;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">              <span class="string">&quot;<span class="variable">$model</span>&quot;</span> =&gt; <span class="string">&quot;iPhone14,5&quot;</span>,</span><br><span class="line">       <span class="string">&quot;product_price&quot;</span> =&gt; 309,</span><br><span class="line">                <span class="string">&quot;time&quot;</span> =&gt; <span class="string">&quot;1679912055733&quot;</span>,</span><br><span class="line">    <span class="string">&quot;product_classify&quot;</span> =&gt; <span class="string">&quot;食品饮料/饮料冲调/牛奶&quot;</span>,</span><br><span class="line">        <span class="string">&quot;product_name&quot;</span> =&gt; <span class="string">&quot;进口香蕉牛奶200ml*12盒&quot;</span>,</span><br><span class="line">         <span class="string">&quot;distinct_id&quot;</span> =&gt; <span class="string">&quot;u24a21a5e262debf&quot;</span>,</span><br><span class="line">               <span class="string">&quot;<span class="variable">$city</span>&quot;</span> =&gt; <span class="string">&quot;郑州&quot;</span>,</span><br><span class="line">         <span class="string">&quot;time_offset&quot;</span> =&gt; <span class="string">&quot;0&quot;</span>,</span><br><span class="line">         <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> =&gt; <span class="string">&quot;16.3.1&quot;</span>,</span><br><span class="line">      <span class="string">&quot;<span class="variable">$screen_height</span>&quot;</span> =&gt; 844,</span><br><span class="line">          <span class="string">&quot;<span class="variable">$longitude</span>&quot;</span> =&gt; <span class="string">&quot;113.665855&quot;</span>,</span><br><span class="line">                <span class="string">&quot;uuid&quot;</span> =&gt; <span class="string">&quot;85552fad9e1348ef9b355fa656789bfc&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>ELK</tag>
        <tag>Logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL表添加字段时报错：1062 - Duplicate entry &#39;xxxx&#39; for key &#39;idx_unique&#39;</title>
    <url>/2023/07/05/mysql-add-column-error-duplicate-entry-xxx-for-key-idx-unique/</url>
    <content><![CDATA[<p>当我们向一个已存在的 MySQL 表中添加新字段时，有时会遇到 1062 错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1062 - Duplicate entry &#x27;xxxx&#x27; for key &#x27;idx_unique&#x27;</span><br></pre></td></tr></table></figure>
<p>这个报错的含义是在一个唯一索引（unique index）下有重复的值。</p>
<p>MySQL 官方文档<a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-online-ddl-limitations.html">《InnoDB 在线 DDL 限制》</a>有一段关于该错误的说明，原文内容如下：</p>
<blockquote>
<p>When running an online DDL operation, the thread that runs the <code>[ALTER TABLE](https://dev.mysql.com/doc/refman/5.7/en/alter-table.html)</code> statement applies an online log of DML operations that were run concurrently on the same table from other connection threads. When the DML operations are applied, it is possible to encounter a duplicate key entry error (ERROR 1062 (23000): Duplicate entry), even if the duplicate entry is only temporary and would be reverted by a later entry in the online log. This is similar to the idea of a foreign key constraint check in <code>InnoDB</code> in which constraints must hold during a transaction.</p>
</blockquote>
<p>中文大概意思是：</p>
<p>当执行像 <code>ALTER TABLE</code> 等 DDL 语句时，会记录同时期对该表的 DML 操作。执行 DDL 语句时，会应用这些 DML 操作。如果其中的某个 DML 操作导致了重复键错误（即 ERROR 1062 (23000): Duplicate entry），那么 DDL 语句也会失败，即使该重复键只是暂时的，最终会被后续 DML 操作撤消。这类似于 InnoDB 数据库的外键约束检查，一个事务内部，外键约束必须被满足。</p>
<p>举一个例子，我的生产环境 MySQL 版本是 5.7.31，表 <code>tb_post</code> 的存储引擎是 InnoDB，主键是 <code>id</code>，唯一索引由 <code>post_id</code>、<code>channel</code>、<code>dt</code> 三个字段组成，具体建表语句如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tb_post` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `post_id` <span class="type">varchar</span>(<span class="number">127</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;POST ID&#x27;</span>,</span><br><span class="line">  `channel` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;渠道&#x27;</span>,</span><br><span class="line">  `dt` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;日期&#x27;</span>,</span><br><span class="line">  `pv_tt` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;今日pv&#x27;</span>,</span><br><span class="line">  `uv_tt` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;今日访问uv&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `idx_unique` (`post_id`,`channel`,`dt`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;POST每日指标&#x27;</span></span><br></pre></td></tr></table></figure>
<p>该表的数据指标——今日 uv、pv 由 Flink 计算后写入，写操作频繁。</p>
<p>现在该表需要新增用户点赞数量的字段 <code>like_tt</code>，执行 SQL：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_post </span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> like_tt <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;今日点赞数量&#x27;</span></span><br></pre></td></tr></table></figure>
<p>结果报错，错误信息提示如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1062</span> <span class="operator">-</span> Duplicate entry <span class="string">&#x27;poeG8yefW3XwxK6zvNy-APP-2023-07-05&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;idx_unique&#x27;</span></span><br></pre></td></tr></table></figure>
<p>网上的解决方法有多种，其中包括：</p>
<ul>
<li>临时删除该唯一索引，添加字段后，再恢复唯一索引。</li>
<li>给表加表锁。</li>
</ul>
<p>虽然通过以上方法能做到给表新增字段，但或多或少都会给现有业务造成影响，如出现重复数据记录、数据写不进等。</p>
<p>为尽量少地影响业务，最好的解决方法是通过在 SQL 的末尾加上 <code>ALGORITHM=COPY</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_post </span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> like_tt <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;今日点赞数量&#x27;</span>, ALGORITHM<span class="operator">=</span><span class="keyword">COPY</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 常用命令 | head 详解</title>
    <url>/2023/03/22/linux-commands-head/</url>
    <content><![CDATA[<p>Linux 命令行工具提供了足够丰富的命令用于管理服务器上的文件和目录。其中最常用的命令之一是 <code>head</code>，它允许我们只查看文件的前几行内容，这在查看超大文件（文件大小为几个 GB 以上）时尤其有用。在这篇博文中，我们将详细讨论该命令的使用说明、注意事项、技巧窍门等，以充分利用该命令。</p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p><code>head</code> 命令用于显示一个文件的前几行。要使用该命令，只需输入 <code>head</code> 和你想查看的文件名即可。例如，要查看一个名为 <em>example.log</em> 的文件的前10行，你可以输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> -n 10 example.log</span><br></pre></td></tr></table></figure>
<p>其中，<code>-n</code> 选项用于指定要查看的行数。如果不指定数字，它将默认为 10 行。还可以使用 <code>-</code> 号来表示除了文件最后多少行外输出所有行内容。例如，要查看文件的所有行，但不包括最后的 11 行，可以输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> -n -11 example.log</span><br></pre></td></tr></table></figure>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>在使用 <code>head</code> 命令时，有两个地方需要注意：</p>
<p>首先，注意不要使用 <code>&gt;</code> 操作符意外覆盖原来的文件。例如，执行以下命令会导致 <em>example.log</em> 文件被其前 10 行的内容覆盖，相当于 <em>example.log</em> 文件只保留了前 10 行内容，其他所有内容被抹去。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> -n 10 example.log &gt; example.log</span><br></pre></td></tr></table></figure>
<p>其次，要注意 <code>head</code> 不会以任何方式修改文件。如果要编辑该文件，则需要使用文本编辑器或其他命令行工具。</p>
<h2 id="技巧窍门"><a href="#技巧窍门" class="headerlink" title="技巧窍门"></a>技巧窍门</h2><p>以下这些提示和技巧，可帮助我们最大限度地使用 <code>head</code> 命令：</p>
<ul>
<li>查看多个文件时，使用 <code>-q</code> 选项隐藏文件名；</li>
<li>查看多个文件时，使用 <code>-v</code> 选项显示文件名；</li>
<li>使用 <code>-c</code> 选项查看文件的前几个字节而不是前几行；</li>
<li>使用 <code>-f</code> 选项可以在添加新行时实时查看文件的前几行。</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>在使用 <code>head</code> 命令之前，我们先创建两个演示的日志文件。本示例是在 <em>/mnt/e/linux-commands/head</em> 目录下，创建两个文件 <em>a.log</em> 和 <em>b.log</em>，文件行数都为 15 行，内容如下：</p>
<p>a.log</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a_1</span><br><span class="line">a_2</span><br><span class="line">a_3</span><br><span class="line">a_4</span><br><span class="line">a_5</span><br><span class="line">a_6</span><br><span class="line">a_7</span><br><span class="line">a_8</span><br><span class="line">a_9</span><br><span class="line">a_10</span><br><span class="line">a_11</span><br><span class="line">a_12</span><br><span class="line">a_13</span><br><span class="line">a_14</span><br><span class="line">a_15</span><br></pre></td></tr></table></figure>
<p>b.log</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b_1</span><br><span class="line">b_2</span><br><span class="line">b_3</span><br><span class="line">b_4</span><br><span class="line">b_5</span><br><span class="line">b_6</span><br><span class="line">b_7</span><br><span class="line">b_8</span><br><span class="line">b_9</span><br><span class="line">b_10</span><br><span class="line">b_11</span><br><span class="line">b_12</span><br><span class="line">b_13</span><br><span class="line">b_14</span><br><span class="line">b_15</span><br></pre></td></tr></table></figure>
<p>我们可以使用 Linux 命令 <code>echo</code> 和 for 循环来生成这两个日志文件，如生成 <em>a.log</em> 文件的命令如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> &#123;1..15&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> a_<span class="variable">$v</span> &gt;&gt; a.log</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>接下来，开始执行 <code>head</code> 命令来查看不同参数下的执行效果。</p>
<p>1、直接使用 <code>head</code> 命令，不带其他选项，则默认输出文件前 10 行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">head</span> a.log</span><br><span class="line">a_1</span><br><span class="line">a_2</span><br><span class="line">a_3</span><br><span class="line">a_4</span><br><span class="line">a_5</span><br><span class="line">a_6</span><br><span class="line">a_7</span><br><span class="line">a_8</span><br><span class="line">a_9</span><br><span class="line">a_10</span><br></pre></td></tr></table></figure>
<p>2、输出文件 <em>a.log</em> 前 5 行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">head</span> -n 5 a.log</span><br><span class="line">a_1</span><br><span class="line">a_2</span><br><span class="line">a_3</span><br><span class="line">a_4</span><br><span class="line">a_5</span><br></pre></td></tr></table></figure>
<p>3、将文件 <em>a.log</em> 前三行内容输出到 <em>c.log</em> 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">head</span> -n 3 a.log &gt;&gt; c.log</span><br></pre></td></tr></table></figure>
<p>查看文件 <em>c.log</em> 内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">head</span> <span class="built_in">cat</span> c.log</span><br><span class="line">a_1</span><br><span class="line">a_2</span><br><span class="line">a_3</span><br></pre></td></tr></table></figure>
<p>4、使用 <code>-v</code> 选项，输出文件 a.log 前三行，并输出文件名称：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">head</span> -v -n 3 a.log</span><br><span class="line">==&gt; a.log &lt;==</span><br><span class="line">a_1</span><br><span class="line">a_2</span><br><span class="line">a_3</span><br></pre></td></tr></table></figure>
<p><code>-v</code> 选项在处理多个文件的时候可以区分内容是由哪个文件输出的，例如，分别输出文件 <em>a.log</em> 和 <em>b.log</em> 前 3 行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">head</span> -v -n 3 a.log b.log</span><br><span class="line">==&gt; a.log &lt;==</span><br><span class="line">a_1</span><br><span class="line">a_2</span><br><span class="line">a_3</span><br><span class="line"></span><br><span class="line">==&gt; b.log &lt;==</span><br><span class="line">b_1</span><br><span class="line">b_2</span><br><span class="line">b_3</span><br></pre></td></tr></table></figure>
<p>5、如果在处理多个文件时不想输出文件名称，则可以使用 <code>-q</code> 选项，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">head</span> -q -n 3 a.log b.log</span><br><span class="line">a_1</span><br><span class="line">a_2</span><br><span class="line">a_3</span><br><span class="line">b_1</span><br><span class="line">b_2</span><br><span class="line">b_3</span><br></pre></td></tr></table></figure>
<p>6、如果想输出文件除了最后 n 行外的其他所有行，这时 <code>-n</code> 选项的参数可以传负数。如以下示例输出文件 <code>a.log</code> 除了最后 11 行之外的其他所有行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  <span class="built_in">head</span> -n -11 a.log</span><br><span class="line">a_1</span><br><span class="line">a_2</span><br><span class="line">a_3</span><br><span class="line">a_4</span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>总之，<code>head</code> 命令是快速查看文件前几行的强大工具。为最大限度使用此命令，简化在 Linux 命令行上的文件管理任务，本文详细讨论该命令的使用说明、注意事项、技巧窍门等，同时还通过列举一些使用示例来加深对该命令理解。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Linux常用命令</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | IP 地址函数</title>
    <url>/2023/05/10/presto-ip-functions/</url>
    <content><![CDATA[<h2 id="ip-prefix-ip-address-prefix-bits-→-ipprefix"><a href="#ip-prefix-ip-address-prefix-bits-→-ipprefix" class="headerlink" title="ip_prefix(ip_address, prefix_bits) → ipprefix"></a>ip_prefix(<em>ip_address</em>, <em>prefix_bits</em>) → ipprefix</h2><p>使用子网掩码长度 <code>prefix_bits</code>，返回 IP 地址 <code>ip_address</code> 的 IP 前缀。<code>ip_address</code> 可以是 <code>VARCHAR</code> 类型或者 <code>IPADDRESS</code> 类型。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ip_prefix(<span class="built_in">CAST</span>(<span class="string">&#x27;192.168.255.255&#x27;</span> <span class="keyword">AS</span> IPADDRESS), <span class="number">9</span>);</span><br><span class="line"><span class="keyword">SELECT</span> ip_prefix(<span class="string">&#x27;192.168.255.255&#x27;</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 以上两条语句的输出结果均为：</span></span><br><span class="line"><span class="comment">-- 192.128.0.0/9</span></span><br></pre></td></tr></table></figure>
<h2 id="ip-subnet-min-ip-prefix-→-ip-address"><a href="#ip-subnet-min-ip-prefix-→-ip-address" class="headerlink" title="ip_subnet_min(ip_prefix) → ip_address"></a>ip_subnet_min(<em>ip_prefix</em>) → ip_address</h2><p>返回子网网段 <code>ip_prefix</code> 指定的最小 IP 地址。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ip_subnet_min(IPPREFIX <span class="string">&#x27;192.168.255.255/9&#x27;</span>);</span><br><span class="line"><span class="comment">-- 输出结果为 192.128.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ip_subnet_min(IPPREFIX <span class="string">&#x27;2001:0db8:85a3:0001:0001:8a2e:0370:7334/48&#x27;</span>);</span><br><span class="line"><span class="comment">-- 输出结果为 2001:db8:85a3::</span></span><br></pre></td></tr></table></figure>
<h2 id="ip-subnet-max-ip-prefix-→-ip-address"><a href="#ip-subnet-max-ip-prefix-→-ip-address" class="headerlink" title="ip_subnet_max(ip_prefix) → ip_address"></a>ip_subnet_max(<em>ip_prefix</em>) → ip_address</h2><p>返回子网网段 <code>ip_prefix</code> 指定的最大 IP 地址。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ip_subnet_max(IPPREFIX <span class="string">&#x27;192.64.0.0/9&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 192.127.255.255</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ip_subnet_max(IPPREFIX <span class="string">&#x27;2001:0db8:85a3:0001:0001:8a2e:0370:7334/48&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 2001:db8:85a3:ffff:ffff:ffff:ffff:ffff</span></span><br></pre></td></tr></table></figure>
<h2 id="ip-subnet-range-ip-prefix"><a href="#ip-subnet-range-ip-prefix" class="headerlink" title="ip_subnet_range(ip_prefix)"></a>ip_subnet_range(<em>ip_prefix</em>)</h2><p>返回一个包含两个 IP 地址的数组。该数组分别包含子网网段 <code>ip_prefix</code> 指定的最小 IP 地址和最大 IP 地址。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ip_subnet_range(IPPREFIX <span class="string">&#x27;1.2.3.160/24&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 [&#x27;1.2.3.0&#x27;,&#x27;1.2.3.255&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ip_subnet_range(IPPREFIX <span class="string">&#x27;64:ff9b::52f4/120&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 [&#x27;64:ff9b::5200&#x27;,&#x27;64:ff9b::52ff&#x27;]</span></span><br></pre></td></tr></table></figure>
<h2 id="is-subnet-of-ip-prefix-ip-address-→-boolean"><a href="#is-subnet-of-ip-prefix-ip-address-→-boolean" class="headerlink" title="is_subnet_of(ip_prefix, ip_address) → boolean"></a>is_subnet_of(<em>ip_prefix</em>, <em>ip_address</em>) → boolean</h2><p>如果 <code>ip_address</code> 是 <code>ip_prefix</code> 指定子网网段内的地址，则返回 <code>true</code>。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> is_subnet_of(IPPREFIX <span class="string">&#x27;1.2.3.128/26&#x27;</span>, IPADDRESS <span class="string">&#x27;1.2.3.129&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> is_subnet_of(IPPREFIX <span class="string">&#x27;64:fa9b::17/64&#x27;</span>, IPADDRESS <span class="string">&#x27;64:ffff::17&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 false</span></span><br></pre></td></tr></table></figure>
<h2 id="is-subnet-of-ip-prefix1-ip-prefix2-→-boolean"><a href="#is-subnet-of-ip-prefix1-ip-prefix2-→-boolean" class="headerlink" title="is_subnet_of(ip_prefix1, ip_prefix2) → boolean"></a>is_subnet_of(<em>ip_prefix1</em>, <em>ip_prefix2</em>) → boolean</h2><p>如果 <code>ip_prefix2</code> 是 <code>ip_prefix1</code> 的子网网段，则返回 <code>true</code>。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> is_subnet_of(IPPREFIX <span class="string">&#x27;192.168.3.131/26&#x27;</span>, IPPREFIX <span class="string">&#x27;192.168.3.144/30&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> is_subnet_of(IPPREFIX <span class="string">&#x27;64:ff9b::17/64&#x27;</span>, IPPREFIX <span class="string">&#x27;64:ffff::17/64&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> is_subnet_of(IPPREFIX <span class="string">&#x27;192.168.3.131/26&#x27;</span>, IPPREFIX <span class="string">&#x27;192.168.3.131/26&#x27;</span>); </span><br><span class="line"><span class="comment">-- 输出结果为 true</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | JSON 与支持的数据类型之间相互转换</title>
    <url>/2023/05/26/how-to-convert-between-json-and-presto-data-types/</url>
    <content><![CDATA[<h2 id="Presto-支持的各种数据类型的值如何转换为-JSON-格式？"><a href="#Presto-支持的各种数据类型的值如何转换为-JSON-格式？" class="headerlink" title="Presto 支持的各种数据类型的值如何转换为 JSON 格式？"></a>Presto 支持的各种数据类型的值如何转换为 JSON 格式？</h2><p>Presto 支持将如下基本数据类型的值转换为 JSON 格式：</p>
<p><code>BOOLEAN</code>、<code>TINYINT</code>、<code>SMALLINT</code>、<code>INTEGER</code>、<code>BIGINT</code>、<code>REAL</code>、<code>DOUBLE</code>、<code>VARCHAR</code>。</p>
<p>此外，Presto 同样支持将满足以下条件的数组（<code>ARRAY</code>）、映射（<code>MAP</code>）或行（<code>ROW</code>）转换为 JSON 格式：</p>
<ul>
<li>数组的元素类型须为上述某一受支持的数据类型；</li>
<li>映射的键类型是 <code>VARCHAR</code> 且值类型须为上述某一受支持的数据类型；</li>
<li>行的每个字段类型均须为上述某一受支持的数据类型。</li>
</ul>
<p><strong>示例</strong></p>
<p><strong>例 1</strong> <code>NULL</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">NULL</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="keyword">NULL</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 2</strong> <code>INTEGER</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="number">1</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="number">1</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 3</strong> <code>BIGINT</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="number">9223372036854775807</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">        _col0</span><br><span class="line"><span class="comment">---------------------</span></span><br><span class="line"> <span class="number">9223372036854775807</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 4</strong> <code>VARCHAR</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;abc&#x27;</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> &quot;abc&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 5</strong> <code>BOOLEAN</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="literal">true</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">true</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 6</strong> <code>DECIMAL</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="number">1.234</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="number">1.234</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 7</strong> 元素为整数的 <code>ARRAY</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">ARRAY</span>[<span class="number">1</span>, <span class="number">23</span>, <span class="number">456</span>] <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">   _col0</span><br><span class="line"><span class="comment">------------</span></span><br><span class="line"> [<span class="number">1</span>,<span class="number">23</span>,<span class="number">456</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 8</strong> 包含 NULL 元素的整数 <code>ARRAY</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">ARRAY</span>[<span class="number">1</span>, <span class="keyword">NULL</span>, <span class="number">456</span>] <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">    _col0</span><br><span class="line"><span class="comment">--------------</span></span><br><span class="line"> [<span class="number">1</span>,<span class="keyword">null</span>,<span class="number">456</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 9</strong> 元素为整数数组的 <code>ARRAY</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">ARRAY</span>[<span class="keyword">ARRAY</span>[<span class="number">1</span>, <span class="number">23</span>], <span class="keyword">ARRAY</span>[<span class="number">456</span>]] <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">     _col0</span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line"> [[<span class="number">1</span>,<span class="number">23</span>],[<span class="number">456</span>]]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 10</strong> <code>MAP</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(MAP_FROM_ENTRIES(<span class="keyword">ARRAY</span>[(<span class="string">&#x27;k1&#x27;</span>, <span class="number">1</span>), (<span class="string">&#x27;k2&#x27;</span>, <span class="number">23</span>), (<span class="string">&#x27;k3&#x27;</span>, <span class="number">456</span>)]) <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">           _col0</span><br><span class="line"><span class="comment">---------------------------</span></span><br><span class="line"> &#123;&quot;k1&quot;:<span class="number">1</span>,&quot;k2&quot;:<span class="number">23</span>,&quot;k3&quot;:<span class="number">456</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 11</strong> <code>ROW</code> 将换为 JSON：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="built_in">CAST</span>(<span class="type">ROW</span>(<span class="number">123</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="literal">true</span>) <span class="keyword">AS</span> <span class="type">ROW</span>(v1 <span class="type">BIGINT</span>, v2 <span class="type">VARCHAR</span>, v3 <span class="type">BOOLEAN</span>)) <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">      _col0</span><br><span class="line"><span class="comment">------------------</span></span><br><span class="line"> [<span class="number">123</span>,&quot;abc&quot;,<span class="literal">true</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong></p>
<p>在将 SQL 的 NULL 值转换成 JSON 格式时，并不只是简单地将其转换为 SQL 的 NULL 或 JSON 的 null。</p>
<p>如果一个字段的值恰好是 NULL，转换后的 JSON 结果会是一个 SQL NULL，而不是 JSON 的 null。但是，如果是一个包含 NULL 元素的数组或映射转换成 JSON，结果中的 NULL 会被保留为 null。</p>
<p>例如：</p>
<ul>
<li>包含 NULL 的数组 [1, 2, NULL, 4] 转换成 JSON 结果为 [1, 2, null, 4]</li>
<li>一个键对应的值是 NULL 的映射 {“key1”: 1, “key2”: NULL} 转换成 JSON 的结果为 {“key1”: 1, “key2”: null}</li>
</ul>
<p>也就是说，一个单独的 NULL 字段转换成 JSON 时，结果会是一个 SQL NULL。但如果是一个结构类型（如数组或映射）包含 NULL 转换成 JSON，NULL 值会被保留成 null。</p>
<p>另外，还有一个需要注意的点是，当从 SQL ROW 转换为 JSON 时，结果是一个 JSON 数组，而不是一个 JSON 对象。这是因为在 SQL 中，ROW 的位置比其名称更重要。</p>
<h2 id="从-JSON-转换"><a href="#从-JSON-转换" class="headerlink" title="从 JSON 转换"></a>从 JSON 转换</h2><p>Presto 支持将 JSON 数据转换为绝大部分内置数据类型，以及由这些类型构成的 ARRAY、MAP 和 ROW 等复杂数据类型。这极大地便利了 JSON 数据的处理和分析。</p>
<p>具体而言，Presto 支持将 JSON 数据转换为以下基本类型：</p>
<p><code>BOOLEAN</code>、<code>TINYINT</code>、<code>SMALLINT</code>、<code>INTEGER</code>、<code>BIGINT</code>、<code>REAL</code>、<code>DOUBLE</code>、<code>VARCHAR</code>。</p>
<p>Presto 也支持将满足以下条件的 JSON 数组和对象的数据转换为 <code>ARRAY</code> 和 <code>MAP</code> 类型：</p>
<ul>
<li>JSON 数组中的元素类型为上述基本类型之一，转换为 <code>ARRAY</code> 类型；</li>
<li>JSON 对象的键类型为 <code>VARCHAR</code> 且值类型为上述基本类型之一，转换为 <code>MAP</code> 类型。</li>
</ul>
<p><strong>示例</strong></p>
<p><strong>例 1</strong> JSON null 值转 <code>VARCHAR</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;null&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="keyword">NULL</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 2</strong> JSON 字符串值转 <code>INTEGER</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;1&#x27;</span> <span class="keyword">AS</span> <span class="type">INTEGER</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 3</strong> JSON 长整数值转 <code>BIGINT</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;9223372036854775807&#x27;</span> <span class="keyword">AS</span> <span class="type">BIGINT</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">        _col0</span><br><span class="line"><span class="comment">---------------------</span></span><br><span class="line"> <span class="number">9223372036854775807</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 4</strong> JSON 字符串值转 <code>VARCHAR</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;&quot;abc&quot;&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> abc</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 5</strong> JSON 布尔值转 <code>BOOLEAN</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;true&#x27;</span> <span class="keyword">AS</span> <span class="type">BOOLEAN</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">true</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 6</strong> JSON 小数值转 <code>DOUBLE</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;1.234&#x27;</span> <span class="keyword">AS</span> <span class="keyword">DOUBLE</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="number">1.234</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 7</strong> JSON 整数数组转 <code>ARRAY(INTEGER)</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;[1,23,456]&#x27;</span> <span class="keyword">AS</span> <span class="keyword">ARRAY</span>(<span class="type">INTEGER</span>));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">    _col0</span><br><span class="line"><span class="comment">--------------</span></span><br><span class="line"> [<span class="number">1</span>, <span class="number">23</span>, <span class="number">456</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 8</strong> 包含元素为 <code>null</code> 值的 JSON 整数数组转 <code>ARRAY(INTEGER)</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;[1,null,456]&#x27;</span> <span class="keyword">AS</span> <span class="keyword">ARRAY</span>(<span class="type">INTEGER</span>));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">     _col0</span><br><span class="line"><span class="comment">----------------</span></span><br><span class="line"> [<span class="number">1</span>, <span class="keyword">null</span>, <span class="number">456</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 9</strong> 元素为整数数组的 JSON 数组转 <code>ARRAY(ARRAY(INTEGER))</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;[[1,23],[456]]&#x27;</span> <span class="keyword">AS</span> <span class="keyword">ARRAY</span>(<span class="keyword">ARRAY</span>(<span class="type">INTEGER</span>)));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">      _col0</span><br><span class="line"><span class="comment">------------------</span></span><br><span class="line"> [[<span class="number">1</span>, <span class="number">23</span>], [<span class="number">456</span>]]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 10</strong> JSON 对象转 <code>MAP</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;&#123;&quot;k1&quot;:1,&quot;k2&quot;:23,&quot;k3&quot;:456&#125;&#x27;</span> <span class="keyword">AS</span> MAP(<span class="type">VARCHAR</span>, <span class="type">INTEGER</span>));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">         _col0</span><br><span class="line"><span class="comment">-----------------------</span></span><br><span class="line"> &#123;k1<span class="operator">=</span><span class="number">1</span>, k2<span class="operator">=</span><span class="number">23</span>, k3<span class="operator">=</span><span class="number">456</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 11</strong> JSON 对象转 <code>ROW</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;&#123;&quot;v1&quot;:123,&quot;v2&quot;:&quot;abc&quot;,&quot;v3&quot;:true&#125;&#x27;</span> <span class="keyword">AS</span> <span class="type">ROW</span>(v1 <span class="type">BIGINT</span>, v2 <span class="type">VARCHAR</span>, v3 <span class="type">BOOLEAN</span>));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">           _col0</span><br><span class="line"><span class="comment">---------------------------</span></span><br><span class="line"> &#123;v1<span class="operator">=</span><span class="number">123</span>, v2<span class="operator">=</span>abc, v3<span class="operator">=</span><span class="literal">true</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 12</strong> JSON 数组转 <code>ROW</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;[123,&quot;abc&quot;,true]&#x27;</span> <span class="keyword">AS</span> <span class="type">ROW</span>(v1 <span class="type">BIGINT</span>, v2 <span class="type">VARCHAR</span>, v3 <span class="type">BOOLEAN</span>));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">           _col0</span><br><span class="line"><span class="comment">---------------------------</span></span><br><span class="line"> &#123;v1<span class="operator">=</span><span class="number">123</span>, v2<span class="operator">=</span>abc, v3<span class="operator">=</span><span class="literal">true</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong></p>
<p>JSON 数组可以包含多种类型的元素，JSON 映射的值也可以是多种类型。这使得在某些情况下无法直接将它们转换为 SQL 数组和映射。为解决这个问题，Presto 支持数组和映射的部分转换。例如：</p>
<p><strong>例 13</strong> 转成元素为 JSON 的数组：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;[[1, 23], 456]&#x27;</span> <span class="keyword">AS</span> <span class="keyword">ARRAY</span>(JSON));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">     _col0</span><br><span class="line"><span class="comment">---------------</span></span><br><span class="line"> [[<span class="number">1</span>,<span class="number">23</span>], <span class="number">456</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 14</strong> 转成值类型为 JSON 的映射：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;&#123;&quot;k1&quot;: [1, 23], &quot;k2&quot;: 456&#125;&#x27;</span> <span class="keyword">AS</span> MAP(<span class="type">VARCHAR</span>, JSON));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">        _col0</span><br><span class="line"><span class="comment">---------------------</span></span><br><span class="line"> &#123;k1<span class="operator">=</span>[<span class="number">1</span>,<span class="number">23</span>], k2<span class="operator">=</span><span class="number">456</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 15</strong> 转成元素为 JSON 的数组：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;[null]&#x27;</span> <span class="keyword">AS</span> <span class="keyword">ARRAY</span>(JSON));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">--------</span></span><br><span class="line"> [<span class="keyword">null</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>另外，Presto 也支持将 JSON 数组和 JSON 对象转换为 <code>ROW</code> 类型，如：</p>
<p><strong>例 16</strong> JSON 数组转换为 <code>ROW</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;[1, 2, 3]&#x27;</span> <span class="keyword">AS</span> <span class="type">ROW</span>(x <span class="type">int</span>, y <span class="type">int</span>, z <span class="type">int</span>));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">      _col0</span><br><span class="line"><span class="comment">-----------------</span></span><br><span class="line"> &#123;x<span class="operator">=</span><span class="number">1</span>, y<span class="operator">=</span><span class="number">2</span>, z<span class="operator">=</span><span class="number">3</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p><strong>例 17</strong> JSON 对象转换为 <code>ROW</code> 类型：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;&#123;&quot;x&quot;: 1, &quot;y&quot;: 2&#125;&#x27;</span> <span class="keyword">AS</span> <span class="type">ROW</span>(x <span class="type">int</span>, y <span class="type">int</span>));</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">   _col0</span><br><span class="line"><span class="comment">------------</span></span><br><span class="line"> &#123;x<span class="operator">=</span><span class="number">1</span>, y<span class="operator">=</span><span class="number">2</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | JSON 函数</title>
    <url>/2023/05/27/presto-json-functions/</url>
    <content><![CDATA[<h2 id="is-json-scalar-json-→-boolean"><a href="#is-json-scalar-json-→-boolean" class="headerlink" title="is_json_scalar(json) → boolean"></a>is_json_scalar(<em>json</em>) → boolean</h2><p>判断 <code>json</code> 是否为标量（即 JSON 数字、JSON 字符串、<code>true</code>、<code>false</code> 或 <code>null</code>）。</p>
<p>示例 1</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> is_json_scalar(JSON <span class="string">&#x27;&quot;aaa&quot;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">true</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 2</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> is_json_scalar(JSON <span class="string">&#x27;&#123;&quot;x&quot;: 1, &quot;y&quot;: 2&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">false</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<h2 id="json-array-contains-json-value-→-boolean"><a href="#json-array-contains-json-value-→-boolean" class="headerlink" title="json_array_contains(json, value) → boolean"></a>json_array_contains(<em>json</em>, <em>value</em>) → boolean</h2><p>判断 <code>value</code> 是否存在于 <code>json</code>（一个包含 JSON 数组的字符串）中。</p>
<p>示例 1</p>
<p>判断整数 1 是否包含在 JSON 整数数组 [1, 2, 3] 中：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_array_contains(JSON <span class="string">&#x27;[1, 2, 3]&#x27;</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">true</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 2</p>
<p>判断字符串 1 是否包含在 JSON 整数数组 [1, 2, 3] 中：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_array_contains(JSON <span class="string">&#x27;[1, 2, 3]&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">false</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<h2 id="json-array-get-json-array-index-→-json"><a href="#json-array-get-json-array-index-→-json" class="headerlink" title="json_array_get(json_array, index) → json"></a>json_array_get(<em>json_array</em>, <em>index</em>) → json</h2><p>返回 <code>json_array</code> 中指定下标的元素。下标从 0 开始。</p>
<blockquote>
<p><strong>警告：</strong>这个函数的语义是错误的。如果提取的元素是一个字符串，它会被转换成一个无效的 JSON 值，该值没有正确地加上引号（该值不会被引号包围，任何内部的引号也不会被转义）。<br>我们不建议使用这个函数。它无法在不影响现有用法的情况下修复，并且在未来的版本中可能会被删除。</p>
</blockquote>
<p>示例 1</p>
<p>返回 JSON 数组 [“a”, [3, 9, “D”] 下标为 0  的元素。由于下标为 0 的元素是一个字符串，会被转换成一个无效的 JSON 值，即该值没有被引号包围（正确的结果应该是包含引号的 <code>&quot;a&quot;</code>）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_array_get(<span class="string">&#x27;[&quot;a&quot;, [3, 9, &quot;D&quot;], &quot;c&quot;]&#x27;</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> a</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>为更好地说明该函数存在的问题，我们可以将提取出来的结果（JSON 字符串类型）转换为 <code>VARCHAR</code>，此时会报 Cannot cast ‘a’ to varchar 的错误信息：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(json_array_get(<span class="string">&#x27;[&quot;a&quot;, [3, 9, &quot;D&quot;], &quot;c&quot;]&#x27;</span>, <span class="number">0</span>) <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">failed: Cannot cast <span class="string">&#x27;a&#x27;</span> <span class="keyword">to</span> <span class="type">varchar</span></span><br></pre></td></tr></table></figure>
<p>正确的 JSON 字符串类型（有被引号包围）转为 <code>VARCHAR</code> 如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;&quot;a&quot;&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> a</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 2</p>
<p>返回 JSON 数组 [“a”, [3, 9, “D”] 下标为 1  的元素：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_array_get(<span class="string">&#x27;[&quot;a&quot;, [3, 9, &quot;D&quot;], &quot;c&quot;]&#x27;</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">   _col0</span><br><span class="line"><span class="comment">-----------</span></span><br><span class="line"> [<span class="number">3</span>,<span class="number">9</span>,&quot;D&quot;]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 3</p>
<p>该函数也支持负数索引，以获取从数组的末尾索引元素：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_array_get(<span class="string">&#x27;[&quot;a&quot;, [3, 9, &quot;D&quot;], &quot;c&quot;]&#x27;</span>, <span class="number">-1</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> c</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 4</p>
<p>如果指定索引的元素不存在，该函数返回 null。如以下查询 SQL 语句均返回 null：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_array_get(<span class="string">&#x27;[]&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">SELECT</span> json_array_get(<span class="string">&#x27;[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&#x27;</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">SELECT</span> json_array_get(<span class="string">&#x27;[&quot;c&quot;, &quot;b&quot;, &quot;a&quot;]&#x27;</span>, <span class="number">-10</span>);</span><br></pre></td></tr></table></figure>
<p>返回结果：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="keyword">NULL</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<h2 id="json-array-length-json-→-bigint"><a href="#json-array-length-json-→-bigint" class="headerlink" title="json_array_length(json) → bigint"></a>json_array_length(<em>json</em>) → bigint</h2><p>返回 <code>json</code>（一个包含 JSON 数组的字符串）的数组长度。</p>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_array_length(<span class="string">&#x27;[1, 2, 3]&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<h2 id="json-extract-json-json-path-→-json"><a href="#json-extract-json-json-path-→-json" class="headerlink" title="json_extract(json, json_path) → json"></a>json_extract(<em>json</em>, <em>json_path</em>) → json</h2><p>在 <code>json</code>（一个包含 JSON 的字符串）上计算类似 <a href="http://goessner.net/articles/JsonPath/">JSONPath</a> 的表达式 <code>json_path</code>，并将结果作为 JSON 返回。</p>
<p>示例 1</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_extract(<span class="string">&#x27;&#123;&quot;agent&quot;:&#123;&quot;version&quot;:&quot;8.6.2&quot;,&quot;name&quot;:&quot;Bai5iewe-103&quot;&#125;,&quot;log&quot;:&#123;&quot;file&quot;:&#123;&quot;path&quot;:&quot;/etc/nginx/logs/access.log&quot;&#125;,&quot;offset&quot;:19991212&#125;&#125;&#x27;</span>, <span class="string">&#x27;$.log.file.path&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">            _col0</span><br><span class="line"><span class="comment">------------------------------</span></span><br><span class="line"> &quot;/etc/nginx/logs/access.log&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 2</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_extract(<span class="string">&#x27;&#123;&quot;agent&quot;:&#123;&quot;version&quot;:&quot;8.6.2&quot;,&quot;name&quot;:&quot;Bai5iewe-103&quot;&#125;,&quot;log&quot;:&#123;&quot;file&quot;:&#123;&quot;path&quot;:&quot;/etc/nginx/logs/access.log&quot;&#125;,&quot;offset&quot;:19991212&#125;&#125;&#x27;</span>, <span class="string">&#x27;$.log.file&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">                 _col0</span><br><span class="line"><span class="comment">---------------------------------------</span></span><br><span class="line"> &#123;&quot;path&quot;:&quot;/etc/nginx/logs/access.log&quot;&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<h2 id="json-extract-scalar-json-json-path-→-varchar"><a href="#json-extract-scalar-json-json-path-→-varchar" class="headerlink" title="json_extract_scalar(json, json_path) → varchar"></a>json_extract_scalar(<em>json</em>, <em>json_path</em>) → varchar</h2><p>与 <strong><code>json_extract()</code></strong> 类似，但将结果值作为字符串返回（而不是编码为 JSON）。<code>json_path</code> 所引用的值必须是一个标量（布尔值、数字或字符串）。</p>
<p>示例 1</p>
<p><code>json_path</code> 所引用的值是一个字符串：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_extract_scalar(<span class="string">&#x27;&#123;&quot;agent&quot;:&#123;&quot;version&quot;:&quot;8.6.2&quot;,&quot;name&quot;:&quot;Bai5iewe-103&quot;&#125;,&quot;log&quot;:&#123;&quot;file&quot;:&#123;&quot;path&quot;:&quot;/etc/nginx/logs/access.log</span></span><br><span class="line"><span class="string">&quot;&#125;,&quot;offset&quot;:19991212&#125;&#125;&#x27;</span>, <span class="string">&#x27;$.log.file.path&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">           _col0</span><br><span class="line"><span class="comment">----------------------------</span></span><br><span class="line"> <span class="operator">/</span>etc<span class="operator">/</span>nginx<span class="operator">/</span>logs<span class="operator">/</span>access.<span class="built_in">log</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 2</p>
<p>当 <code>json_path</code> 所引用的值是一个 JSON 对象，返回结果为 NULL：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_extract_scalar(<span class="string">&#x27;&#123;&quot;agent&quot;:&#123;&quot;version&quot;:&quot;8.6.2&quot;,&quot;name&quot;:&quot;Bai5iewe-103&quot;&#125;,&quot;log&quot;:&#123;&quot;file&quot;:&#123;&quot;path&quot;:&quot;/etc/nginx/logs/access.log&quot;&#125;,&quot;offset&quot;:19991212&#125;&#125;&#x27;</span>, <span class="string">&#x27;$.log.file&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="keyword">NULL</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<h2 id="json-format-json-→-varchar"><a href="#json-format-json-→-varchar" class="headerlink" title="json_format(json) → varchar"></a>json_format(<em>json</em>) → varchar</h2><p>返回从输入的 JSON 值序列化的 JSON 文本。这是 <strong><code>json_parse()</code></strong> 的逆函数。</p>
<p>示例 1</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_format(JSON <span class="string">&#x27;[1, 2, 3]&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">  _col0</span><br><span class="line"><span class="comment">---------</span></span><br><span class="line"> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 2</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_format(JSON <span class="string">&#x27;&quot;a&quot;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> &quot;a&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>注意：<strong><code>json_format()</code></strong> 和 <code>CAST(json AS VARCHAR)</code> 有完全不同的语义。</p>
<p><strong><code>json_format()</code></strong> 将输入的 JSON 值序列化为符合 <strong><a href="https://datatracker.ietf.org/doc/html/rfc7159.html">RFC 7159</a></strong> 标准的 JSON 文本。JSON 值可以是 JSON 对象、JSON 数组、JSON 字符串、JSON 数字、<code>true</code>、<code>false</code> 或 <code>null</code>。</p>
<p>序列化 JSON 对象：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_format(JSON <span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">     _col0</span><br><span class="line"><span class="comment">---------------</span></span><br><span class="line"> &#123;&quot;a&quot;:<span class="number">1</span>,&quot;b&quot;:<span class="number">2</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>序列化 JSON 数组：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_format(JSON <span class="string">&#x27;[1, 2, 3]&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">  _col0</span><br><span class="line"><span class="comment">---------</span></span><br><span class="line"> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>序列化 JSON 字符串：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_format(JSON <span class="string">&#x27;&quot;abc&quot;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> &quot;abc&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>序列化 JSON 数字：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_format(JSON <span class="string">&#x27;42&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="number">42</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>序列化布尔值 <code>true</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_format(JSON <span class="string">&#x27;true&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">true</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>序列化 <code>null</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_format(JSON <span class="string">&#x27;null&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="keyword">null</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>而 <code>CAST(json AS VARCHAR)</code> 将 JSON 值转换为对应的 SQL VARCHAR 值。对于 JSON 字符串、JSON 数字、<code>true</code>、<code>false</code> 或 <code>null</code>，转换行为与相应的 SQL 类型相同。JSON 对象和 JSON 数组不能转换为 <code>VARCHAR</code>。</p>
<p>将 JSON 对象转换为对应的 SQL VARCHAR 值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Query failed: Cannot cast <span class="string">&#x27;&#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;&#x27;</span> <span class="keyword">to</span> <span class="type">varchar</span></span><br></pre></td></tr></table></figure>
<p>将 JSON 数组转换为对应的 SQL VARCHAR 值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;[1, 2, 3]&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Query failed: Cannot cast <span class="string">&#x27;[1,2,3]&#x27;</span> <span class="keyword">to</span> <span class="type">varchar</span></span><br></pre></td></tr></table></figure>
<p>将 JSON 字符串转换为对应的 SQL <code>VARCHAR</code> 值，注意，返回结果中的 abc 没有带双引号：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;&quot;abc&quot;&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> abc</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>将 JSON 数字转换为对应的 SQL VARCHAR 值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;42&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="number">42</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>将 JSON 布尔值 true 转换为对应的 SQL VARCHAR 值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;true&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">true</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>将 JSON null 值转换为对应的 SQL VARCHAR 值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(JSON <span class="string">&#x27;null&#x27;</span> <span class="keyword">AS</span> <span class="type">VARCHAR</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="keyword">NULL</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<h2 id="json-parse-string-→-json"><a href="#json-parse-string-→-json" class="headerlink" title="json_parse(string) → json"></a>json_parse(<em>string</em>) → json</h2><p>返回从输入的 JSON 文本反序列化的 JSON 值。这是 <strong><code>json_format()</code></strong> 的逆函数。</p>
<p>示例 1</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;[1, 2, 3]&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">  _col0</span><br><span class="line"><span class="comment">---------</span></span><br><span class="line"> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 2</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;&quot;abc&quot;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> &quot;abc&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>注意：<strong><code>json_parse()</code></strong> 和 <code>CAST(string AS json)</code> 有完全不同的语义。</p>
<p><strong><code>json_parse()</code></strong> 将符合 <strong><a href="https://datatracker.ietf.org/doc/html/rfc7159.html">RFC 7159</a></strong> 标准的 JSON 文本反序列化为 JSON 值。JSON 值可以是 JSON 对象、JSON 数组、JSON 字符串、JSON 数字、<code>true</code>、<code>false</code> 或 <code>null</code>。</p>
<p>示例 3</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;not_json&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Query failed: Cannot <span class="keyword">convert</span> <span class="string">&#x27;not_json&#x27;</span> <span class="keyword">to</span> JSON</span><br></pre></td></tr></table></figure>
<p>示例 4</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">     _col0</span><br><span class="line"><span class="comment">---------------</span></span><br><span class="line"> &#123;&quot;a&quot;:<span class="number">1</span>,&quot;b&quot;:<span class="number">2</span>&#125;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 5</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;[1, 2, 3]&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">  _col0</span><br><span class="line"><span class="comment">---------</span></span><br><span class="line"> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 6</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;&quot;abc&quot;&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> &quot;abc&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 7</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;42&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="number">42</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 8</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;true&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="literal">true</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 9</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_parse(<span class="string">&#x27;null&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> <span class="keyword">null</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>而 <code>CAST(string AS JSON)</code> 函数将任何 <code>VARCHAR</code> 类型的输入值转换为 JSON 字符串格式。</p>
<p>示例 10</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;not_json&#x27;</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">   _col0</span><br><span class="line"><span class="comment">------------</span></span><br><span class="line"> &quot;not_json&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 11</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;&#x27;</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">         _col0</span><br><span class="line"><span class="comment">------------------------</span></span><br><span class="line"> &quot;&#123;\&quot;a\&quot;: 1, \&quot;b\&quot;: 2&#125;&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 12</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;[1, 2, 3]&#x27;</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">    _col0</span><br><span class="line"><span class="comment">-------------</span></span><br><span class="line"> &quot;[1, 2, 3]&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 13</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;&quot;abc&quot;&#x27;</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">   _col0</span><br><span class="line"><span class="comment">-----------</span></span><br><span class="line"> &quot;\&quot;abc\&quot;&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 14</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;42&#x27;</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line"> &quot;42&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 15</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;true&#x27;</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">--------</span></span><br><span class="line"> &quot;true&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 16</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;null&#x27;</span> <span class="keyword">AS</span> JSON);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">--------</span></span><br><span class="line"> &quot;null&quot;</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<h2 id="json-size-json-json-path-→-bigint"><a href="#json-size-json-json-path-→-bigint" class="headerlink" title="json_size(json, json_path) → bigint"></a>json_size(<em>json</em>, <em>json_path</em>) → bigint</h2><p>与 <strong><code>json_extract()</code></strong> 类似，但返回值的大小。对于对象或数组，大小是成员的数量，标量值的大小是零。</p>
<p>示例 1</p>
<p>返回对象的成员数量：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_size(<span class="string">&#x27;&#123;&quot;x&quot;: &#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;&#125;&#x27;</span>, <span class="string">&#x27;$.x&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 2</p>
<p>返回数组的成员数量：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_size(<span class="string">&#x27;&#123;&quot;x&quot;: [1, 2, 3]&#125;&#x27;</span>, <span class="string">&#x27;$.x&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>示例 3</p>
<p>返回标量的成员数量：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> json_size(<span class="string">&#x27;&#123;&quot;x&quot;: &#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;&#125;&#x27;</span>, <span class="string">&#x27;$.x.a&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line">     <span class="number">0</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | Lambda 表达式</title>
    <url>/2023/05/08/presto-lambda-expressions/</url>
    <content><![CDATA[<p>Lambda 表达式使用 <code>-&gt;</code> 来表示：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">x <span class="operator">-</span><span class="operator">&gt;</span> x <span class="operator">+</span> <span class="number">1</span></span><br><span class="line">(x, y) <span class="operator">-</span><span class="operator">&gt;</span> x <span class="operator">+</span> y</span><br><span class="line">x <span class="operator">-</span><span class="operator">&gt;</span> regexp_like(x, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">x <span class="operator">-</span><span class="operator">&gt;</span> x[<span class="number">1</span>] <span class="operator">/</span> x[<span class="number">2</span>]</span><br><span class="line">x <span class="operator">-</span><span class="operator">&gt;</span> IF(x <span class="operator">&gt;</span> <span class="number">0</span>, x, <span class="operator">-</span>x)</span><br><span class="line">x <span class="operator">-</span><span class="operator">&gt;</span> <span class="built_in">COALESCE</span>(x, <span class="number">0</span>)</span><br><span class="line">x <span class="operator">-</span><span class="operator">&gt;</span> <span class="built_in">CAST</span>(x <span class="keyword">AS</span> JSON)</span><br><span class="line">x <span class="operator">-</span><span class="operator">&gt;</span> x <span class="operator">+</span> TRY(<span class="number">1</span> <span class="operator">/</span> <span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p>大多数 SQL 表达式都可以在 Lambda 主体中使用，但有几个例外：</p>
<ul>
<li>不支持子查询。如 <code>x -&gt; 2 + (SELECT 3)</code></li>
<li>不支持聚合。如 <code>x -&gt; max(y)</code></li>
</ul>
<p><strong>示例</strong></p>
<p>以下示例演示了使用 <code>split_to_map()</code> 函数对字符串进行层层分割，并返回一个映射（Map）。</p>
<p>首先，将字符串按 <code>;</code> 划分为多个键值对。</p>
<p>其次，进一步将每对键值对按 <code>:</code> 划分为键和对应的值。</p>
<p>如果存在键重复的情况，则调用 Lambda 表达式 <code>(k, v1, v2) -&gt; concat(v1, v2)</code> 来确定映射中的值，这里是将重复键的值拼接起来作为一个值。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split_to_map(<span class="string">&#x27;a:1;b:2;a:3&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, (k, v1, v2) <span class="operator">-</span><span class="operator">&gt;</span> concat(v1, v2))</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出结果为 &#123;&quot;a&quot;: &quot;13&quot;, &quot;b&quot;: &quot;2&quot;&#125;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | URL 相关函数</title>
    <url>/2023/05/02/presto-url-functions/</url>
    <content><![CDATA[<h2 id="提取相关函数"><a href="#提取相关函数" class="headerlink" title="提取相关函数"></a>提取相关函数</h2><p>URL 提取功能可以从 HTTP URLs（或任何符合 RFC 2396 的有效 URI）中提取各组成部分。支持以下语法:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[protocol:][//host[:port]][path][?query][#fragment]</span><br></pre></td></tr></table></figure>
<p>所提取的组成部分不包含 URI 语法分隔符，例如：<code>:</code> 或 <code>?</code> 。</p>
<h3 id="url-extract-fragment-url-→-varchar"><a href="#url-extract-fragment-url-→-varchar" class="headerlink" title="url_extract_fragment(url) → varchar"></a>url_extract_fragment(<em>url</em>) → varchar</h3><p>该函数用以返回 <code>url</code> 地址所包含的，用以指示不同文档片段的片段标识符。</p>
<p>即上文提到的 <code>[#fragment]</code> 组成部分，指的是 <code>#</code> 字符之后的内容，不包含 <code>#</code> 符号本身。</p>
<h3 id="url-extract-host-url-→-varchar"><a href="#url-extract-host-url-→-varchar" class="headerlink" title="url_extract_host(url) → varchar"></a>url_extract_host(<em>url</em>) → varchar</h3><p>该函数用以解析 <code>url</code> 中包含的地址，并返回其主机名部分。</p>
<h3 id="url-extract-parameter-url-name-→-varchar"><a href="#url-extract-parameter-url-name-→-varchar" class="headerlink" title="url_extract_parameter(url, name) → varchar"></a>url_extract_parameter(<em>url</em>, <em>name</em>) → varchar</h3><p>该函数用以解析 <code>url</code> 中的查询字符串，并返回第一个名为 <code>name</code> 的参数的值。参数提取遵循 RFC 1866 中规定的方式。</p>
<h3 id="url-extract-path-url-→-varchar"><a href="#url-extract-path-url-→-varchar" class="headerlink" title="url_extract_path(url) → varchar"></a>url_extract_path(<em>url</em>) → varchar</h3><p>该函数用于解析 <code>url</code> 中包含的地址，并返回其路径部分。</p>
<h3 id="url-extract-port-url-→-bigint"><a href="#url-extract-port-url-→-bigint" class="headerlink" title="url_extract_port(url) → bigint"></a>url_extract_port(<em>url</em>) → bigint</h3><p>该函数用于解析 <code>url</code> 中包含的地址，并返回其端口号部分。</p>
<h3 id="url-extract-protocol-url-→-varchar"><a href="#url-extract-protocol-url-→-varchar" class="headerlink" title="url_extract_protocol(url) → varchar"></a>url_extract_protocol(<em>url</em>) → varchar</h3><p>该函数用于解析 <code>url</code> 中包含的地址，并返回其所使用的协议类型。</p>
<h3 id="url-extract-query-url-→-varchar"><a href="#url-extract-query-url-→-varchar" class="headerlink" title="url_extract_query(url) → varchar"></a>url_extract_query(<em>url</em>) → varchar</h3><p>该函数用于解析 <code>url</code> 中包含的地址，并返回其查询字符串部分。</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> tmp_url <span class="keyword">as</span> (</span><br><span class="line">  <span class="keyword">select</span> <span class="string">&#x27;https://linjiangxiong.com:8080/zh-cn/dotnet/api/system.string.split?view=net-6.0#remarks&#x27;</span> <span class="keyword">as</span> url</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">  url_extract_protocol(url) <span class="keyword">as</span> protocol, </span><br><span class="line">  url_extract_host(url) <span class="keyword">as</span> host,</span><br><span class="line">  url_extract_port(url) <span class="keyword">as</span> port,</span><br><span class="line">  url_extract_path(url) <span class="keyword">as</span> path,</span><br><span class="line">  url_extract_query(url) <span class="keyword">as</span> query, </span><br><span class="line">  url_extract_parameter(url, <span class="string">&#x27;view&#x27;</span>) <span class="keyword">as</span> <span class="keyword">parameter</span>,</span><br><span class="line">  url_extract_fragment(url) <span class="keyword">as</span> fragment</span><br><span class="line"><span class="keyword">from</span> tmp_url</span><br></pre></td></tr></table></figure>
<p>返回结果如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>protocol</th>
<th>host</th>
<th>port</th>
<th>path</th>
<th>query</th>
<th>parameter</th>
<th>fragment</th>
</tr>
</thead>
<tbody>
<tr>
<td>https</td>
<td>linjiangxiong.com</td>
<td>8080</td>
<td>/zh-cn/dotnet/api/system.string.split</td>
<td>view=net-6.0</td>
<td>net-6.0</td>
<td>remarks</td>
</tr>
</tbody>
</table>
</div>
<h2 id="编码相关函数"><a href="#编码相关函数" class="headerlink" title="编码相关函数"></a>编码相关函数</h2><h3 id="url-encode-value-→-varchar"><a href="#url-encode-value-→-varchar" class="headerlink" title="url_encode(value) → varchar"></a>url_encode(<em>value</em>) → varchar</h3><p>对 <code>value</code> 进行编码，以使其可以安全地包含在 URL 查询参数名称和值中：</p>
<ul>
<li>字母、数字字符不会被编码；</li>
<li><code>.</code>、<code>-</code>、<code>*</code>、和 <code>_</code> 这些字符不会被编码；</li>
<li>ASCII 空格字符被编码为 <code>+</code>；</li>
<li>所有其他字符都转换为 UTF-8，并将字节编码为字符串 <code>%XX</code>，其中 <code>XX</code> 是 UTF-8 字节的大写十六进制值。</li>
</ul>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> url_encode(<span class="string">&#x27;a_1*B-C.D LEFT语言&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出结果为 a_1*B-C.D+LEFT%E8%AF%AD%E8%A8%80</span></span><br></pre></td></tr></table></figure>
<h3 id="url-decode-value-→-varchar"><a href="#url-decode-value-→-varchar" class="headerlink" title="url_decode(value) → varchar"></a>url_decode(<em>value</em>) → varchar</h3><p>对 URL 编码的 <code>value</code> 进行解码。该函数是 <strong><code>url_encode()</code></strong> 函数的逆过程。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> url_decode(<span class="string">&#x27;a_1*B-C.D+LEFT%E8%AF%AD%E8%A8%80&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出结果为 a_1*B-C.D LEFT语言</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | TRY 函数</title>
    <url>/2023/05/12/presto-try-functions/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>try(<em>expression</em>)</p>
<p>在计算表达式 <em>expression</em> 时，如果发生某些类型的错误，则返回 <code>NULL</code> 而不是抛出异常。</p>
<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p><code>TRY</code> 函数的作用是在计算一个表达式，如果在计算过程中发生错误，则返回空值 <code>NULL</code>。这在以下两种场景下非常有用:</p>
<ol>
<li>查询结果中含有非法或无效数据，但你希望返回空值而不是报错。</li>
<li>为表达式指定一个默认值，在计算失败时返回这个默认值。</li>
</ol>
<p>为实现第二个目的，可以将 <code>TRY</code> 函数与 <code>COALESCE</code> 函数结合使用。<code>COALESCE</code> 函数的作用是返回一系列值中的第一个非空值。所以通过以下方式可以为 <code>TRY</code> 函数指定默认值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="built_in">COALESCE</span>(TRY(expr1), default_value)</span><br></pre></td></tr></table></figure>
<p>如果 <code>TRY</code> 函数成功计算 <code>expr1</code> 并返回一个值（非 <code>NULL</code>），<code>COALESCE</code> 函数会返回该值。但如果<code>TRY</code> 函数返回空值 <code>NULL</code>，<code>COALESCE</code> 函数就会返回我们指定的 <code>default_value</code> 默认值。</p>
<p><code>TRY</code> 函数可以处理以下错误：</p>
<ul>
<li>除数为 0</li>
<li>无效的类型转换参数或无效的函数参数</li>
<li>数值超出范围</li>
</ul>
<p>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TRY(<span class="number">5</span><span class="operator">/</span><span class="number">0</span>) <span class="comment">-- Returns NULL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COALESCE</span>(TRY(<span class="number">5</span><span class="operator">/</span><span class="number">0</span>), <span class="number">0</span>) <span class="comment">-- Returns 0</span></span><br></pre></td></tr></table></figure>
<p><code>TRY</code> 函数会计算第一个参数中的表达式，如果发生上述某些错误，则返回 <code>NULL</code> 而不是报错失败。与 <code>COALESCE</code> 函数结合使用时，<code>TRY</code> 函数可以指定在发生错误时返回的默认值，而不是简单的 <code>NULL</code>。</p>
<p>需要注意的是，<code>TRY</code> 函数允许在错误或无效的数据输入情况下继续查询，并返回预定的值或 <code>NULL</code>，而不是使查询失败——这在某些情况下可能是更可取的方案。但是使用 <code>TRY</code> 和 <code>COALESCE</code> 函数并不会修正或移除问题数据，只是简单的规避错误继续运行查询。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>源表（<em>shipping</em>）中包含一些无效数据：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WITH</span> shipping <span class="keyword">AS</span> (</span><br><span class="line">	<span class="keyword">SELECT</span></span><br><span class="line">		<span class="string">&#x27;California&#x27;</span> <span class="keyword">AS</span> origin_state,</span><br><span class="line">		<span class="string">&#x27;94131&#x27;</span> <span class="keyword">AS</span> origin_zip,</span><br><span class="line">		<span class="number">25</span> <span class="keyword">AS</span> packages,</span><br><span class="line">		<span class="number">100</span> <span class="keyword">AS</span> total_cost </span><br><span class="line">	<span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line">	<span class="keyword">SELECT</span></span><br><span class="line">		<span class="string">&#x27;California&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;P332a&#x27;</span>,</span><br><span class="line">		<span class="number">5</span>,</span><br><span class="line">		<span class="number">72</span> </span><br><span class="line">	<span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line">	<span class="keyword">SELECT</span></span><br><span class="line">		<span class="string">&#x27;California&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;94025&#x27;</span>,</span><br><span class="line">		<span class="number">0</span>,</span><br><span class="line">		<span class="number">155</span> </span><br><span class="line">	<span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line">	<span class="keyword">SELECT</span></span><br><span class="line">		<span class="string">&#x27;New Jersey&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;08544&#x27;</span>,</span><br><span class="line">		<span class="number">225</span>,</span><br><span class="line">	  <span class="number">490</span> </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> shipping</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>origin_state</th>
<th>origin_zip</th>
<th>packages</th>
<th>total_cost</th>
</tr>
</thead>
<tbody>
<tr>
<td>New Jersey</td>
<td>8544</td>
<td>225</td>
<td>490</td>
</tr>
<tr>
<td>California</td>
<td>P332a</td>
<td>5</td>
<td>72</td>
</tr>
<tr>
<td>California</td>
<td>94025</td>
<td>0</td>
<td>155</td>
</tr>
<tr>
<td>California</td>
<td>94131</td>
<td>25</td>
<td>100</td>
</tr>
</tbody>
</table>
</div>
<p>在不使用 <code>TRY</code> 函数的情况下，查询失败：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(origin_zip <span class="keyword">AS</span> <span class="type">BIGINT</span>) <span class="keyword">FROM</span> shipping;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Query failed: Can not cast &#x27;P332a&#x27; to BIGINT</span><br></pre></td></tr></table></figure>
<p>使用 <code>TRY</code> 函数，返回 NULL 值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TRY(<span class="built_in">CAST</span>(origin_zip <span class="keyword">AS</span> <span class="type">BIGINT</span>)) <span class="keyword">FROM</span> shipping;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">origin_zip</span><br><span class="line">------------</span><br><span class="line">      94131</span><br><span class="line"> NULL</span><br><span class="line">      94025</span><br><span class="line">      08544</span><br><span class="line">(4 rows)</span><br></pre></td></tr></table></figure>
<p>在不使用 <code>TRY</code> 函数的情况下，查询失败：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> total_cost <span class="operator">/</span> packages <span class="keyword">AS</span> per_package <span class="keyword">FROM</span> shipping;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Query failed: / by zero</span><br></pre></td></tr></table></figure>
<p>使用 <code>TRY</code> 和 <code>COALESCE</code> 函数指定默认值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COALESCE</span>(TRY(total_cost <span class="operator">/</span> packages), <span class="number">0</span>) <span class="keyword">AS</span> per_package <span class="keyword">FROM</span> shipping;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">per_package</span><br><span class="line">-------------</span><br><span class="line">          4</span><br><span class="line">         14</span><br><span class="line">          0</span><br><span class="line">          2</span><br><span class="line">(4 rows)</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | UUID 函数</title>
    <url>/2023/05/01/presto-uuid-functions/</url>
    <content><![CDATA[<h2 id="uuid-→-uuid"><a href="#uuid-→-uuid" class="headerlink" title="uuid() → uuid"></a>uuid() → uuid</h2><p>返回一个伪随机生成的 UUID（第四版本）。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> uuid();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 输出结果为 694af1d4-c900-4950-9daf-59f0756df0d1</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 三角函数</title>
    <url>/2023/05/24/presto-trigonometric-functions/</url>
    <content><![CDATA[<p>Presto 提供了一组三角函数，它们的参数类型为弧度，函数的返回类型都是 <code>DOUBLE</code>。如果想在弧度和度之间进行转换，可以使用 <code>radians(x)</code> 和 <code>degrees(x)</code> 这两个转换函数。</p>
<p>具体的三角函数如下表：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>sin(x)</td>
<td>x 的正弦</td>
</tr>
<tr>
<td>cos(x)</td>
<td>x 的余弦</td>
</tr>
<tr>
<td>tan(x)</td>
<td>x 的正切</td>
</tr>
<tr>
<td>asin(x)</td>
<td>x 的反正弦</td>
</tr>
<tr>
<td>acos(x)</td>
<td>x 的反余弦</td>
</tr>
<tr>
<td>atan(x)</td>
<td>x 的反正切</td>
</tr>
<tr>
<td>atan2(y, x)</td>
<td>y/x 的反正切</td>
</tr>
<tr>
<td>cosh(x)</td>
<td>x 的双曲余弦</td>
</tr>
<tr>
<td>tanh(x)</td>
<td>x 的双曲正切</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p><strong>弧度制</strong>是指用弧长与半径之比度量对应圆心角角度的方式。用符号 rad 表示，读作弧度。</p>
<p>用比较通俗的说法，弧度是度的另一种表达方式。一整圆等于 2π 弧度，也就是 360 度。弧度制采用弧长对半径的比率来表达角度的大小，这使得许多与圆和角有关的计算更加简便。<br>比如，设半径为 1 的圆，角 AOB 的大小为 60 度。这相当于圆周的 1/6，也就是 π/3 弧度。因为圆的周长是 2πr，这里 r=1，所以周长是 2π。60 度对应的弧长是周长的 1/6，也就是 π/3。<br>所以可以这么理解弧度：</p>
<ol>
<li>弧度制和度制都是测量角度的单位，只是表达方式不同。</li>
<li>弧度的大小表示角度所对应的圆弧长度与半径的比率。一整圆是 2π 弧度，相当于 360 度。</li>
<li>弧度制在许多计算中比度制更加简便，因为它与圆周率 π 的关系更加直接。</li>
<li>可以通过简单的换算公式进行弧度和度的转换：<br>弧度 = 度数 × π / 180<br>度数 = 弧度 × 180 / π</li>
</ol>
</blockquote>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sin</span>(pi()<span class="operator">/</span><span class="number">2</span>) <span class="keyword">as</span> &quot;sin(π/2)&quot;, <span class="built_in">cos</span>(pi()) <span class="keyword">as</span> &quot;cos(π)&quot;, <span class="built_in">tan</span>(pi()<span class="operator">/</span><span class="number">4</span>) <span class="keyword">as</span> &quot;tan(π/4)&quot;;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> sin(π/2) | cos(π) |      tan(π/4)</span><br><span class="line">----------+--------+--------------------</span><br><span class="line">      1.0 |   -1.0 | 0.9999999999999999</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 保留关键字</title>
    <url>/2023/05/22/presto-reserved-keywords/</url>
    <content><![CDATA[<p>Presto 保留了一些关键词。如果你想将这些关键词直接用作字段名，请使用双引号 <code>&quot;</code> 将其包裹。</p>
<p>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&quot;VALUES&quot;</span><br><span class="line">&quot;GROUP&quot;</span><br></pre></td></tr></table></figure>
<p>以下是 Presto 保留关键词完整列表：</p>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>ALTER</p>
<p>AND</p>
<p>AS</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>BETWEEN</p>
<p>BY</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>CASE</p>
<p>CAST</p>
<p>CONSTRAINT</p>
<p>CREATE</p>
<p>CROSS</p>
<p>CUBE</p>
<p>CURRENT_DATE</p>
<p>CURRENT_TIME</p>
<p>CURRENT_TIMESTAMP</p>
<p>CURRENT_USER</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>DEALLOCATE</p>
<p>DELETE</p>
<p>DESCRIBE</p>
<p>DISTINCT</p>
<p>DROP</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>ELSE</p>
<p>END</p>
<p>ESCAPE</p>
<p>EXCEPT</p>
<p>EXECUTE</p>
<p>EXISTS</p>
<p>EXTRACT</p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p>FALSE</p>
<p>FOR</p>
<p>FROM</p>
<p>FULL</p>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>GROUP</p>
<p>GROUPING</p>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>HAVING</p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>IN</p>
<p>INNER</p>
<p>INSERT</p>
<p>INTERSECT</p>
<p>INTO</p>
<p>IS</p>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>JOIN</p>
<h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><p>LEFT</p>
<p>LIKE</p>
<p>LOCALTIME</p>
<p>LOCALTIMESTAMP</p>
<h2 id="N"><a href="#N" class="headerlink" title="N"></a>N</h2><p>NATURAL</p>
<p>NORMALIZE</p>
<p>NOT</p>
<p>NULL</p>
<h2 id="O"><a href="#O" class="headerlink" title="O"></a>O</h2><p>ON</p>
<p>OR</p>
<p>ORDER</p>
<p>OUTER</p>
<h2 id="P"><a href="#P" class="headerlink" title="P"></a>P</h2><p>PREPARE</p>
<h2 id="R"><a href="#R" class="headerlink" title="R"></a>R</h2><p>RECURSIVE</p>
<p>RIGHT</p>
<p>ROLLUP</p>
<h2 id="S"><a href="#S" class="headerlink" title="S"></a>S</h2><p>SELECT</p>
<h2 id="T"><a href="#T" class="headerlink" title="T"></a>T</h2><p>TABLE</p>
<p>THEN</p>
<p>TRUE</p>
<h2 id="U"><a href="#U" class="headerlink" title="U"></a>U</h2><p>UESCAPE</p>
<p>UNION</p>
<p>UNNEST</p>
<p>USING</p>
<h2 id="V"><a href="#V" class="headerlink" title="V"></a>V</h2><p>VALUES</p>
<h2 id="W"><a href="#W" class="headerlink" title="W"></a>W</h2><p>WHEN</p>
<p>WHERE</p>
<p>WITH</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 字符串运算符和函数</title>
    <url>/2023/05/09/presto-string-functions/</url>
    <content><![CDATA[<h2 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h2><p><code>||</code> 运算符，字符串连接运算符，将运算符左右两边的字符串进行连接，作用同函数 <code>concat(string1, ..., stringN)</code>。</p>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;Here I am, &#x27;</span> <span class="operator">||</span> <span class="string">&#x27;here I am How do you do?&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Here I am, here I am How do you do?</span><br></pre></td></tr></table></figure>
<h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><p>需要注意的是，以下这些函数假设输入的字符串所包含的都是有效的 UTF-8 编码的 Unicode 码点。函数并没有对 UTF-8 的有效性进行明确的检查。如果输入了无效的 UTF-8，这些函数可能会返回错误的结果。无效的 UTF-8 数据可以使用 <code>from_utf8()</code> 函数进行修正。</p>
<p>此外，这些函数操作的都是 Unicode 码点，而不是用户可见的字符或字母。某些语言会将多个码点组合成单个用户感知的字符，即一种语言书写系统的基本单位。但这些函数会将每个码点视为独立的单位。</p>
<p><code>lower()</code> 和 <code>upper()</code> 函数无法执行立陶宛语、土耳其语和阿塞拜疆语等某些语言所需的区域敏感、上下文敏感或一对多的映射。具体来说，对这些语言，<code>lower()</code> 和 <code>upper()</code> 函数会返回不正确的结果。</p>
<blockquote>
<p>Unicode 码点（code point）是指 Unicode 字符编码方案中的每个独立的字符，是构成 Unicode 字符串的基本单位。它代表 Unicode 为每个字符指定的整数值，用来在计算机内唯一地表示这个字符。</p>
<p>举例来说:</p>
<ul>
<li>A 的 Unicode 码点是 U+0041，即十六进制的 0041，相当于十进制的 65</li>
<li>中 的 Unicode 码点是 U+4E2D，即十六进制的 4E2D，相当于十进制的 20013</li>
<li>𠮷 的 Unicode 码点是 U+20BB7，即十六进制的 20BB7，相当于十进制的 134071</li>
</ul>
<p>通过 Unicode 码点，计算机可以准确地理解和处理所有世界各地的文字，包括表意文字如中文汉字，表音文字如拉丁字母，以及其它各种书写系统的文字。事实上，绝大多数的世界文字都已经由 Unicode 标准所覆盖。</p>
<p>Uniocde 标准定义了一个码位空间，覆盖了绝大多数的字体和符号。这使得以数字形式准确表达世界上的各种语言成为可能。Unicode 码点实际上已成为在数字世界里表示文字的基石。<br>简单来说，Unicode 码点就是 Unicode 给每个字符指定的数字 ID。它是计算机内表示文字的基本单元，通过这些码点，计算机可以精确地处理各种语言的文字。</p>
</blockquote>
<h3 id="chr-n-→-varchar"><a href="#chr-n-→-varchar" class="headerlink" title="chr(n) → varchar"></a>chr(<em>n</em>) → varchar</h3><p>返回 Unicode 码点 <code>n</code> 对应的字符，<code>n</code> 为整数。</p>
<p><strong>示例</strong></p>
<p>下面的示例演示了如何使用 <code>chr(n)</code> 函数返回对应 Unicode 码点的字符。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> chr(<span class="number">65</span>)</span><br></pre></td></tr></table></figure>
<p>此示例输出结果为 A。</p>
<h3 id="codepoint-string-→-integer"><a href="#codepoint-string-→-integer" class="headerlink" title="codepoint(string) → integer"></a>codepoint(<em>string</em>) → integer</h3><p>返回对应字符的 Unicode 码点。</p>
<p><strong>示例</strong></p>
<p>下面的示例演示了如何使用 <code>codepoint(string)</code> 函数返回对应字符的 Unicode 码点。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> codepoint(<span class="string">&#x27;A&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>此示例输出结果为 65<em>。</em></p>
<h3 id="concat-string1-…-stringN-→-varchar"><a href="#concat-string1-…-stringN-→-varchar" class="headerlink" title="concat(string1, …, stringN) → varchar"></a>concat(<em>string1</em>, <em>…</em>, <em>stringN</em>) → varchar</h3><p>返回 <code>string1</code>, <code>...</code>, <code>stringN</code> 连接后的值。这个函数提供的功能与 SQL 标准的连接操作符（<code>||</code>）相同。</p>
<p><strong>示例</strong></p>
<p>下面的示例演示了如何使用 <code>concat(string1, ..., stringN)</code> 函数连接两个字符串。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;Mommy Finger, &#x27;</span>, <span class="string">&#x27;Mommy Finger, &#x27;</span>, <span class="string">&#x27;where are you?&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>此示例输出结果为 Mommy Finger, Mommy Finger, where are you? 。</p>
<p>注意：该方法直接连接 <code>string1</code>、<code>...</code>、<code>stringN</code>，不会添加任何分隔符。</p>
<h3 id="hamming-distance-string1-string2-→-bigint"><a href="#hamming-distance-string1-string2-→-bigint" class="headerlink" title="hamming_distance(string1, string2) → bigint"></a>hamming_distance(<em>string1</em>, <em>string2</em>) → bigint</h3><p>返回 <code>string1</code> 和 <code>string2</code> 的汉明距离，即两个字符串相应字符不同位置的数目。注意，这两个字符串必须具有相同的长度。</p>
<p><strong>示例</strong></p>
<p>下面的示例演示了如何使用 <code>hamming_distance(string1, string2)</code> 函数计算字符串 <code>1011101</code> 与 <code>1001001</code> 之间的汉明距离。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> hamming_distance(<span class="string">&#x27;1011101&#x27;</span>, <span class="string">&#x27;1001001&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>此示例输出结果为 2。</p>
<blockquote>
<p>在信息论中，两个等长字符串之间的<strong>汉明距离</strong>（英语：Hamming distance）是两个字符串对应位置的不同字符的个数。换句话说，它就是将一个字符串变换成另外一个字符串所需要替换的字符个数。例如：<br>1011101 与 1001001 之间的汉明距离是 2。<br>2143896 与2233796 之间的汉明距离是 3。<br>“toned” 与 “roses” 之间的汉明距离是 3。<br>摘自：<a href="https://zh.wikipedia.org/wiki/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB">https://zh.wikipedia.org/wiki/汉明距离</a></p>
</blockquote>
<h3 id="length-string-→-bigint"><a href="#length-string-→-bigint" class="headerlink" title="length(string) → bigint"></a>length(<em>string</em>) → bigint</h3><p>返回字符串的长度（以字符为单位）。</p>
<p><strong>示例</strong></p>
<p>下面的示例演示了如何使用 <code>length(string)</code> 函数计算字符串 <code>和A2*</code> 的字符数。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> length(<span class="string">&#x27;和A2*&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>此示例输出结果为 4。</p>
<h3 id="levenshtein-distance-string1-string2-→-bigint"><a href="#levenshtein-distance-string1-string2-→-bigint" class="headerlink" title="levenshtein_distance(string1, string2) → bigint"></a>levenshtein_distance(<em>string1</em>, <em>string2</em>) → bigint</h3><p>返回 <code>string1</code> 和 <code>string2</code> 的莱文斯坦编辑距离，即将 <code>string1</code> 变为 <code>string2</code> 所需的最小单字符编辑次数（插入、删除或替换）。</p>
<p><strong>示例</strong></p>
<p>下面的示例演示了如何使用 <code>levenshtein_distance(string1, string2)</code> 函数计算字符串 <code>Daddy Finger</code> 与 <code>Mommy Finger, where are you?</code> 之间的莱文斯坦编辑距离。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> levenshtein_distance(<span class="string">&#x27;Daddy Finger&#x27;</span>, <span class="string">&#x27;Mommy Finger, where are you?&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 20。</p>
<h3 id="lower-string-→-varchar"><a href="#lower-string-→-varchar" class="headerlink" title="lower(string) → varchar"></a>lower(<em>string</em>) → varchar</h3><p>将字符串转换为小写。</p>
<p><strong>示例</strong></p>
<p>下面的例子将一个混合大小写的字符串转换为小写。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(<span class="string">&#x27;Daddy Finger, Daddy Finger, where are you?&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 daddy finger, daddy finger, where are you?。</p>
<h3 id="upper-string-→-varchar"><a href="#upper-string-→-varchar" class="headerlink" title="upper(string) → varchar"></a>upper(<em>string</em>) → varchar</h3><p>将字符串转换为大写。</p>
<p><strong>示例</strong></p>
<p>下面的例子将一个混合大小写的字符串转换为大写。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(<span class="string">&#x27;Daddy Finger, Daddy Finger, where are you?&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 DADDY FINGER, DADDY FINGER, WHERE ARE YOU?。</p>
<h3 id="lpad-string-size-padstring-→-varchar"><a href="#lpad-string-size-padstring-→-varchar" class="headerlink" title="lpad(string, size, padstring) → varchar"></a>lpad(<em>string</em>, <em>size</em>, <em>padstring</em>) → varchar</h3><p>返回一个新字符串，该字符串通过在 <code>string</code> 左侧填充 <code>padstring</code> 来达到指定的总长度 <code>size</code>，实现右对齐。如果 <code>size</code> 小于字符串的长度，结果将被截断为 <code>size</code> 个字符。<code>size</code> 不能为负数，<code>padstring</code> 必须为非空。</p>
<p><strong>参数</strong></p>
<p><em><code>string</code></em> 需要填充的字符串</p>
<p><em><code>size</code></em> 填充后的字符串长度</p>
<p><em><code>padstring</code></em> 用来填充的字符串</p>
<p><strong>示例</strong></p>
<p>下面的例子演示了如何使用 <code>lpad(string, size, padstring)</code> 填充字符串。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;M&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;Z&#x27;</span>), lpad(<span class="string">&#x27;M&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;ZYX&#x27;</span>), lpad(<span class="string">&#x27;ABC&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;$&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 ZZZZM，ZYXZM，AB。</p>
<h3 id="rpad-string-size-padstring-→-varchar"><a href="#rpad-string-size-padstring-→-varchar" class="headerlink" title="rpad(string, size, padstring) → varchar"></a>rpad(<em>string</em>, <em>size</em>, <em>padstring</em>) → varchar</h3><p>返回一个新字符串，该字符串通过在 <code>string</code> 右侧填充 <code>padstring</code> 来达到指定的总长度 <code>size</code>，实现左对齐。如果 <code>size</code> 小于字符串的长度，结果将被截断为 <code>size</code> 个字符。<code>size</code> 不能为负数，<code>padstring</code> 必须为非空。</p>
<p><strong>参数</strong></p>
<p><em><code>string</code></em> 需要填充的字符串</p>
<p><em><code>size</code></em> 结果字符串中的字符数</p>
<p><em><code>padstring</code></em> 用来填充的字符串</p>
<p><strong>示例</strong></p>
<p>下面的例子演示了如何使用 <code>rpad(string, size, padstring)</code> 填充字符串。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> rpad(<span class="string">&#x27;M&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;Z&#x27;</span>), rpad(<span class="string">&#x27;M&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;ZYX&#x27;</span>), rpad(<span class="string">&#x27;ABC&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;$&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 MZZZZ，MZYXZ，AB。</p>
<h3 id="trim-string-→-varchar"><a href="#trim-string-→-varchar" class="headerlink" title="trim(string) → varchar"></a>trim(<em>string</em>) → varchar</h3><p>删除字符串 <code>string</code> 开头和末尾的空白字符。如果字符串无可删除的空白字符，则返回原字符串。</p>
<p><strong>示例</strong></p>
<p>下面的例子演示了如何使用 <code>trim(string)</code> 函数删除字符串开头和末尾的所有空白字符。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">trim</span>(<span class="string">&#x27;  $$ $$ &#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 $$$ $$$。</p>
<h3 id="ltrim-string-→-varchar"><a href="#ltrim-string-→-varchar" class="headerlink" title="ltrim(string) → varchar"></a>ltrim(<em>string</em>) → varchar</h3><p>删除字符串中的所有前导空白字符。</p>
<p>此方法返回删除字符串开头所有可删除的空白字符后的字符串。如果字符串无空白字符可删除，则返回原字符串。</p>
<p><strong>示例</strong></p>
<p>以下示例演示了 <code>ltrim(string)</code> 方法的基本功能。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ltrim(<span class="string">&#x27;  $$ $$ &#x27;</span>), ltrim(<span class="string">&#x27;$A&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 $$$ $$$ ，<code>$A</code>。</p>
<h3 id="rtrim-string-→-varchar"><a href="#rtrim-string-→-varchar" class="headerlink" title="rtrim(string) → varchar"></a>rtrim(<em>string</em>) → varchar</h3><p>删除字符串 <code>string</code> 末尾的所有空白字符。</p>
<p>此方法返回删除字符串末尾所有可删除的空白字符后的字符串。如果字符串无空白字符可删除，则返回原字符串。</p>
<p><strong>示例</strong></p>
<p>以下示例演示了 <code>rtrim(string)</code> 方法的基本功能。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> rtrim(<span class="string">&#x27;  $$ $$ &#x27;</span>), rtrim(<span class="string">&#x27;$A&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为  $$$ $$$，<code>$A</code>。</p>
<h3 id="replace-string-search-→-varchar"><a href="#replace-string-search-→-varchar" class="headerlink" title="replace(string, search) → varchar"></a>replace(<em>string</em>, <em>search</em>) → varchar</h3><p>此方法删除字符串（<em><code>string</code></em>）中出现的所有指定的字符串（<em><code>search</code></em>）。</p>
<p><strong>示例</strong></p>
<p>下面的例子演示了如何使用 <code>replace(string, search)</code> 从字符串中删除指定字符。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;Daddy Finger, Daddy Finger, where are you?&#x27;</span>, <span class="string">&#x27;Daddy Finger, &#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 <code>where are you?</code>。</p>
<h3 id="replace-string-search-replace-→-varchar"><a href="#replace-string-search-replace-→-varchar" class="headerlink" title="replace(string, search, replace) → varchar"></a>replace(<em>string</em>, <em>search</em>, <em>replace</em>) → varchar</h3><p>该函数使用 <code>replace</code> 替换字符串（<code>string</code>）中出现的所有指定字符串（<code>search</code>）。如果在字符串中找不到 <em><code>search</code></em>，则返回原字符串。</p>
<p><strong>参数</strong></p>
<p><em><code>string</code></em> 原字符串</p>
<p><em><code>search</code></em> 要替换的字符串。</p>
<p><em><code>replace</code></em> 要替换出现的所有 <code>search</code> 的字符串。</p>
<p><strong>示例</strong></p>
<p>以下示例通过用连接符（-）代替一系列数字之间的逗号。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;1,2,3,4,5,6,7,8,9&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 1-2-3-4-5-6-7-8-9。</p>
<p>如果在字符串中找不到 <em><code>search</code></em>，则返回原字符串。如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;1,2,3&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;$&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 1,2,3。</p>
<p>如果 <code>search</code> 为空字符串，在 <code>string</code> 的每个字符前面和结尾插入 <code>replace</code>。如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;1,2,3&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;$$&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 <script type="math/tex">1</script>,<script type="math/tex">2</script>,<script type="math/tex">3</script>。</p>
<h3 id="reverse-string-→-varchar"><a href="#reverse-string-→-varchar" class="headerlink" title="reverse(string) → varchar"></a>reverse(<em>string</em>) → varchar</h3><p>返回字符串 <code>string</code> 的字符顺序反转后的字符串。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> reverse(<span class="string">&#x27;123456789&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 987654321。</p>
<h3 id="split-string-delimiter"><a href="#split-string-delimiter" class="headerlink" title="split(string, delimiter)"></a>split(<em>string</em>, <em>delimiter</em>)</h3><p>根据 <code>delimiter</code> 对字符串 <code>string</code> 进行分割，并返回字符串数组。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split(<span class="string">&#x27;1,2,3&#x27;</span>, <span class="string">&#x27;,&#x27;</span>), split(<span class="string">&#x27;1,2,&#x27;</span>, <span class="string">&#x27;,&#x27;</span>), split(<span class="string">&#x27;1,,2,3&#x27;</span>, <span class="string">&#x27;,,&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 [‘1’,’2’,’3’]，[‘1’,’2’,’’]，[‘1’,’2,3’]。</p>
<h3 id="split-string-delimiter-limit"><a href="#split-string-delimiter-limit" class="headerlink" title="split(string, delimiter, limit)"></a>split(<em>string</em>, <em>delimiter</em>, <em>limit</em>)</h3><p>根据分隔符 <code>delimiter</code> 对字符串 <code>string</code> 进行分割，并返回一个数组，数组大小不超过限定值 <code>limit</code>。数组中的最后一个元素总包含字符串 <code>string</code> 中剩余的所有内容。限定值 <code>limit</code> 必须是正整数。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split(<span class="string">&#x27;1$$2$$3$$4$$5&#x27;</span>, <span class="string">&#x27;$$&#x27;</span>), split(<span class="string">&#x27;1$$2$$3$$4$$5&#x27;</span>, <span class="string">&#x27;$$&#x27;</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 [‘1’,’2’,’3’,’4’,’5’]，[‘1’,’2’,’3<script type="math/tex">4</script>5’]。</p>
<h3 id="split-part-string-delimiter-index-→-varchar"><a href="#split-part-string-delimiter-index-→-varchar" class="headerlink" title="split_part(string, delimiter, index) → varchar"></a>split_part(<em>string</em>, <em>delimiter</em>, <em>index</em>) → varchar</h3><p>根据分隔符 <code>delimiter</code> 对字符串 <code>string</code> 进行分割，并返回第 <code>index</code> 个字段。字段索引从 <code>1</code> 开始计数。如果索引值超过字段总数，则返回 null。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split(<span class="string">&#x27;a,b,c,d,e&#x27;</span>, <span class="string">&#x27;,&#x27;</span>), split_part(<span class="string">&#x27;a,b,c,d,e&#x27;</span>, <span class="string">&#x27;,&#x27;</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 [‘a’,’b’,’c’,’d’,’e’]，c。</p>
<h3 id="split-to-map-string-entryDelimiter-keyValueDelimiter-→-map"><a href="#split-to-map-string-entryDelimiter-keyValueDelimiter-→-map" class="headerlink" title="split_to_map(string, entryDelimiter, keyValueDelimiter) → map"></a>split_to_map(<em>string</em>, <em>entryDelimiter</em>, <em>keyValueDelimiter</em>) → map<varchar, varchar></h3><p>根据 <code>entryDelimiter</code> 和 <code>keyValueDelimiter</code> 这两个分隔符对字符串 <code>string</code> 进行层层分割，并返回一个映射（Map）。<code>entryDelimiter</code> 将字符串 <code>string</code> 划分为多个键值对。<code>keyValueDelimiter</code> 进一步将每对键值对划分为键和对应的值。</p>
<p>请注意，<code>entryDelimiter</code> 和 <code>keyValueDelimiter</code> 被按原义解释，即作为完整的字符串匹配。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split_to_map(<span class="string">&#x27;a:1;b:2;c:3&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 {a=1, b=2, c=3}。</p>
<p>如果在转换成映射的过程中，出现 key 相同的情况则会抛出异常：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split_to_map(<span class="string">&#x27;a:1;b:2;b:3&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>异常信息如下：</p>
<p>SQL 错误 [7]: Query failed (#20230509_102207_03215_xs34i): Duplicate keys (b) are not allowed. Specifying a lambda to resolve conflicts can avoid this error</p>
<h3 id="split-to-map-string-entryDelimiter-keyValueDelimiter-function-K-V1-V2-R-→-map"><a href="#split-to-map-string-entryDelimiter-keyValueDelimiter-function-K-V1-V2-R-→-map" class="headerlink" title="split_to_map(string, entryDelimiter, keyValueDelimiter, function(K, V1, V2, R)) → map"></a>split_to_map(<em>string</em>, <em>entryDelimiter</em>, <em>keyValueDelimiter</em>, <em>function(K</em>, <em>V1</em>, <em>V2</em>, <em>R)</em>) → map<varchar, varchar></h3><p>功能同 <code>split_to_map(string, entryDelimiter, keyValueDelimiter)</code>，只是在键重复的情况下，会调用 <code>function(K,V1,V2,R)</code> 来确定映射中应该使用的值。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split_to_map(<span class="string">&#x27;a:1;b:2;a:3&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, (k, v1, v2) <span class="operator">-</span><span class="operator">&gt;</span> v1)</span><br></pre></td></tr></table></figure>
<p>输出结果为 {a=1, b=2}。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split_to_map(<span class="string">&#x27;a:1;b:2;a:3&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, (k, v1, v2) <span class="operator">-</span><span class="operator">&gt;</span> v2)</span><br></pre></td></tr></table></figure>
<p>输出结果为 {a=3, b=2}。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split_to_map(<span class="string">&#x27;a:1;b:2;a:3&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, (k, v1, v2) <span class="operator">-</span><span class="operator">&gt;</span> concat(v1, v2))</span><br></pre></td></tr></table></figure>
<p>输出结果为 **{a=13, b=2}。</p>
<h3 id="split-to-multimap-string-entryDelimiter-keyValueDelimiter"><a href="#split-to-multimap-string-entryDelimiter-keyValueDelimiter" class="headerlink" title="split_to_multimap(string, entryDelimiter, keyValueDelimiter)"></a>split_to_multimap(<em>string</em>, <em>entryDelimiter</em>, <em>keyValueDelimiter</em>)</h3><p>根据 <code>entryDelimiter</code> 和 <code>keyValueDelimiter</code> 这两个分隔符对字符串 <code>string</code> 进行层层分割,并返回一个映射（Map），其中每个唯一键对应一个值数组。<code>entryDelimiter</code> 将字符串 <code>string</code> 划分为多个键值对。<code>keyValueDelimiter</code> 进一步将每对键值对划分为键和对应的值。</p>
<p>每个键所对应的值数组内的值的顺序与这些值在字符串 <code>string</code> 中出现的顺序相同。</p>
<p>请注意，<code>entryDelimiter</code> 和 <code>keyValueDelimiter</code> 被按原义解释，即作为完整的字符串匹配。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> split_to_multimap(<span class="string">&#x27;a:1;b:2;b:3&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 {a=[1], b=[2, 3]}。</p>
<h3 id="strpos-string-substring-→-bigint"><a href="#strpos-string-substring-→-bigint" class="headerlink" title="strpos(string, substring) → bigint"></a>strpos(<em>string</em>, <em>substring</em>) → bigint</h3><p>返回字符串 <code>string</code> 中子字符串 <code>substring</code> 第一次出现的起始位置索引。位置索引从 1 开始计数。如果未找到子字符串 <code>substring</code>，则返回 0。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> strpos(<span class="string">&#x27;Mommy Finger, Mommy Finger, where are you?&#x27;</span>, <span class="string">&#x27;Mommy Finger&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 1。</p>
<h3 id="strpos-string-substring-instance-→-bigint"><a href="#strpos-string-substring-instance-→-bigint" class="headerlink" title="strpos(string, substring, instance) → bigint"></a>strpos(<em>string</em>, <em>substring</em>, <em>instance</em>) → bigint</h3><p>返回字符串 <code>string</code> 中子字符串 <code>substring</code> 第 <code>instance</code> 个出现位置的索引。<code>instance</code> 必须是正整数。位置索引从 1 开始计数。如果未找到子字符串 <code>substring</code> 的第 <code>instance</code> 个出现位置，则返回 0。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> strpos(<span class="string">&#x27;Mommy Finger, Mommy Finger, where are you?&#x27;</span>, <span class="string">&#x27;Mommy Finger&#x27;</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 15。</p>
<h3 id="strrpos-string-substring-→-bigint"><a href="#strrpos-string-substring-→-bigint" class="headerlink" title="strrpos(string, substring) → bigint"></a>strrpos(<em>string</em>, <em>substring</em>) → bigint</h3><p>返回字符串 <code>string</code> 中子字符串 <code>substring</code> 最后一次出现的起始位置索引。位置索引从 1 开始计数。如果未找到子字符串 <code>substring</code>，则返回 0。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> strrpos(<span class="string">&#x27;Mommy Finger, Mommy Finger, where are you?&#x27;</span>, <span class="string">&#x27;Mommy Finger&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 15。</p>
<h3 id="strrpos-string-substring-instance-→-bigint"><a href="#strrpos-string-substring-instance-→-bigint" class="headerlink" title="strrpos(string, substring, instance) → bigint"></a>strrpos(<em>string</em>, <em>substring</em>, <em>instance</em>) → bigint</h3><p>从字符串 <code>string</code> 的末尾开始,返回子字符串 <code>substring</code> 第 <code>instance</code> 个出现位置的索引。<code>instance</code> 必须是正整数。位置索引从 1 开始计数。如果未找到子字符串 <code>substring</code> 的第 <code>instance</code> 个出现位置，则返回 0。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> strrpos(<span class="string">&#x27;Mommy Finger, Mommy Finger, where are you?&#x27;</span>, <span class="string">&#x27;Mommy Finger&#x27;</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 1。</p>
<h3 id="position-substring-IN-string-→-bigint"><a href="#position-substring-IN-string-→-bigint" class="headerlink" title="position(substring IN string) → bigint"></a>position(<em>substring IN string</em>) → bigint</h3><p>返回字符串 <code>string</code> 中子字符串 <code>substring</code> 第一次出现的起始位置索引。位置索引从 1 开始计数。如果未找到子字符串 <code>substring</code>，则返回 0。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">position</span>(<span class="string">&#x27;Mommy Finger&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;Mommy Finger, Mommy Finger, where are you?&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 1。</p>
<h3 id="substr-string-start-→-varchar"><a href="#substr-string-start-→-varchar" class="headerlink" title="substr(string, start) → varchar"></a>substr(<em>string</em>, <em>start</em>) → varchar</h3><p>从起始位置索引 <code>start</code> 开始返回字符串 <code>string</code> 的其余部分。位置索引从 1 开始计数。负的起始位置索引被看作相对于字符串末尾的位置。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;Mommy Finger&#x27;</span>, <span class="number">7</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 <code>Finger</code>。</p>
<h3 id="substr-string-start-length-→-varchar"><a href="#substr-string-start-length-→-varchar" class="headerlink" title="substr(string, start, length) → varchar"></a>substr(<em>string</em>, <em>start</em>, <em>length</em>) → varchar</h3><p>从起始位置索引 <code>start</code> 开始，返回字符串 <code>string</code> 长度为 <code>length</code> 的子字符串。位置索引从 1 开始计数。负的起始位置索引被看作相对于字符串末尾的位置。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;Mommy Finger&#x27;</span>, <span class="number">7</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为 <code>Fi</code>。</p>
<h3 id="word-stem-word-→-varchar"><a href="#word-stem-word-→-varchar" class="headerlink" title="word_stem(word) → varchar"></a>word_stem(<em>word</em>) → varchar</h3><p>返回英语词汇 <code>word</code> 的词干。</p>
<p>返回英语单词 <code>word</code> 的词根(词干)。</p>
<h3 id="word-stem-word-lang-→-varchar"><a href="#word-stem-word-lang-→-varchar" class="headerlink" title="word_stem(word, lang) → varchar"></a>word_stem(<em>word</em>, <em>lang</em>) → varchar</h3><p>返回语言为 <code>lang</code> 的词汇 <code>word</code> 的词干。</p>
<p>返回语言 lang 的单词 word 的词根(词干)。</p>
<h2 id="Unicode-函数"><a href="#Unicode-函数" class="headerlink" title="Unicode 函数"></a><strong>Unicode 函数</strong></h2><h3 id="normalize-string-→-varchar"><a href="#normalize-string-→-varchar" class="headerlink" title="normalize(string) → varchar"></a>normalize(<em>string</em>) → varchar</h3><p>使用 Unicode 标准化形式 NFC（规范等价合成）转换字符串 <code>string</code>。</p>
<h3 id="normalize-string-form-→-varchar"><a href="#normalize-string-form-→-varchar" class="headerlink" title="normalize(string, form) → varchar"></a>normalize(<em>string</em>, <em>form</em>) → varchar</h3><p>使用指定的正规化形式转换字符串 <code>string</code>。<code>form</code> 必须是以下关键字之一：</p>
<ul>
<li>NFC：根据“规范等价变换表”将压缩变换作为其正规化形式之一使用的字符序列转换为其规范变换。</li>
<li>NFD：通过在其正规化形式中解构变换基本汉字将字符序列分解为组成基本汉字的分解序列。</li>
<li>NFKC：非正规化形式通过省略等价变换使字符序列更流畅地显示和排序。</li>
<li>NFKD：非规范等价键序列通过在其非规范形式中解构变换基本汉字将字符序列分解为组成基本汉字的分解序列,并使其更规范。</li>
</ul>
<p>如果指定的形式无效，则抛出异常。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">normalize</span>(<span class="string">&#x27;中国&#x27;</span>, NFKD)</span><br></pre></td></tr></table></figure>
<p>注意，该 SQL 标准函数具有特殊语法，需要将 <code>form</code> 指定为关键字，而不是字符串。如以下写法将抛出异常：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">normalize</span>(<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;NFKD&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>异常信息如下：</p>
<p>SQL 错误 [1]: Query failed (#20230509_121235_03637_xs34i): line 1:24: mismatched input ‘’NFKD’’. Expecting: ‘NFC’, ‘NFD’, ‘NFKC’, ‘NFKD’</p>
<h3 id="to-utf8-string-→-varbinary"><a href="#to-utf8-string-→-varbinary" class="headerlink" title="to_utf8(string) → varbinary"></a>to_utf8(<em>string</em>) → varbinary</h3><p>将字符串 <code>string</code> 编码为 UTF-8 二进制表示。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> to_utf8(<span class="string">&#x27;How are you, today，你今天怎么样&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果如下（二进制显示为乱码）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">How are you, todayï¼ ä½ ä» å¤©æ  ä¹ æ ·</span><br></pre></td></tr></table></figure>
<h3 id="from-utf8-binary-→-varchar"><a href="#from-utf8-binary-→-varchar" class="headerlink" title="from_utf8(binary) → varchar"></a>from_utf8(<em>binary</em>) → varchar</h3><p>解码 UTF-8 编码的二进制数据 <code>binary</code>。无效的 UTF-8 序列将被 Unicode 替代字符 <code>U+FFFD</code> 替换。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> from_utf8(to_utf8(<span class="string">&#x27;How are you, today，你今天怎么样&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p>输出结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">How are you, today，你今天怎么样</span><br></pre></td></tr></table></figure>
<h3 id="from-utf8-binary-replace-→-varchar"><a href="#from-utf8-binary-replace-→-varchar" class="headerlink" title="from_utf8(binary, replace) → varchar"></a>from_utf8(<em>binary</em>, <em>replace</em>) → varchar</h3><p>解码 UTF-8 编码的二进制数据 <code>binary</code>。无效的 UTF-8 序列将被替换字符串 <code>replace</code> 替换。替换字符串 <code>replace</code> 必须是一个单字符字符串或空字符串（在这种情况下，无效字符将被删除）。</p>
<h3 id="key-sampling-percent-varchar-→-double"><a href="#key-sampling-percent-varchar-→-double" class="headerlink" title="key_sampling_percent(varchar) → double"></a>key_sampling_percent(<em>varchar</em>) → double</h3><p>根据给定的 <code>varchar</code> 的哈希值生成 0.0 到 1.0 之间的双精度浮点数。此函数用于确定性数据抽样。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 数学运算符和函数</title>
    <url>/2023/05/28/presto-mathematical-operators-and-functions/</url>
    <content><![CDATA[<h2 id="数学运算符"><a href="#数学运算符" class="headerlink" title="数学运算符"></a>数学运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>+</td>
<td>相加</td>
</tr>
<tr>
<td>-</td>
<td>相减</td>
</tr>
<tr>
<td>*</td>
<td>相乘</td>
</tr>
<tr>
<td>/</td>
<td>相除（整数除法执行截断运算）</td>
</tr>
<tr>
<td>%</td>
<td>取模（求余）</td>
</tr>
</tbody>
</table>
</div>
<h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><h3 id="abs-x-→-返回类型与-x-相同"><a href="#abs-x-→-返回类型与-x-相同" class="headerlink" title="abs(x) → [返回类型与 x 相同]"></a>abs(<em>x</em>) → [返回类型与 x 相同]</h3><p>返回 x 的绝对值。</p>
<h3 id="cbrt-x-→-double"><a href="#cbrt-x-→-double" class="headerlink" title="cbrt(x) → double"></a>cbrt(<em>x</em>) → double</h3><p>返回 x 的立方根。</p>
<h3 id="ceil-x-→-返回类型与-x-相同"><a href="#ceil-x-→-返回类型与-x-相同" class="headerlink" title="ceil(x) → [返回类型与 x 相同]"></a>ceil(<em>x</em>) → [返回类型与 x 相同]</h3><p><code>ceiling()</code> 函数的别名。</p>
<h3 id="cosine-similarity-x-y-→-double"><a href="#cosine-similarity-x-y-→-double" class="headerlink" title="cosine_similarity(x, y) → double"></a>cosine_similarity(<em>x</em>, <em>y</em>) → double</h3><p>返回稀疏向量 x 和 y 之间的余弦相似度：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cosine_similarity(MAP(<span class="keyword">ARRAY</span>[<span class="string">&#x27;a&#x27;</span>], <span class="keyword">ARRAY</span>[<span class="number">1.0</span>]), MAP(<span class="keyword">ARRAY</span>[<span class="string">&#x27;a&#x27;</span>], <span class="keyword">ARRAY</span>[<span class="number">2.0</span>])); <span class="comment">-- 1.0</span></span><br></pre></td></tr></table></figure>
<h3 id="degrees-x-→-double"><a href="#degrees-x-→-double" class="headerlink" title="degrees(x) → double"></a>degrees(<em>x</em>) → double</h3><p>将以弧度为单位的角度 x 转换为度。</p>
<h3 id="e-→-double"><a href="#e-→-double" class="headerlink" title="e() → double"></a>e() → double</h3><p>返回欧拉数 <em>e</em>。</p>
<blockquote>
<p>常数 <em>e</em>，作为数学常数，是自然对数函数的底数，亦称自然常数、自然底数，或是欧拉数（Euler’s number），以瑞士数学家欧拉命名；还有个较少见的名字纳皮尔常数，用来纪念苏格兰数学家约翰·纳皮尔引进对数。它是一个无限不循环小数（无理数），数值约是（小数点后 20 位）：2.71828182845904523536，近似值约为 271801/99990。</p>
</blockquote>
<h3 id="exp-x-→-double"><a href="#exp-x-→-double" class="headerlink" title="exp(x) → double"></a>exp(<em>x</em>) → double</h3><p>返回欧拉数 <em>e</em> 的 x 次幂。</p>
<h3 id="floor-x-→-返回类型与-x-相同"><a href="#floor-x-→-返回类型与-x-相同" class="headerlink" title="floor(x) → [返回类型与 x 相同]"></a>floor(<em>x</em>) → [返回类型与 x 相同]</h3><p>返回小于或等于 x 的最大整数（即：向下舍入到最接近的整数）。注意，该函数返回的类型与参数 x 的类型一致。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> typeof(<span class="built_in">floor</span>(<span class="number">3</span>))        <span class="comment">-- integer</span></span><br><span class="line"><span class="keyword">SELECT</span> typeof(<span class="built_in">floor</span>(<span class="number">4.999</span>))    <span class="comment">-- decimal(2,0)</span></span><br><span class="line"><span class="keyword">SELECT</span> typeof(<span class="built_in">floor</span>(<span class="number">123.019</span>))  <span class="comment">-- decimal(4,0)</span></span><br></pre></td></tr></table></figure>
<h3 id="from-base-string-radix-→-bigint"><a href="#from-base-string-radix-→-bigint" class="headerlink" title="from_base(string, radix) → bigint"></a>from_base(<em>string</em>, <em>radix</em>) → bigint</h3><p>将 <code>radix</code> 进制的字符串 <code>string</code> 转换为 bigint。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> from_base(<span class="string">&#x27;100&#x27;</span>, <span class="number">16</span>);  <span class="comment">-- 256</span></span><br><span class="line"><span class="keyword">SELECT</span> from_base(<span class="string">&#x27;100&#x27;</span>, <span class="number">2</span>);   <span class="comment">-- 4</span></span><br><span class="line"><span class="keyword">SELECT</span> from_base(<span class="string">&#x27;100&#x27;</span>, <span class="number">10</span>);  <span class="comment">-- 100</span></span><br></pre></td></tr></table></figure>
<h3 id="ln-x-→-double"><a href="#ln-x-→-double" class="headerlink" title="ln(x) → double"></a>ln(<em>x</em>) → double</h3><p>返回 x 的自然对数。</p>
<blockquote>
<p>自然对数是以常数 <em>e</em> 为底数的对数，记作 lnN（N&gt;0）。</p>
</blockquote>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ln</span>(e());  <span class="comment">-- 1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ln</span>(<span class="number">1</span>);    <span class="comment">-- 0</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ln</span>(<span class="number">2</span>);    <span class="comment">-- 0.6931471805599453</span></span><br></pre></td></tr></table></figure>
<h3 id="log2-x-→-double"><a href="#log2-x-→-double" class="headerlink" title="log2(x) → double"></a>log2(<em>x</em>) → double</h3><p>返回 x 以 2 为底的对数。</p>
<h3 id="log10-x-→-double"><a href="#log10-x-→-double" class="headerlink" title="log10(x) → double"></a>log10(<em>x</em>) → double</h3><p>返回 x 以 10 为底的对数。</p>
<h3 id="mod-n-m-→-返回类型与输入相同"><a href="#mod-n-m-→-返回类型与输入相同" class="headerlink" title="mod(n, m) → [返回类型与输入相同]"></a>mod(<em>n</em>, <em>m</em>) → [返回类型与输入相同]</h3><p>返回 n 除以 m 的余数。</p>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">mod</span>(<span class="number">4</span>, <span class="number">2</span>);  <span class="comment">-- 0</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">mod</span>(<span class="number">2</span>, <span class="number">4</span>);  <span class="comment">-- 2</span></span><br></pre></td></tr></table></figure>
<h3 id="pi-→-double"><a href="#pi-→-double" class="headerlink" title="pi() → double"></a>pi() → double</h3><p>返回常数 <strong><strong>π。</strong></strong></p>
<h3 id="pow-x-p-→-double"><a href="#pow-x-p-→-double" class="headerlink" title="pow(x, p) → double"></a>pow(<em>x</em>, <em>p</em>) → double</h3><p>返回 x 的 p 次幂，power() 函数的别名。</p>
<h3 id="power-x-p-→-double"><a href="#power-x-p-→-double" class="headerlink" title="power(x, p) → double"></a>power(<em>x</em>, <em>p</em>) → double</h3><p>返回 x 的 p 次幂。</p>
<h3 id="radians-x-→-double"><a href="#radians-x-→-double" class="headerlink" title="radians(x) → double"></a>radians(<em>x</em>) → double</h3><p>将度数 x 转换为弧度。</p>
<blockquote>
<p><strong>如何将度数转换为弧度？</strong></p>
<p><strong><strong>π</strong></strong> 弧度等于180度：<strong><strong>π</strong></strong> 弧度 = 180°</p>
<p>1 度等于 0.01745329252 弧度：</p>
<p>1°=<strong>π</strong> / 180°=0.005555556π= 0.01745329252 弧度</p>
<p><strong>弧度 = 度 × π / 180°</strong></p>
</blockquote>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> radians(<span class="number">180</span>)  <span class="comment">-- 3.141592653589793</span></span><br></pre></td></tr></table></figure>
<h3 id="rand-→-double"><a href="#rand-→-double" class="headerlink" title="rand() → double"></a>rand() → double</h3><p>返回范围在 0.0 &lt;= x &lt; 1.0 之间的伪随机值，random() 函数的别名。</p>
<h3 id="random-→-double"><a href="#random-→-double" class="headerlink" title="random() → double"></a>random() → double</h3><p>返回范围在 0.0 &lt;= x &lt; 1.0 之间的伪随机值。</p>
<h3 id="secure-rand-→-double"><a href="#secure-rand-→-double" class="headerlink" title="secure_rand() → double"></a>secure_rand() → double</h3><p>返回范围在0.0 &lt;= x &lt; 1.0之间的加密安全随机值，<code>secure_random()</code> 函数的别名。</p>
<h3 id="secure-random-→-double"><a href="#secure-random-→-double" class="headerlink" title="secure_random() → double"></a>secure_random() → double</h3><p>返回范围在0.0 &lt;= x &lt; 1.0之间的加密安全随机值。</p>
<h3 id="secure-random-lower-upper-→-返回类型与-x-相同"><a href="#secure-random-lower-upper-→-返回类型与-x-相同" class="headerlink" title="secure_random(lower, upper) → [返回类型与 x 相同]"></a>secure_random(<em>lower</em>, <em>upper</em>) → [返回类型与 x 相同]</h3><p>返回范围在lower &lt;= x &lt; upper之间的加密安全随机值，其中 lower &lt; upper。</p>
<h3 id="round-x-→-返回类型与-x-相同"><a href="#round-x-→-返回类型与-x-相同" class="headerlink" title="round(x) → [返回类型与 x 相同]"></a>round(<em>x</em>) → [返回类型与 x 相同]</h3><p>返回 x 四舍五入后的整数。</p>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> round(<span class="number">3.49</span>);  <span class="comment">-- 3</span></span><br><span class="line"><span class="keyword">SELECT</span> round(<span class="number">3.52</span>);  <span class="comment">-- 4</span></span><br><span class="line"><span class="keyword">SELECT</span> round(<span class="number">3.59</span>);  <span class="comment">-- 4</span></span><br></pre></td></tr></table></figure>
<h3 id="round-x-d-→-返回类型与-x-相同"><a href="#round-x-d-→-返回类型与-x-相同" class="headerlink" title="round(x, d) → [返回类型与 x 相同]"></a>round(<em>x</em>, <em>d</em>) → [返回类型与 x 相同]</h3><p>将 x 四舍五入到小数点后 d 位。</p>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> round(<span class="number">3.49</span>, <span class="number">1</span>);     <span class="comment">-- 3.5</span></span><br><span class="line"><span class="keyword">SELECT</span> round(<span class="number">3.5251</span>, <span class="number">2</span>);   <span class="comment">-- 3.53</span></span><br><span class="line"><span class="keyword">SELECT</span> round(<span class="number">3.59491</span>, <span class="number">2</span>);  <span class="comment">-- 3.59</span></span><br></pre></td></tr></table></figure>
<h3 id="sign-x-→-返回类型与-x-相同"><a href="#sign-x-→-返回类型与-x-相同" class="headerlink" title="sign(x) → [返回类型与 x 相同]"></a>sign(<em>x</em>) → [返回类型与 x 相同]</h3><p>返回 x 的符号函数，即：</p>
<ul>
<li>如果参数为 0，则返回 0；</li>
<li>如果参数大于 0，则返回 1；</li>
<li>如果参数小于 0，则返回 -1。</li>
</ul>
<p>对于 double 参数，该函数另外返回：</p>
<ul>
<li>如果参数为 NaN，则返回 NaN；</li>
<li>如果参数为 +Infinity，则返回 1；</li>
<li>如果参数为 -Infinity，则返回 -1。</li>
</ul>
<h3 id="sqrt-x-→-double"><a href="#sqrt-x-→-double" class="headerlink" title="sqrt(x) → double"></a>sqrt(<em>x</em>) → double</h3><p>返回 x 的平方根。</p>
<h3 id="to-base-x-radix-→-varchar"><a href="#to-base-x-radix-→-varchar" class="headerlink" title="to_base(x, radix) → varchar"></a>to_base(<em>x</em>, <em>radix</em>) → varchar</h3><p>将 x 转换为 radix 进制字符串。</p>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> to_base(<span class="number">256</span>, <span class="number">16</span>); <span class="comment">-- 100</span></span><br><span class="line"><span class="keyword">SELECT</span> to_base(<span class="number">4</span>, <span class="number">2</span>);    <span class="comment">-- 100</span></span><br><span class="line"><span class="keyword">SELECT</span> to_base(<span class="number">100</span>, <span class="number">10</span>); <span class="comment">-- 100</span></span><br></pre></td></tr></table></figure>
<h3 id="truncate-x-→-double"><a href="#truncate-x-→-double" class="headerlink" title="truncate(x) → double"></a>truncate(<em>x</em>) → double</h3><p>返回 x 舍弃小数位后取整的整数。</p>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">truncate</span>(<span class="number">2.5921</span>);    <span class="comment">-- 2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">truncate</span>(<span class="number">-3.14159</span>);  <span class="comment">-- -3</span></span><br></pre></td></tr></table></figure>
<h3 id="truncate-x-n-→-double"><a href="#truncate-x-n-→-double" class="headerlink" title="truncate(x, n) → double"></a>truncate(<em>x</em>, <em>n</em>) → double</h3><p>返回 x 截断到小数点后 n 位。n 可以是负数，以截断小数点左侧的 n 位数。</p>
<p>示例</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">truncate</span>(<span class="number">2.5921</span>, <span class="number">1</span>);   <span class="comment">-- 2.5</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">truncate</span>(<span class="number">-3.14159</span>, <span class="number">3</span>); <span class="comment">-- -3.141</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">truncate</span>(<span class="type">REAL</span> <span class="string">&#x27;12.333&#x27;</span>, <span class="number">-1</span>); <span class="comment">-- 10.0 </span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">truncate</span>(<span class="type">REAL</span> <span class="string">&#x27;12.333&#x27;</span>, <span class="number">0</span>);  <span class="comment">-- 12.0</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">truncate</span>(<span class="type">REAL</span> <span class="string">&#x27;12.333&#x27;</span>, <span class="number">1</span>);  <span class="comment">-- 12.3</span></span><br></pre></td></tr></table></figure>
<h3 id="width-bucket-x-bound1-bound2-n-→-bigint"><a href="#width-bucket-x-bound1-bound2-n-→-bigint" class="headerlink" title="width_bucket(x, bound1, bound2, n) → bigint"></a>width_bucket(<em>x</em>, <em>bound1</em>, <em>bound2</em>, <em>n</em>) → bigint</h3><p>将指定的边界 bound1 ~ bound2 均分为 n 等份（即 n 个等值区间）返回 x 所处区间（区间编号从 0 开始）。</p>
<p><strong>示例</strong></p>
<p>在以下示例中，将边界 0 ~ 30 均匀划分为 3 个等值区间，即 [0, 10)，[10, 20)，[20, 30)，区间编号分别为 1、2、3，小于 0 的区间编号为 0 ，大于 30 的区间编号为 4。</p>
<p>当 x 的值分别为 -1，0，10，20，30，50 时，返回 x 所属区间号。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">-1</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">3</span>);  <span class="comment">-- 0</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">3</span>);   <span class="comment">-- 1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">10</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">3</span>);  <span class="comment">-- 2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">20</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">3</span>);  <span class="comment">-- 3</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">30</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">3</span>);  <span class="comment">-- 4</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">50</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">3</span>);  <span class="comment">-- 4</span></span><br></pre></td></tr></table></figure>
<h3 id="width-bucket-x-bins-→-bigint"><a href="#width-bucket-x-bins-→-bigint" class="headerlink" title="width_bucket(x, bins) → bigint"></a>width_bucket(<em>x</em>, <em>bins</em>) → bigint</h3><p>指定预设边界数组 <code>bins</code>，返回 x 所处区间（区间编号从 0 开始）。<code>bins</code> 参数必须是一个 <em>double</em> 类型的数组，并且是按升序排序的。</p>
<p><strong>示例</strong></p>
<p>用数组 [10, 20, 30] 表示自定义区间分布，其分布如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">&lt;</span><span class="number">10</span>    </span><br><span class="line">[<span class="number">10</span>, <span class="number">20</span>)    </span><br><span class="line">[<span class="number">20</span>, <span class="number">30</span>) </span><br><span class="line"><span class="operator">&gt;=</span> <span class="number">30</span>   </span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">1</span>, <span class="keyword">array</span>[<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]);   <span class="comment">-- 0</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">10</span>, <span class="keyword">array</span>[<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]);  <span class="comment">-- 1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">25</span>, <span class="keyword">array</span>[<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]);  <span class="comment">-- 2</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">width_bucket</span>(<span class="number">60</span>, <span class="keyword">array</span>[<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]);  <span class="comment">-- 3</span></span><br></pre></td></tr></table></figure>
<h2 id="统计函数"><a href="#统计函数" class="headerlink" title="统计函数"></a>统计函数</h2><h3 id="wilson-interval-lower-successes-trials-z-→-double"><a href="#wilson-interval-lower-successes-trials-z-→-double" class="headerlink" title="wilson_interval_lower(successes, trials, z) → double"></a>wilson_interval_lower(<em>successes</em>, <em>trials</em>, <em>z</em>) → double</h3><p>返回伯努利试验过程在由z分数<code>z</code>指定的置信水平下的Wilson分数区间的下界。</p>
<h3 id="wilson-interval-upper-successes-trials-z-→-double"><a href="#wilson-interval-upper-successes-trials-z-→-double" class="headerlink" title="wilson_interval_upper(successes, trials, z) → double"></a>wilson_interval_upper(<em>successes</em>, <em>trials</em>, <em>z</em>) → double</h3><p>返回伯努利试验过程在由z分数<code>z</code>指定的置信水平下的Wilson分数区间的上界。</p>
<h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2><p>所有三角函数的参数均以弧度表示。参见单位转换函数 <em>degrees()</em> 和 <em>radians()</em>。</p>
<h3 id="acos-x-→-double"><a href="#acos-x-→-double" class="headerlink" title="acos(x) → double"></a>acos(<em>x</em>) → double</h3><p>返回<code>x</code>的反余弦。</p>
<h3 id="asin-x-→-double"><a href="#asin-x-→-double" class="headerlink" title="asin(x) → double"></a>asin(<em>x</em>) → double</h3><p>返回<code>x</code>的反正弦。</p>
<h3 id="atan-x-→-double"><a href="#atan-x-→-double" class="headerlink" title="atan(x) → double"></a>atan(<em>x</em>) → double</h3><p>返回<code>x</code>的反正切。</p>
<h3 id="atan2-y-x-→-double"><a href="#atan2-y-x-→-double" class="headerlink" title="atan2(y, x) → double"></a>atan2(<em>y</em>, <em>x</em>) → double</h3><p>返回<code>y / x</code>的反正切。</p>
<h3 id="cos-x-→-double"><a href="#cos-x-→-double" class="headerlink" title="cos(x) → double"></a>cos(<em>x</em>) → double</h3><p>返回<code>x</code>的余弦。</p>
<h3 id="cosh-x-→-double"><a href="#cosh-x-→-double" class="headerlink" title="cosh(x) → double"></a>cosh(<em>x</em>) → double</h3><p>返回<code>x</code>的双曲余弦。</p>
<h3 id="sin-x-→-double"><a href="#sin-x-→-double" class="headerlink" title="sin(x) → double"></a>sin(<em>x</em>) → double</h3><p>返回<code>x</code>的正弦。</p>
<h3 id="tan-x-→-double"><a href="#tan-x-→-double" class="headerlink" title="tan(x) → double"></a>tan(<em>x</em>) → double</h3><p>返回<code>x</code>的正切。</p>
<h3 id="tanh-x-→-double"><a href="#tanh-x-→-double" class="headerlink" title="tanh(x) → double"></a>tanh(<em>x</em>) → double</h3><p>返回<code>x</code>的双曲正切。</p>
<h2 id="浮点数函数"><a href="#浮点数函数" class="headerlink" title="浮点数函数"></a>浮点数函数</h2><h3 id="infinity-→-double"><a href="#infinity-→-double" class="headerlink" title="infinity() → double"></a>infinity() → double</h3><p>返回代表正无穷大的常量。</p>
<h3 id="is-finite-x-→-boolean"><a href="#is-finite-x-→-boolean" class="headerlink" title="is_finite(x) → boolean"></a>is_finite(<em>x</em>) → boolean</h3><p>判断<code>x</code>是否是有限的。</p>
<h3 id="is-infinite-x-→-boolean"><a href="#is-infinite-x-→-boolean" class="headerlink" title="is_infinite(x) → boolean"></a>is_infinite(<em>x</em>) → boolean</h3><p>判断<code>x</code>是否是无穷大的。</p>
<h3 id="is-nan-x-→-boolean"><a href="#is-nan-x-→-boolean" class="headerlink" title="is_nan(x) → boolean"></a>is_nan(<em>x</em>) → boolean</h3><p>判断<code>x</code>是否不是一个数字(非数字)。</p>
<h3 id="nan-→-double"><a href="#nan-→-double" class="headerlink" title="nan() → double"></a>nan() → double</h3><p>返回代表不是数字的常量。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 条件表达式</title>
    <url>/2023/05/11/presto-conditional-expressions/</url>
    <content><![CDATA[<h2 id="CASE"><a href="#CASE" class="headerlink" title="CASE"></a><strong>CASE</strong></h2><p>标准 SQL 的 CASE 表达式有两种形式。</p>
<p>“简单” CASE 表达式的语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CASE</span> expression</span><br><span class="line">    <span class="keyword">WHEN</span> <span class="keyword">value</span> <span class="keyword">THEN</span> <span class="keyword">result</span></span><br><span class="line">    [ <span class="keyword">WHEN</span> ... ]</span><br><span class="line">    [ <span class="keyword">ELSE</span> <span class="keyword">result</span> ]</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>
<p>它会从左到右逐个检查每个值表达式 <code>value</code>，直到找到与条件表达式 <code>expression</code> 相等的表达式为止。然后返回相应的 <code>result</code> 表达式。如果未找到匹配的表达式，则返回 <code>ELSE</code> 子句中的 <code>result</code> 表达式（如果有的话），否则返回 null。</p>
<p>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a,</span><br><span class="line">       <span class="keyword">CASE</span> a</span><br><span class="line">           <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;one&#x27;</span></span><br><span class="line">           <span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27;two&#x27;</span></span><br><span class="line">           <span class="keyword">ELSE</span> <span class="string">&#x27;many&#x27;</span></span><br><span class="line">       <span class="keyword">END</span></span><br></pre></td></tr></table></figure>
<p>“搜索”形式的 CASE 表达式允许使用任意布尔条件判断结果表达式。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CASE</span></span><br><span class="line">    <span class="keyword">WHEN</span> <span class="keyword">condition</span> <span class="keyword">THEN</span> <span class="keyword">result</span></span><br><span class="line">    [ <span class="keyword">WHEN</span> ... ]</span><br><span class="line">    [ <span class="keyword">ELSE</span> <span class="keyword">result</span> ]</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>
<p>它会从左到右计算每个条件表达式，直到有一个表达式为 <code>True</code>，然后返回相应的 <code>result</code> 表达式。如果所有条件表达式均为 <code>FALSE</code>，则返回 <code>ELSE</code> 子句中的 <code>result</code> 表达式（如果有的话），否则返回 null。</p>
<p>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a, b,</span><br><span class="line">       <span class="keyword">CASE</span></span><br><span class="line">           <span class="keyword">WHEN</span> a <span class="operator">=</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;aaa&#x27;</span></span><br><span class="line">           <span class="keyword">WHEN</span> b <span class="operator">=</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27;bbb&#x27;</span></span><br><span class="line">           <span class="keyword">ELSE</span> <span class="string">&#x27;ccc&#x27;</span></span><br><span class="line">       <span class="keyword">END</span></span><br></pre></td></tr></table></figure>
<h2 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h2><p><code>IF</code> 函数实际上是一个编程语言结构，相当于以下的 <code>CASE</code> 表达式：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CASE</span></span><br><span class="line">    <span class="keyword">WHEN</span> <span class="keyword">condition</span> <span class="keyword">THEN</span> true_value</span><br><span class="line">    [ <span class="keyword">ELSE</span> false_value ]</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>
<p>if(<em>condition</em>, <em>true_value</em>)</p>
<p>如果 <em>condition</em> 为 true，则计算 <em>true_value</em> 表达式并返回计算结果，否则返回 null 且不计算 <em>true_value</em> 表达式。</p>
<p>if(<em>condition</em>, <em>true_value</em>, <em>false_value</em>)</p>
<p>如果 <em>condition</em> 为 true，则计算 <em>true_value</em> 表达式并返回计算结果，否则计算 <em>false_value</em> 表达式并返回计算结果。</p>
<h2 id="COALESCE"><a href="#COALESCE" class="headerlink" title="COALESCE"></a><strong>COALESCE</strong></h2><p>coalesce(<em>value1</em>, <em>value2</em>[, <em>…</em>])</p>
<p>从参数列表中返回第一个非空的值。和 <code>CASE</code> 表达式一样，参数只在必要时才会被计算。</p>
<h2 id="NULLIF"><a href="#NULLIF" class="headerlink" title="NULLIF"></a><strong>NULLIF</strong></h2><p>nullif(<em>value1</em>, <em>value2</em>)</p>
<p>如果 <code>value1</code> 等于 <code>value2</code> ，则返回 null，否则返回 <code>value1</code>。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 概述</title>
    <url>/2023/05/19/presto-overview/</url>
    <content><![CDATA[<p>Presto 是一个分布式 SQL 查询引擎，专为查询大数据而设计。它可以在一个或多个异构的数据源上查询大数据集。</p>
<h2 id="别误解，Presto-不是数据库"><a href="#别误解，Presto-不是数据库" class="headerlink" title="别误解，Presto 不是数据库"></a>别误解，Presto 不是数据库</h2><p>尽管 Presto 被许多社区成员称为数据库，但我们必须明确 Presto 的定位。</p>
<ul>
<li>Presto 理解 SQL，但并不提供标准数据库的全部功能。</li>
<li>Presto 不是通用的关系型数据库，也不是 MySQL、PostgreSQL 或 Oracle 等数据库的替代品。</li>
<li>Presto 的设计目的也不是在线事务处理（OLTP）。这一点也适用于许多其他为数据仓库或分析优化的数据库。</li>
</ul>
<p>简而言之，Presto 的重点在于使用大数据环境提供快速的交互式数据分析和报告。如果你需要事务支持、持久化存储或 OLTP 工作负载的支持，Presto 可能不满足你的需求。</p>
<h2 id="Presto-角色"><a href="#Presto-角色" class="headerlink" title="Presto 角色"></a>Presto 角色</h2><p>Presto 提供一种分布式查询方式来高效查询和分析大数据。它专注于低延迟的交互式分析查询而非事务处理。</p>
<p>Presto 是一款利用分布式查询高效查询大数据的工具。如果你处理 TB 级或 PB 级的数据，您很可能使用与 Hadoop 和 HDFS 交互的工具。Presto 的设计目的就是为替代使用 MapReduce 作业管道（如 Hive 或 Pig）查询 HDFS 的工具，但 Presto 不限于访问 HDFS。Presto 已经扩展到多种数据源，包括传统关系数据库和其他数据源如 Cassandra。</p>
<p>Presto 是为数据仓库和分析而设计的，用于数据分析、聚合大量数据和生成报告。这些工作负载通常归类为联机分析处理（OLAP）。</p>
<h2 id="谁在维护-Presto"><a href="#谁在维护-Presto" class="headerlink" title="谁在维护 Presto"></a>谁在维护 Presto</h2><p>Presto 最初由 Facebook 的工程师研发，现已作为开源项目，不仅有 Facebook 内部团队在推进，也有许多社区开发者在参与。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 数据类型</title>
    <url>/2023/05/23/presto-data-types/</url>
    <content><![CDATA[<p>Presto 有一套内置的数据类型，如下所述。其他类型可以由插件提供。</p>
<blockquote>
<p>注意：连接器不需要支持所有类型。有关支持类型的详细信息，请参阅连接器文档。</p>
</blockquote>
<h2 id="Boolean-布尔型"><a href="#Boolean-布尔型" class="headerlink" title="Boolean 布尔型"></a><strong>Boolean 布尔型</strong></h2><p><code>BOOLEAN</code></p>
<p>此类型表示布尔值 true 和 false。</p>
<h2 id="Integer-整数"><a href="#Integer-整数" class="headerlink" title="Integer 整数"></a><strong>Integer 整数</strong></h2><p><strong><code>TINYINT</code></strong></p>
<p>存储空间为 8 位的有符号整数，可以存储的值的范围从 $-2^{(8-1)}$ 到 $2^{(8-1)}-1$，即最小值为 -128，最大值为 127。</p>
<p><strong><code>SMALLINT</code></strong></p>
<p>存储空间为 16 位的有符号整数，可以存储的值的范围从 $-2^{(16-1)}$ 到 $2^{(16-1)}-1$，即最小值为 -32768，最大值为 32767。</p>
<p><strong><code>INTEGER</code></strong></p>
<p>存储空间为 32 位的有符号整数，可以存储的值的范围从 $-2^{(32-1)}$ 到 $2^{(32-1)}-1$，即最小值为 -2147483648，最大值为2147483647。</p>
<p>INT 名称也可用于此类型。</p>
<p><strong><code>BIGINT</code></strong></p>
<p>存储空间为 64 位的有符号整数，可以存储的值的范围从 $-2^{(64-1)}$ 到 $2^{(64-1)}-1$，即最小值为 -9223372036854775808，最大值为9223372036854775807。</p>
<h2 id="Floating-Point-浮点数"><a href="#Floating-Point-浮点数" class="headerlink" title="Floating-Point 浮点数"></a><strong>Floating-Point 浮点数</strong></h2><p><strong><code>REAL</code></strong></p>
<p>32 位不精确的、可变精度的 IEEE 754 标准双精度浮点数。</p>
<p><strong><code>DOUBLE</code></strong></p>
<p>Double 是一种64位不精确、可变精度的二进制浮点运算实现 IEEE 标准754。</p>
<p>64 位不精确的、可变精度的 IEEE 754 标准双精度浮点数。</p>
<h2 id="Fixed-Precision-固定精度"><a href="#Fixed-Precision-固定精度" class="headerlink" title="Fixed-Precision 固定精度"></a><strong>Fixed-Precision 固定精度</strong></h2><p><strong><code>DECIMAL</code></strong></p>
<p>固定精度的十进制数。支持最多 38 位的精度，但性能最高可达 18 位。</p>
<p>十进制类型有两个参数：</p>
<p>精度 - 表示有效数字数的精度；</p>
<p>小数位数 - 小数部分的位数，即小数点后的位数。小数位数是可选的，默认为0。</p>
<p>类型定义示例：<code>DECIMAL (10,3)</code>， <code>DECIMAL (20)</code></p>
<p>值示例：<code>DECIMAL &#39;10.3&#39;</code>，<code>DECIMAL &#39;1234567890&#39;</code>，<code>1.1</code></p>
<blockquote>
<p>注意：由于兼容性的原因，在 0.198 版本之前，没有明确类型指定的十进制字词（例如1.2）默认被视为 DOUBLE 类型的值。0.198 之后，它们被解析为 DECIMAL。</p>
<ul>
<li>系统范围内的属性：<code>parse-decal-Literals-as-double</code></li>
<li>会话范围内的属性：<code>parse_decal_Literals_as_double</code></li>
</ul>
</blockquote>
<h2 id="String-字符串"><a href="#String-字符串" class="headerlink" title="String 字符串"></a><strong>String 字符串</strong></h2><p><strong><code>VARCHAR</code></strong></p>
<p>具有可选最大长度的可变长度字符串。</p>
<p>类型定义示例：<code>varchar</code>，<code>varchar(20)</code></p>
<p><strong><code>CHAR</code></strong></p>
<p>固定长度字符串。没有指定长度的 CHAR 类型的默认长度为 1。CHAR(x) 值总是有 x 字符。例如，在 CHAR(7) 中加入了 4 个隐式的尾随空格。在 CHAR 值的比较中包括前导空格和尾随空格。因此，两个长度不同的字符值 CHAR(x) 和 CHAR(y)，其中 x != y，永远不会相等。</p>
<p>类型定义示例：<code>char</code>，<code>char(20)</code></p>
<p><strong><code>VARBINARY</code></strong></p>
<p>可变长度二进制数据。</p>
<blockquote>
<p>注意：不支持具有长度的二进制字符串：<code>varinary(n)</code></p>
</blockquote>
<p><strong><code>JSON</code></strong></p>
<p>JSON 值类型，可以是 JSON 对象、 JSON 数组、 JSON 数字、 JSON 字符串、 true、 false 或 null。</p>
<h2 id="Date-and-Time-日期及时间"><a href="#Date-and-Time-日期及时间" class="headerlink" title="Date and Time 日期及时间"></a><strong>Date and Time 日期及时间</strong></h2><p><strong><code>DATE</code></strong></p>
<p>日历日期（年、月、日）。</p>
<p>例如：<code>DATE &#39;2001-08-22&#39;</code></p>
<p><strong><code>TIME</code></strong></p>
<p>一天中没有时区的时间（小时、分钟、秒、毫秒）。此类型的值将在会话时区中进行解析和呈现。</p>
<p>例如：<code>TIME &#39;01:02:03.456&#39;</code></p>
<p><strong><code>TIME WITH TIME ZONE</code></strong></p>
<p>带时区的一天中的时间（小时、分钟、秒、毫秒）。此类型的值使用该值的时区呈现。</p>
<p>例如：<code>TIME &#39;01:02:03.456 America/Los_Angeles&#39;</code></p>
<p><strong><code>TIMESTAMP</code></strong></p>
<p>即时时间，包括一天中没有时区的日期和时间。此类型的值将在会话时区中进行解析和呈现。</p>
<p>例如：<code>TIMESTAMP &#39;2001-08-2203:04:05.321&#39;</code></p>
<p><strong><code>TIMESTAMP WITH TIME ZONE</code></strong></p>
<p>即时时间，包括一天中的日期和时间，带有时区。此类型的值会根据所在的时区来显示具体的时间。</p>
<p>例如：<code>TIMESTAMP &#39;2001-08-22 03:04:05.321 America/Los_Angeles&#39;</code></p>
<p><strong><code>INTERVAL YEAR TO MONTH</code></strong></p>
<p>表示年月之间跨度。</p>
<p>例如：<code>INTERVAL &#39;3&#39; MONTH</code> 表示 3 个月的跨度。</p>
<p><strong><code>INTERVAL DAY TO SECOND</code></strong></p>
<p>天、小时、分钟、秒和毫秒之间的跨度。</p>
<p>例如：<code>INTERVAL &#39;2&#39; DAY</code> 表示两天的跨度。</p>
<h2 id="Structural-结构"><a href="#Structural-结构" class="headerlink" title="Structural 结构"></a><strong>Structural 结构</strong></h2><p><strong><code>ARRAY</code></strong></p>
<p>表示给定类型的数组。</p>
<p>例如：<code>ARRAY[1, 2, 3]</code> 是一个整型数组。</p>
<p><strong><code>MAP</code></strong></p>
<p>表示一个键值对映射。</p>
<p>例如：<code>MAP(ARRAY[&#39;foo&#39;, &#39;bar&#39;], ARRAY[1, 2])</code></p>
<p><strong><code>ROW</code></strong></p>
<p>表示一个由命名字段组成的结构体。这些字段可以是任何 SQL 类型，并且可以通过字段引用运算符访问。</p>
<p>例如：<code>CAST(ROW(1, 2.0) AS ROW(x BIGINT, y DOUBLE))</code> 将一个匿名 ROW 类型转换为一个命名字段 ROW 类型。</p>
<h2 id="Network-Address-网络地址"><a href="#Network-Address-网络地址" class="headerlink" title="Network Address 网络地址"></a><strong>Network Address 网络地址</strong></h2><p><strong><code>IPADDRESS</code></strong></p>
<p>表示 IPv4 或 IPv6 地址。</p>
<p>在内部，它使用 IPv6 地址格式来存储，而 IPv4 地址会被映射到 IPv4 映射的 IPv6 地址范围（RFC 4291#section-2.5.5.2）。<br>创建 IPADDRESS 类型值时，IPv4 地址会被映射到这个范围。<br>显示 IPADDRESS 类型值时，如果地址属于这个映射范围，会以 IPv4 的格式显示，否则会以 RFC 5952 中定义的 IPv6 标准格式显示。<br>例如：<br><code>IPADDRESS &#39;10.0.0.1&#39;</code> 存储为 IPv6 映射地址，显示为 IPv4 地址 <code>&#39;10.0.0.1&#39;</code></p>
<p><code>IPADDRESS &#39;2001:db8::1&#39;</code> 存储并显示为 IPv6 地址 <code>&#39;2001:db8::1&#39;</code></p>
<h2 id="UUID"><a href="#UUID" class="headerlink" title="UUID"></a><strong>UUID</strong></h2><p><strong><code>UUID</code></strong></p>
<p>表示 UUID (全局唯一标识符) ，也称为 GUID。</p>
<p>它使用 RFC4122 标准定义的格式。</p>
<p>例如：<code>UUID &#39;12151fd2-7586-11e9-8f9e-2a86e4085a59&#39;</code></p>
<p><strong><code>IPPREFIX</code></strong></p>
<p>表示 IPv4 或 IPv6 地址的前缀。</p>
<p>在内部，它使用 IPv6 地址格式存储，IPv4 地址会被映射到 IPv4 映射的 IPv6 地址范围（RFC 4291#section-2.5.5.2）。<br>创建 IPPREFIX 值时，IPv4 地址会被映射并截断到网络前缀。<br>显示 IPPREFIX 值时，如果地址属于 IPv4 映射范围，会以 IPv4 CIDR 格式显示，否则会以 IPv6 CIDR 格式显示。<br>例如：</p>
<p><code>IPPREFIX &#39;10.0.1.0/24&#39;</code>  存储为 IPv6 前缀，显示为 IPv4 CIDR ‘10.0.1.0/24’</p>
<p><code>IPPREFIX &#39;2001:db8::/48&#39;</code> 存储并显示为 IPv6 CIDR ‘2001:db8::/48’</p>
<h2 id="HyperLogLog"><a href="#HyperLogLog" class="headerlink" title="HyperLogLog"></a><strong>HyperLogLog</strong></h2><p>HyperLogLog 算法是一种近似计算不同计数的算法，比精确计数的算法更高效。</p>
<p><strong><code>HyperLogLog</code></strong></p>
<p>实现了 HyperLogLog 算法。它开始采用稀疏表示，当变得更加紧凑时会转换为密集表示。</p>
<p><strong><code>P4HyperLogLog</code></strong></p>
<p>也实现了 HyperLogLog 算法，但是它一开始和后续都采用密集表示。</p>
<p><strong><code>HyperLogLog</code> VS <code>P4HyperLogLog</code></strong></p>
<p>HyperLogLog 算法和相关的数据类型被用来高效地计算数据集中的不同元素数量。相比于精确计数，它可以节省大量内存空间。</p>
<p><code>HyperLogLog</code> 和 <code>P4HyperLogLog</code> 类型实现了 HyperLogLog 算法，但是采用了不同的表示方法。<code>HyperLogLog</code> 类型在空间上更加高效，会根据数据转换表示方法。<code>P4HyperLogLog</code> 类型始终采用密集表示，空间消耗稍大但是计算效率高一点。</p>
<p>所以，这些 HyperLogLog 相关的数据类型为我们提供了一种非常高效的方式来计算近似的不同计数。相比精确算法，它们可以极大地节省内存空间和计算资源。这使其非常适合在超大数据集上进行相应的运算和分析。</p>
<p>简单来说，HyperLogLog 算法及其相关数据类型利用近似算法实现不同计数的高效计算，这在超大数据集场景下具有非常高的应用价值。</p>
<h2 id="KHyperLogLog"><a href="#KHyperLogLog" class="headerlink" title="KHyperLogLog"></a>KHyperLogLog</h2><p><strong><code>KHyperLogLog</code></strong></p>
<p>实现了一种用于紧凑地表示两列关联的数据结构。</p>
<h2 id="Quantile-Digest-分位数摘要"><a href="#Quantile-Digest-分位数摘要" class="headerlink" title="Quantile Digest 分位数摘要"></a><strong>Quantile Digest 分位数摘要</strong></h2><p><strong><code>QDigest</code></strong></p>
<p>分位数摘要（qdigest）是一种摘要结构，用于捕获给定输入数据集的近似分布，并可通过查询从分布中检索近似分位数值。qdigest 的精度是可配置的，允许以牺牲空间为代价获得更精确的结果。</p>
<p>可以使用 qdigest 来近似地查询某个分位数的值。qdigest 的一个有用特性是它们是可加的，这意味着多个 qdigest 可以合并在一起而不会失去精度</p>
<p>qdigest 可用于对询问某个分位数的值的查询给出近似答案。Qdigest的一个有用特性是它们是可加的，这意味着它们可以合并在一起而不会丢失精度。</p>
<p>只要近似的分位数结果可以重用，分位数摘要就很有帮助。例如，某人可能对过去一周每天第 99 个分位数感兴趣。不需要计算整周的数据的第 99 个分位数，可以每天存储一个分位数摘要，并快速合并来查询第 99 个分位数。</p>
<h2 id="T-Digest"><a href="#T-Digest" class="headerlink" title="T-Digest"></a><strong>T-Digest</strong></h2><p><strong><code>TDigest</code></strong></p>
<p>T-Digest 类似于 Q-Digest，但它使用不同的算法来表示一组数字的近似分布。T-Digest 比 Q-Digest 具有更好的性能，但是只支持 DOUBLE 类型。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 比较运算符和函数</title>
    <url>/2023/05/14/presto-comparison-functions-and-operators/</url>
    <content><![CDATA[<h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>&lt;</td>
<td>小于</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于等于</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于等于</td>
</tr>
<tr>
<td>=</td>
<td>等于</td>
</tr>
<tr>
<td>&lt;&gt;</td>
<td>不等于</td>
</tr>
<tr>
<td>!=</td>
<td>不等于（非标准但常用的语法）</td>
</tr>
</tbody>
</table>
</div>
<h2 id="范围运算符：BETWEEN"><a href="#范围运算符：BETWEEN" class="headerlink" title="范围运算符：BETWEEN"></a>范围运算符：<strong>BETWEEN</strong></h2><p><code>BETWEEN</code> 运算符用于判断一个值是否在指定范围内。它使用如下语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">value</span> <span class="keyword">BETWEEN</span> min <span class="keyword">AND</span> max</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">3</span> <span class="keyword">BETWEEN</span> <span class="number">2</span> <span class="keyword">AND</span> <span class="number">6</span>;  <span class="comment">-- true</span></span><br></pre></td></tr></table></figure>
<p>以上的语句等效于：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">3</span> <span class="operator">&gt;=</span> <span class="number">2</span> <span class="keyword">AND</span> <span class="number">3</span> <span class="operator">&lt;=</span> <span class="number">6</span>;  <span class="comment">-- true</span></span><br></pre></td></tr></table></figure>
<p>要判断一个值是否不在指定范围内，则使用 <code>NOT BETWEEN</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">3</span> <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">2</span> <span class="keyword">AND</span> <span class="number">6</span>;  <span class="comment">-- false</span></span><br></pre></td></tr></table></figure>
<p>上述语句与以下语句等效：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">3</span> <span class="operator">&lt;</span> <span class="number">2</span> <span class="keyword">OR</span> <span class="number">3</span> <span class="operator">&gt;</span> <span class="number">6</span>;  <span class="comment">-- false</span></span><br></pre></td></tr></table></figure>
<p>在 <code>BETWEEN</code> 或 <code>NOT BETWEEN</code> 语句中出现 NULL 将导致语句计算结果为 NULL:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NULL</span> <span class="keyword">BETWEEN</span> <span class="number">2</span> <span class="keyword">AND</span> <span class="number">4</span>; <span class="comment">-- null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span> <span class="keyword">BETWEEN</span> <span class="keyword">NULL</span> <span class="keyword">AND</span> <span class="number">6</span>; <span class="comment">-- null</span></span><br></pre></td></tr></table></figure>
<p><code>BETWEEN</code> 和 <code>NOT BETWEEN</code> 运算符也可以用于比较字符串参数：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;Paul&#x27;</span> <span class="keyword">BETWEEN</span> <span class="string">&#x27;John&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;Ringo&#x27;</span>; <span class="comment">-- true</span></span><br></pre></td></tr></table></figure>
<p>注意，<code>BETWEEN</code> 和 <code>NOT BETWEEN</code> 的 value、min 和 max 参数必须是同一类型。例如，判断字符串 Presto John 是否在 2.3 和 35.2 之间，将会产生一个错误：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;Presto John&#x27;</span> <span class="keyword">BETWEEN</span> <span class="number">2.3</span> <span class="keyword">AND</span> <span class="number">35.2</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cannot check if varchar(11) is BETWEEN decimal(2,1) and decimal(3,1)</span><br></pre></td></tr></table></figure>
<h2 id="IS-NULL-和-IS-NOT-NULL"><a href="#IS-NULL-和-IS-NOT-NULL" class="headerlink" title="IS NULL 和 IS NOT NULL"></a>I<strong>S NULL 和 IS NOT NULL</strong></h2><p><code>IS NULL</code> 和 <code>IS NOT NULL</code> 运算符用于判断一个值是否为 NULL。两个运算符适用于所有数据类型。<br>将 NULL 与 IS NULL 一起使用会返回 true：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">NULL</span> <span class="keyword">IS</span> <span class="keyword">NULL</span>; <span class="comment">-- true</span></span><br></pre></td></tr></table></figure>
<p>但任何其他常量不会：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">3.0</span> <span class="keyword">IS</span> <span class="keyword">NULL</span>; <span class="comment">-- false</span></span><br></pre></td></tr></table></figure>
<h2 id="IS-DISTINCT-FROM-和-IS-NOT-DISTINCT-FROM"><a href="#IS-DISTINCT-FROM-和-IS-NOT-DISTINCT-FROM" class="headerlink" title="IS DISTINCT FROM 和 IS NOT DISTINCT FROM"></a><strong>IS DISTINCT FROM 和 IS NOT DISTINCT FROM</strong></h2><p>在 SQL 中，<code>NULL</code> 值表示未知值，因此涉及 <code>NULL</code> 的任何比较都会产生 <code>NULL</code>。<code>IS DISTINCT FROM</code>  和 <code>IS NOT DISTINCT FROM</code> 运算符将 <code>NULL</code> 视为已知值，且这两个运算符即使在存在 <code>NULL</code> 输入的情况下也保证会产生真或假结果：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NULL</span> <span class="keyword">IS</span> <span class="keyword">DISTINCT</span> <span class="keyword">FROM</span> <span class="keyword">NULL</span>; <span class="comment">-- false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NULL</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">DISTINCT</span> <span class="keyword">FROM</span> <span class="keyword">NULL</span>; <span class="comment">-- true</span></span><br></pre></td></tr></table></figure>
<p>在上述示例中，NULL 值不被视为与 NULL 不同。当比较可能包含 NULL 的值时，使用这些运算符以保证得到 TRUE 或 FALSE 结果。</p>
<p>以下真值表演示了 IS DISTINCT FROM 和 IS NOT DISTINCT FROM 中的 NULL 处理：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
<th>a = b</th>
<th>a &lt;&gt; b</th>
<th>a DISTINCT b</th>
<th>a NOT DISTINCT b</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>1</td>
<td>TRUE</td>
<td>FALSE</td>
<td>FALSE</td>
<td>TRUE</td>
</tr>
<tr>
<td>1</td>
<td>2</td>
<td>FALSE</td>
<td>TRUE</td>
<td>TRUE</td>
<td>FALSE</td>
</tr>
<tr>
<td>1</td>
<td>NULL</td>
<td>NULL</td>
<td>NULL</td>
<td>TRUE</td>
<td>FALSE</td>
</tr>
<tr>
<td>NULL</td>
<td>NULL</td>
<td>NULL</td>
<td>NULL</td>
<td>FALSE</td>
<td>TRUE</td>
</tr>
</tbody>
</table>
</div>
<h2 id="GREATEST-和-LEAST"><a href="#GREATEST-和-LEAST" class="headerlink" title="GREATEST 和 LEAST"></a><strong>GREATEST 和 LEAST</strong></h2><p>这两个函数不在 SQL 标准中，但是一种常见的扩展。与 Presto 中的大多数其他函数一样，如果任何参数为 null，它们将返回 null。请注意，在某些其他数据库（如 PostgreSQL）中，只有当所有参数都为 null 时，它们才会返回 null。</p>
<p>支持以下类型:</p>
<p><code>DOUBLE</code>、<code>BIGINT</code>、<code>VARCHAR</code>、<code>TIMESTAMP</code>、<code>TIMESTAMP WITH TIME ZONE</code>、<code>DATE</code></p>
<p>greatest(<em>value1</em>, <em>value2</em>, <em>…</em>, <em>valueN</em>) → [与输入类型相同]</p>
<p>返回提供的值中最大的值。</p>
<p>least(<em>value1</em>, <em>value2</em>, <em>…</em>, <em>valueN</em>) → [同输入]</p>
<p>返回提供的值中最小的值。</p>
<h2 id="量化比较谓词：-ALL-ANY-和-SOME"><a href="#量化比较谓词：-ALL-ANY-和-SOME" class="headerlink" title="量化比较谓词： ALL, ANY 和 SOME"></a>量化比较谓词： ALL, ANY 和 SOME</h2><p><code>ALL</code>、<code>ANY</code> 和 <code>SOME</code> 量词可以与比较运算符结合使用，如下所示:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">expression operator quantifier ( subquery )</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;hello&#x27;</span> <span class="operator">=</span> <span class="keyword">ANY</span> (<span class="keyword">VALUES</span> <span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>); <span class="comment">-- true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">21</span> <span class="operator">&lt;</span> <span class="keyword">ALL</span> (<span class="keyword">VALUES</span> <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>); <span class="comment">-- false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">42</span> <span class="operator">&gt;=</span> <span class="keyword">SOME</span> (<span class="keyword">SELECT</span> <span class="number">41</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="number">42</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> <span class="number">43</span>); <span class="comment">-- true</span></span><br></pre></td></tr></table></figure>
<p>这些量词和比较运算符的组合含义如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>表达式</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>A = ALL (…)</td>
<td>当 A 等于所有的值时，结果为 true。</td>
</tr>
<tr>
<td>A &lt;&gt; ALL (…)</td>
<td>当 A 不匹配任何值时，结果为 true。</td>
</tr>
<tr>
<td>A &lt; ALL (…)</td>
<td>当 A 小于最小值时，结果为 true。</td>
</tr>
<tr>
<td>A = ANY (…)</td>
<td>当 A 等于其中任意值时，结果为 true。这种形式等价于 A IN (…)。</td>
</tr>
<tr>
<td>A &lt;&gt; ANY (…)</td>
<td>当 A 不匹配其中任意一个值时，结果为 true。</td>
</tr>
<tr>
<td>A &lt; ANY (…)</td>
<td>当 A 小于最大值时，结果为 true。</td>
</tr>
</tbody>
</table>
</div>
<p><code>ANY</code> 和 <code>SOME</code> 的意思相同，可以互换使用。</p>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&gt;</span> <span class="keyword">ALL</span> (<span class="keyword">SELECT</span> price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;Toys&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>这个查询将返回价格高于所有玩具商品价格的商品。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&gt;</span> <span class="keyword">ANY</span> (<span class="keyword">SELECT</span> price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;Toys&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>这个查询将返回价格高于任一玩具商品价格的商品。</p>
<h2 id="LIKE"><a href="#LIKE" class="headerlink" title="LIKE"></a><strong>LIKE</strong></h2><p>LIKE 运算符用于匹配字符串中的指定字符模式。模式可以包含普通字符和通配符。通配符可以使用 ESCAPE 参数指定的单个字符进行转义。匹配区分大小写。<br>语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">expression <span class="keyword">LIKE</span> <span class="keyword">pattern</span> [ <span class="keyword">ESCAPE</span> <span class="string">&#x27;escape_character&#x27;</span> ]</span><br></pre></td></tr></table></figure>
<p>如果 <code>pattern</code> 或 <code>escape_character</code> 为 null，则表达式的计算结果为 null。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>通配符</th>
<th>表示</th>
</tr>
</thead>
<tbody>
<tr>
<td>%</td>
<td>百分号表示零个、一个或多个字符</td>
</tr>
<tr>
<td>_</td>
<td>下划线表示一个字符</td>
</tr>
</tbody>
</table>
</div>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">VALUES</span> (<span class="string">&#x27;abc&#x27;</span>), (<span class="string">&#x27;bcd&#x27;</span>), (<span class="string">&#x27;cde&#x27;</span>)) <span class="keyword">AS</span> t (name)</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%b%&#x27;</span></span><br><span class="line"><span class="comment">--returns &#x27;abc&#x27; and  &#x27;bcd&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">VALUES</span> (<span class="string">&#x27;abc&#x27;</span>), (<span class="string">&#x27;bcd&#x27;</span>), (<span class="string">&#x27;cde&#x27;</span>)) <span class="keyword">AS</span> t (name)</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;_b%&#x27;</span></span><br><span class="line"><span class="comment">--returns &#x27;abc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">VALUES</span> (<span class="string">&#x27;abc&#x27;</span>), (<span class="string">&#x27;bcd&#x27;</span>), (<span class="string">&#x27;cde&#x27;</span>)) <span class="keyword">AS</span> t (name)</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;b%&#x27;</span></span><br><span class="line"><span class="comment">--returns &#x27;bcd&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">VALUES</span> (<span class="string">&#x27;abc&#x27;</span>), (<span class="string">&#x27;bcd&#x27;</span>), (<span class="string">&#x27;cde&#x27;</span>)) <span class="keyword">AS</span> t (name)</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;B%&#x27;</span></span><br><span class="line"><span class="comment">--returns nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">VALUES</span> (<span class="string">&#x27;a_c&#x27;</span>), (<span class="string">&#x27;_cd&#x27;</span>), (<span class="string">&#x27;cde&#x27;</span>)) <span class="keyword">AS</span> t (name)</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%#_%&#x27;</span> <span class="keyword">ESCAPE</span> <span class="string">&#x27;#&#x27;</span></span><br><span class="line"><span class="comment">--returns &#x27;a_c&#x27; and  &#x27;_cd&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">VALUES</span> (<span class="string">&#x27;a%c&#x27;</span>), (<span class="string">&#x27;%cd&#x27;</span>), (<span class="string">&#x27;cde&#x27;</span>)) <span class="keyword">AS</span> t (name)</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%#%%&#x27;</span> <span class="keyword">ESCAPE</span> <span class="string">&#x27;#&#x27;</span></span><br><span class="line"><span class="comment">--returns &#x27;a%c&#x27; and  &#x27;%cd&#x27;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 转换函数</title>
    <url>/2023/05/15/presto-conversion-functions/</url>
    <content><![CDATA[<p>Presto 可以隐式地将数字和字符值转换为适当的数据类型,前提是这种转换是可行的。然而，Presto 不会在字符类型和数字类型间隐式转换。例如，一个期望获得 <code>varchar</code> 类型结果的查询不会自动将 <code>bigint</code> 类型的值转换为对应的 <code>varchar</code> 类型。</p>
<p>如果有需要，值可以通过显式转换来变换为特定的数据类型。</p>
<h2 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h2><p>cast(<em>value AS type</em>) → type</p>
<p>可以通过显式转换将一个值变换为特定的数据类型。这可以用于将 <code>varchar</code> 类型的值转换为数字类型，反之也可以。</p>
<p>try_cast(<em>value AS type</em>) → type</p>
<p>与 <code>cast()</code> 函数相似，不同之处在于如果转换失败，它会返回 null 值。</p>
<h2 id="数据大小"><a href="#数据大小" class="headerlink" title="数据大小"></a>数据大小</h2><p>parse_presto_data_size(<em>string</em>)</p>
<p>可以将格式为 <code>value unit</code> 的字符串解析为一个数字，其中：</p>
<p><code>value</code> 为小数，表示 <code>unit</code> 值的数值部分；</p>
<p><code>unit</code> 为数据大小的单位，如B、KB、MB、GB等。</p>
<p><code>parse_presto_data_size</code> 函数支持以下数据大小单位：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>单位</th>
<th>描述</th>
<th>值</th>
</tr>
</thead>
<tbody>
<tr>
<td>B</td>
<td>Bytes</td>
<td>1</td>
</tr>
<tr>
<td>kB</td>
<td>Kilobytes</td>
<td>1024</td>
</tr>
<tr>
<td>MB</td>
<td>Megabytes</td>
<td>1024^2</td>
</tr>
<tr>
<td>GB</td>
<td>Gigabytes</td>
<td>1024^3</td>
</tr>
<tr>
<td>TB</td>
<td>Terabytes</td>
<td>1024^4</td>
</tr>
<tr>
<td>PB</td>
<td>Petabytes</td>
<td>10245^</td>
</tr>
<tr>
<td>EB</td>
<td>Exabytes</td>
<td>1024^6</td>
</tr>
<tr>
<td>ZB</td>
<td>Zettabytes</td>
<td>1024^7</td>
</tr>
<tr>
<td>YB</td>
<td>Yottabytes</td>
<td>1024^8</td>
</tr>
</tbody>
</table>
</div>
<p><strong>示例</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> parse_presto_data_size(<span class="string">&#x27;1B&#x27;</span>); <span class="comment">-- 1</span></span><br><span class="line"><span class="keyword">SELECT</span> parse_presto_data_size(<span class="string">&#x27;1kB&#x27;</span>); <span class="comment">-- 1024</span></span><br><span class="line"><span class="keyword">SELECT</span> parse_presto_data_size(<span class="string">&#x27;1MB&#x27;</span>); <span class="comment">-- 1048576</span></span><br><span class="line"><span class="keyword">SELECT</span> parse_presto_data_size(<span class="string">&#x27;2.3MB&#x27;</span>); <span class="comment">-- 2411724</span></span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>typeof(<em>expr</em>) → varchar</p>
<p>根据提供的表达式，推断并返回表达式中的数据类型名称：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> typeof(<span class="number">123</span>); <span class="comment">-- integer</span></span><br><span class="line"><span class="keyword">SELECT</span> typeof(<span class="string">&#x27;cat&#x27;</span>); <span class="comment">-- varchar(3)</span></span><br><span class="line"><span class="keyword">SELECT</span> typeof(<span class="built_in">cos</span>(<span class="number">2</span>) <span class="operator">+</span> <span class="number">1.5</span>); <span class="comment">-- double</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Presto | 逻辑运算符</title>
    <url>/2023/05/13/presto-logical-operators/</url>
    <content><![CDATA[<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><div class="table-container">
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>AND</td>
<td>当运算符 AND 两边的表达式的结果都为 true 时，整个运算结果才为 true，否则，只要有一方为 false，则结果为 false。</td>
<td>a AND b</td>
</tr>
<tr>
<td>OR</td>
<td>当运算符 OR 两边的表达式的结果只要有一个为 true 时，整个运算结果为 true；两边的表达式的结果均为 false，则结果为 false。</td>
<td>a OR b</td>
</tr>
<tr>
<td>NOT</td>
<td>如果布尔值为 false 返回 true；如果布尔值为 true 返回 false。</td>
<td>NOT a</td>
</tr>
</tbody>
</table>
</div>
<h2 id="NULL-值对逻辑运算符的影响"><a href="#NULL-值对逻辑运算符的影响" class="headerlink" title="NULL 值对逻辑运算符的影响"></a>NULL 值对逻辑运算符的影响</h2><p>如果表达式的一边或两边是 <em>NULL</em>，那么 <code>AND</code> 运算符的结果可能是 <em>NULL</em>。如果 <code>AND</code> 运算符至少有一边是 <code>FALSE</code>，那么表达式的结果为 <code>FALSE</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>) <span class="keyword">AND</span> <span class="literal">true</span>; <span class="comment">-- null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>) <span class="keyword">AND</span> <span class="literal">false</span>; <span class="comment">-- false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>) <span class="keyword">AND</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>); <span class="comment">-- null</span></span><br></pre></td></tr></table></figure>
<p>如果表达式的一边或两边是 <em>NULL</em>，那么 <code>OR</code> 运算符较的结果可能是 <em>NULL</em>。如果一个 <code>OR</code> 运算符的至少一边是 <code>TRUE</code>，那么表达式的结果为 <code>TRUE</code>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>) <span class="keyword">OR</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>); <span class="comment">-- null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>) <span class="keyword">OR</span> <span class="literal">false</span>; <span class="comment">-- null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>) <span class="keyword">OR</span> <span class="literal">true</span>; <span class="comment">-- true</span></span><br></pre></td></tr></table></figure>
<p>下面的真值表展示了在 <code>AND</code> 和 <code>OR</code> 中对 <em>NULL</em> 的处理：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>b</th>
<th>a AND b</th>
<th>a OR b</th>
</tr>
</thead>
<tbody>
<tr>
<td>TRUE</td>
<td>TRUE</td>
<td>TRUE</td>
<td>TRUE</td>
</tr>
<tr>
<td>TRUE</td>
<td>FALSE</td>
<td>FALSE</td>
<td>TRUE</td>
</tr>
<tr>
<td>TRUE</td>
<td>NULL</td>
<td>NULL</td>
<td>TRUE</td>
</tr>
<tr>
<td>FALSE</td>
<td>TRUE</td>
<td>FALSE</td>
<td>TRUE</td>
</tr>
<tr>
<td>FALSE</td>
<td>FALSE</td>
<td>FALSE</td>
<td>FALSE</td>
</tr>
<tr>
<td>FALSE</td>
<td>NULL</td>
<td>FALSE</td>
<td>NULL</td>
</tr>
<tr>
<td>NULL</td>
<td>TRUE</td>
<td>NULL</td>
<td>TRUE</td>
</tr>
<tr>
<td>NULL</td>
<td>FALSE</td>
<td>FALSE</td>
<td>NULL</td>
</tr>
<tr>
<td>NULL</td>
<td>NULL</td>
<td>NULL</td>
<td>NULL</td>
</tr>
</tbody>
</table>
</div>
<p>如下面的例子所示，<em>NULL</em> 的逻辑非是 <em>NULL</em>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOT</span> <span class="built_in">CAST</span>(<span class="keyword">null</span> <span class="keyword">AS</span> <span class="type">boolean</span>); <span class="comment">-- null</span></span><br></pre></td></tr></table></figure>
<p>下面的真值表演示了 <code>NOT</code> 中对 <em>NULL</em> 的处理：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>a</th>
<th>NOT a</th>
</tr>
</thead>
<tbody>
<tr>
<td>TRUE</td>
<td>FALSE</td>
</tr>
<tr>
<td>FALSE</td>
<td>TRUE</td>
</tr>
<tr>
<td>NULL</td>
<td>NULL</td>
</tr>
</tbody>
</table>
</div>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 编程指南 | 使用 with 关键字</title>
    <url>/2023/04/22/python-with-keyword/</url>
    <content><![CDATA[<p>Python with 语句的作用是在语句块执行完毕后，自动调用 with 后面表达式的 <code>__exit__</code> 方法。这允许我们不必显式地调用 close 方法，就可以确保资源总会被释放。with 语句可以使代码更清晰、更具可读性，简化了文件流、数据库连接等公共资源的管理。</p>
<h2 id="使用-with-示例"><a href="#使用-with-示例" class="headerlink" title="使用 with 示例"></a>使用 with 示例</h2><p>一个最常见的例子是打开文件，使用 with 关键字，我们可以这么写：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;file.txt&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    read_data = f.read()</span><br></pre></td></tr></table></figure>
<p>使用 with 关键字，我们不必显式调用 <code>f.close()</code> 来关闭文件。with 语句会在读取文件后自动关闭该文件。</p>
<p>如果我们不使用 with 关键字，为了避免在读取文件的过程中出现异常，使文件不能被正常关闭，导致文件资源一直被该程序占用而无法被释放，我们需要使用 <code>try…except…finally</code> 编码范式，具体代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">		f = <span class="built_in">open</span>(<span class="string">&#x27;file.txt&#x27;</span>)</span><br><span class="line">    read_data = f.read()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">		<span class="built_in">print</span>(err)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure>
<p>在该代码示例中，我们对可能发生异常的代码处使用 try 关键字进行捕获，发生异常时执行 except 代码块，而 finally 代码块是无论什么情况都会执行，所以文件会被关闭，不会因为执行异常而导致该文件资源一直被占用。</p>
<p>通过对比这两个示例可以发现，使用 with 关键字的代码会更加简洁。</p>
<h2 id="with-语句实现原理"><a href="#with-语句实现原理" class="headerlink" title="with 语句实现原理"></a>with 语句实现原理</h2><p>with 语句对于任何实现了上下文管理协议（context management protocol）的对象都起作用。这个协议包含 <code>__enter__</code> 和 <code>__exit__</code> 两个方法。<code>__enter__</code> 方法在 with 块开始时被调用，并且返回一个用于该块的资源。<code>__exit__</code> 方法在离开 with 块时，无论是正常退出还是由于异常，都会被调用。</p>
<p>例如，我们可以使用上下文管理器来实现一个简单的计时器（即 with 语句来记录代码块的执行时间），观察 with 语句的执行过程。</p>
<p>示例代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Timer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.start = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;__enter__: current_timestamp -&quot;</span>, <span class="variable language_">self</span>.start)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_val, exc_tb</span>):</span><br><span class="line">        <span class="variable language_">self</span>.end = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="variable language_">self</span>.end - <span class="variable language_">self</span>.start)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;__exit__: current_timestamp -&quot;</span>, <span class="variable language_">self</span>.end)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> Timer() <span class="keyword">as</span> t:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;with block, do something...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">		Output:</span></span><br><span class="line"><span class="string">		__enter__: current_timestamp - 1682600690.6863067</span></span><br><span class="line"><span class="string">		with block, do something...</span></span><br><span class="line"><span class="string">		0.0004775524139404297</span></span><br><span class="line"><span class="string">		__exit__: current_timestamp - 1682600690.6867843</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>代码执行逻辑如下：</p>
<ol>
<li><p>首先定义一个 Timer 类，它实现了 <code>__enter__</code> 和 <code>__exit__</code> 方法，这使它可以作为上下文管理器使用。</p>
</li>
<li><p><code>__enter__</code> 方法在 with 语句开始时被调用。它记录了当前时间，用于开始计时。</p>
</li>
<li><p>with 语句块运行，执行需要计时的代码。</p>
</li>
<li><p><code>__exit__</code> 方法在 with 语句结束时被调用。它再次记录当前时间，并计算执行时间(end - start)，然后打印出来。</p>
</li>
</ol>
<p>总体来说，这个 Timer 类通过 <code>__enter__</code> 和 <code>__exit__</code> 两个方法来计算 with 代码块的执行时间。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 编程指南 | 在 JSON 序列化的过程中，如何保证对象属性中的 Unicode 或非 ASCII 字符串能够原样输出</title>
    <url>/2023/04/17/python-encode-unicode-or-non-ascii-characters-into-json-string/</url>
    <content><![CDATA[<p>默认情况下，当对象属性包括 Unicode 或非 ASCII 字符串时，使用 Python 的 JSON 模块进行 JSON 序列化，会将这些字符串转换为 <code>\u</code> 转义序列。这个转义序列由一个反斜杠（<code>\</code>）和一个 <code>u</code> 以及四个十六进制数字组成，代表该字符的 Unicode 码位。</p>
<p>例如，下面示例代码中，将字典对象 my_dict 序列化成 JSON 字符串后，<code>zh</code> 字段的值变为 <code>\u4eba\u751f\u82e6\u77ed\uff0c\u6211\u7528Python\u3002</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个字典对象</span></span><br><span class="line">my_dict = &#123;</span><br><span class="line">    <span class="string">&quot;zh&quot;</span>: <span class="string">&quot;人生苦短，我用Python。&quot;</span>,</span><br><span class="line">    <span class="string">&quot;en&quot;</span>: <span class="string">&quot;Life is short, use Python.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 json.dumps() 方法将字典对象序列化为 JSON 字符串</span></span><br><span class="line">json_str = json.dumps(my_dict)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印 JSON 字符串</span></span><br><span class="line"><span class="built_in">print</span>(json_str)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Output:</span></span><br><span class="line"><span class="string">    &#123;&quot;zh&quot;: &quot;\u4eba\u751f\u82e6\u77ed\uff0c\u6211\u7528Python\u3002&quot;, &quot;en&quot;: &quot;Life is short, use Python.&quot;&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>如果要保留字符串原样输出，使用 <code>json.dumps()</code> 方法时需要传入 <strong>ensure_ascii=False</strong> 参数来保留 Unicode 字符。</p>
<p>具体示例代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个字典对象</span></span><br><span class="line">my_dict = &#123;</span><br><span class="line">    <span class="string">&quot;zh&quot;</span>: <span class="string">&quot;人生苦短，我用Python。&quot;</span>,</span><br><span class="line">    <span class="string">&quot;en&quot;</span>: <span class="string">&quot;Life is short, use Python.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 json.dumps() 方法将字典对象序列化为 JSON 字符串</span></span><br><span class="line">json_str = json.dumps(my_dict, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印 JSON 字符串</span></span><br><span class="line"><span class="built_in">print</span>(json_str)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Output:</span></span><br><span class="line"><span class="string">    &#123;&quot;zh&quot;: &quot;人生苦短，我用Python。&quot;, &quot;en&quot;: &quot;Life is short, use Python.&quot;&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python AES 解密出错：TypeError: &#39;iv&#39; is an invalid keyword argument for this function</title>
    <url>/2023/04/16/python-type-error-iv-is-an-invalid-keyword-argument-for-this-function/</url>
    <content><![CDATA[<p>使用 AES 算法对字符串进行解密，Python 代码片段如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_decrypt</span>(<span class="params">encrypted_str</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;使用AES加密算法对encrypted_str进行解密&quot;&quot;&quot;</span></span><br><span class="line">    bt = encrypted_str.encode()</span><br><span class="line">    base64_code = base64.b64decode(bt)</span><br><span class="line">    aes = AES.new(key=encoding_aes_key.encode(), mode=AES.MODE_CBC, iv=iv.encode())</span><br><span class="line">    decrypted = aes.decrypt(base64_code)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 移除padding并解码</span></span><br><span class="line">    padding_length = decrypted[-<span class="number">1</span>]</span><br><span class="line">    removed_padding = decrypted[:-padding_length]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回明文字符串</span></span><br><span class="line">    <span class="keyword">return</span> removed_padding.decode()</span><br></pre></td></tr></table></figure>
<p>在本地运行没有异常，在测试服务器上运行时出现 <em>TypeError: ‘iv’ is an invalid keyword argument for this function</em> 异常，具体日志信息如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;app.py&quot;</span>, line <span class="number">7</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">import</span> ynservice</span><br><span class="line">  File <span class="string">&quot;/data/wechat-api/ynservice.py&quot;</span>, line <span class="number">153</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    process(t_d)</span><br><span class="line">  File <span class="string">&quot;/data/wechat-api/ynservice.py&quot;</span>, line <span class="number">89</span>, <span class="keyword">in</span> process</span><br><span class="line">    decrypted_str = aes_decrypt(encoding_content)</span><br><span class="line">  File <span class="string">&quot;/data/wechat-api/ynservice.py&quot;</span>, line <span class="number">54</span>, <span class="keyword">in</span> aes_decrypt</span><br><span class="line">    aes = AES.new(key=encoding_aes_key.encode(), mode=AES.MODE_CBC, iv=iv.encode())</span><br><span class="line">  File <span class="string">&quot;/usr/local/lib64/python3.6/site-packages/Crypto/Cipher/AES.py&quot;</span>, line <span class="number">95</span>, <span class="keyword">in</span> new</span><br><span class="line">    <span class="keyword">return</span> AESCipher(key, *args, **kwargs)</span><br><span class="line">  File <span class="string">&quot;/usr/local/lib64/python3.6/site-packages/Crypto/Cipher/AES.py&quot;</span>, line <span class="number">59</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    blockalgo.BlockAlgo.__init__(<span class="variable language_">self</span>, _AES, key, *args, **kwargs)</span><br><span class="line">  File <span class="string">&quot;/usr/local/lib64/python3.6/site-packages/Crypto/Cipher/blockalgo.py&quot;</span>, line <span class="number">141</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    <span class="variable language_">self</span>._cipher = factory.new(key, *args, **kwargs)</span><br><span class="line">TypeError: <span class="string">&#x27;iv&#x27;</span> <span class="keyword">is</span> an invalid keyword argument <span class="keyword">for</span> this function</span><br></pre></td></tr></table></figure>
<p>通常，该问题一般都是与 <code>pycrypto</code> 的软件包冲突有关。</p>
<p>这里先尝试卸载 <code>pycrypto</code> 包，再安装 <code>pycryptodome</code> 包即可，相关命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 缷载pycrypto包</span></span><br><span class="line">pip3 uninstall pycrypto</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装pycryptodome包</span></span><br><span class="line">pip3 install pycryptodome</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
  </entry>
  <entry>
    <title>Presto关键字EXCEPT详解</title>
    <url>/2023/09/07/presto-keywords-except/</url>
    <content><![CDATA[<p>EXCEPT 是 Presto 中一个关键字，用于执行两个查询的差集操作。它在 Presto 中起到了非常重要的作用，可以帮助我们更方便地处理和分析数据。</p>
<h2 id="EXCEPT基本用法"><a href="#EXCEPT基本用法" class="headerlink" title="EXCEPT基本用法"></a>EXCEPT基本用法</h2><p>在 Presto 中，使用 EXCEPT 关键字进行两个查询之间的差集操作时，需要注意以下几点：</p>
<ol>
<li>查询的结果集必须具有相同的列数和相似的数据类型。</li>
<li>查询的结果集中的列名称必须相同或具有相似的别名。</li>
<li>EXCEPT 关键字只返回第一个查询的结果集中存在，但在第二个查询的结果集中不存在的行。</li>
<li>结果集中的行将按照第一个查询的顺序进行排列。</li>
</ol>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>下面是一个最简单的 EXCEPT 子句示例。第一个查询结果集为 13 和 42，第二个查询结果集为 13。因为 13 也在第二个查询的结果集中，因此它不会被包含在最终结果集中：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">VALUES</span> <span class="number">13</span>, <span class="number">42</span>)</span><br><span class="line"><span class="keyword">EXCEPT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">13</span>;</span><br></pre></td></tr></table></figure>
<p>输出结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> _col0</span><br><span class="line">-------</span><br><span class="line">    42</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure>
<p>接下来，我们再来看一个实际的例子来说明 EXCEPT 的用法。假设我们有两个表，一个是 <code>employees</code>，包含员工的姓名和 ID，另一个是 <code>managers</code>，包含经理的姓名和 ID。我们可以使用 EXCEPT 来找出是员工但不是经理的人员。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询员工表中所有人员</span></span><br><span class="line"><span class="keyword">SELECT</span> name, id <span class="keyword">FROM</span> employees</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXCEPT</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询经理表中所有人员</span></span><br><span class="line"><span class="keyword">SELECT</span> name, id <span class="keyword">FROM</span> managers;</span><br></pre></td></tr></table></figure>
<p>在上面的例子中，我们首先选择了 <code>employees</code> 表中的人员，然后使用 EXCEPT 关键字排除了 <code>managers</code> 表中的人员。结果将返回不是经理的员工。</p>
<p>使用 EXCEPT 关键字可以让我们更轻松地进行数据分析和处理。它提供了一种简洁而高效的方法来比较两个查询的结果集并找出差异。无论是在数据清洗、数据筛选还是数据对比等方面，EXCEPT 都能发挥其重要作用，具有广泛的应用场景，比如可以用来在 Hive 中校验两张表中的数据是否相同。</p>
<p>需要注意的是，尽管 EXCEPT 在 Presto 中非常有用，但我们应该谨慎使用它，尤其是在处理大规模数据集时。EXCEPT 操作可能会导致性能下降，因为它需要对结果集进行排序和比较。因此，在实际应用中，我们应该根据具体情况进行权衡，选择合适的查询方式。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>EXCEPT 是 Presto 中一个功能强大的关键字，用于执行两个查询的差集操作。通过灵活运用 EXCEPT 关键字，我们可以更加高效地处理和分析数据，为数据分析带来便利。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Presto</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 编程指南 | 如何判断字典中是否存在某个键</title>
    <url>/2023/05/18/python-check-if-dictionary-item-exists/</url>
    <content><![CDATA[<p>为确认字典中是否存在指定键，可以利用 <code>in</code> 关键字进行检查：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">info_dict = &#123;</span><br><span class="line">    <span class="string">&quot;tag_id&quot;</span>: <span class="string">&quot;wweFrrBgAAxQzRImZoVcxBqc9YEqkEsg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;user_id&quot;</span>: <span class="string">&quot;etvFrrBgAAKNCEAA4cEGXQFeo_vGyI2Q&quot;</span>,</span><br><span class="line">    <span class="string">&quot;year&quot;</span>: <span class="number">2023</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;tag_id&quot;</span> <span class="keyword">in</span> info_dict:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;键 &#x27;tag_id&#x27; 存在于 info_dict 字典中。&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;字典 info_dict 中不存在键 &#x27;tag_id&#x27;。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果：</span></span><br><span class="line"><span class="comment"># 键 &#x27;tag_id&#x27; 存在于 info_dict 字典中。</span></span><br></pre></td></tr></table></figure>
<p>此代码检测 <code>info_dict</code> 字典是否包含 <code>tag_id</code> 键。如果包含，则打印确认消息:<code>键 &#39;tag_id&#39; 存在于 info_dict 字典中。</code>；否则打印：<code>字典 info_dict 中不存在键 &#39;tag_id&#39;。</code>。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 编程指南 | 将字符串转换为二进制</title>
    <url>/2023/06/08/python-convert-string-to-binary/</url>
    <content><![CDATA[<p>在编程开发工作中，数据格式转换是常见操作之一。其中，将字符串转换为二进制形式的转换也经常出现。本文将探讨实现这一转换的几种方法。</p>
<h2 id="方法一：使用-join-ord-format"><a href="#方法一：使用-join-ord-format" class="headerlink" title="方法一：使用 join() + ord() + format()"></a>方法一：使用 <code>join()</code> + <code>ord()</code> + <code>format()</code></h2><p>上述函数的结合可以用来完成这个特定任务。<code>ord()</code> 函数将字符转换为 ASCII 码对应的整数，<code>format()</code> 函数将整数转换为二进制数，<code>join()</code> 函数用于将每个转换得到的字符连接起来，形成一个字符串。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">test_str = <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原始字符串：&quot;</span> + test_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 join() + ord() + format()，将字符串转换为二进制</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">format</span>(<span class="built_in">ord</span>(i), <span class="string">&#x27;08b&#x27;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> test_str)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二进制转换后的字符串：&quot;</span> + res)</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始字符串：JOHNSON LIN</span><br><span class="line">二进制转换后的字符串：0100101001001111010010000100111001010011010011110100111000100000010011000100100101001110</span><br></pre></td></tr></table></figure>
<h2 id="方法二：使用-join-bytearray-format"><a href="#方法二：使用-join-bytearray-format" class="headerlink" title="方法二：使用 join() + bytearray() + format()"></a>方法二：使用 <code>join()</code> + <code>bytearray()</code> + <code>format()</code></h2><p>这个方法与上述方法大致相似。不同之处在于，不是使用 <code>ord()</code> 函数将每个字符转换为 ASCII 码，而是使用 <code>binarray()</code> 函数一次性将整个字符串转换为二进制。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">test_str = <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原始字符串：&quot;</span> + test_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 join() + bytearray() + format()，将字符串转换为二进制</span></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">format</span>(i, <span class="string">&#x27;08b&#x27;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">bytearray</span>(test_str, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二进制转换后的字符串：&quot;</span> + res)</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始字符串：JOHNSON LIN</span><br><span class="line">二进制转换后的字符串：0100101001001111010010000100111001010011010011110100111000100000010011000100100101001110</span><br></pre></td></tr></table></figure>
<h2 id="方法三：使用-join-bin-zfill"><a href="#方法三：使用-join-bin-zfill" class="headerlink" title="方法三：使用 join() + bin() + zfill()"></a><strong>方法三：使用 <code>join()</code> + <code>bin()</code> + <code>zfill()</code></strong></h2><p>我们定义了一个函数 <code>str_to_binary(string)</code>，它接受一个字符串作为输入。</p>
<p>在函数内部，我们创建一个名为 <code>binary_list</code> 的空列表，用于存储输入字符串中的每个字符的二进制形式。</p>
<p>然后使用 <code>for</code> 循环遍历输入字符串的每个字符。对于每个字符，我们使用 <code>ord()</code> 函数将其转换为 ASCII 码对应的整数，然后使用 <code>bin()</code> 函数将该整数转换为二进制字符串。<code>bin()</code> 函数返回一个带有 <code>&#39;0b&#39;</code> 前缀的字符串，所以我们使用列表切片的方式删除这个前缀。</p>
<p>之后，我们使用 <code>zfill(8)</code> 方法用前导零在二进制形式左侧填充，直到长度达到 8。<code>zfill()</code> 方法用指定的字符（本例中为 <code>&#39;0&#39;</code>）填充字符串左侧，直到达到所需长度。</p>
<p>接着，我们将二进制形式追加到 <code>binary_list</code> 中。之后，我们将列表中的所有二进制值连接起来，使用 <code>join()</code> 方法以单个字符串形式返回。</p>
<p>最后，我们以 “JOHNSON LIN “字符串为例测试该函数。该函数返回输入字符串的二进制字符串表示。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">str_to_binary</span>(<span class="params">string</span>):</span><br><span class="line">    binary_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> string:</span><br><span class="line">        binary_list.append(<span class="built_in">bin</span>(<span class="built_in">ord</span>(char))[<span class="number">2</span>:].zfill(<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(binary_list)</span><br><span class="line"></span><br><span class="line">test_str = <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原始字符串：&quot;</span> + test_str)</span><br><span class="line"></span><br><span class="line">res = str_to_binary(test_str)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二进制转换后的字符串：&quot;</span> + res)</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">原始字符串：JOHNSON LIN</span><br><span class="line">二进制转换后的字符串：<span class="number">0</span>100101001001111010010000100111001010011010011110100111000100000010011000100100101001110</span><br></pre></td></tr></table></figure>
<h2 id="方法四：使用-binascii-模块"><a href="#方法四：使用-binascii-模块" class="headerlink" title="方法四：使用 binascii 模块"></a><strong>方法四：使用 <code>binascii</code> 模块</strong></h2><p>示例代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">test_str = <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原始字符串：&quot;</span> + test_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 binascii 将字符串转换为二进制</span></span><br><span class="line">hex_str = binascii.hexlify(test_str.encode())</span><br><span class="line">bin_str = <span class="built_in">bin</span>(<span class="built_in">int</span>(hex_str, <span class="number">16</span>))[<span class="number">2</span>:].zfill(<span class="number">8</span> * ((<span class="built_in">len</span>(hex_str) + <span class="number">1</span>) // <span class="number">2</span>))</span><br><span class="line">res = bin_str</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二进制转换后的字符串：&quot;</span> + res)</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">原始字符串：JOHNSON LIN</span><br><span class="line">二进制转换后的字符串：<span class="number">0</span>100101001001111010010000100111001010011010011110100111000100000010011000100100101001110</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 编程指南 | 如何判断一个集合是否为空</title>
    <url>/2023/04/23/python-check-if-set-is-empty/</url>
    <content><![CDATA[<p>在 Python 中，集合是一种非常有用的数据结构，用于存储无序且唯一的元素。判断一个集合是否为空是很常见的操作，本文介绍了几种判断 Python 集合是否为空的方法。理解这些方法有助于我们更高效地操作和利用集合这个数据结构。</p>
<h2 id="使用-len-方法"><a href="#使用-len-方法" class="headerlink" title="使用 len() 方法"></a>使用 <code>len()</code> 方法</h2><p>使用 <code>len()</code> 方法返回集合的元素数量，如果为零，则表示该集合为空，否则不为空。</p>
<p>示例代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(s) == <span class="number">0</span></span><br><span class="line"></span><br><span class="line">empty_set = <span class="built_in">set</span>()</span><br><span class="line">not_empty_set = <span class="built_in">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;`empty_set` is empty?&quot;</span>, is_empty(empty_set))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;`not_empty_set` is empty?&quot;</span>, is_empty(not_empty_set))</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Output:</span></span><br><span class="line"><span class="string">    `empty_set` is empty? True</span></span><br><span class="line"><span class="string">    `not_empty_set` is empty? False</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="使用-not-关键字"><a href="#使用-not-关键字" class="headerlink" title="使用 not 关键字"></a>使用 not 关键字</h2><p>Python 的 not 关键字是一个逻辑运算符，用于计算出操作数的否定或相反的布尔值：<em>not True</em> 为 <em>False</em>，<em>not False</em> 为 <em>True</em>。</p>
<p>若集合 <em>S</em> 为空，则 <em>not</em> <em>S</em> 为 <em>True</em>，若不为空，则 <em>not</em> <em>S</em> 为 <em>Flase</em>。</p>
<p>示例代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">s</span>): </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">not</span> s</span><br><span class="line"></span><br><span class="line">empty_set = <span class="built_in">set</span>()</span><br><span class="line">not_empty_set = <span class="built_in">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;`empty_set` is empty?&quot;</span>, is_empty(empty_set))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;`not_empty_set` is empty?&quot;</span>, is_empty(not_empty_set))</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Output:</span></span><br><span class="line"><span class="string">    `empty_set` is empty? True</span></span><br><span class="line"><span class="string">    `not_empty_set` is empty? False</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span> </span><br></pre></td></tr></table></figure>
<h2 id="使用-bool-方法"><a href="#使用-bool-方法" class="headerlink" title="使用 bool() 方法"></a>使用 <code>bool()</code> 方法</h2><p>Python 的 <code>bool()</code> 方法可以将任意类型转换为布尔值。</p>
<p>转换规则如下：</p>
<ul>
<li>以下值转换为 False:<ul>
<li>False</li>
<li>None</li>
<li>0</li>
<li>空字符串 ‘’</li>
<li>空列表 []</li>
<li>空元组 ()</li>
<li>空字典 {}</li>
</ul>
</li>
<li>其他值转换为 True</li>
</ul>
<p>我们可以借助 <code>bool()</code> 方法来判断一个集合是否为空，示例代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bool</span>(s) == <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">empty_set = <span class="built_in">set</span>()</span><br><span class="line">not_empty_set = <span class="built_in">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;`empty_set` is empty?&quot;</span>, is_empty(empty_set))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;`not_empty_set` is empty?&quot;</span>, is_empty(not_empty_set))</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Output:</span></span><br><span class="line"><span class="string">    `empty_set` is empty? True</span></span><br><span class="line"><span class="string">    `not_empty_set` is empty? False</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>NOTE：这里的 <code>bool(s) == False</code> 可以写成 <code>not bool(s)</code>，最终可简写为 <code>not s</code>。</p>
</blockquote>
<h2 id="与空集合比较"><a href="#与空集合比较" class="headerlink" title="与空集合比较"></a>与空集合比较</h2><p>如果一个集合 <em>S</em> 与空集合相等，则说明该集合也是一个空集合。</p>
<p>示例代码：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#<span class="operator">!</span><span class="operator">/</span>usr<span class="operator">/</span>bin<span class="operator">/</span>env python3</span><br><span class="line"># <span class="operator">-</span><span class="operator">*</span><span class="operator">-</span> coding: utf<span class="number">-8</span> <span class="operator">-</span><span class="operator">*</span><span class="operator">-</span></span><br><span class="line"></span><br><span class="line">def is_empty(s):</span><br><span class="line">    <span class="keyword">return</span> s <span class="operator">=</span><span class="operator">=</span> <span class="keyword">set</span>()</span><br><span class="line"></span><br><span class="line">empty_set <span class="operator">=</span> <span class="keyword">set</span>()</span><br><span class="line">not_empty_set <span class="operator">=</span> <span class="keyword">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">print(&quot;`empty_set` is empty?&quot;, is_empty(empty_set))</span><br><span class="line">print(&quot;`not_empty_set` is empty?&quot;, is_empty(not_empty_set))</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">    Output:</span><br><span class="line">    `empty_set` is empty? True</span><br><span class="line">    `not_empty_set` is empty? False</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>判断 Python 集合是否为空有以下四种方法:</p>
<ol>
<li>使用 <code>len()</code> 方法</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(s) == <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>如果 <code>len(s)</code> 返回 0，则表示集合为空。</p>
<ol>
<li>使用 not 关键字</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">not</span> s</span><br></pre></td></tr></table></figure>
<p>如果集合为空，not s 返回 True，否则返回 False。</p>
<ol>
<li>使用 <code>bool()</code> 方法</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bool</span>(s) == <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p><code>bool(s)</code> 将集合转换为布尔值，如果为空集合，返回 False，否则返回 True。</p>
<ol>
<li>与空集合进行比较</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> s == <span class="built_in">set</span>()</span><br></pre></td></tr></table></figure>
<p>如果集合 s 与空集合相等，则 s 也为空集合。</p>
<p>总之，判断一个 Python 集合是否为空有很多种方式，选择一个简单明了的方法即可。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Superset配置——连接Presto出现ERROR: Could not load database driver: PrestoEngineSpec</title>
    <url>/2023/01/13/superset-presto-error-prestoenginespec/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>安装好 superset，版本 2.0.1，通过命令 <code>superset run -p 8088 --with-threads --reload --debugger</code> 启动 debug 模式，在界面配置 presto 数据库连接，点击 TEST CONNECTION，右下角弹出以下错误信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR: Could not load database driver: PrestoEngineSpec</span><br></pre></td></tr></table></figure>
<p>在启动 superset 之前，服务器上已按照<a href="https://superset.apache.org/docs/databases/installing-database-drivers/">官方文档</a>安装了驱动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install pyhive</span><br></pre></td></tr></table></figure>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>从错误信息可以看出这是驱动问题导致的。虽然安装了正确的驱动，但是如果驱动的版本太低，同样也会有问题。通过 pip 安装默认都是最新版本，截至当前，pyhive 的最新版本为 0.6.5。</p>
<p>首先检查服务器上安装的 pyhive 的版本是否为最新的版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 list</span><br></pre></td></tr></table></figure>
<p>或：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pip3 list |grep PyHive</span><br><span class="line">PyHive                 0.6.5</span><br></pre></td></tr></table></figure>
<p>可以看到 PyHive 为最新版本 0.6.5。</p>
<p>如果不是最新版本，可以使用以下命令更新到最新版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pyhive==0.6.5</span><br></pre></td></tr></table></figure>
<p>更新到最新版本后，连接时还出现错误，说明版本还不适配，还需要执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install <span class="string">&#x27;pyhive[presto]&#x27;</span></span><br></pre></td></tr></table></figure>
<p>安装完成后，重启 superset，再重新连接 Presto，点击 TEST CONNECTION 按钮提示 Connection looks good! 信息，则表示连接成功。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Superset</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 20.04 apt upgrade Error: Could not read response to hello message from hook</title>
    <url>/2023/04/26/ubuntu-20-04-apt-upgrade-error-could-not-read-response-to-hello-message-from-hook/</url>
    <content><![CDATA[<p>当我运行 <code>sudo apt upgrade</code> 命令以更新 Ubuntu 子系统(WSL)中的软件包时，出现了以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt upgrade</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">Calculating upgrade... Done</span><br><span class="line">The following packages were automatically installed and are no longer required:</span><br><span class="line">  ant ant-optional gdisk gir1.2-packagekitglib-1.0 jruby-openssl junit4 libappstream4 libasm-java libatasmart4 libbcpkix-java libbcprov-java libblockdev-crypto2</span><br><span class="line">  libblockdev-fs2 libblockdev-loop2 libblockdev-part-err2 libblockdev-part2 libblockdev-swap2 libblockdev-utils2 libblockdev2 libbsf-java libbytelist-java</span><br><span class="line">  libdirgra-java libglib2.0-bin libhamcrest-java libhawtjni-runtime-java libheadius-options-java libinvokebinder-java libjansi-java libjansi-native-java</span><br><span class="line">  libjcodings-java libjffi-java libjffi-jni libjitescript-java libjna-java libjna-jni libjna-platform-java libjnr-constants-java libjnr-enxio-java libjnr-ffi-java</span><br><span class="line">  libjnr-netdb-java libjnr-posix-java libjnr-unixsocket-java libjnr-x86asm-java libjoda-time-java libjruby-joni-java libjzlib-java libmodulator-java</span><br><span class="line">  libosgi-annotation-java libosgi-core-java libpackagekit-glib2-18 libparted-fs-resize0 libplymouth5 libpsych-java libstemmer0d libudisks2-0 libunsafe-fences-java</span><br><span class="line">  libunsafe-mock-java libvolume-key1 libyaml-snake-java nailgun python-apt-common python3-apt python3-certifi python3-chardet python3-distro-info python3-idna</span><br><span class="line">  python3-requests python3-requests-unixsocket python3-six python3-software-properties python3-urllib3 ruby-diff-lcs ruby-jar-dependencies ruby-rspec ruby-rspec-core</span><br><span class="line">  ruby-rspec-expectations ruby-rspec-mocks ruby-rspec-support unattended-upgrades</span><br><span class="line">Use <span class="string">&#x27;apt autoremove&#x27;</span> to remove them.</span><br><span class="line">E: Could not <span class="built_in">read</span> response to hello message from hook [ ! -f /usr/lib/ubuntu-advantage/apt-esm-json-hook ] || /usr/lib/ubuntu-advantage/apt-esm-json-hook || <span class="literal">true</span>: Success</span><br><span class="line">E: Could not <span class="built_in">read</span> response to hello message from hook [ ! -f /usr/lib/ubuntu-advantage/apt-esm-json-hook ] || /usr/lib/ubuntu-advantage/apt-esm-json-hook || <span class="literal">true</span>: Success</span><br></pre></td></tr></table></figure>
<p>为了修复这个问题，我根据错误提示（<em>apt-esm-json-hook</em>）将 <em>/etc/apt/apt.conf.d</em> 目录下名为 <em>20apt-esm-hook.conf</em> 的文件先移动到其他目录（在本例中是 <em>/home/johnson</em> 目录）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/apt/apt.conf.d/20apt-esm-hook.conf /home/johnson</span><br></pre></td></tr></table></figure>
<p>然后再运行 <code>sudo apt upgrade</code> 命令，这次成功了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt upgrade</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">Calculating upgrade... Done</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  libnss-systemd libpam-systemd libpolkit-agent-1-0 libxmlb2 policykit-1 systemd-sysv</span><br><span class="line">The following packages have been kept back:</span><br><span class="line">  mysql-client mysql-server</span><br><span class="line">The following packages will be upgraded:</span><br><span class="line">  alsa-ucm-conf apt apt-utils base-files bash bind9-dnsutils bind9-host bind9-libs binutils binutils-common binutils-x86-64-linux-gnu bolt ca-certificates</span><br><span class="line">  curl dirmngr distro-info-data dpkg dpkg-dev e2fsprogs fwupd fwupd-signed git git-man gnupg gnupg-l10n gnupg-utils gpg gpg-agent gpg-wks-client</span><br><span class="line">  gpg-wks-server gpgconf gpgsm gpgv gzip isc-dhcp-client isc-dhcp-common klibc-utils kmod kpartx krb5-locales libapparmor1 libapt-pkg6.0 libarchive13</span><br><span class="line">  libasn1-8-heimdal libbinutils libc-ares2 libc-bin libcom-err2 libctf-nobfd0 libctf0 libcurl3-gnutls libcurl4 libdpkg-perl libext2fs2 libflac8</span><br><span class="line">  libfreetype6 libfribidi0 libfwupd2 libfwupdplugin5 libgnutls30 libgs9 libgs9-common libgssapi-krb5-2 libgssapi3-heimdal libhcrypto4-heimdal</span><br><span class="line">  libheimbase1-heimdal libheimntlm0-heimdal libhttp-daemon-perl libhx509-5-heimdal libjavascriptcoregtk-4.0-18 libk5crypto3 libkeyutils1 libklibc libkmod2</span><br><span class="line">  libkrb5-26-heimdal libkrb5-3 libkrb5support0 libksba8 libldap-common liblzma5 libmbim-glib4 libmbim-proxy libmm-glib0 libnss3 libntfs-3g883</span><br><span class="line">  libpam-modules libpam-modules-bin libpam-runtime libpam0g libpcre2-8-0 libpcre3 libperl5.30 libpython2.7-minimal libpython2.7-stdlib libpython3.8</span><br><span class="line">  libpython3.8-dev libpython3.8-minimal libpython3.8-stdlib libqmi-glib5 libqmi-proxy libroken18-heimdal libsensors-config libsensors5 libsepol1</span><br><span class="line">  libsqlite3-0 libss2 libssl-dev libssl1.1 libtdb1 libtiff5 libtss2-esys0 libudev1 libunwind8 libwayland-client0 libwebkit2gtk-4.0-37 libwind0-heimdal</span><br><span class="line">  libxml2 libxpm4 linux-libc-dev locales login logsave logstash modemmanager motd-news-config multipath-tools mysql-common ntfs-3g openssh-client</span><br><span class="line">  openssh-server openssh-sftp-server openssl passwd perl perl-base perl-modules-5.30 python-pip-whl python-pkg-resources python2.7 python2.7-minimal</span><br><span class="line">  python3-pip python3-pkg-resources python3-setuptools python3-wheel python3.8 python3.8-dev python3.8-minimal rsync rsyslog sbsigntool <span class="built_in">sudo</span> tar tcpdump</span><br><span class="line">  tmux tzdata udev unzip vim vim-common vim-runtime vim-tiny xxd xz-utils</span><br><span class="line">163 upgraded, 6 newly installed, 0 to remove and 2 not upgraded.</span><br><span class="line">Need to get 435 MB of archives.</span><br><span class="line">After this operation, 4070 kB of additional disk space will be used.</span><br><span class="line">Do you want to <span class="built_in">continue</span>? [Y/n] </span><br></pre></td></tr></table></figure>
<p>输入 Y 后系统就会开始下载最新的软件包并安装。</p>
<blockquote>
<p>注：我是在 Windows Subsystem for Linux 的第一个版本(WSL1)模式下运行 Ubuntu WSL 实例。如果你也遇到了类似的问题，希望这篇文章能帮助你解决在 apt 命令下升级软件包的问题。</p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 20.04 systemctl 错误：System has not been booted with systemd as init system (PID 1). Can&#39;t operate.</title>
    <url>/2023/04/21/ubuntu-20-04-systemctl-system-has-not-been-booted-with-systemd-as-init-system/</url>
    <content><![CDATA[<p>在 Ubuntu 20.04 系统中，使用 <code>systemctl</code> 命令启动 logstash，出现以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl start logstash</span><br><span class="line">System has not been booted with systemd as init system (PID 1). Can<span class="string">&#x27;t operate.</span></span><br><span class="line"><span class="string">Failed to connect to bus: Host is down</span></span><br></pre></td></tr></table></figure>
<p> 这是因为 <code>systemctl</code> 不是 Ubuntu 系统自带的命令，可以通过 <code>apt</code> 命令进行安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install systemctl</span><br></pre></td></tr></table></figure>
<p> 安装过程中，会提示你输入 <em>Yes, do as I say!</em> 以继续安装。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 编程指南 | 如何在原始字符串与二进制字符串之间相互转换</title>
    <url>/2023/06/09/python-how-to-convert-between-binary-strings-and-strings/</url>
    <content><![CDATA[<h2 id="将字符串转换成二进制字符串"><a href="#将字符串转换成二进制字符串" class="headerlink" title="将字符串转换成二进制字符串"></a>将<strong><strong>字符串转换成二进制字符串</strong></strong></h2><p>可通过以下方法将字符串转换成二进制字符串：</p>
<p>逐个遍历字符串中的每个字符，通过 <code>bin()</code> 函数将字符的 ASCII 码转换成二进制，然后用 <code>zfill()</code> 函数在左边补 0，保证每个字符的二进制形式都是 8 位的，最后通过 <code>join()</code> 函数将所有的二进制字符串连接起来。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">str_to_binary</span>(<span class="params">string</span>):</span><br><span class="line">    binary_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> string:</span><br><span class="line">        binary_list.append(<span class="built_in">bin</span>(<span class="built_in">ord</span>(char))[<span class="number">2</span>:].zfill(<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(binary_list)</span><br></pre></td></tr></table></figure>
<h2 id="将二进制字符串转换成正常字符串"><a href="#将二进制字符串转换成正常字符串" class="headerlink" title="将二进制字符串转换成正常字符串"></a>将<strong><strong>二进制字符串转换成正常字符串</strong></strong></h2><p>实现逻辑是:</p>
<ol>
<li>将二进制字符串按 8 位切片，得到一系列长度为 8 的二进制子串；</li>
<li>将每个二进制子串转换成十进制整数，存入 <code>list_int</code> 列表；</li>
<li>使用 <code>bytes()</code> 函数将 <code>list_int</code> 列表转换成 <code>bytes</code> 对象；</li>
<li>最后使用 <code>decode()</code> 方法将 <code>bytes</code> 对象解码成字符串。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">binary_to_str</span>(<span class="params">bin_str</span>):</span><br><span class="line">    list_bin = [bin_str[i:i + <span class="number">8</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(bin_str), <span class="number">8</span>)]</span><br><span class="line">    list_int = []</span><br><span class="line">    <span class="keyword">for</span> bin_s <span class="keyword">in</span> list_bin:</span><br><span class="line">        list_int.append(<span class="built_in">int</span>(bin_s, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(list_int).decode()</span><br></pre></td></tr></table></figure>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>以下示例演示将字符串 <code>JOHNSON LIN</code> 转换成二进制字符串，然后再转换回正常字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">str_to_binary</span>(<span class="params">string</span>):</span><br><span class="line">    binary_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> string:</span><br><span class="line">        binary_list.append(<span class="built_in">bin</span>(<span class="built_in">ord</span>(char))[<span class="number">2</span>:].zfill(<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(binary_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">binary_to_str</span>(<span class="params">bin_str</span>):</span><br><span class="line">    list_bin = [bin_str[i:i + <span class="number">8</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(bin_str), <span class="number">8</span>)]</span><br><span class="line">    list_int = []</span><br><span class="line">    <span class="keyword">for</span> bin_s <span class="keyword">in</span> list_bin:</span><br><span class="line">        list_int.append(<span class="built_in">int</span>(bin_s, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(list_int).decode()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    test_str = <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;原始字符串：&quot;</span> + test_str)</span><br><span class="line"></span><br><span class="line">    bin_str = str_to_binary(test_str)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;二进制字符串：&quot;</span> + bin_str)</span><br><span class="line"></span><br><span class="line">    o_str = binary_to_str(bin_str)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;转换成字符串：&quot;</span> + o_str)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>输出结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">原始字符串：JOHNSON LIN</span><br><span class="line">二进制字符串：0100101001001111010010000100111001010011010011110100111000100000010011000100100101001110</span><br><span class="line">转换成字符串：JOHNSON LIN</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 20.04 上安装 pip3.7 错误：ModuleNotFoundError: No module named &#39;distutils.cmd&#39;</title>
    <url>/2023/04/24/ubuntu-20-04-pip37-module-not-found-error-no-module-named-distutils-cmd/</url>
    <content><![CDATA[<p>我在 Ubuntu 20.04 系统上已经安装好 python3.7，然后手动安装 pip：</p>
<p>首先，下载 <em>get-pip.py</em> 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br></pre></td></tr></table></figure>
<p> 然后等该文件下载完后，使用以下命令安装 pip：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3.7 get-pip.py</span><br></pre></td></tr></table></figure>
<p> 结果出现以下错误信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3.7 get-pip.py</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;get-pip.py&quot;</span>, line 32321, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    main()</span><br><span class="line">  File <span class="string">&quot;get-pip.py&quot;</span>, line 135, <span class="keyword">in</span> main</span><br><span class="line">    bootstrap(tmpdir=tmpdir)</span><br><span class="line">  File <span class="string">&quot;get-pip.py&quot;</span>, line 111, <span class="keyword">in</span> bootstrap</span><br><span class="line">    monkeypatch_for_cert(tmpdir)</span><br><span class="line">  File <span class="string">&quot;get-pip.py&quot;</span>, line 92, <span class="keyword">in</span> monkeypatch_for_cert</span><br><span class="line">    from pip._internal.commands.install import InstallCommand</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/commands/__init__.py&quot;</span>, line 9, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/cli/base_command.py&quot;</span>, line 15, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/cli/cmdoptions.py&quot;</span>, line 24, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/cli/parser.py&quot;</span>, line 12, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/configuration.py&quot;</span>, line 26, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/utils/logging.py&quot;</span>, line 29, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/utils/misc.py&quot;</span>, line 44, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/locations/__init__.py&quot;</span>, line 66, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/tmp/tmpk9odbp_y/pip.zip/pip/_internal/locations/_distutils.py&quot;</span>, line 20, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named <span class="string">&#x27;distutils.cmd&#x27;</span></span><br></pre></td></tr></table></figure>
<p>从错误信息 ModuleNotFoundError: No module named ‘distutils.cmd’ 看是缺少 distutils 模块，便使用 apt-get 命令来安装该模块：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ apt-get install python3-distutils</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">python3-distutils is already the newest version (3.8.10-0ubuntu1~20.04).</span><br><span class="line">python3-distutils <span class="built_in">set</span> to manually installed.</span><br><span class="line">0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.</span><br></pre></td></tr></table></figure>
<p>安装完成后，继续执行 <code>python3.7 get-pip.py</code> 命令来安装 pip，结果报同样的错误信息。我该如何处理？</p>
<hr>
<p>这个错误表示你的 Python 环境中缺少 distutils 模块，导致 import 失败。<br>要解决这个错误，你需要安装 distutils 模块，一般可以直接通过 apt-get 命令安装 <code>python3-distutils</code> 包来解决缺失问题。从你安装该模块的信息可以看到，你已经安装了该包，只不过该包的版本并没有跟你现在 Python 的版本对应上。</p>
<p>你安装的 <code>python3-distutils</code> 包对应的 Python 版本为 3.8.10，而你的 Python 版本为 3.7。</p>
<p>为解决这个 Python 版本问题，你应该使用以下命令来安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install python3.7-distutil </span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程 Q&amp;A</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 20.04 安装 Python3.7</title>
    <url>/2023/04/27/how-to-install-python-3-7-on-ubuntu-linux/</url>
    <content><![CDATA[<p>对于 Ubuntu 用户来说，安装 Python 3.7 的最简单方法是使用 deadsnakes PPA。它提供了对 Python 的最新更新和任何其他所需软件包的访问。</p>
<h2 id="安装-Python3-7"><a href="#安装-Python3-7" class="headerlink" title="安装 Python3.7"></a>安装 Python3.7</h2><p>添加 PPA 源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:deadsnakes/ppa -y</span><br></pre></td></tr></table></figure>
<p>添加完 PPA 源后，需要运行 apt 更新：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>
<p>安装 Python3.7：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install python3.7</span><br></pre></td></tr></table></figure>
<p>验证 Python 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3.7 --version</span><br></pre></td></tr></table></figure>
<p>至此，就已经成功安装了 Python 3.7。</p>
<p>如果还想为 Python 3.7 安装额外的工具，例如调试模块、开发者模块、虚拟环境模块、Distutils 模块、lib2to3 工具模块、DBM.GNU 模块和 Tkinter 模块，可以运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install python3.7-dbg python3.7-dev python3.7-venv python3.7-distutils python3.7-lib2to3 python3.7-gdbm python3.7-tk</span><br></pre></td></tr></table></figure>
<h2 id="安装-Pip"><a href="#安装-Pip" class="headerlink" title="安装 Pip"></a>安装 Pip</h2><p>手动重新安装 Pip，使用 <code>wget</code> 命令下载 get-pip.py：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br></pre></td></tr></table></figure>
<p>下载该文件后，使用以下命令安装 Pip：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3.7 get-pip.py</span><br></pre></td></tr></table></figure>
<p>如果看到类似以下的输出，说明 Pip 已经成功安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Installing collected packages: pip</span><br><span class="line">  Attempting uninstall: pip</span><br><span class="line">    Found existing installation: pip 20.0.2</span><br><span class="line">    Uninstalling pip-20.0.2:</span><br><span class="line">      Successfully uninstalled pip-20.0.2</span><br><span class="line">Successfully installed pip-23.1.2</span><br></pre></td></tr></table></figure>
<p>也可以通过运行以下命令来验证所安装的 Pip 的版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3.7 --version</span><br></pre></td></tr></table></figure>
<p>输出如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip 23.1.2 from /usr/local/lib/python3.7/dist-packages/pip (python 3.7)</span><br></pre></td></tr></table></figure>
<h2 id="关于-deadsnakes-ppa"><a href="#关于-deadsnakes-ppa" class="headerlink" title="关于 deadsnakes/ppa"></a>关于 deadsnakes/ppa</h2><p>ppa:deadsnakes/ppa 是一个非官方的 PPA（Personal Package Archive）源，它提供了 Python 的多个版本。</p>
<p>主要特点：</p>
<ol>
<li>提供 Python 2.3、2.6、3.1、3.5、3.7、3.9、3.11 等多个版本。这使得我们可以很方便地在 Ubuntu 上安装和切换 Python 不同版本。</li>
<li>版本比较新，能够第一时间获取 Python 新的 patch 版本和 bug 修复版本。这个 PPA 通常能提供最新的 Python 稳定版本和 Release Candidate 版本。</li>
<li>安装过程简单。只需要添加 PPA，然后用 apt 安装对应版本的 Python 就可以。可以很方便地升级和切换 Python 版本。</li>
<li>不会影响系统默认的 Python 版本。不同版本的 Python 会并行安装,不会相互影响。</li>
</ol>
<p>总的来说，这个 PPA 为 Ubuntu 提供了非常方便和全面地多版本 Python 支持，是 Ubuntu 上安装和管理 Python 不同版本的很好途径，特别适合 Python 开发者使用。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 上运行 sudo add-apt-repository 命令时出现 command not found 错误</title>
    <url>/2023/04/25/ubuntu-sudo-add-apt-repository-command-not-found/</url>
    <content><![CDATA[<p>如果在 Ubuntu 上运行 <code>sudo add-apt-repository</code> 命令时出现 <code>command not found</code> 错误，说明你的系统中缺少 <code>software-properties-common</code> 包。</p>
<p>你可以通过以下命令来安装它：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install software-properties-common</span><br></pre></td></tr></table></figure>
<p>安装完成后，<code>sudo add-apt-repository</code> 命令就可以正常使用了。</p>
<p>该包提供了一些管理 apt 源的实用工具，比如：</p>
<ul>
<li><code>add-apt-repository</code> - 用于添加 apt 源</li>
<li><code>remove-apt-repository</code> - 用于删除 apt 源</li>
<li><code>apt-add-repository</code> - 同上，别名</li>
<li><code>apt-key</code> - 用于管理 apt key</li>
<li><code>apt-cache gencaches</code> - 用于生成 apt 缓存</li>
</ul>
<p>许多第三方工具都需要使用到这个包提供的工具来添加它们自己的 apt 源。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>【Linux常用命令】head——把一个文件的前n行拷贝到另一个文件上</title>
    <url>/2023/03/22/how-to-copy-top-n-lines-from-one-file-to-another/</url>
    <content><![CDATA[<p>在日常开发工作中偶尔需要查看文件前 n 行的内容，如果文件的大小为几个 GB 时，直接打开文件会很慢，这个时候我们可以通过复制文件的前 n 行到另一个文件上进行查看。</p>
<p>在 Linux 环境中可以使用 <code>head</code> 命令来复制一个文件的前 n 行到另一个文件上。如以下命令表示复制文件 <em>nginx_app_log_20230320.log</em> 中前 10 万行内容到 <em>/tmp</em> 目录下的 <em>app0320_top10w.log</em> 文件中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> -n 100000 nginx_app_log_20230320.log &gt; /tmp/app0320_top10w.<span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>了解Filebeat：采集、转发和汇总日志的轻量型解决方案</title>
    <url>/2023/02/20/filebeat-introduction/</url>
    <content><![CDATA[<h2 id="Filebeat-是什么？"><a href="#Filebeat-是什么？" class="headerlink" title="Filebeat 是什么？"></a>Filebeat 是什么？</h2><p>Filebeat 是基于 libbeat 框架开发的一款开源的轻量型日志采集器，专为快速收集和传输多种来源的日志数据而设计。它可以从安全设备、云、容器、主机或 OT 等多种数据源采集日志，并提供一种轻量型的方法，用于转发和汇总日志与文件。</p>
<h2 id="Filebeat-有什么特点？"><a href="#Filebeat-有什么特点？" class="headerlink" title="Filebeat 有什么特点？"></a>Filebeat 有什么特点？</h2><p>1、Filebeat 支持从多种数据源收集数据，例如安全设备、云服务、容器、主机或 OT等。</p>
<p>2、Filebeat 具有性能稳定、支持容错机制的特点。如果在未来某个时刻 Filebeat 因为某种原因中断，恢复正常后，它可以从中断前停止的位置继续读取并转发日志行。</p>
<p>3、Filebeat 支持背压机制。这意味着，如果 Filebeat 发送日志数据的速率超过接收端（例如 Logstash、Elasticsearch等）处理数据的速率，接收端会向 Filebeat 发出信号，要求 Filebeat 减慢发送速度，以避免 Filebeat 收集的数据因内存不足而被丢弃。一旦接收端处理数据的速率跟上，Filebeat 就会恢复到原来的步伐并继续传输数据。</p>
<p>4、Filebeat 提供了一组预先构建的模块，用于简化常见格式的日志的收集、解析和可视化，比如 Nginx Web 服务器的访问日志等。</p>
<p>5、Filebeat 是 Elastic Stack 的一部分，可以与 Logstash、Elasticsearch 和 Kibana 无缝协作。无论是想要使用 Logstash 对日志和文件进行转换或增强，还是想在 Elasticsearch 中进行一些分析，或者是在 Kibana 中构建和共享仪表板，Filebeat 都能轻松地将数据发送至最关键的地方。</p>
<h2 id="Filebeat-如何工作？"><a href="#Filebeat-如何工作？" class="headerlink" title="Filebeat 如何工作？"></a>Filebeat 如何工作？</h2><p>Filebeat 作为代理安装在服务器上，它会监控指定的日志文件或位置，收集日志事件，并将它们转发到指定的输出上。</p>
<p>当我们启动 Filebeat 进程时，它会根据我们的配置信息，启动一个或多个输入，去查找指定位置下的日志文件。对于每个查找到的日志文件，Filebeat 都会启动一个与之对应的采集器，读取文件中的新增日志数据，并将它们发送给 libbeat。libbeat 会先聚合这些日志数据，然后再将聚合后的数据发送到我们指定的输出上，例如 Elasticsearch、Logstash、Kafka 或 Redis 等。</p>
<p><img src="/image/2023/20230220.png" alt="Filebeat"></p>
<p>以上图为例，我们配置 Filebeat 从两个位置采集日志数据：</p>
<ul>
<li>从 <em>/var/log</em> 目录下采集文件扩展名为 <em>log</em> 的文件；</li>
<li>从 <em>/var/log/apache2</em> 目录下采集所有文件。</li>
</ul>
<p>接着，启动 Filebeat 进程，Filebeat 会启动两个输入来查找日志文件：</p>
<ul>
<li>输入 1（Input 1）查找 <em>/var/log</em> 目录下文件扩展名为 <em>log</em> 的文件；</li>
<li>输入 2（Input 2）查找 <em>/var/log/apache2</em> 目录下所有文件。</li>
</ul>
<p>其中，在 <em>/var/log</em> 当前目录下找到了两个符合条件的日志文件——system.log 和 wifi.log。Filebeat 会启动两个采集器，分别采集这两个日志文件的新增日志数据。在 <em>/var/log/apache2</em> 目录下只有一个 error.log 日志文件，Filebeat 同样也会启动一个采集器来采集该文件新增的数据。这三个采集器会把采集到的日志数据发送给 libbeat。libbeat 会对收到的日志数据进行聚合，然后再根据我们的配置信息，将聚合后的日志数据发送到 Elasticsearch、Logstash、Kafka 或 Redis 等输出上。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Filebeat</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Gson对嵌套类进行序列化和反序列化</title>
    <url>/2023/08/28/gson-serializing-and-deserializing-nested-classes/</url>
    <content><![CDATA[<p>本文将重点介绍如何使用 Gson 序列化嵌套类，包括内部类。</p>
<h2 id="什么是嵌套类？"><a href="#什么是嵌套类？" class="headerlink" title="什么是嵌套类？"></a>什么是嵌套类？</h2><p>在 Java 中，嵌套类是指在一个类的内部定义的另一个类。嵌套类可以分为两种类型：静态嵌套类（也称为静态内部类）和非静态嵌套类（也称为成员内部类）。静态嵌套类与外部类之间没有直接的引用关系，而非静态嵌套类则与外部类实例相关联。</p>
<h2 id="Gson序列化嵌套类的基本用法"><a href="#Gson序列化嵌套类的基本用法" class="headerlink" title="Gson序列化嵌套类的基本用法"></a>Gson序列化嵌套类的基本用法</h2><p>Gson 可以很容易地序列化和反序列化静态嵌套类。</p>
<p>要使用 Gson 序列化嵌套类，我们首先需要确保 Gson 库已添加到项目中。可以通过 Maven、Gradle 或手动下载 jar 包的方式导入 Gson 库。</p>
<p>例如，如果使用 Maven，在 pom.xml 文件中添加以下依赖项：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>下面的示例，展示了如何使用 Gson 序列化和反序列化嵌套类：</p>
<p><code>OuterClass</code> 类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 06:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OuterClass</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String outerField;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getOuterField</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> outerField;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOuterField</span><span class="params">(String outerField)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.outerField = outerField;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">StaticNestedClass</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> String staticNestedClassField;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getStaticNestedClassField</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> staticNestedClassField;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStaticNestedClassField</span><span class="params">(String staticNestedClassField)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.staticNestedClassField = staticNestedClassField;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InnerClass</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> value;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.value = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>OuterClassExample</code> 类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 06:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OuterClassExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化静态嵌套类</span></span><br><span class="line">        OuterClass.<span class="type">StaticNestedClass</span> <span class="variable">staticNestedClass</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>.StaticNestedClass();</span><br><span class="line">        staticNestedClass.setStaticNestedClassField(<span class="string">&quot;John and Jack&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">json1</span> <span class="operator">=</span> gson.toJson(staticNestedClass);</span><br><span class="line">        System.out.println(json1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化静态嵌套类</span></span><br><span class="line">        OuterClass.<span class="type">StaticNestedClass</span> <span class="variable">deserializedStaticNestedClass</span> <span class="operator">=</span> gson.fromJson(json1, OuterClass.StaticNestedClass.class);</span><br><span class="line">        System.out.println(deserializedStaticNestedClass.getStaticNestedClassField());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化非静态嵌套类</span></span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OuterClass</span>().<span class="keyword">new</span> <span class="title class_">InnerClass</span>();</span><br><span class="line">        t.setValue(<span class="number">8080</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">json2</span> <span class="operator">=</span> gson.toJson(t);</span><br><span class="line">        System.out.println(json2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化非静态嵌套类</span></span><br><span class="line">        OuterClass.<span class="type">InnerClass</span> <span class="variable">deserializedInnerClass</span> <span class="operator">=</span> gson.fromJson(json2, OuterClass.InnerClass.class);</span><br><span class="line">        System.out.println(deserializedInnerClass.getValue());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;&quot;staticNestedClassField&quot;:&quot;John and Jack&quot;&#125;</span></span><br><span class="line"><span class="comment">John and Jack</span></span><br><span class="line"><span class="comment">&#123;&quot;value&quot;:8080&#125;</span></span><br><span class="line"><span class="comment">8080</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>在上述示例中，我们首先创建了一个静态嵌套类 <code>StaticNestedClass</code> 和一个非静态嵌套类 <code>InnerClass</code>，它们分别包含了不同的成员变量。然后，我们使用 Gson 库将这两个类序列化为 JSON 字符串，并将其打印出来。接着，我们使用 Gson 库将 JSON 字符串反序列化回原始对象，并将其中的成员变量值打印出来。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>通过使用 Gson 库，我们可以方便地将嵌套类（包括静态嵌套类和非静态嵌套类）序列化为 JSON 字符串，并在需要时反序列化回原始对象。这为我们在 Java 应用程序中处理复杂对象结构提供了便利。</p>
<p>然而，需要注意的是，即使 Gson 可以处理嵌套类的序列化和反序列化，但在某些情况下，由于内部类与外部类的引用关系，可能会导致一些潜在的问题。因此，在实际开发中，我们需要仔细考虑嵌套类的使用场景，并确保它们符合我们的需求。</p>
<p>希望本文对您了解如何使用 Gson 序列化嵌套类提供了一些帮助。</p>
<p>参考资料：</p>
<ul>
<li>Gson官方文档：<a href="https://github.com/google/gson">https://github.com/google/gson</a></li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>【持续更新】iPhone 设备型号对应型号名称、手机型号对应屏幕尺寸及分辨率列表</title>
    <url>/2023/04/02/iphone-model-name-identifier-size-display/</url>
    <content><![CDATA[<p>当前已更新至 iPhone 14 Pro Max。</p>
<h2 id="iPhone-设备型号对应手机型号名称"><a href="#iPhone-设备型号对应手机型号名称" class="headerlink" title="iPhone 设备型号对应手机型号名称"></a><strong><strong>iPhone 设备型号对应手机型号名称</strong></strong></h2><div class="table-container">
<table>
<thead>
<tr>
<th>设备型号（固件标识符）</th>
<th>手机型号名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>iPhone1,1</td>
<td>iPhone</td>
</tr>
<tr>
<td>iPhone1,2</td>
<td>iPhone 3G</td>
</tr>
<tr>
<td>iPhone2,1</td>
<td>iPhone 3Gs</td>
</tr>
<tr>
<td>iPhone3,1</td>
<td>iPhone 4</td>
</tr>
<tr>
<td>iPhone3,2</td>
<td>iPhone 4</td>
</tr>
<tr>
<td>iPhone3,3</td>
<td>iPhone 4</td>
</tr>
<tr>
<td>iPhone4,1</td>
<td>iPhone 4s</td>
</tr>
<tr>
<td>iPhone5,1</td>
<td>iPhone 5</td>
</tr>
<tr>
<td>iPhone5,2</td>
<td>iPhone 5</td>
</tr>
<tr>
<td>iPhone5,3</td>
<td>iPhone 5c</td>
</tr>
<tr>
<td>iPhone5,4</td>
<td>iPhone 5c</td>
</tr>
<tr>
<td>iPhone6,1</td>
<td>iPhone 5s</td>
</tr>
<tr>
<td>iPhone6,2</td>
<td>iPhone 5s</td>
</tr>
<tr>
<td>iPhone7,2</td>
<td>iPhone 6</td>
</tr>
<tr>
<td>iPhone7,1</td>
<td>iPhone 6 Plus</td>
</tr>
<tr>
<td>iPhone8,1</td>
<td>iPhone 6s</td>
</tr>
<tr>
<td>iPhone8,2</td>
<td>iPhone 6s Plus</td>
</tr>
<tr>
<td>iPhone8,4</td>
<td>iPhone SE (第一代)</td>
</tr>
<tr>
<td>iPhone9,1</td>
<td>iPhone 7</td>
</tr>
<tr>
<td>iPhone9,3</td>
<td>iPhone 7</td>
</tr>
<tr>
<td>iPhone9,2</td>
<td>iPhone 7 Plus</td>
</tr>
<tr>
<td>iPhone9,4</td>
<td>iPhone 7 Plus</td>
</tr>
<tr>
<td>iPhone10,1</td>
<td>iPhone 8</td>
</tr>
<tr>
<td>iPhone10,4</td>
<td>iPhone 8</td>
</tr>
<tr>
<td>iPhone10,2</td>
<td>iPhone 8 Plus</td>
</tr>
<tr>
<td>iPhone10,5</td>
<td>iPhone 8 Plus</td>
</tr>
<tr>
<td>iPhone10,3</td>
<td>iPhone X</td>
</tr>
<tr>
<td>iPhone10,6</td>
<td>iPhone X</td>
</tr>
<tr>
<td>iPhone11,8</td>
<td>iPhone XR</td>
</tr>
<tr>
<td>iPhone11,2</td>
<td>iPhone XS</td>
</tr>
<tr>
<td>iPhone11,6</td>
<td>iPhone XS Max</td>
</tr>
<tr>
<td>iPhone11,4</td>
<td>iPhone XS Max</td>
</tr>
<tr>
<td>iPhone12,1</td>
<td>iPhone 11</td>
</tr>
<tr>
<td>iPhone12,3</td>
<td>iPhone 11 Pro</td>
</tr>
<tr>
<td>iPhone12,5</td>
<td>iPhone 11 Pro Max</td>
</tr>
<tr>
<td>iPhone12,8</td>
<td>iPhone SE (第二代)</td>
</tr>
<tr>
<td>iPhone13,1</td>
<td>iPhone 12 mini</td>
</tr>
<tr>
<td>iPhone13,2</td>
<td>iPhone 12</td>
</tr>
<tr>
<td>iPhone13,3</td>
<td>iPhone 12 Pro</td>
</tr>
<tr>
<td>iPhone13,4</td>
<td>iPhone 12 Pro Max</td>
</tr>
<tr>
<td>iPhone14,4</td>
<td>iPhone 13 mini</td>
</tr>
<tr>
<td>iPhone14,5</td>
<td>iPhone 13</td>
</tr>
<tr>
<td>iPhone14,2</td>
<td>iPhone 13 Pro</td>
</tr>
<tr>
<td>iPhone14,3</td>
<td>iPhone 13 Pro Max</td>
</tr>
<tr>
<td>iPhone14,6</td>
<td>iPhone SE (第三代)</td>
</tr>
<tr>
<td>iPhone14,7</td>
<td>iPhone 14</td>
</tr>
<tr>
<td>iPhone14,8</td>
<td>iPhone 14 Plus</td>
</tr>
<tr>
<td>iPhone15,2</td>
<td>iPhone 14 Pro</td>
</tr>
<tr>
<td>iPhone15,3</td>
<td>iPhone 14 Pro Max</td>
</tr>
</tbody>
</table>
</div>
<h2 id="iPhone-全机型分辨率和尺寸"><a href="#iPhone-全机型分辨率和尺寸" class="headerlink" title="iPhone 全机型分辨率和尺寸"></a><strong>iPhone 全机型分辨率和尺寸</strong></h2><div class="table-container">
<table>
<thead>
<tr>
<th>手机型号</th>
<th>屏幕尺寸(inch)</th>
<th>屏幕宽高(pt)</th>
<th>屏幕分辨率(px)</th>
<th>倍图</th>
<th>屏幕密度</th>
<th>屏幕比例</th>
</tr>
</thead>
<tbody>
<tr>
<td>2G/3G/3Gs</td>
<td>3.5</td>
<td>320 × 480</td>
<td>320 × 480</td>
<td>@1x</td>
<td>-</td>
<td>3:2</td>
</tr>
<tr>
<td>4/4s</td>
<td>3.5</td>
<td>320 × 480</td>
<td>640 × 960</td>
<td>@2x</td>
<td>326 ppi</td>
<td>3:2</td>
</tr>
<tr>
<td>5/5c/5s/se(第一代)</td>
<td>4.0</td>
<td>320 × 568</td>
<td>640 × 1136</td>
<td>@2x</td>
<td>326 ppi</td>
<td>16:9</td>
</tr>
<tr>
<td>6/6s/7/8/se(第二代)</td>
<td>4.7</td>
<td>375 × 667</td>
<td>750 × 1334</td>
<td>@2x</td>
<td>326 ppi</td>
<td>16:9</td>
</tr>
<tr>
<td>6+/6s+/7+/8+</td>
<td>5.5</td>
<td>414 × 736</td>
<td>1242 × 2208</td>
<td>@3x</td>
<td>401 ppi</td>
<td>16:9</td>
</tr>
<tr>
<td>X/XS/11Pro</td>
<td>5.8</td>
<td>375 × 812</td>
<td>1125 × 2436</td>
<td>@3x</td>
<td>458 ppi</td>
<td>19.5:9</td>
</tr>
<tr>
<td>XR/11</td>
<td>6.1</td>
<td>414 × 896</td>
<td>828 × 1792</td>
<td>@2x</td>
<td>326 ppi</td>
<td>19.5:9</td>
</tr>
<tr>
<td>Xs Max/11Pro Max</td>
<td>6.5</td>
<td>414 × 896</td>
<td>1242 × 2688</td>
<td>@3x</td>
<td>458 ppi</td>
<td>19.5:9</td>
</tr>
<tr>
<td>iPhone12 mini/13 mini</td>
<td>5.4</td>
<td>360 × 780</td>
<td>1080 × 2340</td>
<td>@3x</td>
<td>476 ppi</td>
<td>19.5:9</td>
</tr>
<tr>
<td>iPhone12/12Pro/13/13Pro/14</td>
<td>6.1</td>
<td>390 × 844</td>
<td>1170 × 2532</td>
<td>@3x</td>
<td>460 ppi</td>
<td>19.5:9</td>
</tr>
<tr>
<td>12 Pro Max /13 Pro Max/14 Plus</td>
<td>6.7</td>
<td>428 × 926</td>
<td>1284 × 2778</td>
<td>@3x</td>
<td>458 ppi</td>
<td>19.5:9</td>
</tr>
<tr>
<td>14 Pro</td>
<td>6.1（6.12）</td>
<td>393 × 852</td>
<td>1179 × 2556</td>
<td>@3x</td>
<td>460 ppi</td>
<td>19.5:9</td>
</tr>
<tr>
<td>14Pro Max</td>
<td>6.7（6.69）</td>
<td>430 × 932</td>
<td>1290 × 2796</td>
<td>@3x</td>
<td>460 ppi</td>
<td>19.5:9</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>数据来源：<br><a href="https://www.theiphonewiki.com/wiki/Models">https://www.theiphonewiki.com/wiki/Models</a></p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
  </entry>
  <entry>
    <title>了解Flink中的History Server：记录和展示作业历史信息的重要工具</title>
    <url>/2023/09/10/apache-flink-history-server/</url>
    <content><![CDATA[<p>Flink 中的 History Server 是一个非常有用的组件，可以在相应的 Flink 集群关闭之后查询已完成作业的统计信息。并且，它还提供了一个 REST API，可接受 HTTP 请求并以 JSON 数据作为响应。本文将详细介绍 Flink History Server 的工作原理和主要功能。</p>
<h2 id="一、History-Server工作原理"><a href="#一、History-Server工作原理" class="headerlink" title="一、History Server工作原理"></a>一、History Server工作原理</h2><p>Apache Flink 自带了一个 HistoryServer 进程，它是一个独立的 Web 服务器。HistoryServer 不参与 Flink 作业执行，仅用于展示作业的历史信息。它的工作原理如下：</p>
<ol>
<li>JobManager 会将已完成的作业的信息以存档文件的形式写入 HDFS 或者其他持久存储中。</li>
<li>HistoryServer 读取这些存档文件，并提供 Web 界面展示其信息内容。</li>
<li>用户通过 HistoryServer 的 Web UI 查看作业记录和运行数据。</li>
</ol>
<p>每个作业完成后，JobManager 会把该作业的信息打包成一个个 JSON 格式的归档文件，包括作业配置信息、作业执行过程中的 Checkpoint 信息、已完成作业的统计数据等，并存储在 HDFS 或者其他文件系统中。HistoryServer 会定期轮询这些归档文件所在的目录，所包含的存档会被下载缓存在本地文件系统中，以便在 Web UI 展示。</p>
<h2 id="二、History-Server的主要功能"><a href="#二、History-Server的主要功能" class="headerlink" title="二、History Server的主要功能"></a>二、History Server的主要功能</h2><p>通过 History Server Web UI，用户可以查看 Flink 已完成作业的各种历史信息，主要包含以下方面：</p>
<ol>
<li>查看所有已完成作业列表，以列表的形式展示了每一次作业执行的概览信息。</li>
<li>作业配置信息，包括并行度设置、系统参数等。</li>
<li>作业计划（Execution Graph），以图的形式展示作业的拓扑结构。</li>
<li>作业内所有任务（Vertex）的统计数据，如每个任务的运行时长、发送记录数等。</li>
<li>作业失败或异常信息，可以指导定位故障。</li>
<li>作业执行过程中的 Checkpoint 信息，如 Checkpoint 失败次数、Checkpoint 统计信息等。</li>
<li>支持以图表的形式查看作业时间线（Timeline），可以很直观地观察作业的执行过程。</li>
</ol>
<h2 id="三、History-Server配置"><a href="#三、History-Server配置" class="headerlink" title="三、History Server配置"></a>三、History Server配置</h2><h3 id="JobManager"><a href="#JobManager" class="headerlink" title="JobManager"></a>JobManager</h3><p>根据 History Server 的工作原理，我们知道 JobManager 负责已完成作业的归档工作，即将已完成的作业的信息写入到 HDFS 或者其他持久存储中，以供 History Server 查询展示。所以我们需要在 <em>flink-conf.yaml</em> 文件中配置已完成作业的存档目录（通过 <code>jobmanager.archive.fs.dir</code> 设置），如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 已完成作业信息的存档目录</span></span><br><span class="line"><span class="attr">jobmanager.archive.fs.dir:</span> <span class="string">hdfs:///completed-jobs</span></span><br></pre></td></tr></table></figure>
<h3 id="HistoryServer"><a href="#HistoryServer" class="headerlink" title="HistoryServer"></a>HistoryServer</h3><p>已完成作业的存档目录配置好后，接下来就是配置 HistoryServer。通过设置 <code>historyserver.archive.fs.dir</code> 告诉 HistoryServer 需要从哪些目录读取已完成作业的信息。该配置项通常与 <code>jobmanager.archive.fs.dir</code> 一致，即 JobManager 将已完成的作业信息存放在哪里，HistoryServer 就去哪里读。如果目录有多个，可以使用英文逗号分隔。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 监视以下目录中已完成的作业</span></span><br><span class="line"><span class="attr">historyserver.archive.fs.dir:</span> <span class="string">hdfs:///completed-jobs</span></span><br></pre></td></tr></table></figure>
<p>此外，还可以通过配置项 <code>historyserver.archive.fs.refresh-interval</code> 设置 HistoryServer 定期读取目录的时间间隔（单位为毫秒），如设置每 10 秒刷新一次：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 每 10 秒刷新一次</span></span><br><span class="line"><span class="attr">historyserver.archive.fs.refresh-interval:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<p>HistoryServer 会将目录所包含的存档下载并缓存在本地文件系统中，本地目录可以通过 <code>historyserver.web.tmpdir</code> 配置。</p>
<p>HistoryServer 的 WebUI 监听的地址和端口，可通过以下配置项 <code>historyserver.web.address</code> 和 <code>historyserver.web.port</code> 设置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># HistoryServer 的监听地址</span></span><br><span class="line"><span class="attr">historyserver.web.address:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HistoryServer 的监听端口</span></span><br><span class="line"><span class="attr">historyserver.web.port:</span> <span class="number">8082</span></span><br></pre></td></tr></table></figure>
<h3 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h3><div class="table-container">
<table>
<thead>
<tr>
<th>配置项</th>
<th>默认值</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>historyserver.archive.clean-expired-jobs</td>
<td>false</td>
<td>Boolean</td>
<td>是否应清理不再存在于 <code>historyserver.archive.fs.dir</code> 的作业。</td>
</tr>
<tr>
<td>historyserver.archive.fs.dir</td>
<td>(none)</td>
<td>String</td>
<td>以逗号分隔的目录列表，用于获取存档作业。HistoryServer 将监控这些目录中的存档作业。</td>
</tr>
<tr>
<td>historyserver.archive.fs.refresh-interval</td>
<td>10000</td>
<td>Long</td>
<td>刷新存档工作目录的间隔（毫秒）。</td>
</tr>
<tr>
<td>historyserver.archive.retained-jobs</td>
<td>-1</td>
<td>Integer</td>
<td><code>historyserver.archive.fs.dir</code> 定义的每个存档目录中要保留的作业的最大数量。如果设置为 -1（默认），则存档数量没有限制。如果设置为 0 或小于 -1，HistoryServer 将抛出 IllegalConfigurationException。</td>
</tr>
<tr>
<td>historyserver.log.jobmanager.url-pattern</td>
<td>(none)</td>
<td>String</td>
<td>JobManager 的日志 URL 模式。HistoryServer 将从中生成实际 URL，并将特殊占位符 <jobid> 替换为作业 ID。仅支持 http / https 方案。</td>
</tr>
<tr>
<td>historyserver.log.taskmanager.url-pattern</td>
<td>(none)</td>
<td>String</td>
<td>任务管理器日志 URL 的模式。HistoryServer 将从中生成实际 URL，并将特殊占位符 <jobid> 和 <tmid> 分别替换为 job 和 TaskManager 的 id。仅支持 http / https 方案。</td>
</tr>
<tr>
<td>historyserver.web.address</td>
<td>(none)</td>
<td>String</td>
<td>HistoryServer WebUI 地址。</td>
</tr>
<tr>
<td>historyserver.web.port</td>
<td>8082</td>
<td>Integer</td>
<td>HistoryServer WebUI 端口。</td>
</tr>
<tr>
<td>historyserver.web.refresh-interval</td>
<td>10000</td>
<td>Long</td>
<td>HistoryServer 网络前端的刷新间隔（毫秒）。</td>
</tr>
<tr>
<td>historyserver.web.ssl.enabled</td>
<td>false</td>
<td>Boolean</td>
<td>启用 HTTP 访问 HistoryServer 网络前端。只有当全局 SSL 标志 security.ssl.enabled 设为 true 时才适用。</td>
</tr>
<tr>
<td>historyserver.web.tmpdir</td>
<td>(none)</td>
<td>String</td>
<td>HistoryServer REST API 用于临时文件的本地目录。</td>
</tr>
</tbody>
</table>
</div>
<h2 id="四、启动History-Server"><a href="#四、启动History-Server" class="headerlink" title="四、启动History Server"></a>四、启动History Server</h2><p>在配置好 HistoryServer 和 JobManager 之后，可以使用以下的脚本来启动和停止 HistoryServer：</p>
<p>启动 HistoryServer<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动 HistoryServer</span></span><br><span class="line">bin/historyserver.sh start</span><br></pre></td></tr></table></figure></p>
<p>停止 HistoryServer<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止 HistoryServer</span></span><br><span class="line">bin/historyserver.sh stop</span><br></pre></td></tr></table></figure></p>
<p>需要注意的是：HistoryServer 目前只能作为独立的进程运行。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>Flink 中的 History Server 是一款非常实用且强大的组件，它通过记录和展示 Flink 作业的历史运行信息，为审计和调试作业提供了重要的手段。该工具采用独立的 Web 服务器，不参与作业执行，仅用于展示作业的历史信息。History Server 的工作原理是 JobManager 将完成作业的信息存档到 HDFS 或其他持久存储，然后 History Server 读取并下载缓存到本地文件系统中，以提供 Web 界面展示。</p>
<p>通过 History Server 的 Web UI，我们可以轻松查看已完成作业列表、任务统计数据、作业失败异常信息、Checkpoint 信息等。借助 History Server，我们可以审计已完成的作业，分析和优化作业性能，定位故障原因，是非常必要的辅助工具。</p>
<p>以上是 Apache Flink History Server 的简要介绍，希望对大家有所帮助。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Gson库在Java中实现下划线与驼峰格式的转换</title>
    <url>/2023/07/25/java-gson-camel-cased-underscore/</url>
    <content><![CDATA[<p>当我们处理 JSON 数据时，经常会遇到下划线格式与驼峰格式之间的转换。为了简化这一过程，我们可以使用 Gson 库进行数据的相互转换。在本篇博文中，我们将介绍如何使用 Gson 实现下划线与驼峰格式的转换。</p>
<p>Gson 是一个流行的 Java 库，用于将 JSON 数据与 Java 对象进行相互转换。它提供了灵活的配置选项，以满足各种需求，其中包括下划线与驼峰格式的转换。</p>
<h2 id="添加Maven依赖"><a href="#添加Maven依赖" class="headerlink" title="添加Maven依赖"></a>添加Maven依赖</h2><p>首先，在 <em>pom.xml</em> 文件中配置 <em>gson</em> 依赖项：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><em>gson</em> 版本根据实际情况进行选择，建议使用最新版本（见 <a href="https://search.maven.org/search?q=g:com.google.code.gson%20AND%20a:gson&amp;core=gav">Maven Central</a> ）。</p>
<p>本文使用的是 <em>2.10.1</em> 版本（当前最新版本）。</p>
<h2 id="将下划线格式的JSON字符串转换为驼峰格式的Java对象"><a href="#将下划线格式的JSON字符串转换为驼峰格式的Java对象" class="headerlink" title="将下划线格式的JSON字符串转换为驼峰格式的Java对象"></a>将下划线格式的JSON字符串转换为驼峰格式的Java对象</h2><p>现在，我们来看一下如何将下划线格式的 JSON 转换为驼峰格式的 Java 对象。假设我们有以下的下划线格式的 JSON 字符串：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;first_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Johnson&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;last_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Lin&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">28</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>我们可以定义一个 <code>User</code> 类，该类对应于上述 JSON 字符串的结构：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">public class User <span class="punctuation">&#123;</span></span><br><span class="line">    private String firstName;</span><br><span class="line">    private String lastName;</span><br><span class="line">    private int age;</span><br><span class="line"></span><br><span class="line">    public User() <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    public User(String firstName<span class="punctuation">,</span> String lastName<span class="punctuation">,</span> int age) <span class="punctuation">&#123;</span></span><br><span class="line">        this.firstName = firstName;</span><br><span class="line">        this.lastName = lastName;</span><br><span class="line">        this.age = age;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    public String getFirstName() <span class="punctuation">&#123;</span></span><br><span class="line">        return firstName;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    public void setFirstName(String firstName) <span class="punctuation">&#123;</span></span><br><span class="line">        this.firstName = firstName;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    public String getLastName() <span class="punctuation">&#123;</span></span><br><span class="line">        return lastName;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    public void setLastName(String lastName) <span class="punctuation">&#123;</span></span><br><span class="line">        this.lastName = lastName;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    public int getAge() <span class="punctuation">&#123;</span></span><br><span class="line">        return age;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    public void setAge(int age) <span class="punctuation">&#123;</span></span><br><span class="line">        this.age = age;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String toString() <span class="punctuation">&#123;</span></span><br><span class="line">        return <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;firstName=&#x27;&quot;</span> + firstName + &#x27;\&#x27;&#x27; +</span><br><span class="line">                <span class="string">&quot;, lastName=&#x27;&quot;</span> + lastName + &#x27;\&#x27;&#x27; +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                &#x27;<span class="punctuation">&#125;</span>&#x27;;</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>接下来，我们可以使用 Gson 的 <code>setFieldNamingStrategy()</code> 方法来设置字段名称的转换策略。在这里，我们使用命名策略 <code>FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES</code> 来实现自定义的转换逻辑。具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>()</span><br><span class="line">            .setFieldNamingStrategy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)</span><br><span class="line">            .create();</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;first_name\&quot;:\&quot;Johnson\&quot;,\&quot;last_name\&quot;:\&quot;Lin\&quot;,\&quot;age\&quot;:28&#125;&quot;</span>;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> gson.fromJson(json, User.class);</span><br><span class="line"></span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment">User&#123;firstName=&#x27;Johnson&#x27;, lastName=&#x27;Lin&#x27;, age=28&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>通过上述代码，我们定义了一个 Gson 对象并指定了字段命名策略。在这个策略中，我们使用 <code>setFieldNamingStrategy()</code> 方法来处理字段名称。在 Gson 中使用 <code>FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES</code> 命名策略，把字段名从下划线格式修改为驼峰式。然后，再使用 <code>fromJson()</code> 方法将 JSON 字符串转换为驼峰格式的 <code>User</code> 对象。</p>
<h2 id="将驼峰格式的Java对象转换为下划线格式的JSON字符串"><a href="#将驼峰格式的Java对象转换为下划线格式的JSON字符串" class="headerlink" title="将驼峰格式的Java对象转换为下划线格式的JSON字符串"></a>将驼峰格式的Java对象转换为下划线格式的JSON字符串</h2><p>假设我们有以下的 <code>User</code> 对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;Johnson&quot;</span>, <span class="string">&quot;Lin&quot;</span>, <span class="number">28</span>);</span><br></pre></td></tr></table></figure>
<p>同样，我们可以使用 Gson 的 <code>setFieldNamingStrategy()</code> 方法来设置字段名称的转换策略。具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>()</span><br><span class="line">            .setFieldNamingStrategy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)</span><br><span class="line">            .create();</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;Johnson&quot;</span>, <span class="string">&quot;Lin&quot;</span>, <span class="number">28</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(user);</span><br><span class="line"></span><br><span class="line">    System.out.println(json);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment">&#123;&quot;first_name&quot;:&quot;Johnson&quot;,&quot;last_name&quot;:&quot;Lin&quot;,&quot;age&quot;:28&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>通过上述代码，我们定义了一个 Gson 对象并指定了字段命名策略。在 Gson 中，我们使用 <code>FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES</code> 命名策略将把 Java 字段名从驼峰式修改为小写字段名，其中每个单词之间用下划线 (_) 分隔。然后，我们可以使用 <code>toJson()</code> 方法将驼峰格式的 <code>User</code> 对象转换为下划线格式的 JSON 字符串。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>通过使用 Gson 库，我们可以方便地实现下划线与驼峰格式之间的转换。无论是从下划线格式的 JSON 转为驼峰格式的 Java 对象，还是从驼峰格式的 Java 对象转为下划线格式的 JSON，Gson 提供了灵活的配置选项来满足我们的需求。</p>
<p>希望本篇博文能够帮助你理解并应用 Gson 进行数据格式转换。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>不要浪费你的中年危机</title>
    <url>/2023/08/31/never-waste-a-midlife-crisis/</url>
    <content><![CDATA[<p>我上个月刚满40岁，花了三周时间阅读《堂吉诃德》，因此中年危机一直在我的脑海中挥之不去。</p>
<p>“千万不要浪费你的中年危机。”</p>
<p>这是我在收听播客采访《威廉・布莱克与世界》（William Blake vs. The World）的作者约翰・希格斯（John Higgs）时听到的建议。(2022年我最喜欢的读物之一）。</p>
<p>希格斯说，他钦佩的艺术家都是像大卫・林奇（David Lynch）这样的人，“你不会觉得他们在这个世界上有什么明显的位置，但他们就是不顾一切地做自己的事情，于是一个位置就在他们周围建立起来了”。</p>
<p>他继续说道：</p>
<p>“生态学中有一个概念叫‘生态位创造’（niche creation）。它的意思是：一个物种来到一个地方，不是因为‘哦，这里有充足的食物，我可以在这里生存得很好’。而是这个物种本能地做它该做的事，通过和环境的互动，它创造了一个有利于自己生存的环境。</p>
<p>当我决定尝试成为一名全职作家时——尽管考虑到写作这个行业的盈利模式的荒谬性——我有一种信仰，那就是只要我去做了，那些读我的书的人就会开始出现。慢慢地，随着时间的推移，我会逐渐建立起一些读者群体，他们会说：‘哦，这个人很有意思，我会读他的下一本书。’这些读者足以支持我。</p>
<p>你会创造出你所需要的那个生态位。并不是世界上有人一直在说：‘哦，我们真的需要约翰・希格斯的书，它们在哪里？’但如果你写了这些书，世界就会围绕着它们做出反应。”</p>
<p>他承认：“这总是在一个几乎无法顺利实现的边缘上”，但目前为止，它还是奏效的，而这一切始于他四十岁的时候做出的决定：</p>
<p>“你不应该浪费你的中年危机。中年危机可以成就大事。如果你只把它浪费在买一辆车之类的事情上，那只是缺乏想象力。我的中年危机就是决定写书，并试图以此谋生。  </p>
<p>当时的选择似乎是这样的：如果我选择尝试，我就会身无分文，如果我不尝试，我会很痛苦，以后也会一直痛苦下去。身无分文比起心存怨恨肯定更好。所以我做出了这个决定。那是十年前的事情了！现在我还在坚持下去。”</p>
<p>很喜欢这句话。不要浪费你的中年危机。</p>
<p>(我现在一边玩塞尔达，一边听他写的《爱与死：詹姆斯-邦德、披头士和英国人的心理》（Love and Let Die: James Bond, The Beatles, and the British Psyche）。他指出，詹姆斯-邦德基本上就是伊恩-弗莱明的中年危机）。</p>
<p>原文地址：<a href="https://austinkleon.com/2023/07/10/never-waste-a-midlife-crisis/">https://austinkleon.com/2023/07/10/never-waste-a-midlife-crisis/</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Gson进行数组、集合和映射的序列化与反序列化</title>
    <url>/2023/08/27/gson-serializing-and-deserializing-array-set-map/</url>
    <content><![CDATA[<p>在开发过程中，我们经常需要将数据进行序列化和反序列化。序列化是将对象转换为可传输或可存储的格式，而反序列化则是将序列化后的数据重新还原成对象。针对数组、集合和映射这些常见的数据结构，Google 提供了一个强大而灵活的 Java 库——Gson。本文将介绍如何使用 Gson 进行数组、集合和映射的序列化与反序列化。</p>
<h2 id="引入Gson库"><a href="#引入Gson库" class="headerlink" title="引入Gson库"></a>引入Gson库</h2><p>首先，我们需要在项目中引入 Gson 库。可以通过 Maven 或 Gradle 配置文件添加以下依赖项：</p>
<p>Maven</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  Gson: Java to JSON conversion --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Gradle</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation <span class="string">&#x27;com.google.code.gson:gson:2.10.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>gson</em> 版本根据实际情况进行选择，建议使用最新版本（见 <a href="https://search.maven.org/search?q=g:com.google.code.gson%20AND%20a:gson&amp;core=gav">Maven Central</a> ）。</p>
<p>本文使用的是 <em>2.10.1</em> 版本（当前最新版本）。</p>
<h2 id="数组的序列化与反序列化"><a href="#数组的序列化与反序列化" class="headerlink" title="数组的序列化与反序列化"></a>数组的序列化与反序列化</h2><p>对于数组，Gson 提供了简单而方便的序列化和反序列化方法。下面是一个示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 00:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraySerializationExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] numbers = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(numbers);</span><br><span class="line">        System.out.println(json); <span class="comment">// 输出：[1,2,3,4,5]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        <span class="type">int</span>[] deserializedNumbers = gson.fromJson(json, <span class="type">int</span>[].class);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> number : deserializedNumbers) &#123;</span><br><span class="line">            System.out.print(number + <span class="string">&quot; &quot;</span>); <span class="comment">// 输出：1 2 3 4 5</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[1,2,3,4,5]</span></span><br><span class="line"><span class="comment">1 2 3 4 5</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>Gson 还支持具有任意复杂元素类型的多维数组，如对二维整型数组进行序列化与反序列化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 00:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MultiDimensionalArrayExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] numbers = &#123;</span><br><span class="line">                &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">                &#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(numbers);</span><br><span class="line">        System.out.println(json); <span class="comment">// 输出：[[1,2,3],[8,9,0]]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        <span class="type">int</span>[][] deserializedNumbers = gson.fromJson(json, <span class="type">int</span>[][].class);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] number : deserializedNumbers) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i : number) &#123;</span><br><span class="line">                System.out.print(i + <span class="string">&quot; &quot;</span>); <span class="comment">// 输出：1 2 3 8 9 0</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[[1,2,3],[8,9,0]]</span></span><br><span class="line"><span class="comment">1 2 3 8 9 0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="集合的序列化与反序列化"><a href="#集合的序列化与反序列化" class="headerlink" title="集合的序列化与反序列化"></a>集合的序列化与反序列化</h2><p>对于集合，Gson 同样提供了便捷的方法。以下是一个示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 00:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CollectionSerializationExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;String&gt; names = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        names.add(<span class="string">&quot;Alice&quot;</span>);</span><br><span class="line">        names.add(<span class="string">&quot;Bob&quot;</span>);</span><br><span class="line">        names.add(<span class="string">&quot;Johnson&quot;</span>);</span><br><span class="line">        names.add(<span class="string">&quot;Charlie&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(names);</span><br><span class="line">        System.out.println(json); <span class="comment">// 输出：[&quot;Alice&quot;,&quot;Bob&quot;,&quot;Johnson&quot;,&quot;Charlie&quot;]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        List&lt;String&gt; deserializedNames = gson.fromJson(json, List.class);</span><br><span class="line">        <span class="keyword">for</span> (String name : deserializedNames) &#123;</span><br><span class="line">            System.out.print(name + <span class="string">&quot; &quot;</span>); <span class="comment">// 输出：Alice Bob Johnson Charlie</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[&quot;Alice&quot;,&quot;Bob&quot;,&quot;Johnson&quot;,&quot;Charlie&quot;]</span></span><br><span class="line"><span class="comment">Alice Bob Johnson Charlie</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>集合限制：Gson 可以将任意类型的对象集合进行序列化，但无法从中进行反序列化，因为用户无法指出生成对象的类型。相反，在反序列化时，集合必须是特定的通用类型。这是有道理的，只要遵循良好的 Java 编码实践，就很少会出现问题。</p>
</blockquote>
<h2 id="映射的序列化与反序列化"><a href="#映射的序列化与反序列化" class="headerlink" title="映射的序列化与反序列化"></a>映射的序列化与反序列化</h2><p>默认情况下，Gson 将任何 <code>java.util.Map</code> 实现（如 <code>HashMap</code>、<code>LinkedHashMap</code> 等）序列化为 JSON 对象。由于 JSON 对象仅支持字符串作为成员名称，因此 Gson 通过调用 <code>toString()</code> 将 Map 键转换为字符串，并对 <code>null</code> 键使用 <code>&quot;null&quot;</code>。</p>
<p>对于反序列化，Gson 使用注册为 Map 键类型的 <code>TypeAdapter</code> 的 <code>read</code> 方法。为了进行反序列化，必须使用 <code>TypeToken</code> 来告诉 Gson Map 键和值的类型是什么。</p>
<p>下面是一个对包含 <code>null</code> 键的 Map 进行序列化与反序列化的示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.reflect.TypeToken;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 01:37</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapSerializationExample02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; stringMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        stringMap.put(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">        stringMap.put(<span class="literal">null</span>, <span class="string">&quot;null-entry&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Map&lt;Integer, Integer&gt; intMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        intMap.put(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        intMap.put(<span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">json1</span> <span class="operator">=</span> gson.toJson(stringMap);</span><br><span class="line">        System.out.println(json1); <span class="comment">// 输出：&#123;&quot;key&quot;:&quot;value&quot;,&quot;null&quot;:&quot;null-entry&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">json2</span> <span class="operator">=</span> gson.toJson(intMap);</span><br><span class="line">        System.out.println(json2); <span class="comment">// 输出：&#123;&quot;1&quot;:1,&quot;3&quot;:3&#125;</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        TypeToken&lt;Map&lt;String, String&gt;&gt; strMapType = <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;Map&lt;String, String&gt;&gt;()&#123;&#125;;</span><br><span class="line">        Map&lt;String, String&gt; deserializedString = gson.fromJson(json1, strMapType);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : deserializedString.entrySet()) &#123;</span><br><span class="line">            System.out.println(entry.getKey() + <span class="string">&quot;: &quot;</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">// key: value</span></span><br><span class="line">        <span class="comment">// null: null-entry</span></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        TypeToken&lt;Map&lt;Integer, Integer&gt;&gt; intMapType = <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;Map&lt;Integer, Integer&gt;&gt;()&#123;&#125;;</span><br><span class="line">        Map&lt;Integer, Integer&gt; deserializedInteger = gson.fromJson(json2, intMapType);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : deserializedInteger.entrySet()) &#123;</span><br><span class="line">            System.out.println(entry.getKey() + <span class="string">&quot;: &quot;</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">// 1: 1</span></span><br><span class="line">        <span class="comment">// 3: 3</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;&quot;key&quot;:&quot;value&quot;,&quot;null&quot;:&quot;null-entry&quot;&#125;</span></span><br><span class="line"><span class="comment">&#123;&quot;1&quot;:1,&quot;3&quot;:3&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">key: value</span></span><br><span class="line"><span class="comment">null: null-entry</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1: 1</span></span><br><span class="line"><span class="comment">3: 3</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>请注意：上述示例代码中，在反序列化时我们是如何定义映射类型的。代码看起来相当丑陋，但遗憾的是，在 Java 中无法绕过这一点。</p>
</blockquote>
<p>下面是一个利用 Gson 将 <code>Map&lt;String, Integer&gt;</code> 转换成 JSON 字符串，然后再反序列化成相应的映射对象的示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.reflect.TypeToken;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 00:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapSerializationExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Map&lt;String, Integer&gt; scores = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        scores.put(<span class="string">&quot;Alice&quot;</span>, <span class="number">90</span>);</span><br><span class="line">        scores.put(<span class="string">&quot;Bob&quot;</span>, <span class="number">80</span>);</span><br><span class="line">        scores.put(<span class="string">&quot;Johnson&quot;</span>, <span class="number">99</span>);</span><br><span class="line">        scores.put(<span class="string">&quot;Charlie&quot;</span>, <span class="number">95</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(scores);</span><br><span class="line">        System.out.println(json); <span class="comment">// 输出：&#123;&quot;Johnson&quot;:99,&quot;Bob&quot;:80,&quot;Alice&quot;:90,&quot;Charlie&quot;:95&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        Map&lt;String, Integer&gt; deserializedScores = gson.fromJson(json, <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;Map&lt;String, Integer&gt;&gt;()&#123;&#125;);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Integer&gt; entry : deserializedScores.entrySet()) &#123;</span><br><span class="line">            System.out.println(entry.getKey() + <span class="string">&quot;: &quot;</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 输出：</span></span><br><span class="line">        <span class="comment">// Johnson: 99</span></span><br><span class="line">        <span class="comment">// Bob: 80</span></span><br><span class="line">        <span class="comment">// Alice: 90</span></span><br><span class="line">        <span class="comment">// Charlie: 95</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;&quot;Johnson&quot;:99,&quot;Bob&quot;:80,&quot;Alice&quot;:90,&quot;Charlie&quot;:95&#125;</span></span><br><span class="line"><span class="comment">Johnson: 99</span></span><br><span class="line"><span class="comment">Bob: 80</span></span><br><span class="line"><span class="comment">Alice: 90</span></span><br><span class="line"><span class="comment">Charlie: 95</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文介绍了如何使用 Gson 库对数组、集合和映射进行序列化和反序列化操作。通过 Gson 提供的简单而强大的 API，我们可以轻松地将这些常见的数据结构转换为 JSON 字符串，并且能够方便地将 JSON 字符串还原成原始的数据结构。使用 Gson 库，我们可以更加高效地处理和传输数据，为我们处理复杂的数据结构提供了很大的灵活性和便利性，在 Java 开发中起到了很大的作用。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>培养你对数学的直觉</title>
    <url>/2023/08/29/developing-your-intuition-for-math/</url>
    <content><![CDATA[<p>我们对一个新概念的首次接触，往往会形成我们心中对其的第一印象或直觉认知。而这一直觉，也会反过来影响我们在多大程度上喜欢或者认同这个概念。</p>
<p>以“猫”为例，我们可以给出不同角度的定义：</p>
<ul>
<li>山顶洞人视角：一种毛茸茸的动物，具有尖爪、锋利牙齿、灵活尾巴与四条腿，心情愉悦时会发出咕噜声，生气时会发出威胁的嘶嘶声……</li>
<li>进化论视角：作为猫科动物的一员，猫是哺乳类动物的一个物种，拥有某些共同遗传特征……</li>
<li>现代基因视角：猫不过是拥有以下DNA序列的动物：ACATACATACATACAT……</li>
</ul>
<p><img src="/image/2023/cat-analogy-20121004-170549.png.webp" alt="cat-analogy-20121004-170549.png.webp"><br>(插图来源：<a href="http://www.commoncraft.com/kalids-cat-why-initial-understanding-matters">Common Craft</a>）</p>
<p>毫无疑问，现代基因视角提供了最准确的定义。但是，这就足以成为解释“猫”的最佳起点吗？如果要让一个孩子理解“猫”的含义，我们会只给出这种定义吗？它能让我们深入理解猫的本质吗？答案似乎是否定的。现代定义固然准确实用，但应建立在对“猫”有一定认识的基础上，而非概念学习的起点。</p>
<p>不幸的是，数学理解往往也遵循类似的模式。我们被教授现代严谨的定义，而不是产生这些定义的逻辑过程。我们只掌握了晦涩难懂的公式，而对其背后的数学思想知之甚少。</p>
<p>我们不妨换个角度思考。想象一个圆圈：中心是你正在学习的概念，圆周上是描述该概念的事实。我们可以从一个小的切入点开始，一个事实或见解，然后逐步拓展我们的思路。从“猫有共同的身体特征”引出“猫有共同的祖先”，再引出“一个物种可以通过 DNA 某些部分来识别”。 这样我们可以看到，现代基因定义是从早期定义逐步推导出来的。</p>
<p>但并不是所有的起点都一样。正确的视角能让数学更容易理解——最先发现这些概念的“数学原人”往往拥有启发性的视角。</p>
<p>现在，我们来看一个数学例子，讨论一下圆的定义。并从中学习如何建立直觉，重拾数学的原初逻辑。</p>
<h2 id="什么是“圆”？"><a href="#什么是“圆”？" class="headerlink" title="什么是“圆”？"></a>什么是“圆”？</h2><p><img src="/image/2023/circle-definitions.png.webp" alt="circle-definitions.png.webp"><br>圆有许多不同的定义，以下是其中一些：</p>
<ul>
<li>圆是最对称的二维平面图形。</li>
<li>在相同周长的情况下，面积最大的图形就是圆。</li>
<li>圆是平面上与给定点距离相等的所有点的集合（用圆规或铅笔在绳子上画出的点）。</li>
<li>圆是满足公式 x²+y²=r²（其中 r 为大于 0 的已知实数）的所有点（x,y）的集合。（上述几何定义的解析版本）。</li>
<li>圆是满足方程 x=r<em>sin(t) 和 y=r</em>cos(t)（其中 r 为大于  0的已知实数，t 为任意实数）的所有点（x,y）的集合（这是真正的解析版本）。</li>
<li>任意一条切线都垂直于“切点的位置向量”的图像就是圆（这是物理解释）。</li>
</ul>
<p>这样的定义举不胜举，但它们都描述的是同一个概念！就像说 1、one、uno、eins、“2x + 3 = 5 的解”或“你脸上鼻子的数量”，它们只是用不同的名称来表达同一个概念。</p>
<p>然而，这些最初的描述非常重要，因为它们塑造了我们的直觉。因为在我们上课之前，在现实世界中我们就看到过圆，所以我们知道什么是圆。无论我们看到多么复杂的等式（如 x² + y² = r²），我们内心深处都知道圆是“圆”的。如果我们将这个等式画成图形，但它看起来是方的或者是扁的，我们也可以知道这是错误的。</p>
<p>在我们孩提时代，我们学习了“山顶洞人”对圆的定义（一个真正的圆形物体），这给了我们一种舒适的直觉。我们能够看到，在圆上的每一个点到圆心的距离都是相等的。而表达这个事实的解析式就是 x² + y² = r²，它利用了勾股定理来表示距离。我们从这种直觉出发，逐步演绎出了正式的定义。</p>
<p>然而，对于其他概念来说，情况可能没有圆那么幸运。我们是否本能地理解自然常数 e 的增长，或者它只是一个抽象的定义？我们是否意识到虚数单位 i 的旋转，或者它只是一个人为的、无用的概念？</p>
<h2 id="培养洞察力的策略"><a href="#培养洞察力的策略" class="headerlink" title="培养洞察力的策略"></a>培养洞察力的策略</h2><p>我仍然不得不时刻提醒自己去理解 e 和  i 的深层含义，这看起来似乎很荒谬，就像要“记住”圆是什么形状，猫是什么样子一样。这本应该是我们与生俱来的直观认知。</p>
<p>缺乏全局观让我感到沮丧：数学的本质是思想，公式只是表达思想的一种方式。一旦中心概念明确了，相关的方程式也就迎刃而解。以下是一个对我很有帮助的策略：</p>
<p><strong>步骤 1：找到数学概念的中心主题。</strong>尝试从历史的角度入手。这个概念最早是在哪里使用的？它的发现者当时在追求什么目标？这种早期使用可能与我们现代的解释和应用有所不同。</p>
<p><strong>步骤 2：利用主题来解释一个属性或事实。</strong>将其与正式定义进行类比。如果幸运的话，你可以将数学公式（如x² + y² = r²）转化为通俗易懂的语言陈述（“所有点到中心的距离相同”）。</p>
<p><strong>步骤 3：利用相同的主题来探索其他相关属性。</strong>一旦你找到一个有效的类比或解释，看看它是否适用于其他属性。有时候，这个类比是有用的，有时候可能不够适用（这时你需要寻找新的见解），但你会惊喜地发现许多意想不到的发现。</p>
<p>我们来试试看。</p>
<h2 id="一个真实的例子：-理解自然常数-e"><a href="#一个真实的例子：-理解自然常数-e" class="headerlink" title="一个真实的例子： 理解自然常数 e"></a>一个真实的例子： 理解自然常数 e</h2><p>自然常数 e 出现在科学的各个领域，有许多定义，但很少能以一种自然的方式被理解。让我们围绕这个概念展开深入探讨。下文将列出几个等式，这些等式都是一些简单的描述概念的方法。即使等式本身可能听起来不可思议，它们背后也有一个浅显易懂的概念。</p>
<p>以下是几个流行的 e 的定义： </p>
<p><img src="/image/2023/e-definitions.png.webp" alt="e-definitions.png.webp"></p>
<p>首先要做的是确定一个主题。从 e 的历史来看，它似乎与增长或利率有关。实际上，e 的发现并非来自抽象的数学猜想，而是在商业计算中被应用，因此“利息”（增长）可能是一个相关的主题。</p>
<p>现在，让我们来看看左上角的第一个定义。对我来说，关键的一步是意识到这个等式看起来非常像复利的计算公式。事实上，它就是复利计算公式，即在一个单位的时间内，以最快的速度复合计算 100% 的利息。</p>
<p>定义 1：将 e 定义为以最小增量实现 100% 的复利复合增长。</p>
<p>接下来，我们看看第二个定义：一个趋向于零的无限项级数。这代表什么呢？</p>
<p>在以“利息”为主题进行思考之后，我们发现这个定义展示了复利的组成部分。然而，获得这样的洞察力并不是一蹴而就的，这种洞察力可能是在头脑风暴中想象“当讨论增长时，1 + 1 + 1/2 + 1/6 + …… ”代表着什么。</p>
<p>让我们逐项解释这个序列。第一项（1 = 1/0!，记住 0 的阶乘等于 1）代表的是你的本金，即原始金额。下一个项（1 = 1/1!）是你赚取的“直接”利息——相当于本金的 100%。再下一个项（0.5 = 1/2!）是你赚取的“第二级利息”的金额。再下一个项（0.1666 = 1/3!）是你的“第三级利息”——也就是你的利息所赚取的金额。</p>
<p>这个序列展示了钱生钱的过程，每个阶段都有对应的贡献，将这些贡献逐步分开。还有很多其他方面可以探讨，但这就是以“增长”为核心来理解这个概念的要点。</p>
<p>因此，第二个定义可以表述为： 根据每个利息增长对总的资金的贡献来定义  e。</p>
<p>现在来看看第三个，也是最简短的定义。它到底意味着什么呢？不要陷入计算方程式的思维模式，不要去想“导数”，试着理解等式的感觉，让它成为你的朋友。</p>
<p><img src="/image/2023/f7490bdbc503e32a350c6e977082b01a.png" alt="f7490bdbc503e32a350c6e977082b01a.png"></p>
<p>这个定义告诉我们，按照微积分的说法，“你的增长率等于你当前的金额”。那么，以当前金额增长就是 100% 的利率，对吗？持续增长意味着不断计算利息——这是另一种连续复利的描述方式！</p>
<p>因此，第三个定义可以表述为：将 e 定义为始终以当前值的 100% 增长的函数。</p>
<p>没错，e 是一个数字，在这个数字上，你总是以当前金额（100%）增长，而不是 1% 或者 200%。</p>
<p>现在来到了最后一个定义的时间——这是一个棘手的问题。我这样来解释它：与其描述你成长了多少，为什么不说你花了多长时间呢？</p>
<p>假设你的速度是 1，并且以 100% 的速率增长，那么从 1 增长到 2 需要一个单位的时间！从 3 增长到 4 只需要 1/3 个单位的时间，以此类推。</p>
<p>从 1 增长到 A 所需的时间就是从 1 到 2，从 2 到 3，从 3 到 4……一直持续下去，直到达到 A。</p>
<p>简单地说，ln(a) 表示从 1 增长到 a 所需的时间。我们可以说，e 是刚好需要 1 个单位的时间才能增长到的数字。换句话说，e 就是在等待 1 个单位时间后的增长量！</p>
<p>因此，第四个定义可以表述为：将从 1 持续增长到 a 所需的时间定义为 ln(a)。</p>
<p>怎么样？一旦我们掌握了核心理念（“e 是 100% 的连续增长”），那些复杂的方程式就能够轻易推导出来——微积分可以被用英语来表述。数学是关于思想的！</p>
<h2 id="寓意何在？"><a href="#寓意何在？" class="headerlink" title="寓意何在？"></a>寓意何在？</h2><p>在数学课上，我们常常从最后一个最复杂晦涩的概念开始讲解。这也难怪我们会感到困惑——我们拿着 DNA 的示意图，却期望学生看到一只猫。</p>
<p>我从这种方法中学到了一些经验，它是我理解和解释数学的基础：</p>
<ul>
<li>寻找洞察力并加以应用。第一个直观的洞察力可以帮助其他所有的事情都水到渠成。从一个有意义的定义开始，“绕着圈子走”，找到其他的定义。</li>
<li>培养心理韧性。用你大脑和一个新概念较劲并不好玩。如果不理解，可以换个角度思考。其他书籍、文章、人的解释可能对你更有意义。</li>
<li>视觉化也是行之有效的方法。虽然我们通常认为数学是死板的、分析性的，但是通过视觉解释也能够深入理解。尝试进行能够加深理解的实践活动。就拿虚数来说，几十年后人们才发现它与几何的关联。整天盯着方程式看并不能帮助数学家真正 “理解” 其含义。</li>
</ul>
<p>当我们过分强调定义而忽略理解时，数学就会变得困难。要记住，现代的定义只是最先进的思维步骤，但并不一定是起点。不要害怕从一个有趣的角度去理解一个概念，试着找出那些能用通俗易懂的句子来描述等式背后含义的方法。</p>
<p>原文链接：<a href="https://betterexplained.com/articles/developing-your-intuition-for-math/">https://betterexplained.com/articles/developing-your-intuition-for-math/</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Filebeat</title>
    <url>/2023/02/23/filebeat-installationn/</url>
    <content><![CDATA[<p>Filebeat 在 Linux、Unix、Mac 和 Windows 上均可正常运行。根据我们当前使用的服务器的系统类型，选择适用于该系统的命令来下载和安装 Filebeat。</p>
<h3 id="在-Linux-上安装-Filebeat"><a href="#在-Linux-上安装-Filebeat" class="headerlink" title="在 Linux 上安装 Filebeat"></a>在 Linux 上安装 Filebeat</h3><p>首先，你可以试着输入 <code>filebeat version</code>，看看系统有没有安装 Filebeat：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ filebeat version</span><br><span class="line">filebeat: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>
<p>或者使用 <code>whereis</code> 命令查看，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ whereis filebeat</span><br><span class="line">filebeat:</span><br></pre></td></tr></table></figure>
<p>类似上面的命令的输出结果，说明当前系统并没有安装 Filebeat。</p>
<p>你可以使用以下命令下载 Filebeat 压缩包文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.6.2-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>
<p>解压文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xzf filebeat-8.6.2-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>
<p>为了方便后续使用，建议将解压后的目录添加到系统环境变量中。如解压后的目录为 <em>/usr/local/filebeat</em>，则可以将以下内容追加到文件 <code>/etc/profile</code> 末尾：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> FILEBEAT_HOME=/usr/local/filebeat</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$FILEBEAT_HOME</span>:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p>执行命令 <code>source /etc/profile</code> 使刚刚新加的环境变量生效。</p>
<p>最后再使用 <code>filebeat version</code> 或 <code>whereis</code> 命令来验证是否成功安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ filebeat version</span><br><span class="line">filebeat version 8.6.2 (amd64), libbeat 8.6.2 [9b77c2c135c228c2eedc310f6e975bb1a76169b1 built 2023-02-12 04:37:19 +0000 UTC]</span><br></pre></td></tr></table></figure>
<h3 id="在-Mac-OS-上安装-Filebeat"><a href="#在-Mac-OS-上安装-Filebeat" class="headerlink" title="在 Mac OS 上安装 Filebeat"></a>在 Mac OS 上安装 Filebeat</h3><p>在 Mac OS 上安装 Filebeat 步骤与在 Linux 系统中的步骤类似。只是需要下载适用于 Mac 系统的 Filebeat 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.6.2-darwin-x86_64.tar.gz</span><br></pre></td></tr></table></figure>
<p>解压缩文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xzvf filebeat-8.6.2-darwin-x86_64.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="在-Windows-上安装-Filebeat"><a href="#在-Windows-上安装-Filebeat" class="headerlink" title="在 Windows 上安装 Filebeat"></a>在 Windows 上安装 Filebeat</h3><p>如果想在 Windows 平台使用 Filebeat，有两种安装方法。</p>
<p>一是通过下载 msi 文件直接安装（<a href="https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.6.2-windows-x86_64.msi">filebeat-8.6.2-windows-x86_64.msi</a>），不过需要注意的是当前方法仍是 beta 版本。</p>
<p>二是通过下载 Filebeat Windows zip 文件进行安装（<a href="https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.6.2-windows-x86_64.zip">filebeat-8.6.2-windows-x86_64.zip</a>）。将下载后的文件解压到目录 C:\Program Files，将文件夹 filebeat-<version>-windows 重命名为 Filebeat，以管理员身份打开PowerShell提示（右击PowerShell图标，选择以管理员身份运行）。从PowerShell提示符下，运行以下命令，将Filebeat安装为一个Windows服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS &gt; <span class="built_in">cd</span> <span class="string">&#x27;C:\Program Files\Filebeat&#x27;</span></span><br><span class="line">PS C:\Program Files\Filebeat&gt; .\install-service-filebeat.ps1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：如果你的系统禁用了脚本的执行，你需要为当前会话设置执行策略以允许脚本的运行。比如说 PowerShell.exe -ExecutionPolicy UnRestricted -File .\install-service-filebeat.ps1。</p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Filebeat</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Logstash 的 geoip 插件解析 IP 地址的归属地</title>
    <url>/2023/04/11/logstash-filter-geoip-demo/</url>
    <content><![CDATA[<p>本文演示如何使用 geoip 插件解析 IP 地址的归属地。</p>
<hr>
<p>1、启动 Logstash</p>
<p>新建配置文件 <em>geoip-demo.conf</em>，并输入以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">input &#123; </span><br><span class="line">    stdin &#123; </span><br><span class="line">        codec =&gt; &#x27;json&#x27; </span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line">filter &#123; </span><br><span class="line">    geoip &#123; </span><br><span class="line">        source =&gt; &#x27;[ip]&#x27;  </span><br><span class="line">        target =&gt; source</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line">output&#123; </span><br><span class="line">    stdout&#123;&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用 <code>-f</code> 参数指定到配置文件 <em>geoip-demo.conf</em> 启动 Logstash：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/logstash/bin/logstash -f /mnt/d/src/yaybyc/geoip-demo.conf</span><br></pre></td></tr></table></figure>
<p>如果只是为了测试，也可以不创建配置文件，直接使用 <code>-e</code> 参数指定配置的方式启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/logstash/bin/logstash -e <span class="string">&quot;input &#123; stdin &#123; codec =&gt; &#x27;json&#x27; &#125;&#125; filter &#123; geoip &#123; source =&gt; &#x27;[ip]&#x27;  target =&gt; source&#125;&#125; output&#123; stdout&#123;&#125; &#125;&quot;</span></span><br></pre></td></tr></table></figure>
<p>2、输入以下 IP 地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;ip&quot;</span>:<span class="string">&quot;222.209.9.72&quot;</span>&#125;</span><br></pre></td></tr></table></figure>
<p>3、解析结果如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2023-04-11T00:11:22.478684100Z,</span><br><span class="line">        <span class="string">&quot;source&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;geo&quot;</span> =&gt; &#123;</span><br><span class="line">                    <span class="string">&quot;timezone&quot;</span> =&gt; <span class="string">&quot;Asia/Shanghai&quot;</span>,</span><br><span class="line">             <span class="string">&quot;region_iso_code&quot;</span> =&gt; <span class="string">&quot;CN-SC&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;region_name&quot;</span> =&gt; <span class="string">&quot;Sichuan&quot;</span>,</span><br><span class="line">              <span class="string">&quot;continent_code&quot;</span> =&gt; <span class="string">&quot;AS&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;city_name&quot;</span> =&gt; <span class="string">&quot;Chengdu&quot;</span>,</span><br><span class="line">                <span class="string">&quot;country_name&quot;</span> =&gt; <span class="string">&quot;China&quot;</span>,</span><br><span class="line">            <span class="string">&quot;country_iso_code&quot;</span> =&gt; <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;location&quot;</span> =&gt; &#123;</span><br><span class="line">                <span class="string">&quot;lat&quot;</span> =&gt; 30.6498,</span><br><span class="line">                <span class="string">&quot;lon&quot;</span> =&gt; 104.0555</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">         <span class="string">&quot;ip&quot;</span> =&gt; <span class="string">&quot;222.209.9.72&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">         <span class="string">&quot;event&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;original&quot;</span> =&gt; <span class="string">&quot;&#123;\&quot;ip\&quot;:\&quot;222.209.9.72\&quot;&#125;\n&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;beenee9N&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ip&quot;</span> =&gt; <span class="string">&quot;222.209.9.72&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>geo</code> 各字段说明：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>字段</th>
<th>说明</th>
<th>示例值</th>
</tr>
</thead>
<tbody>
<tr>
<td>country_name</td>
<td>国家名称</td>
<td>China</td>
</tr>
<tr>
<td>region_name</td>
<td>地域名称，省份</td>
<td>Sichuan</td>
</tr>
<tr>
<td>city_name</td>
<td>城市</td>
<td>Chengdu</td>
</tr>
<tr>
<td>timezone</td>
<td>时区</td>
<td>Asia/Shanghai</td>
</tr>
<tr>
<td>continent_code</td>
<td>大洲代码</td>
<td>AS</td>
</tr>
<tr>
<td>country_iso_code</td>
<td>ISO国家代码</td>
<td>CN</td>
</tr>
<tr>
<td>region_iso_code</td>
<td>ISO地域代码</td>
<td>CN-SC</td>
</tr>
<tr>
<td>location</td>
<td>位置，经纬度坐标</td>
<td></td>
</tr>
<tr>
<td>　lat</td>
<td>纬度</td>
<td>30.6498</td>
</tr>
<tr>
<td>　lon</td>
<td>经度</td>
<td>104.0555</td>
</tr>
</tbody>
</table>
</div>
<p><code>continent_code</code> 定义：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>大洲代码</th>
<th>大洲名称（英文）</th>
<th>大洲名称（中文）</th>
</tr>
</thead>
<tbody>
<tr>
<td>NA</td>
<td>North America</td>
<td>北美洲</td>
</tr>
<tr>
<td>SA</td>
<td>South America</td>
<td>南美洲</td>
</tr>
<tr>
<td>AS</td>
<td>Asia</td>
<td>亚洲</td>
</tr>
<tr>
<td>OC</td>
<td>Oceania</td>
<td>大洋洲</td>
</tr>
<tr>
<td>AF</td>
<td>Africa</td>
<td>非洲</td>
</tr>
<tr>
<td>EU</td>
<td>Europe</td>
<td>欧洲</td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>TIPS：<strong>五大洲</strong>（Five continents）指地球陆地分成的五大版块，即亚洲（Asia）、欧洲（Europe）、非洲（Africa）、美洲（America）和大洋洲（Oceania）。地理学又将美洲分为北美洲和南美洲，南极洲无人居住，故也可称为<strong>七大洲</strong>。</p>
<p>奥运五环的五环分别代表五大洲。五大洲中面积最大的是亚洲，第二大的是美洲，第三大的是非洲，第四大的是欧洲，最小的是大洋洲。<br/>亚洲代表性国家：中国，日本，韩国，泰国，新加坡。<br/>欧洲代表性国家：英国，法国，德国，希腊，意大利。<br/>美洲代表性国家：美国，加拿大，巴西，阿根廷。<br/>非洲代表性国家：埃及，南非，利比亚，肯尼亚。<br/>大洋洲代表性国家：澳大利亚，新西兰。<br/><br/>参考来源：<a href="https://baike.baidu.com/item/%E4%BA%94%E5%A4%A7%E6%B4%B2/19920227">https://baike.baidu.com/item/五大洲/19920227</a></p>
</blockquote>
<p>需要注意的是，如果使用默认的 geoip 插件来解析 IP 地址的归属地，会有以下两个问题：</p>
<ol>
<li>解析出来的归属地名称是英文的；</li>
<li>国内很多 IP 地址解析不出来对应的归属地，或归属地的结果并不准确。</li>
</ol>
<p>例如，IP 地址 60.253.155.38 没有找到所属的省、市（未返回 <code>region_name</code>、<code>city_name</code>、<code>region_iso_code</code> 字段）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;ip&quot;</span>:<span class="string">&quot;60.253.155.38&quot;</span>&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2023-04-11T00:09:08.647833700Z,</span><br><span class="line">        <span class="string">&quot;source&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;geo&quot;</span> =&gt; &#123;</span><br><span class="line">                <span class="string">&quot;country_name&quot;</span> =&gt; <span class="string">&quot;China&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;timezone&quot;</span> =&gt; <span class="string">&quot;Asia/Shanghai&quot;</span>,</span><br><span class="line">            <span class="string">&quot;country_iso_code&quot;</span> =&gt; <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">              <span class="string">&quot;continent_code&quot;</span> =&gt; <span class="string">&quot;AS&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;location&quot;</span> =&gt; &#123;</span><br><span class="line">                <span class="string">&quot;lat&quot;</span> =&gt; 34.7732,</span><br><span class="line">                <span class="string">&quot;lon&quot;</span> =&gt; 113.722</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">         <span class="string">&quot;ip&quot;</span> =&gt; <span class="string">&quot;60.253.155.38&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">         <span class="string">&quot;event&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;original&quot;</span> =&gt; <span class="string">&quot;&#123;\&quot;ip\&quot;:\&quot;60.253.155.38\&quot;&#125;\n&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;airoo1Oi&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ip&quot;</span> =&gt; <span class="string">&quot;60.253.155.38&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>IP 地址 39.144.27.121 解析出来的归属地为中国-河南-周口，实际上通过 <a href="https://www.cz88.net/">https://www.cz88.net/</a>、<a href="https://www.ipplus360.com/">https://www.ipplus360.com/</a> 或 <a href="https://ip138.com/">https://ip138.com/</a> 查询出来的结果是中国-河南-郑州。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;ip&quot;</span>:<span class="string">&quot;39.144.27.121&quot;</span>&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2023-04-11T00:13:47.729754800Z,</span><br><span class="line">        <span class="string">&quot;source&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;geo&quot;</span> =&gt; &#123;</span><br><span class="line">                    <span class="string">&quot;timezone&quot;</span> =&gt; <span class="string">&quot;Asia/Shanghai&quot;</span>,</span><br><span class="line">             <span class="string">&quot;region_iso_code&quot;</span> =&gt; <span class="string">&quot;CN-HA&quot;</span>,</span><br><span class="line">                 <span class="string">&quot;region_name&quot;</span> =&gt; <span class="string">&quot;Henan&quot;</span>,</span><br><span class="line">              <span class="string">&quot;continent_code&quot;</span> =&gt; <span class="string">&quot;AS&quot;</span>,</span><br><span class="line">                   <span class="string">&quot;city_name&quot;</span> =&gt; <span class="string">&quot;Zhoukou&quot;</span>,</span><br><span class="line">                <span class="string">&quot;country_name&quot;</span> =&gt; <span class="string">&quot;China&quot;</span>,</span><br><span class="line">            <span class="string">&quot;country_iso_code&quot;</span> =&gt; <span class="string">&quot;CN&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;location&quot;</span> =&gt; &#123;</span><br><span class="line">                <span class="string">&quot;lat&quot;</span> =&gt; 33.63,</span><br><span class="line">                <span class="string">&quot;lon&quot;</span> =&gt; 114.6353</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">         <span class="string">&quot;ip&quot;</span> =&gt; <span class="string">&quot;39.144.27.121&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">         <span class="string">&quot;event&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;original&quot;</span> =&gt; <span class="string">&quot;&#123;\&quot;ip\&quot;:\&quot;39.144.27.121\&quot;&#125;\n&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;airoo1Oi&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ip&quot;</span> =&gt; <span class="string">&quot;39.144.27.121&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>ELK</tag>
        <tag>Logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>我收到的最好的职业建议</title>
    <url>/2023/09/04/the-best-career-advice-ive-received/</url>
    <content><![CDATA[<p>本文翻译自 Nicholas C. Zakas 的原创英文文章<a href="https://humanwhocodes.com/blog/2013/10/15/the-best-career-advice-ive-received/">《The best career advice I’ve received》</a>，希望能够以中文的形式把这些观点传播开来，在这里对原作者表示致敬。</p>
<blockquote>
<p>Nicholas C. Zakas 是前端大牛工程师，全世界最著名的 JavaScript 程序员之一。目前在 Box 公司任职，之前是在雅虎将近工作 5 年。在雅虎期间，他是雅虎首页的前端技术主管，并且是 YUI 库的贡献者。 Nicholas 编写的技术书有：《Maintainable JavaScript | 编写可维护的 JavaScript》、《Professional JavaScript for Web Developers | JavaScript高级程序设计》、《High Performance JavaScript | 高性能JavaScript》、《Professional Ajax》。</p>
</blockquote>
<p><img src="/image/2023/me-150x150.0969500a-1.jpg" alt="me-150x150.0969500a-1.jpg"></p>
<hr>
<p>我最近和一位同事有过一个有趣的讨论。我们回顾了自己的工作经历，以及我们可以说是多姿多彩的个性，如何对我们的长期发展产生负面影响。说实话，我从大学毕业时有点混蛋（有人可能会说我现在还是有点混蛋，但这不是重点）。我傲慢自大，尖酸刻薄，总之是个不苟言笑的人。我认为我什么都知道，并为此感到相当自豪。</p>
<p>我习惯于告诉经验丰富的工程师他们的做法是错误的，尽管大多数时候我都是对的，但我的个性并没有让我的做法奏效。在一次特别令人难忘的谈话中，一位资深工程师停下来，用原话说：“如果你再不闭嘴，我就把你打得屁滚尿流”。我一笑了之，因为我知道他不敢，多年后我才意识到这句话的意义：这其实是他想做的事。</p>
<p>从那时起，我成长了很多，学会了注意自己的言行，并学会了尊重他人，无论他们有什么特征。在职业环境中，我会克制自己的嘲讽；和好朋友在一起时，我就会让自己的嘲讽尽情发挥。这种自制力以及其他许多宝贵的经验，并不是我自己主动形成的，而是在我一路走来的良师益友的悉心指导下形成的。如果没有他们，谁知道我的人际关系会不会让我的事业短路。</p>
<p>事实上，在我的职业生涯中，我得到了很多人的帮助。一路走来，我的经理们将我这个性格粗犷的人塑造成了我引以为豪的人。不仅如此，在他们的影响下，我不仅成为了一名优秀的程序员，还成为了一名优秀的队友和一个好人。这些人对我的人生影响如此之大，以至于我经常向我现在指导的同事讲述他们的建议。</p>
<p>我还发现他们的建议放之四海而皆准，因此我想分享一下他们告诉我的那些对我的成长有帮助的事情。当然，其中有些是转述的，因为我对准确语句的记忆不是很好，但我相信我已经正确地抓住了重要部分。</p>
<h2 id="不要做一个快餐厨师"><a href="#不要做一个快餐厨师" class="headerlink" title="不要做一个快餐厨师"></a>不要做一个快餐厨师</h2><p>我的第一份工作只持续了 8 个月，因为公司倒闭了。当我和经理谈论下一步该怎么办时，他给了我这样的建议：</p>
<blockquote>
<p>尼古拉斯，你的价值不仅仅在于你的代码。无论你的下一份工作是什么，都要确保自己不要成为一个快餐厨师。不要接受一份只让你做什么和怎么做的工作。你需要找一份能够欣赏你对产品的见解以及你的开发能力的工作。</p>
</blockquote>
<p>在我的职业生涯中，我一直牢记这一点。仅仅成为一名执行者是不够的——你需要参与到实施之前的过程中。优秀的工程师不仅服从命令，还会向产品负责人提供反馈意见，并与他们合作以使产品变得更好。幸运的是，我明智地选择了自己的工作，从未遇到过人们不尊重或不重视我的见解的情况。</p>
<h2 id="自我推销"><a href="#自我推销" class="headerlink" title="自我推销"></a>自我推销</h2><p>有一天，我在雅虎的第二任经理把我拉到一边，给了我一些建议。他一直在关注我的工作，感觉我有点躲躲藏藏的：</p>
<blockquote>
<p>你的工作做得很好。我是说真的非常好。我喜欢你的代码风格，而且它很少出错。问题是其他人看不到这一点。为了让你获得应有的认可，你需要让其他人知道你的工作。你需要做一些自我推销来引起注意。</p>
</blockquote>
<p>我花了一点时间来消化他说的话，但我最终明白了。如果你做得很好，但没有人知道你做得很好，那么这对你并没有什么帮助。你的经理可以支持你，但不能代替你证明自己。组织内部的人需要了解你的价值，而做到这一点的最好办法就是告诉别人你做了什么。</p>
<p>这是我现在给很多同事的建议。自我推销并不意味着“看看我，我真棒”。而是意味着在你实现重大里程碑时，或者学到新知识时，要让人们知道。这意味着向人们展示你引以为豪的工作成果。这意味着庆祝自己和他人的成就。这意味着要在组织内部引人注目。那些安静地坐在角落里敲代码的工程师总是有点神秘——不要学他们。发送一封简单电子邮件说：“嘿，我完成了新的电子邮件布局。让我知道你的想法”就能起到很大的作用。</p>
<h2 id="以人为本"><a href="#以人为本" class="headerlink" title="以人为本"></a>以人为本</h2><p>在我职业生涯的早期，我非常注重头衔。我总是想知道我必须做些什么才能得到晋升。在和雅虎首页新的经理进行第一次一对一谈话中，我问他我要怎样才能升职。他的话言犹在耳：</p>
<blockquote>
<p>到了一定程度，人们就不会再以技术知识来评判你，而是开始以你与人交往的方式来评判你。</p>
</blockquote>
<p>从那时起，我对软件工程行业有了更深刻的认识。他说得一点没错。当时，没有人质疑我的技术能力。众所周知，我写出的代码质量上乘，很少出现错误。我缺乏的是领导能力。</p>
<p>从那以后，我目睹了无数工程师在职业生涯中陷入困境。聪明的人，优秀的代码，但由于无法与他人有效合作，他们只能停留在原地。每当有人在软件工程职业生涯中感到困顿时，我都会重提这条建议，它总是一针见血。</p>
<h2 id="这些都不重要"><a href="#这些都不重要" class="headerlink" title="这些都不重要"></a>这些都不重要</h2><p>我在雅虎有一个时期非常沮丧。也许用“沮丧”这个词并不恰当，更像是“愤怒”。我怒火中烧，不断与人争吵。事情总是出错，我不喜欢这样。在一个特别艰难的日子里，我问我的一位导师，在这么多事情出错的时候，他是如何保持冷静的。他的回答是：</p>
<blockquote>
<p>这很简单。你看，这些都不重要。一些蹩脚的代码被提交了，网站瘫痪了。那又怎样？工作不可能是你生活的全部。这些都不是真正的问题，只是工作上的问题。真正重要的是工作之外的生活。我下班回到家，妻子正在等我。这多美好啊。</p>
</blockquote>
<p>我从马萨诸塞州搬到加利福尼亚州，很难交到朋友。工作就是我的生活，是它让我保持清醒，所以当工作不顺利时，就意味着我的生活也不顺利。这次谈话让我意识到，我的生活中必须要有一些其他的东西，一些我可以回去忘记工作中的烦恼的东西。</p>
<p>他是对的，一旦我转变了心态，把工作中恼人的事情重新归类为“工作上的事情”，我就能想得更清楚了。在工作中，我能够冷静下来，与人的交流也更加愉快。</p>
<h2 id="权力，你的方式"><a href="#权力，你的方式" class="headerlink" title="权力，你的方式"></a>权力，你的方式</h2><p>当我第一次晋升为雅虎的首席工程师时，我和我的主管坐在一起，希望更好地了解这个角色的内涵。我知道我必须更像一个领导者，但我很难做到有权威。我向他寻求帮助。他是这么说的</p>
<blockquote>
<p>我无法告诉你如何成为权威，这是需要你自己去摸索的事情。不同的人有不同的风格。你需要做的是找到一种你能接受的、让你感到舒服的风格。我无法告诉你那种风格是什么，但你确实需要为这个职位找到适合自己的风格。</p>
</blockquote>
<p>那一年，我花了很多时间观察有权势的人以及他们如何与他人交往。我注意到他们如何走路、如何说话、如何处理问题。我尝试了不同的风格，最后终于找到了一种适合我的风格。我的风格是独一无二的，任何人在学习担任领导职务时都必须经历同样的成长痛苦。我的优势在于，我的导师提前向我介绍了这一过程。</p>
<h2 id="从“怎么做？”到“做什么？”"><a href="#从“怎么做？”到“做什么？”" class="headerlink" title="从“怎么做？”到“做什么？”"></a>从“怎么做？”到“做什么？”</h2><p>在与雅虎的经理交谈时，我问他对我的新职位有什么期望。他回答说：</p>
<blockquote>
<p>在你的职业生涯中，你已经回答了“怎么做？”这个问题。也就是说，我们告诉你需要做什么，你自己想办法去做。但现在，你需要回答“做什么？”这个问题。我希望你们来告诉我需要做什么。</p>
</blockquote>
<p>这是我看到很多工程师容易跌倒的地方，如果没有这条建议，我也会碰到同样的问题。从“怎么做？”转换到“做什么？”是非常困难的，需要时间来培养。此外，这也需要一定的成熟度，才能承担起根据自己的想法来决定工作重点的责任。毕竟，如果你可以把时间花在任何你想做的事情上，那么你也将完全对你的产出负责。</p>
<p>在 Box，我们将这个概念称为“开环运行”，意思是你只需要很少的监督就可以自己做好工作，同时继续对工程组织和整个公司产生重大的积极影响。这是许多工程师无法实现跨越的一步，我至今还在给所有想获得提升的人提供这个建议。</p>
<h2 id="表现得像你是负责人"><a href="#表现得像你是负责人" class="headerlink" title="表现得像你是负责人"></a>表现得像你是负责人</h2><p>我刚刚参加了一个会议，在整个会议过程中我都没有说话。在与我的主管进行一对一谈话时，我提到我刚刚参加了一个会议，我不知道自己为什么要参加，也没有什么可以贡献的。他说：</p>
<blockquote>
<p>再也不要这样做了。如果你参加会议，那是因为你要参与进来。如果你不清楚自己为什么在那里，就停下来问问。如果不需要你，就离开。你身居领导岗位，就要有领导的样子。不要悄无声息地走进房间。只要表现出你是负责人的样子，人们就会相信。</p>
</blockquote>
<h2 id="让他们赢"><a href="#让他们赢" class="headerlink" title="让他们赢"></a>让他们赢</h2><p>我曾经历过一段团队中争吵不断的特殊时期。我为自己能以权威结束这些争论而自豪。我有一种“我的决定就是最终决定”的心态，我的经理注意到了这一点，并给了我这样一个建议：</p>
<blockquote>
<p>我注意到你们之间经常发生争论，而你也总是努力争取赢得每个争论。我知道大多数时候你的立场是正确的，但偶尔也应该让步让别人赢一些。选择那些对你真正重要的事情来坚持，其他的则让它们过去吧。并不需要赢得每一个争论。</p>
</blockquote>
<p>这起初是我比较抵触的一个建议。我几乎每次都是正确的，为什么要让别人赢呢？然而，随着我越来越相信他的直觉，我还是试了一下。结果是：争论变少了。人们不再觉得他们非得赢我不可，反过来，我也变得更善于辨别那些我其实并不太在乎的事。在重要的问题上，我坚持自己的立场，其他不太重要的事就让对方说了算。所有对话的强度都降低了很多。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>回顾大学毕业时的我，我的职业生涯可能会有截然不同的结局。在别人眼中，我是一个怨天尤人的人，一个聪明但难以相处的人，人们不得不和我打交道。要不是一路上有良师益友，要不是在职业生涯早期经历了一些令人惭愧的失败，我的人际交往能力（或缺乏人际交往能力）很可能会让我一败涂地。如今，我经常向比我更有经验的人请教。我可能不会再犯明显的大错误，但我也不想等到错误发生时才去寻求我信任的人的经验见解。</p>
<p>我在雅虎工作的近五年时间，是我职业生涯中转变最大的五年。我可以大规模地解决一些有趣的问题，更重要的是，我有幸在公司里遇到了一系列出色的经理和其他导师。无论是在工作中还是在外面的“现实生活”中，我都将这些对话归功于他们，是他们把我培养成了今天让我引以为豪的人。</p>
<p>如果我能给你留下一条压倒一切的职业建议，那就是：在你的工作中找出一个在某些方面（技术、组织等方面）比你聪明的人，并把自己与他们联系在一起。看看能否定期与他们共进午餐或喝咖啡，从他们的大脑中汲取大量知识。这样做可能会大大改善你的职业生涯，甚至你的生活。</p>
<p>原文链接：<br><a href="https://humanwhocodes.com/blog/2013/10/15/the-best-career-advice-ive-received/">https://humanwhocodes.com/blog/2013/10/15/the-best-career-advice-ive-received/</a></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>如何查看通过 systemctl 命令启动的服务的日志</title>
    <url>/2023/04/20/systemctl-service-log/</url>
    <content><![CDATA[<p><code>systemctl</code> 是 Linux 系统服务管理工具，它可以用来启动、停止、重启、启用或禁用系统服务。当我们启动一个服务时，<code>systemctl</code> 会记录服务的启动日志，我们可以通过查看这些日志来排查服务启动时的问题。</p>
<p>查看 <code>systemctl</code> 服务日志的步骤如下：</p>
<ol>
<li><p>找到服务的完整名称。系统服务的名称通常以 .service 结尾，例如 httpd.service、mysql.service 等。</p>
</li>
<li><p>使用 <code>journalctl</code> 命令查看服务的日志。命令格式为:</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">journalctl -u &lt;服务名称&gt;</span><br></pre></td></tr></table></figure>
<p>将 &lt;服务名称&gt; 替换为服务的完整名称。例如，要查看 httpd 服务的日志，运行:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">journalctl -u httpd.service</span><br></pre></td></tr></table></figure>
<ol>
<li><code>journalctl</code> 会输出服务的启动日志、运行日志和停止日志。</li>
</ol>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>探索流式应用的性能指标：延迟和吞吐量解析</title>
    <url>/2023/09/02/apache-flink-performance-high-throughput-low-latency/</url>
    <content><![CDATA[<p>批处理应用和流式应用在性能需求上有所区别。对于批处理应用而言，我们通常关心作业的总执行时间，即从处理引擎读取输入、执行计算、写回结果所需的时间。但在数据流处理中，由于流式应用会持续执行且输入可能是无限的，所以没有总执行时间的概念。相反，流式应用需要尽可能快地计算结果，并能处理高速的事件接入。因此，我们用延迟和吞吐来表示这两方面的性能需求。</p>
<h2 id="延迟"><a href="#延迟" class="headerlink" title="延迟"></a>延迟</h2><p>延迟是指处理一个事件所需的时间，从接收事件到在输出中观察到事件处理效果的时间间隔。为了更直观地理解延迟，我们可以以去咖啡店喝咖啡为例。当你进门时，可能已经有其他顾客在里面了，需要排队等候。收银员收到你的付款后，将订单交给咖啡师准备饮品。饮品制作完成后，咖啡师会叫你的名字，你才能从吧台取走咖啡。在这个过程中，你在店内买咖啡的时间就是服务延迟，即从进门到喝到第一口咖啡的时间。</p>
<p>在流处理中，我们用时间片（如毫秒）来测量延迟。根据应用的不同，我们可能关注平均延迟、最大延迟或特定百分位数的延迟。例如，平均延迟为 10 毫秒表示平均每条数据在 10 毫秒内处理完毕，而第 95 百分位延迟在 10 毫秒内处理完毕意味着 95% 的事件都在 10 毫秒内处理。平均延迟可能掩盖了延迟分布的真实情况，使问题难以发现。举个例子，如果咖啡师在给你准备卡布奇诺前用光了牛奶，你就必须等待他再去补充。虽然这可能让你不太高兴，但对大多数顾客来说并不会有太大影响。</p>
<p>对于许多流式应用（如诈骗识别、系统告警、网络监测等）来说，保证低延迟至关重要。低延迟是流处理的一个关键特性，它衍生出了所谓的实时应用。现代流处理引擎如 Apache Flink 可以提供低至几毫秒的延迟。相比之下，传统批处理的延迟可能从几分钟到几小时不等。在批处理中，需要先批量收集事件，然后才能处理它们，因此处理延迟受制于每个批次中最迟事件的时间，并受到批次大小的影响。真正的流处理不会引入人为延迟等因素，只有这样才能将延迟降至极低，每个事件即时进入系统进行处理，延迟更加真实地反映了实际处理工作。</p>
<p>吞吐是衡量系统处理能力（处理速率）的指标，它告诉我们系统每单位时间可以处理多少事件。回到咖啡店的例子，如果营业时间是早上 10 点到晚上 10 点，一天服务了 600 名顾客，那么平均吞吐量就是 50人/小时。通常情况下，我们希望延迟尽可能低，而吞吐量则尽可能高。</p>
<h2 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h2><p>吞吐量是计算每个单位时间的事件或操作数。但要注意，处理速率取决于数据到达速率，因此吞吐量低不一定意味着性能差。在流处理系统中，我们通常希望系统有能力处理以最大期望速率到达的事件，也就是关注峰值吞吐量，即系统负载时的性能上限。为了更好地理解峰值吞吐量的概念，我们假设一个流处理应用没有接收任何数据时，也不占用系统资源。当第一个事件进入时，系统会立即以尽可能低的延迟进行处理，就像早晨咖啡店开门后的第一位顾客立即享受服务一样。理想情况下，我们希望延迟保持平稳，不受事件到达速率的影响。但现实中，一旦事件到达速率过高，使系统没有空闲资源，系统就会开始缓冲事件。以咖啡店为例，你很可能在午餐时间看到这种情况：突然涌入大量顾客，导致排队点单。此时系统的吞吐量已经达到极限，提高事件到达速率只会使延迟更糟。如果系统持续以过高速率接收数据，缓冲区可能会耗尽，甚至造成数据丢失。这种情况通常被称为背压（backpressure），我们有多种策略来处理它。</p>
<p>延迟和吞吐量并不是相互独立的指标。如果事件在数据处理管道中传输时间过长，很难确保高吞吐量；同样，如果系统性能不足，事件容易积压缓冲区，需要一段时间才能处理。我们再通过咖啡店的例子来解释延迟和吞吐量如何相互影响。首先，需要明确的是，在无负载的情况下，延迟会达到最优。也就是说，如果咖啡店只有你一个顾客，你会得到最快的服务。然而，在高峰时段，顾客必须排队等候，这就增加了延迟。另一个影响延迟和吞吐量的因素是处理单个事件的时间，即每位顾客在店里花费的时间。假设现在是圣诞假期，咖啡师要在每杯咖啡上画圣诞老人，这会延长制作单杯咖啡的时间，导致每位顾客在店里的时间增加，整体吞吐量会降低。</p>
<p>那么，能否以某种方式同时获得低延迟和高吞吐量呢？或许这听起来不切实际，但在咖啡店的例子中，为了降低延迟，店主可以雇佣更熟练的咖啡师，他们会更快地制作咖啡。这样在高峰时段，店铺可以服务更多的顾客，自然吞吐量也会提高。另一种方法是雇佣更多的咖啡师，利用并行化解决问题。关键在于降低延迟实际上可以提高吞吐量。事实上，在流处理管道中使用并行化就是这种效果。通过并行处理多个数据流，可以降低延迟同时处理更多的事件。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本文主要讨论了批处理应用和流式应用在性能需求上的区别，以及延迟和吞吐量在流处理中的重要性。延迟表示处理一个事件所需的时间，而吞吐量则是系统每单位时间内能处理的事件数量。对于流处理应用来说，低延迟是至关重要的特性，能够实现实时处理。同时，高吞吐量也是流处理系统的目标，代表着系统的处理能力。延迟和吞吐量是相互影响的，通过降低延迟可以提高吞吐量，而并行化是实现这一目标的关键方法。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析的知识体系</title>
    <url>/2023/09/05/data-analysis-knowledge-map/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>数据分析作为一种将原始数据转化为有价值信息的过程，在当今数据驱动的社会中变得越来越重要。本文将从数据采集、数据挖掘和数据可视化三个环节，介绍数据分析所涉及的主要知识点，以帮助读者全面了解数据分析的知识体系。</p>
<h2 id="一、数据采集"><a href="#一、数据采集" class="headerlink" title="一、数据采集"></a>一、数据采集</h2><p>数据采集是数据分析的第一步，决定了后续分析的质量和准确性。在数据采集阶段，需要关注以下知识点：</p>
<ol>
<li>数据来源：了解数据的来源渠道，如数据库、文件、传感器等，以便进行相应的数据获取方法选择。 </li>
<li>数据获取：选择适当的数据获取方法，如 API 接口、网页爬虫等，确保能够高效、准确地获取到所需数据。 学会使用第三方工具如八爪鱼、火车采集器、搜集客采集数据，最好能编写 Python（Scrapy、Selenium、PhantomJS、lxml）爬虫。 </li>
<li>数据存储：选择合适的数据存储方式，如关系型数据库、非关系型数据库、云存储、分布式文件系统等，以方便后续的数据挖掘和分析。 </li>
</ol>
<h2 id="二、数据挖掘"><a href="#二、数据挖掘" class="headerlink" title="二、数据挖掘"></a>二、数据挖掘</h2><p>数据挖掘是利用统计学和机器学习算法从大量数据中提取模式、关系和规律的过程。该过程包含以下六个步骤：商业理解、数据理解、数据准备、模型建立、模型评估和上线发布。</p>
<p>商业理解是首要步骤，我们需要从商业角度理解项目需求，并据此定义数据挖掘的目标。数据挖掘并非终极目的，而是为了更好地帮助业务发展。</p>
<p>数据理解阶段涉及收集部分数据进行探索性分析，包括数据描述和数据质量验证，以初步了解数据的特点。</p>
<p>数据准备是为数据挖掘做好前期准备工作，包括数据收集、清洗和集成等操作，确保数据的质量和一致性。</p>
<p>模型建立阶段选择不同的数据挖掘模型，训练和优化模型，以便得到更好的结果。</p>
<p>模型评估阶段对模型进行评价，检查每个构建模型的步骤，并确认模型是否实现了预定的商业目标。</p>
<p>上线发布阶段将数据挖掘的结果转化为可使用的知识，并以适当的形式呈现给用户，可能是报告形式或者是系统的形式。并在数据挖掘成果投入使用后（数据挖掘结果为日常运营的一部分），持续监控和维护。</p>
<p>在数据挖掘阶段，需要掌握以下知识点：</p>
<ol>
<li>数据预处理：对数据进行清洗、变换、标准化等预处理操作，包括处理缺失值、异常值、重复值等问题，通过填充、剔除或替换等手段，确保数据的准确性和完整性，以提高数据质量和模型效果。 </li>
<li>特征选择：从众多特征中选取最相关的特征，降低维度并提高模型的准确性。 </li>
<li>模型建立：选择适当的算法，用于模型的构建和训练。 常用的算法如下：<ol>
<li><em>分类算法：C4.5，朴素贝叶斯（Naive Bayes），SVM，KNN，Adaboost，CART。</em></li>
<li><em>聚类算法：K-Means，EM。</em></li>
<li><em>关联分析：Apriori。</em></li>
<li><em>连接分析：PageRank。</em></li>
</ol>
</li>
<li>模型评估：通过交叉验证、混淆矩阵等方法评估模型的性能和准确度，优化参数以提高模型的表现。 </li>
</ol>
<p>如果想更深入地理解数据挖掘方法背后的原理，了解几门数学知识是非常必要的，包括<strong>概率论与数理统计、线性代数、图论以及最优化方法</strong>等。这些数学知识构成了数据挖掘方法的理论基础，可以帮助我们深刻理解各种数据挖掘算法的工作原理及其适用条件和局限性，并有助于设计更优化的数据挖掘方案。充分掌握这些关键数学知识，将大大提高我们运用数据挖掘技术解决实际问题的能力。</p>
<h2 id="三、数据可视化"><a href="#三、数据可视化" class="headerlink" title="三、数据可视化"></a>三、数据可视化</h2><p>数据可视化是将分析结果以图表、图形等形式直观呈现，以便更好地理解和传达数据的含义。在数据可视化阶段，需要了解以下知识点：</p>
<ol>
<li>可视化工具：掌握常见的数据可视化工具，如 Tableau、Power BI、DataV、Data GIF Maker、微图等，用于创建各种图表和图形。</li>
<li>Python 可视化： Matplotlib、Seaborn。</li>
<li>图表类型：掌握不同场景下适用的图表类型，如折线图、柱状图、散点图、热力图等，以展示数据的关系和趋势。 </li>
<li>数据故事化：通过将数据以故事的形式呈现，突出数据的关键信息和趋势，提升数据的可理解性和影响力。 </li>
<li>可视化设计原则：了解数据可视化的设计原则，如简洁性、一致性、清晰性等，以创建美观、易懂的可视化图表。 </li>
</ol>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>综上所述，数据分析的完整流程包括数据采集、数据挖掘和数据可视化三个环节，每个环节都有其关键的知识点需要掌握。通过合理的数据采集、有效的数据挖掘和直观的数据可视化，我们可以从海量数据中挖掘出有价值的信息和见解，为决策和创新提供有力支持。随着数据分析技术的不断发展和应用，数据分析将在各个领域发挥越来越重要的作用。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>查看filebeat版本</title>
    <url>/2023/01/11/how-to-check-filebeat-version/</url>
    <content><![CDATA[<p>对于 Linux 服务器上已安装好的 filebeat，该如何查看 filebeat 版本？</p>
<hr>
<p>执行命令 <code>filebeat version</code> 即可输出 filebeat 的版本信息。在下面的示例中，filebeat 的版本号为 7.13.4。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ filebeat version</span><br><span class="line">filebeat version 7.13.4 (amd64), libbeat 7.13.4 [1907c246c8b0d23ae4027699c44bf3fbef57f4a4 built 2021-07-14 18:42:41 +0000 UTC] </span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程 Q&amp;A</category>
      </categories>
      <tags>
        <tag>Filebeat</tag>
      </tags>
  </entry>
  <entry>
    <title>如何修复PyCharm中的“Shadows name from outer scope”警告</title>
    <url>/2023/06/07/fix-shadows-name-from-outer-scope-in-pycharm/</url>
    <content><![CDATA[<p>PyCharm 是一款由 JetBrains 开发的受欢迎的 Python 集成开发环境（IDE）。作为一款现代化的 IDE，PyCharm 几乎支持所有你能想到的功能，例如代码调试、语法高亮、项目管理、智能提示、自动补全、单元测试以及版本控制等。除此之外，PyCharm 还提供 Django 的高级 Web 开发工具，并且支持 Anaconda 和 IronPython 进行数据科学开发。</p>
<p>然而，在使用 PyCharm 工作时，你可能会遇到一些警告信息，其中部分不是 Python 本身的错误信息。“Shadows name from outer scope”就是其中最常见的警告信息之一，这会给新用户带来一定的困扰。本文将解释为什么会出现该警告，以及你可以采取什么措施来避免出现该警告。</p>
<h2 id="为什么会出现“Shadows-name-from-outer-scope”警告"><a href="#为什么会出现“Shadows-name-from-outer-scope”警告" class="headerlink" title="为什么会出现“Shadows name from outer scope”警告"></a><strong><strong>为什么会出现</strong></strong>“<strong><strong>Shadows name from outer scope</strong></strong>”警告</h2><p>让我们看下面的代码片段作为示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">access_token = <span class="string">&quot;HCbhQHCuG05WdVm506BE&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_tag</span>(<span class="params">access_token</span>): <span class="comment"># Warning: Shadows name &#x27;access_token&#x27; from outer scope</span></span><br><span class="line">    <span class="built_in">print</span>(access_token)</span><br><span class="line"></span><br><span class="line">list_tag(access_token)</span><br></pre></td></tr></table></figure>
<p>可以明显看出，在第一行我们在全局作用域中定义了 <code>access_token</code>，而在 <code>list_tag</code> 函数中我们重复使用了该名字。在 PyCharm 中，在函数内部和外部重复使用同一名字被称为“Shadows name”，因此会导致“Shadows name ‘access_token’ from outer scope”的警告。这只是一条警告，不会影响代码的运行。</p>
<p>尽管这个示例没什么问题，运行也没问题，但如果你继续忽略该警告信息，它可能导致未来出现奇怪的行为。</p>
<p>假设 <code>list_tag</code> 函数的参数不再是单个参数，而是多个参数，其内部逻辑也变得更加复杂。你决定手动将 <code>access_token</code> 重命名为 <code>token</code>，但在某些地方遗漏了修改。</p>
<p>如果你再次运行这段代码，它可能看起来运行正常，但最终结果肯定会很奇怪。这是因为现在 <code>access_token</code> 指的是全局对象，<code>token</code> 指的是局部对象，两者是不同的，但在函数中你把它们来回混用。</p>
<h2 id="如何规避“Shadows-name-from-outer-scope”警告"><a href="#如何规避“Shadows-name-from-outer-scope”警告" class="headerlink" title="如何规避“Shadows name from outer scope”警告"></a>如何规避“<strong><strong>Shadows name from outer scope</strong></strong>”警告</h2><p>现在我们明白了该警告背后的原因，解决方案其实很简单：你需要避免在代码中重复使用相同的名字。</p>
<p>这样做不仅可以减少代码中出现奇怪行为的可能性，而且可以使调试变得更加简单，因为如果 Python 无法找到全局名称或局部名称，会直接抛出 <code>NameError</code> 错误。</p>
<p>还有一点要记住，你不应该使用隐射的方式来“隐射”模块、类和函数。</p>
<p>更新后的示例代码如下:：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">access_token = <span class="string">&quot;HCbhQHCuG05WdVm506BE&quot;</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_tag</span>(<span class="params">token</span>):  </span><br><span class="line">    <span class="built_in">print</span>(token)   </span><br><span class="line"></span><br><span class="line">list_tag(access_token)</span><br></pre></td></tr></table></figure>
<p>或者你可以像下面这样将全局变量移入另一个函数中：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">list_tag</span>(<span class="params">access_token</span>):</span><br><span class="line">    <span class="built_in">print</span>(access_token)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    access_token = <span class="string">&quot;HCbhQHCuG05WdVm506BE&quot;</span></span><br><span class="line">    list_tag(access_token)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">		main()</span><br></pre></td></tr></table></figure>
<p>请<strong>注意，</strong>如果代码的结构如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">list_tag</span>(<span class="params">access_token</span>): <span class="comment"># Warning: Shadows name &#x27;access_token&#x27; from outer scope</span></span><br><span class="line">    <span class="built_in">print</span>(access_token)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    access_token = <span class="string">&quot;HCbhQHCuG05WdVm506BE&quot;</span></span><br><span class="line">    list_tag(access_token)</span><br></pre></td></tr></table></figure>
<p>仍会出现“Shadows name ‘access_token’ from outer scope”的警告。</p>
<p>这是因为在 <code>if</code> 条件内，<code>access_token</code> 是被定义为全局变量，<code>if __name__ == &#39;__main__&#39;:</code> 是一个 Python 惯用法，用于判断一个模块是否作为脚本直接执行，并不是一个函数。 </p>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程文摘</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>探究Apache Flink支持的三种流处理场景</title>
    <url>/2023/09/01/apache-flink-use-cases/</url>
    <content><![CDATA[<p>Apache Flink 是一个集众多具有竞争力的特性于一身的流处理引擎，是开发和运行多种不同类型应用程序的绝佳选择。Flink 提供了流处理和批处理支持、复杂的状态管理、事件时间处理语义以及状态的精确一次一致性保证等功能。此外，Flink 可以在多种资源管理框架上部署，比如 YARN 和 Kubernetes，也可以作为独立集群部署在裸机硬件上。Flink 的高可用配置确保了系统没有单点故障。实际上，Flink 能够扩展到数千个内核和 TB 级的应用状态，提供高吞吐量和低延迟，并为世界上一些要求最苛刻的流处理应用提供支持。</p>
<p>本文将介绍 Flink 支持的三类常见的有状态的流处理应用，分别为事件驱动型应用、数据管道应用和数据分析应用。</p>
<blockquote>
<p>注：这里为了突出有状态的流处理的用途之多，将不同应用的类别区分地很明显，而事实上大多数真实应用都会同时具有多种类别的特性。</p>
</blockquote>
<h2 id="事件驱动型应用"><a href="#事件驱动型应用" class="headerlink" title="事件驱动型应用"></a>事件驱动型应用</h2><p>第一种应用类型是事件驱动型应用。事件驱动型应用程序是有状态的应用程序，它从一个或多个事件流中摄取事件，并通过触发计算、状态更新或执行外部操作来响应这些事件。事件驱动型应用本质上是传统应用程序的演变。传统的应用程序将计算层和数据存储层分离，在这种架构中，应用程序从远程事务数据库读取数据并将其持久化。</p>
<p>相比之下，事件驱动型应用程序是基于有状态的流处理应用的设计。在这种架构中，数据和计算存储在同一位置，因此可以进行本地（内存或磁盘）数据访问。容错性通过定期将检查点（checkpoint）写入远程持久化存储来实现。下图展示了传统应用程序架构和事件驱动型应用程序之间的区别。</p>
<p><img src="/image/2023/20230901-image1.png" alt="image.png"><br>事件驱动型应用程序有很多优势。它们不需要查询远程数据库，而是通过本地访问数据来获得更好的性能，不论是在吞吐量还是延迟方面。检查点对常规事件处理的影响非常小，因为它们是异步和增量方式进行的。此外，在传统分层架构中，多个应用程序共享同一个数据库是很常见的。所以，当数据库发生变化时，例如因应用程序更新或服务扩展而改变了数据布局，传统的应用程序都需要进行谨慎协调。反观事件驱动型应用，由于只需考虑自身数据，因此在更改数据表示或服务扩容时所需的协调工作将大大减少。</p>
<p>那么，Flink 如何支持事件驱动型应用程序呢？事件驱动型应用程序的能力取决于流处理引擎处理时间和状态的能力。Flink 提供了许多出色的功能来支持这些概念。它提供了一套丰富的状态操作原语，允许以精确一次的一致性语义合并海量规模（TB 级别）的状态数据。此外，Flink 支持事件时间处理、高度可定制的窗口逻辑以及 ProcessFunction 提供的对时间的细粒度控制，使得实现高级业务逻辑成为可能。另外，Flink 还提供了一个复杂事件处理（CEP）库。</p>
<p>不过，Flink 在支持事件驱动型应用程序方面的一个重要功能是保存点（savepoint）。保存点是一个一致性的状态快照，可以用来初始化任意状态兼容的应用。通过保存点，可以放心地对应用进行升级或扩容/缩容，还可以启动多个版本的应用程序来进行 A/B 测试。</p>
<p>典型的事件驱动型应用程序包括欺诈检测、异常检测、基于规则的警报、业务流程监控和网络应用（如社交网络）等。</p>
<h2 id="数据分析应用"><a href="#数据分析应用" class="headerlink" title="数据分析应用"></a>数据分析应用</h2><p>第二种应用类型是数据分析应用。数据分析应用是指从原始数据中提取信息和洞察力的分析工作。传统的分析方式是在记录事件的有界数据集上进行批量查询或构建应用程序的形式进行的。为了得到最新数据的分析结果，必须先将最新数据添加到原来的分析数据集中，并重新执行查询或运行应用程序。分析结果会写入存储系统或作为报告发布。</p>
<p>借助先进的流处理引擎，我们可以实时地进行数据分析。流式查询或应用程序不再读取有界的数据集，而是接收实时的事件流，并在处理事件时不断生成和更新结果。结果可能写入外部数据库，也可以保存为内部状态。仪表盘应用程序可以从外部数据库读取最新结果，或直接查询应用程序的内部状态。</p>
<p>Apache Flink 支持流式和批量数据分析应用，如下图所示。</p>
<p><img src="/image/2023/20230901-image2.png" alt="image.png"></p>
<p>与批量分析相比，流式分析应用有许多优势。首先，流式分析消除了周期性导入和查询执行所带来的延迟，能够实现更低的延迟。其次，与批量查询相比，流式查询不需要处理输入数据中的人为边界，这些边界是由周期性导入和有界输入造成的。</p>
<p>流式分析的另一个优势是简化的应用架构。批量分析管道通常包含多个独立组件，需要定期调度数据摄取和查询执行。可靠地运行此类管道并不容易，因为一旦出现故障，会影响后续步骤的执行。相比之下，在先进的流处理器（如 Flink）上运行的流式分析应用程序包含从数据摄取到连续结果计算的所有步骤。因此，它可以依赖底层引擎提供的故障恢复机制。</p>
<p>Flink 如何支持数据分析类应用？Flink 为持续流式分析和批量分析都提供了全面的支持。具体而言，它内置了一个符合 ANSI 标准的 SQL 接口，将批、流查询的语义统一起来。无论是在记录事件的静态数据集上还是实时事件流上，相同 SQL 查询都会得到一致的结果。同时，Flink 还支持丰富的用户自定义函数，允许在 SQL 中执行自定义代码。如果还需进一步自定义逻辑，Flink 的 DataStream API 和 DataSet API 可以提供更多底层控制。</p>
<p>典型的数据分析应用包括电信网络质量监控、移动应用中的产品更新分析及实验评估、消费者技术中的实时数据即时分析和大规模图分析等。</p>
<h2 id="数据管道应用"><a href="#数据管道应用" class="headerlink" title="数据管道应用"></a>数据管道应用</h2><p>第三种应用类型是数据管道应用。我们知道，提取-转换-加载（ETL，Extract-Transform-Load）是在存储系统之间进行数据转换和数据迁移的常用方法。ETL 作业通常会定期性地触发，将数据从事务型数据库系统拷贝到分析型数据库或数据仓库。</p>
<p>数据管道的作用与 ETL 作业类似。它们可以转换和丰富数据，并将数据从一个存储系统移动到另一个存储系统。不过，它们以持续流模式运行，而不是定期触发。因此，它们能够从持续产生数据的源中读取记录，并以较低的延迟将其移动到目的地。例如，数据管道可以监控文件系统目录中的新文件，并将其数据写入事件日志。另一个应用可能会将事件流物化到数据库中，或者增量构建和优化查询索引。</p>
<p>下图描述了定期 ETL 作业和持续数据管道之间的区别。</p>
<p><img src="/image/2023/20230901-image3.png" alt="image.png"></p>
<p>与周期性 ETL 作业相比，持续数据管道的明显优势在于减少了将数据传输到目的地的延迟。此外，数据管道的用途更广，支持的用例更多，因为它们能够持续消费和发送数据。</p>
<p>那 Flink 是如何支持数据管道应用呢？Flink 的 SQL 接口（或 Table API）及其对用户自定义函数的支持可以解决许多常见的数据转换或丰富任务。具有更高级要求的数据管道可通过使用更通用的 DataStream API 来实现。Flink 为 Kafka、Kinesis、Elasticsearch 和 JDBC 数据库系统等各种存储系统提供了丰富的连接器。同时，它还提供了文件系统的连续型数据源及数据汇，可用来监控目录变化和以时间分区的方式写入文件。</p>
<p>典型的数据管道应用包括电子商务中的实时搜索索引构建和电子商务中的持续 ETL。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>Flink 作为流行的开源流处理框架，支持三类常见的有状态的流处理应用，包括事件驱动型应用、数据管道应用和数据分析应用。通过使用 Flink，可以高效地处理有状态的数据流，实现各种复杂的实时数据处理任务。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>深入了解Gson：Java对象的序列化和反序列化</title>
    <url>/2023/08/26/gson-serializing-and-deserializing-objects/</url>
    <content><![CDATA[<p>本文将介绍一些使用 Gson 库进行对象序列化时需要注意的细节，帮助开发人员更好地理解和应用该库。</p>
<h2 id="引入Gson库"><a href="#引入Gson库" class="headerlink" title="引入Gson库"></a>引入Gson库</h2><p>首先，需要确保项目中已经正确引入了 Gson 库。可以通过 Maven、Gradle 或手动下载 jar 包的方式导入 Gson 库。</p>
<p>例如，如果使用 Maven，在 pom.xml 文件中添加以下依赖项：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="创建Gson对象"><a href="#创建Gson对象" class="headerlink" title="创建Gson对象"></a>创建Gson对象</h2><p>在使用 Gson 库之前，需要创建一个 Gson 对象。可以直接使用默认的 Gson 构造函数创建一个 Gson 对象，也可以根据需要配置一些参数。</p>
<p>例如，如果希望将 JSON 字符串格式化输出，可以使用 Gson 对象的 <code>setPrettyPrinting</code> 方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>()</span><br><span class="line">                .setPrettyPrinting()</span><br><span class="line">                .create();</span><br></pre></td></tr></table></figure>
<h2 id="序列化对象"><a href="#序列化对象" class="headerlink" title="序列化对象"></a>序列化对象</h2><p>要将 Java 对象序列化为 JSON 格式，只需要调用 Gson 对象的 <code>toJson</code> 方法，并传入待序列化的 Java 对象即可。Gson 库会根据对象的字段和其对应的 <code>getter</code> 方法自动将其转换为 JSON 格式。</p>
<p>以 <code>BagOfPrimitives</code> 实体类为例，其定义如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 07:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BagOfPrimitives</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">value1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">value2</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> <span class="type">int</span> <span class="variable">value3</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    BagOfPrimitives() &#123;</span><br><span class="line">        <span class="comment">// no-args constructor</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getValue1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue1</span><span class="params">(<span class="type">int</span> value1)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.value1 = value1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getValue2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue2</span><span class="params">(String value2)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.value2 = value2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getValue3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> value3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValue3</span><span class="params">(<span class="type">int</span> value3)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.value3 = value3;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>初始化 <code>BagOfPrimitives</code> 对象，并使用 Gson 进行序列化，最后在控制台进行打印输出：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">BagOfPrimitives</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BagOfPrimitives</span>();</span><br><span class="line"><span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(obj);</span><br><span class="line"></span><br><span class="line">System.out.println(json);</span><br></pre></td></tr></table></figure>
<p>输出打印结果如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;value1&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;value2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>完整的 <code>main()</code> 函数代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.johnson.gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.GsonBuilder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> johnson lin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2023/8/1 07:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ObjectExample02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>()</span><br><span class="line">                .setPrettyPrinting()</span><br><span class="line">                .create();</span><br><span class="line"></span><br><span class="line">        <span class="type">BagOfPrimitives</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BagOfPrimitives</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(obj);</span><br><span class="line"></span><br><span class="line">        System.out.println(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此代码示例执行结果如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  &quot;value1&quot;: 1,</span></span><br><span class="line"><span class="comment">  &quot;value2&quot;: &quot;abc&quot;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>请注意，不能序列化具有循环引用的对象，因为这会导致无限递归。</p>
</blockquote>
<h2 id="反序列化对象"><a href="#反序列化对象" class="headerlink" title="反序列化对象"></a>反序列化对象</h2><p>要将 JSON 字符串反序列化为 Java 对象，只需调用 Gson 对象的 <code>fromJson</code> 方法，并传入待反序列化的 JSON 字符串和目标 Java 对象的类类型。</p>
<p>例如，对上一个示例中获取的 JSON 字符串进行反序列化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 反序列化，obj2与obj非常类似</span></span><br><span class="line"><span class="type">BagOfPrimitives</span> <span class="variable">obj2</span> <span class="operator">=</span> gson.fromJson(json, BagOfPrimitives.class);</span><br></pre></td></tr></table></figure>
<h2 id="关于对象的一些细节"><a href="#关于对象的一些细节" class="headerlink" title="关于对象的一些细节"></a>关于对象的一些细节</h2><ul>
<li>在使用私有字段方面是完全可以的（且建议如此）。</li>
<li>没有必要使用任何注解来指示一个字段需要被包括在序列化和反序列化中。所有当前类及其父类的字段默认都会被包括进去。</li>
<li>如果一个字段被标记为 <code>transient</code>，默认情况它会被忽略，不会包括在 JSON 序列化或反序列化中。</li>
<li>Gson 的实现可正确处理 null 字段： <ul>
<li>在序列化时，如果一个字段为空值（null），则不会包括在输出结果中。</li>
<li>在反序列化时，如果 JSON 中缺少某个字段，则会将对象中对应的字段设置为其默认值：对象类型为 null，数值类型为 0，布尔类型为 false。</li>
</ul>
</li>
<li>如果一个字段是合成的（synthetic），则会被忽略，不会包含在 JSON 序列化或反序列化中。</li>
<li>内部类中对应外部类的字段会被忽略，也不会包括在序列化或反序列化中。</li>
<li>匿名类和局部类会被排除在外。它们会被序列化为 JSON 的 null，在反序列化时它们的 JSON 值会被忽略，返回 null。将这些类转换为静态嵌套类（<code>static</code>）可以使它们能够进行序列化和反序列化。</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>深入探索Gson的泛型序列化和反序列化能力</title>
    <url>/2023/08/30/gson-serializing-and-deserializing-generic-types/</url>
    <content><![CDATA[<p>在 Java 开发领域，序列化和反序列化是常见的操作，用于将对象转换为字节流以便在网络传输或存储中使用。Gson 是 Google 提供的一个优秀的 Json 序列化和反序列化库，提供了强大的功能和灵活性。本文将重点介绍 Gson 在处理泛型类型时的序列化和反序列化能力。</p>
<h2 id="Gson-的泛型支持"><a href="#Gson-的泛型支持" class="headerlink" title="Gson 的泛型支持"></a>Gson 的泛型支持</h2><p>Gson 通过使用 <code>TypeToken</code> 类来支持泛型。<code>TypeToken</code> 提供了一种表示泛型类型的方式。通过创建 <code>TypeToken</code> 的子类，我们可以捕获泛型的具体类型信息，从而实现更精确的序列化和反序列化操作。</p>
<h2 id="泛型对象的序列化"><a href="#泛型对象的序列化" class="headerlink" title="泛型对象的序列化"></a>泛型对象的序列化</h2><p>在进行泛型序列化时，我们需要构建一个 <code>TypeToken</code> 对象来表示特定的泛型类型。例如，对于 <code>List&lt;String&gt;</code> 类型，可以使用如下方式进行序列化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"><span class="type">Type</span> <span class="variable">listType</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;List&lt;String&gt;&gt;()&#123;&#125;.getType();</span><br><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(list, listType);</span><br></pre></td></tr></table></figure>
<p>在上述代码中，通过调用 <code>new TypeToken&lt;List&lt;String&gt;&gt;()&#123;&#125;.getType()</code> 方法，我们创建了一个表示List类型的TypeToken对象，然后可以将该对象传递给gson.toJson()方法进行序列化。</p>
<ul>
<li>泛型对象的反序列化</li>
</ul>
<p>对于泛型对象的反序列化，我们同样需要使用TypeToken来捕获具体的泛型类型信息。以下是一个示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Type listType = new TypeToken&lt;List&lt;String&gt;&gt;()&#123;&#125;.getType();</span><br><span class="line">String json = &quot;[\\&quot;item1\\&quot;, \\&quot;item2\\&quot;, \\&quot;item3\\&quot;]&quot;;</span><br><span class="line">List&lt;String&gt; list = gson.fromJson(json, listType);</span><br></pre></td></tr></table></figure>
<p>在上述代码中，我们首先通过TypeToken创建了一个表示List类型的对象listType，并将其传递给gson.fromJson()方法进行反序列化。此时，Gson会自动解析json字符串，并将其转换为相应的List对象。</p>
<ul>
<li>嵌套泛型类型的处理</li>
</ul>
<p>Gson也支持处理嵌套泛型类型，例如Map<String, List>。对于这种情况，我们可以使用TypeToken的嵌套方式来表示具体类型，示例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Type mapType = new TypeToken&lt;Map&lt;String, List&lt;Integer&gt;&gt;&gt;()&#123;&#125;.getType();</span><br><span class="line">String json = &quot;&#123;\\&quot;key1\\&quot;:[1,2,3], \\&quot;key2\\&quot;:[4,5,6]&#125;&quot;;</span><br><span class="line">Map&lt;String, List&lt;Integer&gt;&gt; map = gson.fromJson(json, mapType);</span><br></pre></td></tr></table></figure>
<p>在上述代码中，我们使用TypeToken创建了一个表示Map<String, List>类型的对象mapType，并将其传递给gson.fromJson()方法进行反序列化。Gson将根据提供的泛型信息，正确地将json字符串转换为Map<String, List>对象。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>Gson 作为一款强大的 Json 序列化和反序列化库，提供了丰富的泛型支持。通过利用 <code>TypeToken</code> 来表示具体的泛型类型，我们可以精确地进行序列化和反序列化操作，包括嵌套泛型类型的处理。借助 Gson 的强大能力，我们可以更便捷地在 Java 项目中处理复杂的泛型数据结构。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>深入解析Gson：一个强大的Java JSON库</title>
    <url>/2023/09/03/gson-overview/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在现代的软件开发中，处理 JSON 数据是非常常见的任务。而为了简化 JSON 数据的解析和生成过程，我们可以借助一个强大而灵活的 Java 库——Gson。作为一个非常流行的开源 Java 库，它的主要用途是将 Java 对象序列化为 JSON 字符串，或者将 JSON 字符串反序列化为 Java 对象。它提供了简单易用的 API，使得处理 JSON 数据变得轻而易举。本篇博文将详细介绍 Gson 库的特性和使用方法，并通过示例代码展示其在实际场景中的应用。</p>
<blockquote>
<p>Gson 经历了多个版本的迭代，目前已经成熟而稳定，处于维护模式。这意味着它会继续修复现有的错误，但可能不会添加大型的新功能。</p>
</blockquote>
<h2 id="Gson的特性"><a href="#Gson的特性" class="headerlink" title="Gson的特性"></a>Gson的特性</h2><ol>
<li>简单易用：Gson 提供了简洁的 API，使得将 Java 对象序列化为 JSON 或将 JSON 反序列化为 Java 对象变得非常简单。</li>
<li>高度灵活：Gson 支持自定义序列化和反序列化的规则，可以满足各种复杂的数据结构和业务需求（具有深度继承层次结构并广泛使用泛型类型）。</li>
<li>配置灵活：通过设置不同的配置选项，如日期格式、字段排除策略等，可以灵活地控制 Gson 的行为。</li>
<li>完善的异常处理：当遇到无法序列化或反序列化的情况时，Gson 会抛出明确的异常信息，方便开发者进行错误处理。</li>
<li>允许已存在的不可修改对象与 JSON 相互转换；  </li>
<li>广泛支持 Java 泛型。  </li>
</ol>
<h2 id="Gson的使用方法"><a href="#Gson的使用方法" class="headerlink" title="Gson的使用方法"></a>Gson的使用方法</h2><ol>
<li>导入 Gson 库：在项目中添加 Gson 库的依赖，可以通过 Maven 或 Gradle 等构建工具进行导入。</li>
</ol>
<p>Maven：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><br> <em>gson</em> 版本根据实际情况进行选择，建议使用最新版本（见 <a href="https://search.maven.org/search?q=g:com.google.code.gson%20AND%20a:gson&amp;core=gav">Maven Central</a> ）。</p>
<ol>
<li>序列化：<br>（1）将 Java 对象转换为 JSON 字符串： <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"><span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(object);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>这里的<code>object</code>是要转换的 Java 对象。<br>      （2）使用 Gson 的配置选项：<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>()</span><br><span class="line">                .setDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>)</span><br><span class="line">                .excludeFieldsWithoutExposeAnnotation()</span><br><span class="line">                .create();</span><br></pre></td></tr></table></figure></p>
<p>通过<code>GsonBuilder</code>可以设置不同的配置选项，例如日期格式化、字段排除策略等。 </p>
<ol>
<li>反序列化：<br>（1）将 JSON 字符串转换为 Java 对象： <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"><span class="type">MyClass</span> <span class="variable">object</span> <span class="operator">=</span> gson.fromJson(json, MyClass.class);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>这里的<code>MyClass</code>是目标 Java 对象的类。<br>（2）处理复杂数据结构：<br>Gson 可以正确地解析包含嵌套对象、集合、泛型等复杂数据结构的 JSON 数据。 </p>
<h2 id="Gson用户"><a href="#Gson用户" class="headerlink" title="Gson用户"></a>Gson用户</h2><p>Gson 最初是为谷歌内部使用而创建的，并且目前在谷歌的多个项目中被广泛使用。由于其出色的功能和易用性，许多公共项目和公司也选择在它们的项目中使用 Gson。它已经成为 Java 开发社区中最受欢迎和广泛采用的 JSON 处理库之一。Gson 提供了简单而强大的 API，能够轻松地将 Java 对象转换为 JSON 格式，并支持反向操作。同时，它还具备处理复杂对象结构、支持泛型和自定义对象表示等高级功能。这些特点使得 Gson 成为许多开发者首选的 JSON 处理工具。</p>
<p>需要注意的是，尽管 Gson 最初是由谷歌开发和使用的，但目前由一个开源社区维护和支持，并非谷歌官方支持的产品。</p>
<h2 id="Gson性能"><a href="#Gson性能" class="headerlink" title="Gson性能"></a>Gson性能</h2><p>以下是在配备双 Opteron 处理器、8GB 内存和 64 位 Ubuntu 操作系统的台式机上进行的一些测试，并得到了如下结果。你也可以使用 Gson 源码中的 <code>PerformanceTest</code> 类重新运行这些测试。</p>
<ul>
<li>字符串：反序列化超过 25MB 的字符串时没有出现任何问题（请参阅 <code>PerformanceTest</code> 中的 <code>disabled_testStringDeserializationPerformance</code> 方法）。</li>
<li>大型集合： <ul>
<li>序列化一个包含 140 万个对象的集合（请参阅 <code>PerformanceTest</code> 中的 <code>disabled_testLargeCollectionSerialization</code> 方法）。</li>
<li>反序列化一个包含 87,000 个对象的集合（请参阅 <code>PerformanceTest</code> 中的<code>disabled_testLargeCollectionDeserialization</code> 方法）。</li>
</ul>
</li>
<li>Gson 1.4 将字节数组和集合的反序列化限制从 80KB 提高到 11MB 以上。</li>
</ul>
<p>注意：要运行这些测试，请删除 <code>disabled_</code> 前缀。我们使用该前缀是为了防止每次运行 JUnit 测试时都运行这些测试。</p>
<h2 id="Gson开源许可证"><a href="#Gson开源许可证" class="headerlink" title="Gson开源许可证"></a>Gson开源许可证</h2><p>Gson 根据 Apache 2.0 许可证发布。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Copyright 2008 Google Inc.</span><br><span class="line"></span><br><span class="line">Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line">you may not use this file except in compliance with the License.</span><br><span class="line">You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">Unless required by applicable law or agreed to in writing, software</span><br><span class="line">distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">See the License for the specific language governing permissions and</span><br><span class="line">limitations under the License.</span><br></pre></td></tr></table></figure>
<h2 id="示例应用"><a href="#示例应用" class="headerlink" title="示例应用"></a>示例应用</h2><p>现在我们以一个简单的示例来介绍 Gson 在实际场景中的应用。假设我们有一个 Person 类，包含姓名和年龄两个字段。我们希望将 Person 对象序列化为 JSON 字符串，并将其保存到文件中。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Johnson&quot;</span>, <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> gson.toJson(person);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印：&#123;&quot;name&quot;:&quot;Johnson&quot;,&quot;age&quot;:25&#125;</span></span><br><span class="line">        System.out.println(json);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将JSON字符串保存到文件</span></span><br><span class="line">        <span class="keyword">try</span> (<span class="type">FileWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;person.json&quot;</span>)) &#123;</span><br><span class="line">            writer.write(json);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过上述代码，我们可以将 Person 对象序列化为 JSON 字符串，并将其保存到名为 person.json 的文件中。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>Gson 作为一个强大而灵活的 Java JSON 库，极大地简化了处理 JSON 数据的过程。本文介绍了 Gson 的特性、使用方法以及示例应用，希望能够帮助读者更好地理解和使用 Gson 库。无论是在 Web 开发、移动应用还是其他领域，Gson 都是处理 JSON 数据的绝佳选择。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>JSON</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 Logstash 在出现解析异常时 logstash-plain.log 日志文件没有记录原始数据问题</title>
    <url>/2023/03/31/logstash-plain-log-did-not-record-the-original-data-when-a-parsing-exception-occurs/</url>
    <content><![CDATA[<p>我在使用 Logstah 处理数据时，在 logstash-plain.log 文件中发现了以下的错误信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2023-03-31T00:10:28,949][ERROR][logstash.filters.ruby    ][main][d6838068510d1ed4e2d1025930d8680ca59bdef970aaa32f4e2d8d28a09ee6d3] Ruby exception occurred: unexpected token at &#x27;&#x27; &#123;:class=&gt;&quot;JSON::ParserError&quot;, :backtrace=&gt;[&quot;json/ext/Parser.java:238:in `parse&#x27;&quot;, &quot;/usr/share/logstash/vendor/bundle/jruby/2.6.0/gems/json-2.6.3-java/lib/json/common.rb:216:in `parse&#x27;&quot;, &quot;(ruby filter code):3:in `block in filter_method&#x27;&quot;, &quot;/usr/share/logstash/vendor/bundle/jruby/2.6.0/gems/logstash-filter-ruby-3.1.8/lib/logstash/filters/ruby.rb:96:in `inline_script&#x27;&quot;, &quot;/usr/share/logstash/vendor/bundle/jruby/2.6.0/gems/logstash-filter-ruby-3.1.8/lib/logstash/filters/ruby.rb:89:in `filter&#x27;&quot;, &quot;/usr/share/logstash/logstash-core/lib/logstash/filters/base.rb:159:in `do_filter&#x27;&quot;, &quot;/usr/share/logstash/logstash-core/lib/logstash/filters/base.rb:178:in `block in multi_filter&#x27;&quot;, &quot;org/jruby/RubyArray.java:1865:in `each&#x27;&quot;, &quot;/usr/share/logstash/logstash-core/lib/logstash/filters/base.rb:175:in `multi_filter&#x27;&quot;, &quot;org/logstash/config/ir/compiler/AbstractFilterDelegatorExt.java:134:in `multi_filter&#x27;&quot;, &quot;/usr/share/logstash/logstash-core/lib/logstash/java_pipeline.rb:301:in `block in start_workers&#x27;&quot;]&#125;</span><br><span class="line">[2023-03-31T00:10:28,981][WARN ][logstash.filters.split   ][main][22c40e0aa24b6a13b219d12e11012938eec3bbf9da6d4f2672324181399c74af] Only String and Array types are splittable. field:data_arr is of type = NilClass</span><br><span class="line">[2023-03-31T00:10:29,008][WARN ][logstash.filters.json    ][main][b38819c35002a46187eeb47979e43d989d40afd9c95cdea1b6ac74cfc08927e6] Error parsing json &#123;:source=&gt;&quot;@tmp&quot;, :raw=&gt;&quot;%&#123;data_arr&#125;&quot;, :exception=&gt;#&lt;LogStash::Json::ParserError: Unexpected character (&#x27;%&#x27; (code 37)): expected a valid value (JSON String, Number, Array, Object or token &#x27;null&#x27;, &#x27;true&#x27; or &#x27;false&#x27;)</span><br><span class="line"> at [Source: (byte[])&quot;%&#123;data_arr&#125;&quot;; line: 1, column: 2]&gt;&#125;</span><br></pre></td></tr></table></figure>
<p>从该异常信息可以知道是 filter 的 ruby 这里出错了——JSON 转换错误，但是并没告诉我出错的内容是什么。因为这里处理的是 APP 用户行为的埋点日志，数据量很大，我无法快速确定 APP 端到底上报了什么内容导致出现该异常，从而无法快速通知相关人员及时排查和修改。我需要调整 Logstash 哪些配置以便在出现解析失败时可以记录原始数据？</p>
<p>我的 Logstash 配置文件如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; &quot;8085&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">    json &#123;</span><br><span class="line">        source =&gt; &quot;message&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ruby &#123;</span><br><span class="line">        code =&gt; &quot;</span><br><span class="line">            event.set(&#x27;data_arr&#x27;, JSON.parse(event.get(&#x27;data&#x27;)))</span><br><span class="line">            event.set(&#x27;logstash_time&#x27;, Time.now.to_i)</span><br><span class="line">            &quot;</span><br><span class="line">        remove_field =&gt; [&quot;data&quot;]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    split &#123;</span><br><span class="line">        field =&gt; &quot;data_arr&quot;</span><br><span class="line">        remove_field =&gt; &quot;tags&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutate &#123;</span><br><span class="line">        add_field =&gt; &#123;&quot;@tmp&quot; =&gt; &quot;%&#123;data_arr&#125;&quot;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    json &#123;</span><br><span class="line">        source =&gt; &quot;@tmp&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    kafka &#123;</span><br><span class="line">        codec =&gt; json</span><br><span class="line">        topic_id =&gt; &quot;behavior-log&quot;</span><br><span class="line">        bootstrap_servers =&gt; &quot;kafka1:9092,kafka2:9092,kafka3:9092&quot;</span><br><span class="line">        client_id =&gt; &quot;logstash-behavior-log-01&quot;</span><br><span class="line">        acks =&gt; &quot;all&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>你可以在出现异常时，把原始数据记录输出到文件上。fiter 的 ruby 代码出错时，默认情况下会把 <code>_rubyexception</code> 添加到事件的 tags 字段上。例如在 ruby 代码中将空字符串传给 <code>JSON.parse()</code> 方法，事件 tags 字段中会有以下的错误信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;tags&quot;:[</span><br><span class="line">    &quot;_rubyexception: unexpected token at &#x27;&#x27;&quot;,</span><br><span class="line">    &quot;_rubyexception&quot;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>我们可以通过判断 tags 数组中是否有 <code>_rubyexception</code> 值，如果有，说明 ruby 代码有异常，这个时候可以在输出的时候把该数据写到文件上（也可以选择其他存储，如 Elasticsearch）。</p>
<p>根据你的配置，我添加了以下修改，你可以根据自己的实际情况再做修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">        port =&gt; &quot;8085&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">    json &#123;</span><br><span class="line">        source =&gt; &quot;message&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ruby &#123;</span><br><span class="line">        code =&gt; &quot;</span><br><span class="line">            event.set(&#x27;data_arr&#x27;, JSON.parse(event.get(&#x27;data&#x27;)))</span><br><span class="line">            event.set(&#x27;logstash_time&#x27;, Time.now.to_i)</span><br><span class="line">            &quot;</span><br><span class="line">        remove_field =&gt; [&quot;data&quot;]</span><br><span class="line">        tag_with_exception_message =&gt; true</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    split &#123;</span><br><span class="line">        field =&gt; &quot;data_arr&quot;</span><br><span class="line">        remove_field =&gt; &quot;tags&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mutate &#123;</span><br><span class="line">        add_field =&gt; &#123;&quot;@tmp&quot; =&gt; &quot;%&#123;data_arr&#125;&quot;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    json &#123;</span><br><span class="line">        source =&gt; &quot;@tmp&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    kafka &#123;</span><br><span class="line">        codec =&gt; json</span><br><span class="line">        topic_id =&gt; &quot;behavior-log&quot;</span><br><span class="line">        bootstrap_servers =&gt; &quot;kafka1:9092,kafka2:9092,kafka3:9092&quot;</span><br><span class="line">        client_id =&gt; &quot;logstash-behavior-log-01&quot;</span><br><span class="line">        acks =&gt; &quot;all&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    if &quot;_rubyexception&quot; in [tags] &#123;</span><br><span class="line">        file &#123;</span><br><span class="line">            path =&gt; &quot;/var/log/logstash/error.log&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>编程 Q&amp;A</category>
      </categories>
      <tags>
        <tag>ELK</tag>
        <tag>Logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Flink WebUI仪表盘上传的jar包默认存储在哪个目录下？</title>
    <url>/2023/01/01/flink-webui-jar-dir/</url>
    <content><![CDATA[<p>在 Flink WebUI 上是可以查看上传 jar 包的存放目录的。打开 Flink WebUI，点击 Job Manager，再点击 Configuration 标签页，配置项 web.tmpdir 对应的值即为上传后的 jar 包的存放目录，具体如下图所示：</p>
<p><img src="/image/2023/20230101001.jpeg" alt="Untitled"></p>
<p>登录服务器，使用 <code>ll</code> 命令查看目录内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ll /tmp/flink-web-cc812fd4-effb-48f0-8ef2-d67f0700f1b4/flink-web-upload/</span><br><span class="line">total 159364</span><br><span class="line">-rw------- 1 hadoop hadoop 163186973 Jan  1 10:03 2a08ffd6-34bf-4abb-9735-2c46587fef23_flink-connectors-1.0-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>
<p>需要注意的是，存放在默认路径下的 jar 包，会在 Job Manager 重启后被删除。如果重启 Job Manager 后还想保留之前上传的 jar 包，可以在 Flink 的配置文件 flink-conf.yaml 添加 web.upload.dir 配置，将上传的 jar 包存放到指定的路径上。如以下配置会将上传的 jar 包存放在目录 /opt/flink-web-upload 下，其中子目录 flink-web-upload 是 Flink 程序自动创建的。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">web.upload.dir:</span> <span class="string">/opt</span></span><br></pre></td></tr></table></figure>
<p>通过在 Flink WebUI 上传好 jar 包后，登录服务器，查询 /opt/flink-web-upload 目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ll /opt/flink-web-upload</span></span><br><span class="line">total 24K</span><br><span class="line">-rw------- 1 root root 8.1K Jan  1 18:55 27854b52-b274-4f49-9c7b-daed5924eef8_flink-tutorial-1.0-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>
<p>此时，重启 Job Manager，之前已经上传的 jar 包会继续保留。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Flink</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>Resolving the &quot;TTransportException&quot; Error in Superset Hive Database Connection</title>
    <url>/2024/11/01/resolving-the-ttransportexception-error-in-superset-hive-database-connection/</url>
    <content><![CDATA[<h2 id="Issue-Description"><a href="#Issue-Description" class="headerlink" title="Issue Description:"></a><strong>Issue Description:</strong></h2><p>After successfully installing Superset, running the command <code>superset run -p 8088 -h 0.0.0.0</code> to start the application, and attempting to configure the Hive database connection through the interface, an error occurs. The server logs display the following:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unexpected error TTransportException</span><br><span class="line">WARNING: superset.views.core: Unexpected error TTransportException</span><br><span class="line">INFO: werkzeug:10.10.17.34 - - [11/Jan/2022 12:07:37] &quot;POST /superset/testconn HTTP/1.1&quot; 400 -</span><br></pre></td></tr></table></figure>
<p>Upon seeing the <code>TTransportException</code>, the initial assumption is that some required dependencies (either Python or system packages) might be missing. However, the logs do not provide specific error details, making it challenging to identify the missing package or component.</p>
<h2 id="Possible-Causes"><a href="#Possible-Causes" class="headerlink" title="Possible Causes"></a>Possible Causes</h2><p>Based on online searches, several potential causes for the issue include:</p>
<ul>
<li>Missing dependencies such as:<ul>
<li><code>sasl</code></li>
<li><code>thrift</code></li>
<li><code>thrift-sasl</code></li>
<li><code>pythrifthiveapi</code></li>
<li><code>pure-sasl</code></li>
<li>…and others.</li>
</ul>
</li>
<li>A mismatch in the Hive driver versions (e.g., <code>pyhive</code>, <code>pyhive[presto]</code>, <code>pyhive==0.6.0</code>).</li>
<li>Incorrectly configured Hive connection parameters, such as those for Kerberos authentication.</li>
</ul>
<p>However, no clear indications of which specific dependency is missing or which parameters are incorrectly configured are available.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>While we could test each dependency by installing the suggested packages and specifying the correct versions one by one, this process would be time-consuming and inefficient. Instead, we can take a more direct approach to troubleshoot the issue.</p>
<p>Since Superset uses <code>pyhive</code> to connect to the Hive database, we can test the connection manually using a Python script. Below is a sample script that can be used to verify the connection:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> pyhive <span class="keyword">import</span> hive</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Connect to the Hive database</span></span><br><span class="line">conn = hive.connect(</span><br><span class="line">    host=<span class="string">&quot;10.10.17.61&quot;</span>, </span><br><span class="line">    port=<span class="number">10000</span>,  <span class="comment"># Server address</span></span><br><span class="line">    <span class="comment"># auth=&quot;KERBEROS&quot;, </span></span><br><span class="line">    <span class="comment"># kerberos_service_name=&quot;sql_prc&quot;,  # Authentication method</span></span><br><span class="line">    configuration=&#123;</span><br><span class="line">        <span class="string">&#x27;mapreduce.map.memory.mb&#x27;</span>:<span class="string">&#x27;4096&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mapreduce.reduce.memory.mb&#x27;</span>:<span class="string">&#x27;4096&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mapreduce.map.java.opts&#x27;</span>:<span class="string">&#x27;-Xmx3072m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mapreduce.reduce.java.opts&#x27;</span>:<span class="string">&#x27;-Xmx3072m&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;hive.input.format&#x27;</span>:<span class="string">&#x27;org.apache.hadoop.hive.ql.io.HiveInputFormat&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;hive.limit.optimize.enable&#x27;</span>:<span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mapreduce.job.queuename&#x27;</span>:<span class="string">&#x27;root.default&#x27;</span>  <span class="comment"># Queue</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Query data</span></span><br><span class="line">sql = <span class="string">&quot;SHOW PARTITIONS dw.dm_user_info&quot;</span></span><br><span class="line">df = pd.read_sql(sql, conn)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>Executing the script:</strong></p>
<p>Save the script as <code>test.py</code> and run it:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 test.py</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>Error Observed:</strong></p>
<p>The following error might occur:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;test.py&quot;, line 15, in &lt;module&gt;</span><br><span class="line">    &#x27;mapreduce.job.queuename&#x27;:&#x27;root.production.miot_group.test.data&#x27;  # Queue</span><br><span class="line">  File &quot;/home/hadoop/.local/lib/python3.6/site-packages/pyhive/hive.py&quot;, line 104, in connect</span><br><span class="line">    return Connection(*args, **kwargs)</span><br><span class="line">  File &quot;/home/hadoop/.local/lib/python3.6/site-packages/pyhive/hive.py&quot;, line 243, in __init__</span><br><span class="line">    self._transport.open()</span><br><span class="line">  File &quot;/home/hadoop/.local/lib/python3.6/site-packages/thrift_sasl/__init__.py&quot;, line 85, in open</span><br><span class="line">    message=(&quot;Could not start SASL: %s&quot; % self.sasl.getError()))</span><br><span class="line">thrift.transport.TTransport.TTransportException: Could not start SASL: b&#x27;Error in sasl_client_start (-4) SASL(-4): no mechanism available: No worthy mechs found&#x27;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>Root Cause:</strong></p>
<p>The issue is caused by missing system dependencies related to SASL authentication. The specific error is:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">thrift.transport.TTransport.TTransportException: Could not start SASL: b&#x27;Error in sasl_client_start (-4) SASL(-4): no mechanism available: No worthy mechs found&#x27;</span><br></pre></td></tr></table></figure>
<p>This indicates that the following system packages are required but not installed:</p>
<ul>
<li><code>cyrus-sasl-plain</code></li>
<li><code>cyrus-sasl-devel</code></li>
<li><code>cyrus-sasl-gssapi</code></li>
</ul>
<hr>
<h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><p>To resolve the issue, install the missing packages using <code>yum</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install cyrus-sasl-plain cyrus-sasl-devel cyrus-sasl-gssapi</span><br></pre></td></tr></table></figure>
<p>After installing these dependencies, rerun the Python script:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 test.py</span><br></pre></td></tr></table></figure>
<p><strong>Successful Output:</strong></p>
<p>You should see the following output, indicating that the connection to Hive is successful:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    partition</span><br><span class="line">0   dt=20211203</span><br><span class="line">1   dt=20211226</span><br><span class="line">2   dt=20211227</span><br><span class="line">3   dt=20211228</span><br><span class="line">4   dt=20211229</span><br><span class="line">5   dt=20211230</span><br><span class="line">6   dt=20211231</span><br><span class="line">7   dt=20220101</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>Final Step:</strong></p>
<p>Now, go back to the Superset interface, reconfigure the Hive database connection, and click the “TEST CONNECTION” button. If successful, you will see the message: <code>Seems OK!</code>, confirming that the connection to Hive is established.</p>
<p><strong>Hive Connection String:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hive://hive@10.10.17.61:10000/mydw</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Superset</tag>
        <tag>HowTo</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Fix `java.lang.NoSuchMethodError: org.apache.commons.cli.CommandLine.hasOption` in Apache Flink</title>
    <url>/2024/11/05/how-to-fix-java-lang-nosuchmethoderror-commandline-hasoption-in-flink/</url>
    <content><![CDATA[<p>When running <strong>Apache Flink</strong>, you might encounter the following error message during startup or execution:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java.lang.NoSuchMethodError: org.apache.commons.cli.CommandLine.hasOption</span><br></pre></td></tr></table></figure>
<p>For example, when I use Flink version 1.17.2 and start a job in Application Mode, the job is submitted successfully and runs as expected. The command and output information are as follows.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ /data/flink/flink-1.17.2/bin/flink run-application -t yarn-application -p 3 -Djobmanager.memory.process.size=1024m -Dtaskmanager.memory.process.size=2048m -Dtaskmanager.memory.network.max=64mb -c com.my.flink.etl.dws.trd.OrderSummaryJob -Dyarn.application.name=<span class="string">&quot;com.my.flink.etl.dws.trd.OrderSummaryJob&quot;</span> -Dyarn.application.type=<span class="string">&quot;Flink 1.17.2&quot;</span> /data/flink/my-flink-etl-jar/dws-trd-ord-summary.jar</span><br><span class="line"></span><br><span class="line">Setting HBASE_CONF_DIR=/etc/hbase/conf because no HBASE_CONF_DIR was <span class="built_in">set</span>.</span><br><span class="line">2024-11-05 14:05:05,849 WARN  org.apache.flink.yarn.configuration.YarnLogConfigUtil        [] - The configuration directory (<span class="string">&#x27;/data/flink/flink-1.17.2/conf&#x27;</span>) already contains a LOG4J config file.If you want to use logback, <span class="keyword">then</span> please delete or rename the <span class="built_in">log</span> configuration file.</span><br><span class="line">2024-11-05 14:05:06,019 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - No path <span class="keyword">for</span> the flink jar passed. Using the location of class org.apache.flink.yarn.YarnClusterDescriptor to locate the jar</span><br><span class="line">2024-11-05 14:05:06,091 INFO  org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider [] - Failing over to rm2</span><br><span class="line">2024-11-05 14:05:06,128 INFO  org.apache.hadoop.conf.Configuration                         [] - found resource resource-types.xml at file:/etc/hadoop/3.1.4.0-315/0/resource-types.xml</span><br><span class="line">2024-11-05 14:05:06,166 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - Cluster specification: ClusterSpecification&#123;masterMemoryMB=1024, taskManagerMemoryMB=2048, slotsPerTaskManager=1&#125;2024-11-05 14:05:06,396 WARN  org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory      [] - The short-circuit <span class="built_in">local</span> reads feature cannot be used because libhadoop cannot be loaded.</span><br><span class="line">2024-11-05 14:05:07,683 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - Removing <span class="string">&#x27;localhost&#x27;</span> Key: <span class="string">&#x27;jobmanager.bind-host&#x27;</span> , default: null (fallback keys: []) setting from effective configuration; using <span class="string">&#x27;0.0.0.0&#x27;</span> instead.</span><br><span class="line">2024-11-05 14:05:07,684 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - Removing <span class="string">&#x27;localhost&#x27;</span> Key: <span class="string">&#x27;taskmanager.bind-host&#x27;</span> , default: null (fallback keys: []) setting from effective configuration; using <span class="string">&#x27;0.0.0.0&#x27;</span> instead.</span><br><span class="line">2024-11-05 14:05:07,708 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - Cannot use kerberos delegation token manager, no valid kerberos credentials provided.</span><br><span class="line">2024-11-05 14:05:07,712 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - Submitting application master application_1723014599670_0040</span><br><span class="line">2024-11-05 14:05:07,755 INFO  org.apache.hadoop.yarn.client.api.impl.YarnClientImpl        [] - Submitted application application_1723014599670_0040</span><br><span class="line">2024-11-05 14:05:07,755 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - Waiting <span class="keyword">for</span> the cluster to be allocated</span><br><span class="line">2024-11-05 14:05:07,756 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - Deploying cluster, current state ACCEPTED</span><br><span class="line">2024-11-05 14:05:12,524 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - YARN application has been deployed successfully.</span><br><span class="line">2024-11-05 14:05:12,525 INFO  org.apache.flink.yarn.YarnClusterDescriptor                  [] - Found Web Interface flink-onyarn-node-01:41684 of application <span class="string">&#x27;application_1723014599670_0040&#x27;</span>.</span><br></pre></td></tr></table></figure>
<p>Now, I want to test the savepoint feature and observe the job’s behavior when stopping and restarting it. However, when executing the Flink command (to submit a job and specify a savepoint to resume from), I encounter the following error. The same issue also occurs when running <code>flink stop</code>.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> /data/flink/flink-1.17.2/bin/flink run-application -t yarn-application -p 3 -Djobmanager.memory.process.size=1024m -Dtaskmanager.memory.process.size=2048m -Dtaskmanager.memory.network.max=64mb -c com.my.flink.etl.dws.trd.OrderSummaryJob -Dyarn.application.name=<span class="string">&quot;com.my.flink.etl.dws.trd.OrderSummaryJob&quot;</span> -Dyarn.application.type=<span class="string">&quot;Flink 1.17.2&quot;</span> -s hdfs:/flink-checkpoints/flink-1.17.2/ea98ue43a2fc63d4631895af4604dd43e/chk-102 /data/flink/my-flink-etl-jar/dws-trd-ord-summary.jar</span><br><span class="line"></span><br><span class="line">Setting HBASE_CONF_DIR=/etc/hbase/conf because no HBASE_CONF_DIR was <span class="built_in">set</span>.</span><br><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/data/flink/flink-1.17.2/lib/log4j-slf4j-impl-2.17.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/usr/hdp/3.1.4.0-315/hadoop/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings <span class="keyword">for</span> an explanation.</span><br><span class="line">SLF4J: Actual binding is of <span class="built_in">type</span> [org.apache.logging.slf4j.Log4jLoggerFactory]</span><br><span class="line">java.lang.NoSuchMethodError: org.apache.commons.cli.CommandLine.hasOption(Lorg/apache/commons/cli/Option;)Z</span><br><span class="line">        at org.apache.flink.client.cli.CliFrontendParser.createSavepointRestoreSettings(CliFrontendParser.java:631)</span><br><span class="line">        at org.apache.flink.client.cli.ProgramOptions.&lt;init&gt;(ProgramOptions.java:119)</span><br><span class="line">        at org.apache.flink.client.cli.CliFrontend.runApplication(CliFrontend.java:198)</span><br><span class="line">        at org.apache.flink.client.cli.CliFrontend.parseAndRun(CliFrontend.java:1098)</span><br><span class="line">        at org.apache.flink.client.cli.CliFrontend.lambda$mainInternal<span class="variable">$9</span>(CliFrontend.java:1189)</span><br><span class="line">        at java.security.AccessController.doPrivileged(Native Method)</span><br><span class="line">        at javax.security.auth.Subject.doAs(Subject.java:422)</span><br><span class="line">        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1876)</span><br><span class="line">        at org.apache.flink.runtime.security.contexts.HadoopSecurityContext.runSecured(HadoopSecurityContext.java:41)</span><br><span class="line">        at org.apache.flink.client.cli.CliFrontend.mainInternal(CliFrontend.java:1189)</span><br><span class="line">        at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:1157)</span><br></pre></td></tr></table></figure>
<p>This error typically indicates an issue with version conflicts or the availability of the required method within the libraries that Flink is using. In this case, the error is related to the <strong>Apache Commons CLI</strong> library, which is used by Flink for command-line argument parsing.</p>
<p>In this article, we will walk through the possible causes and solutions for this error, so you can get your Flink application up and running.</p>
<h2 id="Understanding-the-Error"><a href="#Understanding-the-Error" class="headerlink" title="Understanding the Error"></a>Understanding the Error</h2><p>The error <code>java.lang.NoSuchMethodError</code> suggests that at runtime, your application is trying to invoke a method that is not present in the version of the library being used. The method in question is <code>hasOption</code>, which belongs to the <code>CommandLine</code> class of the <strong>Apache Commons CLI</strong> library.</p>
<p>Flink internally relies on Apache Commons CLI for parsing command-line options, and it expects a specific version of the library. However, if there’s a version mismatch between the library that Flink was compiled against and the one available at runtime, the <code>hasOption</code> method might not exist, causing the error.</p>
<h2 id="Common-Causes-of-the-Error"><a href="#Common-Causes-of-the-Error" class="headerlink" title="Common Causes of the Error"></a>Common Causes of the Error</h2><p>There are a few potential causes for this error:</p>
<ol>
<li><strong>Version Conflict with Apache Commons CLI</strong>: If your project uses a different version of the Apache Commons CLI library than what Flink expects, the <code>hasOption</code> method might not exist or could be defined differently.</li>
<li><strong>Incompatible Dependencies</strong>: Other libraries in your project might bring in a different version of the Apache Commons CLI library, which could override the version expected by Flink.</li>
<li><strong>Incorrect Classpath Configuration</strong>: If your Flink setup includes additional or outdated versions of libraries that conflict with the ones included in the Flink distribution, it could result in runtime issues like this.</li>
<li><strong>Missing related jar packages</strong>.</li>
</ol>
<h2 id="Solutions-to-Resolve-the-Issue"><a href="#Solutions-to-Resolve-the-Issue" class="headerlink" title="Solutions to Resolve the Issue"></a>Solutions to Resolve the Issue</h2><h3 id="Verify-That-the-commons-cli-Jar-Package-Exists"><a href="#Verify-That-the-commons-cli-Jar-Package-Exists" class="headerlink" title="Verify That the commons-cli Jar Package Exists"></a>Verify That the commons-cli Jar Package Exists</h3><p>Given that the error is a <code>java.lang.NoSuchMethodError</code>, it’s likely due to a missing JAR file. Navigate to the <code>lib</code> directory under the Flink installation folder, as shown below, and you’ll find that the <code>common-cli</code> JAR is indeed missing. To fix this, simply download the JAR and place it in the <code>lib</code> directory.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">$ ll lib/</span><br><span class="line">total 202380</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop    196491 Nov 13  2023 flink-cep-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop    542629 Nov 13  2023 flink-connector-files-1.17.2.jar</span><br><span class="line">-rw-rw-r-- 1 hadoop hadoop    268555 Nov  4 18:42 flink-connector-jdbc-3.1.2-1.17.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop    102470 Nov 13  2023 flink-csv-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop 121809282 Nov 13  2023 flink-dist-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop    180246 Nov 13  2023 flink-json-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop  21043317 Nov 13  2023 flink-scala_2.12-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop  59381853 Dec  7  2023 flink-shaded-hadoop-3-uber-3.1.1.7.1.1.0-565-9.0.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop  15407408 Nov 13  2023 flink-table-api-java-uber-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop  38194169 Nov 13  2023 flink-table-planner-loader-1.17.2.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop   3146303 Nov 13  2023 flink-table-runtime-1.17.2.jar</span><br><span class="line">-rw-rw-r-- 1 hadoop hadoop   1878533 Dec 10  2023 jna-5.14.0.jar</span><br><span class="line">-rw-rw-r-- 1 hadoop hadoop   1369287 Dec 10  2023 jna-platform-5.14.0.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop    208006 Jun  1  2022 log4j-1.2-api-2.17.1.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop    301872 Jun  1  2022 log4j-api-2.17.1.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop   1790452 Jun  1  2022 log4j-core-2.17.1.jar</span><br><span class="line">-rw-r--r-- 1 hadoop hadoop     24279 Jun  1  2022 log4j-slf4j-impl-2.17.1.jar</span><br><span class="line">-rw-rw-r-- 1 hadoop hadoop    975591 Nov 25  2023 oshi-core-6.4.8.jar</span><br></pre></td></tr></table></figure>
<p>You can download the JAR file using the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://repo1.maven.org/maven2/commons-cli/commons-cli/1.5.0/commons-cli-1.5.0.jar</span><br></pre></td></tr></table></figure>
<h3 id="Ensure-Flink-and-Library-Version-Compatibility"><a href="#Ensure-Flink-and-Library-Version-Compatibility" class="headerlink" title="Ensure Flink and Library Version Compatibility"></a>Ensure Flink and Library Version Compatibility</h3><p>The first step is to verify that you are using a compatible version of Flink and Apache Commons CLI. Apache Flink uses a specific version of Apache Commons CLI, and running Flink with an incompatible version can lead to errors.</p>
<ol>
<li><strong>Check Flink Version</strong>: Find out which version of Flink you are using and check the corresponding version of Apache Commons CLI in its dependencies.<ul>
<li>You can check the Flink version by running <code>flink --version</code>.</li>
<li>Flink dependencies, including Apache Commons CLI, are often specified in the <code>pom.xml</code> (for Maven-based builds) or <code>build.gradle</code> (for Gradle-based builds).</li>
</ul>
</li>
<li><strong>Ensure Correct Version of Apache Commons CLI</strong>: If Flink relies on a specific version of Commons CLI, make sure your project includes the same version.For example, if you’re using Maven, you can specify the dependency version explicitly:</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-cli<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- Replace with Flink&#x27;s expected version --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Exclude-Conflicting-Dependencies"><a href="#Exclude-Conflicting-Dependencies" class="headerlink" title="Exclude Conflicting Dependencies"></a>Exclude Conflicting Dependencies</h3><p>If your project or any of the libraries you’re using brings in a conflicting version of Apache Commons CLI, you can exclude it from your dependencies.</p>
<p>For example, in Maven, you can exclude a conflicting dependency like this:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flink<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flink-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>YOUR_FLINK_VERSION<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-cli<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This will prevent the conflicting version of the library from being included, allowing Flink to use its bundled version of Commons CLI.</p>
<p>In <strong>Gradle</strong>, you can exclude a dependency in a similar manner:</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation(<span class="string">&#x27;org.apache.flink:flink-core:YOUR_FLINK_VERSION&#x27;</span>) &#123;</span><br><span class="line">        exclude <span class="attr">group:</span> <span class="string">&#x27;org.apache.commons&#x27;</span>, <span class="attr">module:</span> <span class="string">&#x27;commons-cli&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Update-Dependencies-to-Latest-Versions"><a href="#Update-Dependencies-to-Latest-Versions" class="headerlink" title="Update Dependencies to Latest Versions"></a>Update Dependencies to Latest Versions</h3><p>Sometimes the issue arises due to the use of outdated or unsupported versions of libraries. Ensure all dependencies in your project are up to date, particularly Apache Commons CLI and Flink.</p>
<p>To update dependencies in <strong>Maven</strong>, run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn versions:display-dependency-updates</span><br></pre></td></tr></table></figure>
<p>In <strong>Gradle</strong>, use:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./gradlew dependencyUpdates</span><br></pre></td></tr></table></figure>
<p>This will show you if any of your dependencies are outdated and need to be updated to a compatible version.</p>
<h3 id="Review-Classpath-Configuration"><a href="#Review-Classpath-Configuration" class="headerlink" title="Review Classpath Configuration"></a>Review Classpath Configuration</h3><p>Ensure that your classpath is correctly configured to prioritize Flink’s bundled dependencies and avoid conflicts. This is particularly important if you are running Flink in a distributed environment, as the classpath needs to be consistent across all nodes in the cluster.</p>
<p>If you’re running Flink in <strong>standalone mode</strong>, make sure your job’s JAR file contains the correct dependencies, or use the Flink <code>lib/</code> directory to place compatible versions of libraries.</p>
<h2 id="Final-Thoughts"><a href="#Final-Thoughts" class="headerlink" title="Final Thoughts"></a>Final Thoughts</h2><p>The error <code>java.lang.NoSuchMethodError: org.apache.commons.cli.CommandLine.hasOption</code> in Flink is often caused by a version mismatch or classpath conflict related to Apache Commons CLI. To fix the issue:</p>
<ul>
<li>Verify that the commons-cli jar package exists.</li>
<li>Ensure you’re using the correct version of Flink and Apache Commons CLI.</li>
<li>Exclude conflicting dependencies from your project.</li>
<li>Update your project’s dependencies to compatible versions.</li>
<li>Review your classpath to prevent conflicts at runtime.</li>
</ul>
<p>By following these steps, you should be able to resolve the error and get your Flink application running smoothly again. If the problem persists, reviewing Flink’s official documentation or community forums might provide additional insights specific to your Flink version and environment.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>HowTo</tag>
        <tag>Apache Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Resolve the &quot;Could Not Get Lock /var/lib/apt/lists/lock&quot; Error in Ubuntu</title>
    <url>/2024/11/02/ubuntu-could-not-get-lock-var-lib-apt-lists-lock/</url>
    <content><![CDATA[<p>When using Ubuntu or any Debian-based system, you may come across the error message: <em>“Could not get lock /var/lib/apt/lists/lock.”</em> This is a common issue, particularly when managing software installations or updates via <code>apt</code> or similar commands.</p>
<p>For example, I recently encountered this error while trying to install an application using the <code>apt</code> command on Ubuntu:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">Reading package lists... Done</span><br><span class="line">E: Could not get lock /var/lib/apt/lists/lock. It is held by process 1390 (packagekitd)</span><br><span class="line">N: Removing the lock file is not recommended, as it may break your system.</span><br><span class="line">E: Unable to lock directory /var/lib/apt/lists/</span><br></pre></td></tr></table></figure>
<p>This error usually occurs when there’s a conflict accessing the lock file, which prevents new processes from using it.</p>
<p>In this article, we’ll explore the causes of this issue and walk you through the steps to resolve it.</p>
<h2 id="What-Causes-the-“Could-Not-Get-Lock”-Error"><a href="#What-Causes-the-“Could-Not-Get-Lock”-Error" class="headerlink" title="What Causes the “Could Not Get Lock” Error?"></a>What Causes the “Could Not Get Lock” Error?</h2><p>The lock file, located at <code>/var/lib/apt/lists/lock</code>, is a mechanism Ubuntu uses to prevent multiple processes from running package management commands simultaneously. This is essential because simultaneous installations or updates could lead to conflicts or corruption. When one process is already using <code>apt</code>, it creates this lock file to indicate that no other process should interfere until the operation is completed.</p>
<p>Common reasons for this error include:</p>
<ol>
<li><strong>Apt Processes Still Running</strong>: Another apt or dpkg process is already running (e.g., in the background), locking the file.</li>
<li><strong>A Previous Process Crashed or Was Interrupted</strong>: If the previous apt operation was abruptly stopped, it might leave the lock file intact.</li>
<li><strong>System Update in the Background</strong>: Ubuntu often runs background updates (especially on initial boot), which can cause temporary lock conflicts.</li>
<li><strong>Inadequate System Shutdown</strong>: If the system was shut down improperly, the lock file may have been left active, causing conflicts.</li>
</ol>
<h2 id="Steps-to-Resolve-the-“Could-Not-Get-Lock”-Error"><a href="#Steps-to-Resolve-the-“Could-Not-Get-Lock”-Error" class="headerlink" title="Steps to Resolve the “Could Not Get Lock” Error"></a>Steps to Resolve the “Could Not Get Lock” Error</h2><p>Here are several methods you can try, starting from the least intrusive to more advanced troubleshooting:</p>
<h3 id="Step-1-Wait-for-the-Existing-Process-to-Complete"><a href="#Step-1-Wait-for-the-Existing-Process-to-Complete" class="headerlink" title="Step 1: Wait for the Existing Process to Complete"></a>Step 1: Wait for the Existing Process to Complete</h3><p>The easiest solution is to simply wait. If the lock is due to an automatic update process, it may release the lock once the operation finishes. You can check if any process is using <code>apt</code> by running:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps aux | grep <span class="string">&#x27;[a]pt&#x27;</span></span><br></pre></td></tr></table></figure>
<p>If you see an apt or dpkg process running, give it some time to finish.</p>
<h3 id="Step-2-Identify-and-Kill-the-Conflicting-Process"><a href="#Step-2-Identify-and-Kill-the-Conflicting-Process" class="headerlink" title="Step 2: Identify and Kill the Conflicting Process"></a>Step 2: Identify and Kill the Conflicting Process</h3><font style="color:rgb(12, 13, 14);">If a process is already running with </font>`<font style="color:rgb(12, 13, 14);">apt</font>`<font style="color:rgb(12, 13, 14);"> (such as </font>`<font style="color:rgb(12, 13, 14);">apt-get</font>`<font style="color:rgb(12, 13, 14);"> or </font>`<font style="color:rgb(12, 13, 14);">aptitude</font>`<font style="color:rgb(12, 13, 14);">), the best thing to do is just to let it finish what its doing. However, if waiting isn't an option or you suspect the process is stuck, you can manually terminate it using the following command:</font>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">kill</span> &lt;PID of the process (2nd column <span class="keyword">in</span> output of ps aux)&gt;</span><br></pre></td></tr></table></figure>
<p>After making sure there is no process, you can retry your original <code>apt</code> command.</p>
<p><em>Note</em>: Only kill processes you’re sure are causing the conflict, as terminating essential system processes can lead to instability.</p>
<h3 id="Step-3-Remove-the-Lock-Files-Use-With-Caution"><a href="#Step-3-Remove-the-Lock-Files-Use-With-Caution" class="headerlink" title="Step 3: Remove the Lock Files (Use With Caution)"></a>Step 3: Remove the Lock Files (Use With Caution)</h3><p>If there’s no active process but the error persists, the lock file may have been left over by a previous interrupted process. You can manually delete the lock file:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /var/lib/apt/lists/lock</span><br></pre></td></tr></table></figure>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The “Could not get lock /var/lib/apt/lists/lock” error is common but manageable. By following these steps, you should be able to identify the cause of the lock conflict and resolve it without disrupting your system. Remember to handle lock files carefully, as forced deletions or kills should only be used as a last resort.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>HowTo</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Install Node JS Latest Long-Term Support Version on Ubuntu 22.04?</title>
    <url>/2024/11/10/how-to-install-node-js-latest-long-term-support-version-on-ubuntu-22-04/</url>
    <content><![CDATA[<blockquote>
<p>Node.js is a free, open-source, cross-platform JavaScript runtime environment that lets developers create servers, web apps, command line tools and scripts.</p>
</blockquote>
<p>Node.js is a powerful JavaScript runtime that lets you build scalable and high-performance applications. With the release of Node.js v22, developers now have access to new features, improvements, and bug fixes. This article will guide you step-by-step on how to install Node.js v22 on Ubuntu 22.04.</p>
<h2 id="Step-1-Update-Your-Package-Index"><a href="#Step-1-Update-Your-Package-Index" class="headerlink" title="Step 1: Update Your Package Index"></a>Step 1: Update Your Package Index</h2><p>Before installing any packages, it’s important to update your system’s package index. This ensures you’re installing the latest versions available in the repository.</p>
<p>Open your terminal and run the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>
<h2 id="Step-2-Install-Required-Dependencies"><a href="#Step-2-Install-Required-Dependencies" class="headerlink" title="Step 2: Install Required Dependencies"></a>Step 2: Install Required Dependencies</h2><p>Node.js v22 may require certain dependencies to be installed on your system. Install them using the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install curl gnupg2 lsb-release</span><br></pre></td></tr></table></figure>
<p>These packages are required to download and manage the Node.js installation scripts and repository keys.</p>
<h2 id="Step-3-Add-NodeSource-Repository"><a href="#Step-3-Add-NodeSource-Repository" class="headerlink" title="Step 3: Add NodeSource Repository"></a>Step 3: Add NodeSource Repository</h2><p>To install the specific version of Node.js (v22), you will need to add the NodeSource repository. NodeSource provides an official repository with pre-built packages for various versions of Node.js.</p>
<p>Run the following command to add the NodeSource repository for Node.js v22:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_22.x | <span class="built_in">sudo</span> -E bash -</span><br></pre></td></tr></table></figure>
<p>This script will automatically detect your Ubuntu version and configure the repository for Node.js v22.</p>
<h2 id="Step-4-Install-Node-js-v22"><a href="#Step-4-Install-Node-js-v22" class="headerlink" title="Step 4: Install Node.js v22"></a>Step 4: Install Node.js v22</h2><p>After adding the repository, you can now install Node.js v22. Simply run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install -y nodejs</span><br></pre></td></tr></table></figure>
<p>This will install Node.js along with the npm (Node Package Manager) that comes bundled with it.</p>
<h2 id="Step-5-Verify-the-Installation"><a href="#Step-5-Verify-the-Installation" class="headerlink" title="Step 5: Verify the Installation"></a>Step 5: Verify the Installation</h2><p>Once the installation is complete, you can verify that Node.js v22 is installed correctly by checking the version of Node.js and npm.</p>
<p>To check the Node.js version, run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>
<p>This should return something like:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v22.x.x</span><br></pre></td></tr></table></figure>
<p>To check the npm version, run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<p>This will confirm that npm has also been installed successfully.</p>
<h2 id="Step-6-Optional-Install-Build-Tools"><a href="#Step-6-Optional-Install-Build-Tools" class="headerlink" title="Step 6: (Optional) Install Build Tools"></a>Step 6: (Optional) Install Build Tools</h2><p>If you’re planning to build native add-ons or work with some npm packages that require compiling, you may need to install additional build tools:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install -y build-essential</span><br></pre></td></tr></table></figure>
<p>This will install the necessary compilers and libraries for building native modules.</p>
<h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><ul>
<li><strong>Problem:</strong> After installation, <code>node</code> or <code>npm</code> commands aren’t recognized.<ul>
<li><strong>Solution:</strong> Make sure that <code>/usr/local/bin</code> is in your system’s <code>PATH</code>. You can check this by running <code>echo $PATH</code> and adding the directory if it’s missing.</li>
</ul>
</li>
<li><strong>Problem:</strong> Some packages fail to build or install.<ul>
<li><strong>Solution:</strong> Installing <code>build-essential</code> should resolve most compilation issues.</li>
</ul>
</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>You’ve successfully installed Node.js v22 on Ubuntu 22.04. Whether you’re developing a new project or maintaining an existing one, Node.js v22 offers the latest features to help you build high-performance applications. If you encounter any issues during the installation, be sure to check the official Node.js documentation or ask the community for help.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>HowTo</tag>
        <tag>ubuntu</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Getting Started with YAML</title>
    <url>/2024/08/27/yaml-tutorial/</url>
    <content><![CDATA[<p>If you’re working with configuration files, data serialization, or DevOps tools, you might have encountered <strong>YAML</strong> (YAML Ain’t Markup Language). YAML is popular for its simplicity and readability, making it an excellent choice for defining configuration files. In this blog post, we’ll introduce you to YAML, explain its syntax, and provide examples to help you get started.</p>
<h2 id="What-is-YAML"><a href="#What-is-YAML" class="headerlink" title="What is YAML?"></a>What is YAML?</h2><p>YAML (pronounced /ˈjæməl/) is a human-readable data serialization format that is often used for configuration files and data exchange between programming languages. It’s designed to be easily readable and writable by humans, which is why it’s favored in many domains, including DevOps (e.g., Ansible, Kubernetes, Docker Compose).</p>
<p>Its basic syntax rules are:</p>
<ol>
<li>Case-sensitive.</li>
<li>Uses indentation to represent hierarchical relationships.</li>
<li>Tabs are not allowed for indentation; only spaces are permitted.</li>
<li>The number of spaces in indentation doesn’t matter, as long as elements at the same level are aligned.</li>
<li>‘#’ indicates a comment; everything from this character to the end of the line is ignored by the parser.</li>
</ol>
<p>YAML supports three types of data structures:</p>
<ol>
<li>Objects: Collections of key-value pairs, also known as mappings, hashes, or dictionaries.</li>
<li>Arrays: Ordered lists of values, also called sequences or lists.</li>
<li>Scalars: Single, indivisible values.</li>
</ol>
<p>Let’s explore each of these data structures in more detail.</p>
<h2 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h2><p>In YAML, key-value pairs are represented using a colon(<code>:</code>).<br>For example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Johnson</span> <span class="string">Lin</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">28</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>The basic building block of YAML is a key-value pair, where a key is followed by a colon <code>:</code> and a value.</li>
<li>Indentation (usually 2 spaces) defines nested structures.</li>
</ul>
<p>This translates to JavaScript as:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">name</span>: <span class="string">&#x27;Johnson Lin&#x27;</span>, <span class="attr">age</span>: <span class="number">28</span> &#125;</span><br></pre></td></tr></table></figure><br>YAML also supports another format where all key-value pairs are written as an inline object:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">person:</span> &#123; <span class="attr">name:</span> <span class="string">Johnson</span> <span class="string">Lin</span>, <span class="attr">age:</span> <span class="number">28</span> &#125;</span><br></pre></td></tr></table></figure><br>In JavaScript, this becomes:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">person</span>: &#123; <span class="attr">name</span>: <span class="string">&#x27;Johnson Lin&#x27;</span>, <span class="attr">age</span>: <span class="number">28</span> &#125; &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h2><p>A list of items starting with hyphens forms an array:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">Apple</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Banana</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Cherry</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>YAML lists are indicated by a hyphen <code>-</code>, with each list item on a new line and indented.</li>
</ul>
<p>In JavaScript, this translates to:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[ <span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Cherry&#x27;</span> ]</span><br></pre></td></tr></table></figure><br>If an array is a sub-member of a data structure, it can be indented below the item:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">Apple</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Banana</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Cherry</span></span><br></pre></td></tr></table></figure><br>This becomes in JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[ [ <span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Cherry&#x27;</span> ] ]</span><br></pre></td></tr></table></figure><br>Arrays can also be represented inline:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fruits:</span> [<span class="string">Apple</span>, <span class="string">Banana</span>, <span class="string">Cherry</span>]</span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">fruits</span>: [ <span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Cherry&#x27;</span> ] &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Composite-Structures"><a href="#Composite-Structures" class="headerlink" title="Composite Structures"></a>Composite Structures</h2><p>Objects and arrays can be combined to form complex structures:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">application:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">MyApp</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">UserService</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">OrderService</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ProductService</span></span><br></pre></td></tr></table></figure><br>In JavaScript, this looks like:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">services</span>: [ <span class="string">&#x27;UserService&#x27;</span>, <span class="string">&#x27;OrderService&#x27;</span>, <span class="string">&#x27;ProductService&#x27;</span> ],</span><br><span class="line">  <span class="attr">application</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;MyApp&#x27;</span>,</span><br><span class="line">    <span class="attr">version</span>: <span class="string">&#x27;1.0.0&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Scalars"><a href="#Scalars" class="headerlink" title="Scalars"></a>Scalars</h2><p>Scalars are the most basic, indivisible values. In JavaScript, these include:</p>
<ul>
<li>Strings</li>
<li>Booleans</li>
<li>Integers</li>
<li>Floats</li>
<li>Null</li>
<li>Dates</li>
</ul>
<p>Scalars are represented directly as literals:<br>For example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">number:</span> <span class="number">20.32</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">number</span>: <span class="number">20.32</span> &#125;</span><br></pre></td></tr></table></figure><br>Booleans are represented as <code>true</code> or <code>false</code>:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">isNumber:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">isNumber</span>: <span class="literal">true</span> &#125;</span><br></pre></td></tr></table></figure><br><code>null</code> is represented as <code>~</code>:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">~</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">image</span>: <span class="literal">null</span> &#125;</span><br></pre></td></tr></table></figure><br>Dates use the ISO 8601 format:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">iso8601:</span> <span class="number">2024-08-27T02:29:19.10-08:00</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">iso8601</span>: <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2024-08-27T02:29:19.10-08:00&#x27;</span>) &#125;</span><br></pre></td></tr></table></figure><br>Dates in ISO 8601 format can also be represented by year, month, and day:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="number">2024-08-27</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">date</span>: <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2024-08-27&#x27;</span>) &#125;</span><br></pre></td></tr></table></figure><br>YAML allows type coercion with double exclamation marks:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">n:</span> <span class="type">!!str</span> <span class="number">7890</span></span><br><span class="line"><span class="attr">f:</span> <span class="type">!!str</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">n</span>: <span class="string">&#x27;7890&#x27;</span>, <span class="attr">f</span>: <span class="string">&#x27;true&#x27;</span> &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h2><p>Strings do not require quotes unless they contain special characters or whitespace.<br>Example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">str:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">a</span> <span class="string">string</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">str</span>: <span class="string">&#x27;This is a string&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><br>If a string contains spaces or special characters, it needs to be enclosed in quotes.<br>Example:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">str: &#x27;Johnson: Hello, World!&#x27;</span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">str</span>: <span class="string">&#x27;Johnson: Hello, World!&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><br>Both single and double quotes can be used, but double quotes do not escape special characters.<br>Examples:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">s1:</span> <span class="string">&#x27;Content\nString&#x27;</span></span><br><span class="line"><span class="attr">s2:</span> <span class="string">&quot;Content\nString&quot;</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">s1</span>: <span class="string">&#x27;Content\\nString&#x27;</span>, <span class="attr">s2</span>: <span class="string">&#x27;Content\nString&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><br>To escape single quotes within single-quoted strings, use two single quotes.<br>Example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">str:</span> <span class="string">&#x27;It&#x27;</span><span class="string">&#x27;s cloudy today.&#x27;</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">str</span>: <span class="string">&#x27;It\&#x27;s cloudy today.&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><br>Strings can span multiple lines. From the second line, there must be a single space indentation. Newlines are replaced with spaces.<br>Example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">str:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">a</span></span><br><span class="line">  <span class="string">multi-line</span></span><br><span class="line">  <span class="string">string</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">str</span>: <span class="string">&#x27;This is a multi-line string&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><br>Multi-line strings can preserve newlines using <code>|</code> or fold newlines using <code>&gt;</code>.<br>Example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">this:</span> <span class="string">|</span></span><br><span class="line"><span class="string">  Foo</span></span><br><span class="line"><span class="string">  Bar</span></span><br><span class="line"><span class="string"></span><span class="attr">that:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">  Foo</span></span><br><span class="line"><span class="string">  Bar</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">this</span>: <span class="string">&#x27;Foo\nBar\n&#x27;</span>, <span class="attr">that</span>: <span class="string">&#x27;Foo Bar\n&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><br><code>+</code> keeps trailing newlines, while <code>-</code> removes them.<br>Examples:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">s1:</span> <span class="string">|</span></span><br><span class="line"><span class="string">  Foo</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="attr">s2:</span> <span class="string">|+</span></span><br><span class="line"><span class="string">  Foo</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="attr">s3:</span> <span class="string">|-</span></span><br><span class="line">  <span class="string">Foo</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">s1</span>: <span class="string">&#x27;Foo\n&#x27;</span>, <span class="attr">s2</span>: <span class="string">&#x27;Foo\n\n\n&#x27;</span>, <span class="attr">s3</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;</span><br></pre></td></tr></table></figure><br>HTML tags can be included in strings.<br>Example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">message:</span> <span class="string">|</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&lt;p</span> <span class="string">style=&quot;color:</span> <span class="string">red&quot;&gt;</span></span><br><span class="line">    <span class="string">Paragraph</span></span><br><span class="line">  <span class="string">&lt;/p&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">message</span>: <span class="string">&#x27;\n&lt;p style=&quot;color: red&quot;&gt;\n  Paragraph\n&lt;/p&gt;\n&#x27;</span> &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h2><p>Comments in YAML begin with a hash <code>#</code> and can be placed anywhere in the file.<br>Example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This is a comment</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Johnson</span> <span class="string">Lin</span>  <span class="comment"># Inline comment</span></span><br></pre></td></tr></table></figure></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>Anchor (<code>&amp;</code>) and alias (<code>*</code>) can be used for references.<br>Example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">defaults:</span> <span class="meta">&amp;defaults</span></span><br><span class="line">  <span class="attr">adapter:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line"></span><br><span class="line"><span class="attr">development:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">myapp_development</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*defaults</span></span><br><span class="line"></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">myapp_test</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*defaults</span></span><br></pre></td></tr></table></figure><br>Equivalent JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">defaults</span>: &#123;</span><br><span class="line">  <span class="attr">adapter</span>: <span class="string">&#x27;postgres&#x27;</span>,</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">development</span>: &#123;</span><br><span class="line">  <span class="attr">database</span>: <span class="string">&#x27;myapp_development&#x27;</span>,</span><br><span class="line">  <span class="attr">adapter</span>: <span class="string">&#x27;postgres&#x27;</span>,</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">test</span>: &#123;</span><br><span class="line">  <span class="attr">database</span>: <span class="string">&#x27;myapp_test&#x27;</span>,</span><br><span class="line">  <span class="attr">adapter</span>: <span class="string">&#x27;postgres&#x27;</span>,</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><code>&amp;</code> creates an anchor (defaults), <code>&lt;&lt;</code> merges into the current data, and <code>*</code> references the anchor.<br>Another example:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&amp;showell</span> <span class="string">Steve</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Clark</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Brian</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Oren</span></span><br><span class="line"><span class="bullet">-</span> <span class="meta">*showell</span></span><br></pre></td></tr></table></figure><br>In JavaScript:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[ <span class="string">&#x27;Steve&#x27;</span>, <span class="string">&#x27;Clark&#x27;</span>, <span class="string">&#x27;Brian&#x27;</span>, <span class="string">&#x27;Oren&#x27;</span>, <span class="string">&#x27;Steve&#x27;</span> ]</span><br></pre></td></tr></table></figure></p>
<h2 id="Functions-and-Regular-Expressions"><a href="#Functions-and-Regular-Expressions" class="headerlink" title="Functions and Regular Expressions"></a>Functions and Regular Expressions</h2><p>The <a href="https://github.com/nodeca/js-yaml">JS-YAML</a> library allows functions and regular expressions to be converted to strings.<br>Example <code>example.yml</code>:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fn:</span> <span class="string">function</span> <span class="string">()</span> &#123; <span class="string">return</span> <span class="number">1</span> &#125;</span><br><span class="line"><span class="attr">reg:</span> <span class="string">/test/</span></span><br></pre></td></tr></table></figure><br>Parsing code:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> yaml = <span class="built_in">require</span>(<span class="string">&#x27;js-yaml&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs   = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> doc = yaml.<span class="title function_">load</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./example.yml&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>));</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(doc);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Converting JavaScript objects back to YAML:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> yaml = <span class="built_in">require</span>(<span class="string">&#x27;js-yaml&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs   = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">fn</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123; <span class="keyword">return</span> <span class="number">1</span> &#125;,</span><br><span class="line">  <span class="attr">reg</span>: <span class="regexp">/test/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  fs.<span class="title function_">writeFileSync</span>(<span class="string">&#x27;./example.yml&#x27;</span>, yaml.<span class="title function_">dump</span>(obj), <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="YAML-vs-JSON"><a href="#YAML-vs-JSON" class="headerlink" title="YAML vs. JSON"></a>YAML vs. JSON</h2><p>YAML and JSON are both data serialization formats, but YAML is often considered more human-friendly due to its clean syntax. For example, YAML doesn’t require curly braces <code>&#123;&#125;</code>, square brackets <code>[]</code>, or commas <code>,</code>. This makes YAML files easier to write and maintain, especially when working with complex configurations.</p>
<h2 id="YAML-Example"><a href="#YAML-Example" class="headerlink" title="YAML Example"></a>YAML Example</h2><p>Here’s a more detailed example that showcases different YAML features:<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># YAML configuration file example</span></span><br><span class="line"><span class="attr">application:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">MyApp</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">environment:</span> <span class="string">production</span></span><br><span class="line"></span><br><span class="line"><span class="attr">database:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">admin</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">secret</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:latest</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_USER:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">secret</span></span><br></pre></td></tr></table></figure><br>In this example:</p>
<ul>
<li><strong>application:</strong> is a dictionary containing the app’s name and version.</li>
<li><strong>environment:</strong> is a simple key-value pair.</li>
<li><strong>database:</strong> is another dictionary defining database configuration.</li>
<li><strong>services:</strong> is a list of dictionaries, each describing a service with its configuration.</li>
</ul>
<h2 id="Common-YAML-Syntax-Errors"><a href="#Common-YAML-Syntax-Errors" class="headerlink" title="Common YAML Syntax Errors"></a>Common YAML Syntax Errors</h2><ul>
<li><strong>Indentation Errors:</strong> YAML relies on consistent indentation. Make sure you use spaces (not tabs) and maintain the same number of spaces for each level.</li>
<li><strong>Colons and Spaces:</strong> Ensure there is a space after the colon in key-value pairs (e.g., <code>key: value</code>).</li>
<li><strong>Special Characters:</strong> If a value contains special characters (e.g., <code>:</code> or <code>#</code>), wrap it in quotes.</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>YAML is a powerful, yet simple, data serialization format that’s widely used for configuration files and data exchange. Its clear and concise syntax makes it easy to write and maintain, especially for complex structures. As you start working with YAML, remember to focus on proper indentation and structure to avoid common syntax errors.</p>
<p><strong>Pro Tip:</strong> Use online tools like <a href="https://www.yamllint.com/">YAML Lint</a> to validate your YAML files and catch errors early.</p>
<p>Now that you’ve got the basics down, you’re ready to start writing YAML files for your projects. Happy configuring! </p>
<p>Reference Links:<br><a href="https://yaml.org/spec/1.2.2/">YAML 1.2 Specification</a><br><a href="https://en.wikipedia.org/wiki/YAML">YAML on Wikipedia</a><br><a href="https://yaml.org/YAML_for_ruby.html">YAML for Ruby</a></p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>YAML</tag>
      </tags>
  </entry>
  <entry>
    <title>Solving Mac System Port Occupation Issues</title>
    <url>/2024/08/05/solving-macos-port-occupation-issues/</url>
    <content><![CDATA[<p>Port occupation issues on a Mac system can be frustrating, especially when you need specific ports for applications or services. Here’s a guide on how to troubleshoot and resolve these problems effectively:</p>
<h2 id="Understanding-Port-Occupation"><a href="#Understanding-Port-Occupation" class="headerlink" title="Understanding Port Occupation"></a>Understanding Port Occupation</h2><p>Ports on your Mac are pathways through which network and internet data travel. When a port is occupied, it means that some application or service is currently using that port, preventing other applications from using it simultaneously.</p>
<h2 id="Steps-to-Resolve-Port-Occupation-Problems"><a href="#Steps-to-Resolve-Port-Occupation-Problems" class="headerlink" title="Steps to Resolve Port Occupation Problems:"></a>Steps to Resolve Port Occupation Problems:</h2><ol>
<li><p><strong>Identify the Occupying Application:</strong></p>
<ul>
<li><p>Use the Terminal to check which application or process is using the port. You can do this using the <code>lsof</code> (list open files) command combined with <code>grep</code> to filter results. For example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo lsof -i :&lt;port_number&gt; | grep LISTEN</span><br></pre></td></tr></table></figure>
</li>
<li><p>Replace <code>&lt;port_number&gt;</code> with the specific port number you’re investigating.</p>
</li>
</ul>
</li>
<li><p><strong>Terminate the Process:</strong></p>
<ul>
<li><p>Once you identify the process using the port, you can terminate it using the <code>kill</code> command followed by the process ID (PID). For example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo kill -9 &lt;PID&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Replace <code>&lt;PID&gt;</code> with the process ID you obtained from the <code>lsof</code> command.</p>
</li>
</ul>
</li>
<li><strong>Check System and Network Settings:</strong><ul>
<li>Sometimes, ports might be occupied due to system configurations or network settings. Review network configurations and firewall settings to ensure they are not inadvertently blocking or redirecting traffic on the required ports.</li>
</ul>
</li>
<li><strong>Use Activity Monitor:</strong><ul>
<li>The Activity Monitor application can also help identify processes using network resources, including ports. Look under the Network tab in Activity Monitor to view which processes are using network connections.</li>
</ul>
</li>
<li><strong>Restart Applications or Services:</strong><ul>
<li>If terminating the process frees up the port but disrupts necessary functionality, consider restarting the application or service gracefully. This often resolves port occupation without compromising ongoing tasks.</li>
</ul>
</li>
<li><strong>Consult Application Documentation:</strong><ul>
<li>Some applications might have specific instructions or settings related to port usage. Refer to their documentation or support resources for guidance on configuring ports or resolving conflicts.</li>
</ul>
</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Resolving port occupation issues on a Mac involves identifying the source of the conflict and taking appropriate action, whether it’s terminating processes, adjusting settings, or restarting services. By following these steps, you can effectively manage and troubleshoot port issues, ensuring smooth operation of your applications and services.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
  </entry>
  <entry>
    <title>How to Fix the &quot;Shadows name from outer scope&quot; Warning in PyCharm</title>
    <url>/2024/08/28/how-to-fix-shadows-name-from-outer-scope-warning-in-pycharm/</url>
    <content><![CDATA[<blockquote>
<p>This article provides a comprehensive guide on how to fix the “Shadows name from outer scope” warning in PyCharm. It explains the issue, why it’s problematic, and offers multiple solutions with code examples. The article also includes best practices to avoid name shadowing in the future. This information should be helpful for Python developers using PyCharm who encounter this warning and want to improve their code quality.</p>
</blockquote>
<p>If you’re a Python developer using PyCharm, you may have encountered the “Shadows name from outer scope” warning. This article will explain what this warning means and how to fix it, improving your code quality and readability.</p>
<h2 id="What-Does-“Shadows-name-from-outer-scope”-Mean"><a href="#What-Does-“Shadows-name-from-outer-scope”-Mean" class="headerlink" title="What Does “Shadows name from outer scope” Mean?"></a>What Does “Shadows name from outer scope” Mean?</h2><p>The “Shadows name from outer scope” warning occurs when you define a variable inside a function or class that has the same name as a variable in the outer scope. This can lead to confusion and potential bugs, as the inner variable “shadows” or hides the outer one.</p>
<p>Let’s look at the following code snippet as an example:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">access_token = <span class="string">&quot;Hao6aAige5ap8enas6Fa8qugeeQu9Uik&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_tag</span>(<span class="params">access_token</span>): <span class="comment"># Warning: Shadows name &#x27;access_token&#x27; from outer scope</span></span><br><span class="line">    <span class="built_in">print</span>(access_token)</span><br><span class="line"></span><br><span class="line">list_tag(access_token)</span><br></pre></td></tr></table></figure></p>
<p>As you can see, we define <code>access_token</code> in the global scope on the first line, and then reuse the same name in the <code>list_tag</code> function. In PyCharm, using the same name inside and outside a function is called “shadowing,” which triggers the warning “Shadows name ‘access_token’ from outer scope”. This is just a warning and won’t prevent the code from running.</p>
<p>While this example works fine, consistently ignoring such warnings could lead to unexpected behavior in the future.</p>
<p>Imagine the <code>list_tag</code> function becomes more complex with multiple parameters and internal logic. You decide to manually rename <code>access_token</code> to <code>token</code> within the function, but miss a few instances.</p>
<p>If you run this code again, it might appear to work, but the final result could be odd. This is because <code>access_token</code> now refers to the global object, while <code>token</code> refers to the local object. They’re different, but you’re mixing them up within the function.</p>
<p>To avoid such issues, it’s best to address the warning by using distinct names for variables in different scopes, or by explicitly using the <code>global</code> keyword when you intend to modify the global variable within a function.</p>
<h2 id="Why-Is-This-a-Problem"><a href="#Why-Is-This-a-Problem" class="headerlink" title="Why Is This a Problem?"></a>Why Is This a Problem?</h2><ol>
<li><strong>Readability</strong>: It can make your code harder to understand, as it’s not immediately clear which variable is being referenced.</li>
<li><strong>Maintainability</strong>: It can lead to errors if you or another developer mistakenly assume you’re using the outer variable.</li>
<li><strong>Unexpected behavior</strong>: The code might not behave as intended if you’re unknowingly using the inner variable instead of the outer one.</li>
</ol>
<h2 id="How-to-Fix-the-Warning"><a href="#How-to-Fix-the-Warning" class="headerlink" title="How to Fix the Warning"></a>How to Fix the Warning</h2><p>Now that we understand the reason behind this warning, the solution is straightforward: <strong>avoid reusing the same name in different scopes of your code.</strong></p>
<p>This approach offers two key benefits:</p>
<ol>
<li>It reduces the likelihood of unexpected behavior in your code.</li>
<li>It simplifies debugging, as Python will raise a <code>NameError</code> if it can’t find either a global or local name.</li>
</ol>
<p>Here are some practical ways to resolve the “Shadows name from outer scope” warning:</p>
<h3 id="1-Rename-the-Inner-Variable"><a href="#1-Rename-the-Inner-Variable" class="headerlink" title="1. Rename the Inner Variable"></a>1. Rename the Inner Variable</h3><p>The simplest solution is to give the inner variable a different name:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">access_token = <span class="string">&quot;Hao6aAige5ap8enas6Fa8qugeeQu9Uik&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_tag</span>(<span class="params">local_token</span>): <span class="comment"># Changed from access_token to local_token</span></span><br><span class="line">    <span class="built_in">print</span>(local_token)</span><br><span class="line"></span><br><span class="line">list_tag(access_token)</span><br></pre></td></tr></table></figure></p>
<p>Alternatively, you can move the global variable into another function like this:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">list_tag</span>(<span class="params">access_token</span>):</span><br><span class="line">    <span class="built_in">print</span>(access_token)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    access_token = <span class="string">&quot;Hao6aAige5ap8enas6Fa8qugeeQu9Uik&quot;</span></span><br><span class="line">    list_tag(access_token)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><br>Note that if your code structure looks like this:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">list_tag</span>(<span class="params">access_token</span>): <span class="comment"># Warning: Shadows name &#x27;access_token&#x27; from outer scope</span></span><br><span class="line">    <span class="built_in">print</span>(access_token)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    access_token = <span class="string">&quot;Hao6aAige5ap8enas6Fa8qugeeQu9Uik&quot;</span></span><br><span class="line">    list_tag(access_token)</span><br></pre></td></tr></table></figure><br>You’ll still get the warning “Shadows name ‘access_token’ from outer scope”.</p>
<p>This happens because <code>access_token</code> is defined as a global variable within the <code>if</code> block. The <code>if __name__ == &#39;__main__&#39;:</code> is a Python idiom used to determine if a module is being run directly as a script, but it’s not a function. Therefore, variables defined within it are still considered global.</p>
<h3 id="2-Use-a-More-Descriptive-Name"><a href="#2-Use-a-More-Descriptive-Name" class="headerlink" title="2. Use a More Descriptive Name"></a>2. Use a More Descriptive Name</h3><p>Often, using a more descriptive name can not only fix the warning but also improve code clarity:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_items</span>(<span class="params">items</span>):</span><br><span class="line">    processed_count = <span class="number">0</span>  <span class="comment"># More descriptive than just &#x27;count&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">        <span class="comment"># Process item</span></span><br><span class="line">        processed_count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> processed_count</span><br></pre></td></tr></table></figure></p>
<h3 id="3-Use-the-global-Keyword"><a href="#3-Use-the-global-Keyword" class="headerlink" title="3. Use the global Keyword"></a>3. Use the <code>global</code> Keyword</h3><p>If you intend to modify the outer variable within the function, use the <code>global</code> keyword:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">total = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_to_total</span>(<span class="params">value</span>):</span><br><span class="line">    <span class="keyword">global</span> total</span><br><span class="line">    total += value</span><br></pre></td></tr></table></figure><br>Note: Use <code>global</code> sparingly, as it can make code harder to understand and maintain.</p>
<h3 id="4-Pass-the-Outer-Variable-as-an-Argument"><a href="#4-Pass-the-Outer-Variable-as-an-Argument" class="headerlink" title="4. Pass the Outer Variable as an Argument"></a>4. Pass the Outer Variable as an Argument</h3><p>Instead of accessing the outer variable directly, pass it as an argument:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">config = &#123;<span class="string">&#x27;debug&#x27;</span>: <span class="literal">True</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">log_message</span>(<span class="params">message, config_param</span>):</span><br><span class="line">    <span class="keyword">if</span> config_param[<span class="string">&#x27;debug&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line">log_message(<span class="string">&quot;Debug info&quot;</span>, config)</span><br></pre></td></tr></table></figure></p>
<h3 id="5-Use-a-Class-to-Encapsulate-State"><a href="#5-Use-a-Class-to-Encapsulate-State" class="headerlink" title="5. Use a Class to Encapsulate State"></a>5. Use a Class to Encapsulate State</h3><p>For more complex scenarios, consider using a class to manage state:<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Counter</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">increment</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">counter = Counter()</span><br><span class="line">counter.increment()</span><br><span class="line"><span class="built_in">print</span>(counter.count)  <span class="comment"># Outputs: 1</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Best-Practices-to-Avoid-Name-Shadowing"><a href="#Best-Practices-to-Avoid-Name-Shadowing" class="headerlink" title="Best Practices to Avoid Name Shadowing"></a>Best Practices to Avoid Name Shadowing</h2><ol>
<li><strong>Use unique, descriptive names</strong>: Make your variable names clear and specific to their purpose.</li>
<li><strong>Keep functions small and focused</strong>: This reduces the likelihood of name conflicts.</li>
<li><strong>Use linters and IDE warnings</strong>: Tools like PyCharm’s built-in inspections can help catch these issues early.</li>
<li><strong>Review your code regularly</strong>: Regular code reviews can help identify and prevent name shadowing.</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Understanding and addressing the “Shadows name from outer scope” warning in PyCharm will help you write cleaner, more maintainable Python code. By following the strategies outlined in this article, you can improve your code’s readability and reduce the potential for bugs caused by name shadowing.</p>
<p>Remember, clear and intentional variable naming is key to writing good Python code. Always strive for clarity and consistency in your naming conventions, and your future self (and your colleagues) will thank you!</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>HowTo</tag>
      </tags>
  </entry>
  <entry>
    <title>5 Ways to Concatenate Strings in Python 3</title>
    <url>/2024/08/29/5-ways-to-concatenate-strings-in-python3/</url>
    <content><![CDATA[<p>When working with strings in Python 3, you have several versatile methods to combine them. Here’s a look at five common ways to concatenate strings effectively:</p>
<h2 id="Using-the-Operator"><a href="#Using-the-Operator" class="headerlink" title="Using the + Operator"></a>Using the <code>+</code> Operator</h2><p>The <code>+</code> operator is a straightforward and intuitive way to join strings. Simply place the <code>+</code> sign between strings and, if needed, include separators.<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;Hello&quot;</span></span><br><span class="line">str2 = <span class="string">&quot;World&quot;</span></span><br><span class="line">result = str1 + <span class="string">&quot; &quot;</span> + str2</span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># Output: Hello World</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Using-the-join-Method"><a href="#Using-the-join-Method" class="headerlink" title="Using the join() Method"></a>Using the <code>join()</code> Method</h2><p>The <code>join()</code> method is perfect for concatenating multiple strings with a specific separator. This method is particularly useful when working with lists of strings.<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;Hello&quot;</span></span><br><span class="line">str2 = <span class="string">&quot;World&quot;</span></span><br><span class="line">result = <span class="string">&quot; &quot;</span>.join([str1, str2])</span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># Output: Hello World</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Using-f-Strings-Formatted-String-Literals"><a href="#Using-f-Strings-Formatted-String-Literals" class="headerlink" title="Using f-Strings (Formatted String Literals)"></a>Using f-Strings (Formatted String Literals)</h2><p>f-Strings, available in Python 3.6 and later, offer a modern and efficient way to format and concatenate strings. Place variables inside curly braces within the string.<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;Hello&quot;</span></span><br><span class="line">str2 = <span class="string">&quot;World&quot;</span></span><br><span class="line">result = <span class="string">f&quot;<span class="subst">&#123;str1&#125;</span> <span class="subst">&#123;str2&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># Output: Hello World</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Using-Formatting"><a href="#Using-Formatting" class="headerlink" title="Using % Formatting"></a>Using <code>%</code> Formatting</h2><p>Although older, <code>%</code> formatting remains a valid method for string concatenation. This approach uses <code>%</code> to format the string with variables.<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;Hello&quot;</span></span><br><span class="line">str2 = <span class="string">&quot;World&quot;</span></span><br><span class="line">result = <span class="string">&quot;%s %s&quot;</span> % (str1, str2)</span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># Output: Hello World</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Using-the-format-Method"><a href="#Using-the-format-Method" class="headerlink" title="Using the format() Method"></a>Using the <code>format()</code> Method</h2><p>The <code>format()</code> method allows you to insert variables into a string using placeholders. It’s versatile and can handle more complex formatting.<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;Hello&quot;</span></span><br><span class="line">str2 = <span class="string">&quot;World&quot;</span></span><br><span class="line">result = <span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(str1, str2)</span><br><span class="line"><span class="built_in">print</span>(result)  <span class="comment"># Output: Hello World</span></span><br></pre></td></tr></table></figure></p>
<p>Each of these methods can be used depending on your specific needs and preferences. Experiment with them to find the one that works best for your code.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Differences Between the return and exit Commands in Bash</title>
    <url>/2024/08/30/differences-between-the-return-and-exit-commands-in-bash/</url>
    <content><![CDATA[<p>When working with Bash scripts, understanding the nuances of commands like <code>return</code> and <code>exit</code> is crucial for effective scripting. Both commands are used to control the flow of execution, but they serve different purposes and are used in distinct contexts. In this blog post, we’ll explore the differences between <code>return</code> and <code>exit</code>, when to use each, and how they affect your Bash scripts.</p>
<h2 id="Understanding-the-return-Command"><a href="#Understanding-the-return-Command" class="headerlink" title="Understanding the return Command"></a><strong>Understanding the </strong><code>return</code><strong> Command</strong></h2><p>The <code>return</code> command is used within a Bash function to exit the function and optionally pass a value back to the caller. It’s important to note that <code>return</code> is only valid within functions; using it outside of a function will result in an error.</p>
<p><strong>Key Points About </strong><code>return</code><strong>:</strong></p>
<ul>
<li><strong>Context</strong>: Only usable within functions.</li>
<li><strong>Purpose</strong>: Exits the function and returns a status code (an integer between 0 and 255).</li>
<li><strong>Impact</strong>: Does not terminate the entire script; only ends the function’s execution.</li>
<li><strong>Usage Example</strong>:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">my_function</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Inside the function&quot;</span></span><br><span class="line">    <span class="built_in">return</span> 42</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">my_function</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Function returned: $?&quot;</span>  <span class="comment"># Will print &quot;Function returned: 42&quot;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Understanding-the-exit-Command"><a href="#Understanding-the-exit-Command" class="headerlink" title="Understanding the exit Command"></a><strong>Understanding the </strong><code>exit</code><strong> Command</strong></h2><p>The <code>exit</code> command is used to terminate the execution of a Bash script. When called, it stops the script entirely and returns a status code to the shell. Unlike <code>return</code>, <code>exit</code> can be used anywhere in the script, not just within functions.</p>
<p><strong>Key Points About </strong><code>exit</code><strong>:</strong></p>
<ul>
<li><strong>Context</strong>: Usable anywhere in the script.</li>
<li><strong>Purpose</strong>: Terminates the entire script and returns a status code to the shell.</li>
<li><strong>Impact</strong>: Ends the script’s execution immediately.</li>
<li><strong>Usage Example</strong>:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This script will now exit.&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This will not be printed.&quot;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Comparison-Between-return-and-exit"><a href="#Comparison-Between-return-and-exit" class="headerlink" title="Comparison Between return and exit"></a>Comparison Between <code>return</code> and <code>exit</code></h2><div class="table-container">
<table>
<thead>
<tr>
<th>Feature</th>
<th><code>return</code></th>
<th><code>exit</code></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Usable Within</strong></td>
<td>Functions only</td>
<td>Anywhere in the script</td>
</tr>
<tr>
<td><strong>Purpose</strong></td>
<td>Exit a function</td>
<td>Terminate the script</td>
</tr>
<tr>
<td><strong>Return Value</strong></td>
<td>Status code to function caller</td>
<td>Status code to the shell</td>
</tr>
<tr>
<td><strong>Script Impact</strong></td>
<td>Continues script after function</td>
<td>Ends script execution entirely</td>
</tr>
</tbody>
</table>
</div>
<h2 id="When-to-Use-return-vs-exit"><a href="#When-to-Use-return-vs-exit" class="headerlink" title="When to Use return vs. exit"></a>When to Use <code>return</code> vs. <code>exit</code></h2><ul>
<li><strong>Use </strong><code>return</code> when you want to exit from a function and continue executing the rest of the script. This is particularly useful in modular scripts where functions are used to organize code.</li>
<li><strong>Use </strong><code>exit</code> when you want to stop the execution of the entire script, typically due to an error or when the script has completed its task.</li>
</ul>
<h2 id="Common-Mistakes-and-Tips"><a href="#Common-Mistakes-and-Tips" class="headerlink" title="Common Mistakes and Tips"></a>Common Mistakes and Tips</h2><ul>
<li><strong>Using </strong><code>return</code><strong> outside of a function</strong>: This will result in a syntax error. Always ensure <code>return</code> is used within a function.</li>
<li><strong>Accidental use of </strong><code>exit</code><strong> in functions</strong>: If <code>exit</code> is used within a function, it will terminate the entire script, not just the function. Be cautious when using <code>exit</code> in modular scripts.</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a><strong>Conclusion</strong></h2><p>Understanding the differences between <code>return</code> and <code>exit</code> in Bash is essential for writing efficient and error-free scripts. Remember that <code>return</code> is used within functions to pass control and a status code back to the caller, while <code>exit</code> is used to terminate the entire script and return a status code to the shell. Using these commands correctly will help you write more robust and maintainable Bash scripts.<br>Feel free to experiment with both commands in your scripts to see how they behave in different scenarios.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>A Deep Dive into the apt Command: Linux Package Management Simplified</title>
    <url>/2024/08/16/a-deep-dive-into-the-apt-command-linux-package-management-simplified/</url>
    <content><![CDATA[<p>The <code>apt</code> command is a powerful tool used for managing packages on Debian-based Linux distributions such as Ubuntu. It simplifies the process of installing, updating, and removing software packages. Whether you’re a beginner or an experienced user, mastering the <code>apt</code> command can greatly enhance your Linux experience. In this guide, we’ll explore some of the most commonly used <code>apt</code> commands with practical examples.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt [options] [<span class="built_in">command</span>] [package ...]</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Options</strong>: Optional settings, such as -h (help), -y (automatically answer “yes” to prompts), -q (quiet mode, which suppresses the installation output), and others.</li>
<li><strong>Command</strong>: The operation to perform.</li>
<li><strong>Package</strong>: The name(s) of the package(s) to install.<h2 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h2><h3 id="h-help"><a href="#h-help" class="headerlink" title="-h, --help"></a><code>-h</code>, <code>--help</code></h3>Display an overview of functionalities, and related help.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt -h</span><br></pre></td></tr></table></figure>
or<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>
Output:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ apt -h</span><br><span class="line">apt 2.0.9 (amd64)</span><br><span class="line">Usage: apt [options] <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line">apt is a commandline package manager and provides commands <span class="keyword">for</span></span><br><span class="line">searching and managing as well as querying information about packages.</span><br><span class="line">It provides the same functionality as the specialized APT tools,</span><br><span class="line">like apt-get and apt-cache, but enables options more suitable <span class="keyword">for</span></span><br><span class="line">interactive use by default.</span><br><span class="line"></span><br><span class="line">Most used commands:</span><br><span class="line">  list - list packages based on package names</span><br><span class="line">  search - search <span class="keyword">in</span> package descriptions</span><br><span class="line">  show - show package details</span><br><span class="line">  install - install packages</span><br><span class="line">  reinstall - reinstall packages</span><br><span class="line">  remove - remove packages</span><br><span class="line">  autoremove - Remove automatically all unused packages</span><br><span class="line">  update - update list of available packages</span><br><span class="line">  upgrade - upgrade the system by installing/upgrading packages</span><br><span class="line">  full-upgrade - upgrade the system by removing/installing/upgrading packages</span><br><span class="line">  edit-sources - edit the <span class="built_in">source</span> information file</span><br><span class="line">  satisfy - satisfy dependency strings</span><br><span class="line"></span><br><span class="line">See apt(8) <span class="keyword">for</span> more information about the available commands.</span><br><span class="line">Configuration options and syntax is detailed <span class="keyword">in</span> apt.conf(5).</span><br><span class="line">Information about how to configure sources can be found <span class="keyword">in</span> sources.list(5).</span><br><span class="line">Package and version choices can be expressed via apt_preferences(5).</span><br><span class="line">Security details are available <span class="keyword">in</span> apt-secure(8).</span><br><span class="line">                                        This APT has Super Cow Powers.</span><br></pre></td></tr></table></figure>
<h3 id="v-version"><a href="#v-version" class="headerlink" title="-v, --version"></a><code>-v</code>, <code>--version</code></h3>Display the current version number.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt -v</span><br></pre></td></tr></table></figure>
or<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt --version</span><br></pre></td></tr></table></figure>
Output:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ apt --version</span><br><span class="line">apt 2.0.9 (amd64)</span><br></pre></td></tr></table></figure>
<h2 id="Most-Used-Commands"><a href="#Most-Used-Commands" class="headerlink" title="Most Used Commands"></a>Most Used Commands</h2><h3 id="1-Updating-Package-Lists"><a href="#1-Updating-Package-Lists" class="headerlink" title="1. Updating Package Lists"></a>1. <strong>Updating Package Lists</strong></h3>Before installing or upgrading any packages, it’s a good practice to update your package lists. This ensures you get the latest versions and security patches.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command downloads the package lists from the repositories configured on your system. It does not upgrade any packages but prepares your system for installation or upgrade tasks.<h3 id="2-Upgrading-Installed-Packages"><a href="#2-Upgrading-Installed-Packages" class="headerlink" title="2. Upgrading Installed Packages"></a>2. <strong>Upgrading Installed Packages</strong></h3>To upgrade all the installed packages on your system to their latest versions, use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt upgrade</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command will upgrade all the packages on your system that have updates available. It will prompt you to confirm the upgrade if necessary.<h3 id="3-Full-Upgrade"><a href="#3-Full-Upgrade" class="headerlink" title="3. Full Upgrade"></a>3. <strong>Full Upgrade</strong></h3>Sometimes, you need to perform a full upgrade, which handles changing dependencies with new versions of packages.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt full-upgrade</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command performs the same task as <code>apt upgrade</code>, but it also handles situations where new dependencies need to be installed or old dependencies need to be removed.<h3 id="4-Installing-a-New-Package"><a href="#4-Installing-a-New-Package" class="headerlink" title="4. Installing a New Package"></a>4. <strong>Installing a New Package</strong></h3>To install a new software package, use the following command:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install &lt;package-name&gt;</span><br></pre></td></tr></table></figure>
<strong>Example</strong>:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install vim</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command installs the <code>vim</code> text editor. Replace <code>&lt;package-name&gt;</code> with the name of the package you want to install.<h3 id="5-Removing-a-Package"><a href="#5-Removing-a-Package" class="headerlink" title="5. Removing a Package"></a>5. <strong>Removing a Package</strong></h3>If you want to remove a package but keep its configuration files, use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt remove &lt;package-name&gt;</span><br></pre></td></tr></table></figure>
<strong>Example</strong>:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt remove vim</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command removes the <code>vim</code> package but leaves configuration files behind in case you decide to reinstall it later.<h3 id="6-Completely-Removing-a-Package"><a href="#6-Completely-Removing-a-Package" class="headerlink" title="6. Completely Removing a Package"></a>6. <strong>Completely Removing a Package</strong></h3>To remove a package along with its configuration files, use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt purge &lt;package-name&gt;</span><br></pre></td></tr></table></figure>
<strong>Example</strong>:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt purge vim</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command not only removes the package but also deletes its configuration files.<h3 id="7-Searching-for-Packages"><a href="#7-Searching-for-Packages" class="headerlink" title="7. Searching for Packages"></a>7. <strong>Searching for Packages</strong></h3>To search for a package, use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt search &lt;search-term&gt;</span><br></pre></td></tr></table></figure>
<strong>Example</strong>:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt search vim</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command searches for packages related to the term <code>vim</code>. It helps you find packages that might be relevant to your needs.<h3 id="8-Viewing-Package-Information"><a href="#8-Viewing-Package-Information" class="headerlink" title="8. Viewing Package Information"></a>8. <strong>Viewing Package Information</strong></h3>To view detailed information about a specific package, use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt show &lt;package-name&gt;</span><br></pre></td></tr></table></figure>
<strong>Example</strong>:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt show vim</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command provides detailed information about the <code>vim</code> package, including its version, dependencies, and description.<h3 id="9-Cleaning-Up"><a href="#9-Cleaning-Up" class="headerlink" title="9. Cleaning Up"></a>9. <strong>Cleaning Up</strong></h3>To remove unused packages and clear up disk space, use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt autoremove</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command removes packages that were installed automatically to satisfy dependencies for other packages and are no longer needed.<h3 id="10-Cleaning-Up-the-Package-Cache"><a href="#10-Cleaning-Up-the-Package-Cache" class="headerlink" title="10. Cleaning Up the Package Cache"></a>10. <strong>Cleaning Up the Package Cache</strong></h3>To clear the local repository of retrieved package files, use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt clean</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command deletes all cached package files from the <code>/var/cache/apt/archives</code> directory.<h3 id="11-Listing-packages-that-can-be-updated"><a href="#11-Listing-packages-that-can-be-updated" class="headerlink" title="11. Listing packages that can be updated:"></a>11. Listing packages that can be updated:</h3>To list packages that can be updated, use:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt list --upgradeable</span><br></pre></td></tr></table></figure>
<strong>Explanation</strong>: This command displays a list of packages on your system that have updates available. It shows which packages can be upgraded, including their current and new versions, helping you decide which updates to apply.<br><strong>Example</strong>:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt list --upgradeable</span><br><span class="line">Listing... Done</span><br><span class="line">apache2-utils/focal-updates,focal-security 2.4.41-4ubuntu3.17 amd64 [upgradable from: 2.4.41-4ubuntu3.15]</span><br><span class="line">apparmor/focal-updates 2.13.3-7ubuntu5.3 amd64 [upgradable from: 2.13.3-7ubuntu5.2]</span><br><span class="line">apt-transport-https/focal-updates 2.0.10 all [upgradable from: 2.0.9]</span><br><span class="line">apt-utils/focal-updates 2.0.10 amd64 [upgradable from: 2.0.9]</span><br><span class="line">apt/focal-updates 2.0.10 amd64 [upgradable from: 2.0.9]</span><br></pre></td></tr></table></figure>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2>To install the <code>redis</code> package:<br>If you can’t remember the full package name, you can type the beginning of the name and press the <code>Tab</code> key to list matching packages. For example, if you type <code>red</code> and press <code>Tab</code>, it will show related packages.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt install red                                                                                                                        redboot-tools                 redet-doc                     redis-sentinel                redmine-pgsql                 redshift-gtk</span><br><span class="line">redeclipse                    redfishtool                   redis-server                  redmine-plugin-custom-css     redsocks</span><br><span class="line">redeclipse-common             redir                         redis-tools                   redmine-plugin-local-avatars</span><br><span class="line">redeclipse-data               redis                         redland-utils                 redmine-plugin-pretend</span><br><span class="line">redeclipse-server             redis-redisearch              redmine                       redmine-sqlite</span><br><span class="line">redet                         redis-redisearch-doc          redmine-mysql                 redshift</span><br></pre></td></tr></table></figure>
To install <code>redis</code> without upgrading it if it already exists, use the <code>--no-upgrade</code> option:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install redis --no-upgrade</span><br></pre></td></tr></table></figure>
Example:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt install redis --no-upgrade</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">Skipping redis, it is already installed and upgrade is not <span class="built_in">set</span>.</span><br><span class="line">0 upgraded, 0 newly installed, 0 to remove and 239 not upgraded.</span><br></pre></td></tr></table></figure>
To upgrade <code>redis</code> without installing it if it doesn’t already exist, use the <code>--only-upgrade</code> option:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt upgrade redis --only-upgrade</span><br></pre></td></tr></table></figure>
To specify a particular version of a package, use the following syntax:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install &lt;package_name&gt;=&lt;version_number&gt;</span><br></pre></td></tr></table></figure>
Replace <code>package_name</code> with the name of the package and <code>version_number</code> with the desired version.<br>To remove a package, use the <code>remove</code> command:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt remove redis</span><br></pre></td></tr></table></figure>
To find packages related to <code>redis</code>, use the search command:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt search redis</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The <code>apt</code> command is a versatile tool that simplifies package management on Debian-based Linux distributions. By mastering these commands, you can effectively manage your system’s software and keep it up-to-date. For more detailed information, you can always refer to the <code>apt</code> manual pages using:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">man apt</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Copying and Pasting Content and Dragging Files Between VMware Virtual Machines and the Host System</title>
    <url>/2024/08/20/copying-andpasting-content-and-dragging-files-between-vmware-virtual-machines-and-the-host-system/</url>
    <content><![CDATA[<p>After properly installing a Linux virtual machine in VMware—using Ubuntu as an example (though the process is similar for other Linux or Windows systems)—you should be able to copy, paste, and drag content in both directions with the default settings. If you encounter issues with copying or dragging, it’s likely due to VMware Tools not being installed correctly. Below, we summarize the potential scenarios and provide two methods for manually installing VMware Tools.</p>
<h2 id="VMware-Tools-Installation-Unsuccessful"><a href="#VMware-Tools-Installation-Unsuccessful" class="headerlink" title="VMware Tools Installation Unsuccessful"></a>VMware Tools Installation Unsuccessful</h2><p>Open VMware and click on “VM” in the main interface. If the “Install VMware Tools” menu is grayed out, it indicates that VMware Tools is not installed successfully.<br><img src="/image/2024/08/2024082001.png" alt="image.png"><br>Once VMware Tools is successfully installed, the interface will display an option to “Reinstall VMware Tools” as shown below.<br><img src="/image/2024/08/2024082002.png" alt="image.png"><br><strong>How to resolve this issue:</strong></p>
<ol>
<li>Shut down the virtual machine, then go to the “VM” menu and open the settings.</li>
</ol>
<p><img src="/image/2024/08/2024082003.png" alt="image.png"></p>
<ol>
<li>Open the virtual machine settings interface as shown below. In the settings, first remove the floppy drive (since floppy disks are obsolete, you can delete this option). Then, select the CD/DVD drive, and under “Connection,” set it to “Auto detect,” as illustrated in the image.</li>
</ol>
<p><img src="/image/2024/08/2024082004.png" alt="Remove Floppy"><br><img src="/image/2024/08/2024082005.png" alt="Set &quot;Connection,&quot; to &quot;Auto detect.&quot;"></p>
<ol>
<li>Start the virtual machine, and the previously greyed-out option will become active, allowing you to proceed with the installation. Then, click it to install VMware Tools.</li>
</ol>
<p><img src="/image/2024/08/2024082006.png" alt="Start the virtual machine"><br><img src="/image/2024/08/2024082007.png" alt="&quot;Install VMware Tools&quot; option is enabled."></p>
<h2 id="Still-Can’t-Copy-After-Installing-VMware-Tools"><a href="#Still-Can’t-Copy-After-Installing-VMware-Tools" class="headerlink" title="Still Can’t Copy After Installing VMware Tools?"></a>Still Can’t Copy After Installing VMware Tools?</h2><ol>
<li>Open the “VM” menu, click on “Settings,” and then switch to the “Options” tab in the settings window, as shown in the image below. Check the two options highlighted in red.</li>
</ol>
<p><img src="/image/2024/08/2024082008.png" alt="image.png"></p>
<ol>
<li>If VMware Tools is correctly installed and the settings shown above are configured, but you still can’t copy, it may be due to a corrupted or mismatched version of VMware Tools. Try reinstalling or upgrading VMware Tools. Note that VMware Tools is a standalone software that can be installed and updated separately.</li>
</ol>
<h2 id="Manual-Installation-of-VMware-Tools-Method-1"><a href="#Manual-Installation-of-VMware-Tools-Method-1" class="headerlink" title="Manual Installation of VMware Tools: Method 1"></a>Manual Installation of VMware Tools: Method 1</h2><p>This method involves installing VMware Tools directly from the internet using Ubuntu’s command line. Open a terminal window and run the following commands. Before proceeding, ensure that the virtual machine has internet access and can connect to the software update servers. Use the following commands:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get autoremove open-vm-tools</span><br><span class="line"><span class="built_in">sudo</span> apt-get install open-vm-tools</span><br><span class="line"><span class="built_in">sudo</span> apt-get install open-vm-tools-desktop</span><br></pre></td></tr></table></figure>
<h2 id="Manual-Installation-of-VMware-Tools-Method-2"><a href="#Manual-Installation-of-VMware-Tools-Method-2" class="headerlink" title="Manual Installation of VMware Tools: Method 2"></a>Manual Installation of VMware Tools: Method 2</h2><ol>
<li>Open VMware, go to the “VM” menu, and select “Reinstall VMware Tools,”. Then VMware will automatically create a virtual CD containing the VMware Tools software. A notification will appear at the bottom of the VMware interface, indicating that the virtual CD has been successfully loaded, as shown below.</li>
</ol>
<p><img src="/image/2024/08/2024082009.png" alt="image.png"></p>
<ol>
<li>In Ubuntu, open the file manager and navigate to the VMware Tools virtual disk.</li>
</ol>
<p><img src="/image/2024/08/2024082010.png" alt="image.png"></p>
<ol>
<li>Locate and select the <code>VMwareTools-xx.x.xx-xxxxxxxx.tar.gz</code> file in the directory.</li>
</ol>
<p><img src="/image/2024/08/2024082011.png" alt="image.png"></p>
<ol>
<li>For convenience, copy this file to your desktop. In the file manager, select “Desktop” and then click “Select” at the bottom right.</li>
</ol>
<p><img src="/image/2024/08/2024082012.png" alt="image.png"></p>
<ol>
<li>Navigate to the “Desktop” directory, right-click on the <code>VMwareTools-xx.x.xx-xxxxxxxx.tar.gz</code> file, and choose “Extract Here” from the context menu to unzip the file on the desktop.</li>
</ol>
<p><img src="/image/2024/08/2024082013.png" alt="image.png"></p>
<ol>
<li>Return to the desktop and open a terminal window, as shown below. Navigate to the <code>vmware-tools-distrib</code> directory and run the <code>vmware-install.pl</code> script:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ./vmware-install.pl</span><br></pre></td></tr></table></figure>
Enter your administrator password when prompted, and the installation will proceed. You may need to respond with “yes” to some prompts, as shown below.<br><img src="/image/2024/08/2024082014.png" alt="image.png"></li>
</ol>
<h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>After the installation is complete, it’s best to restart the virtual machine. Once VMware Tools is installed and properly configured, you’ll be able to copy and paste content, including files, between the host and the virtual machine.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Install Docker on Ubuntu: A Comprehensive Guide</title>
    <url>/2024/08/09/how-to-install-docker-on-ubuntu/</url>
    <content><![CDATA[<p>Docker is a powerful platform that simplifies the development, shipping, and deployment of applications by using containerization. If you’re using Ubuntu and want to set up Docker, this guide will walk you through the process step-by-step.</p>
<h2 id="Step-1-Update-Your-System"><a href="#Step-1-Update-Your-System" class="headerlink" title="Step 1: Update Your System"></a>Step 1: Update Your System</h2><p>Before installing Docker, make sure your Ubuntu system is up-to-date. Open your terminal and run:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt upgrade</span><br></pre></td></tr></table></figure></p>
<h2 id="Step-2-Install-Required-Packages"><a href="#Step-2-Install-Required-Packages" class="headerlink" title="Step 2: Install Required Packages"></a>Step 2: Install Required Packages</h2><p>Install necessary packages to allow <code>apt</code> to use packages over HTTPS:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure></p>
<h2 id="Step-3-Add-Docker’s-Official-GPG-Key"><a href="#Step-3-Add-Docker’s-Official-GPG-Key" class="headerlink" title="Step 3: Add Docker’s Official GPG Key"></a>Step 3: Add Docker’s Official GPG Key</h2><p>Add Docker’s official GPG key to your system:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | <span class="built_in">sudo</span> apt-key add -</span><br></pre></td></tr></table></figure></p>
<h2 id="Step-4-Set-Up-the-Docker-Repository"><a href="#Step-4-Set-Up-the-Docker-Repository" class="headerlink" title="Step 4: Set Up the Docker Repository"></a>Step 4: Set Up the Docker Repository</h2><p>Add Docker’s APT repository to your system:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Step-5-Install-Docker"><a href="#Step-5-Install-Docker" class="headerlink" title="Step 5: Install Docker"></a>Step 5: Install Docker</h2><p>Update your package index and install Docker:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install docker-ce</span><br></pre></td></tr></table></figure></p>
<h2 id="Step-6-Start-and-Enable-Docker"><a href="#Step-6-Start-and-Enable-Docker" class="headerlink" title="Step 6: Start and Enable Docker"></a>Step 6: Start and Enable Docker</h2><p>Start Docker and ensure it starts on boot:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start docker</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure></p>
<h2 id="Step-7-Verify-Docker-Installation"><a href="#Step-7-Verify-Docker-Installation" class="headerlink" title="Step 7: Verify Docker Installation"></a>Step 7: Verify Docker Installation</h2><p>Check if Docker is installed and running correctly by executing:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker --version</span><br></pre></td></tr></table></figure><br>You should see Docker’s version information. To test Docker’s functionality, run:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker run hello-world</span><br></pre></td></tr></table></figure></p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Congratulations! Docker is now installed on your Ubuntu system. You can start using it to build and manage containers. For more advanced Docker configurations and usage, check out Docker’s official documentation.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>docker</tag>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Troubleshooting &quot;chattr: Operation not permitted while setting flags&quot;</title>
    <url>/2024/08/14/troubleshooting-chattr-operation-not-permitted-while-setting-flags/</url>
    <content><![CDATA[<p>I’m trying to set an immutable attribute on some files in my home directory, but I keep encountering issues: <code>chattr: Operation not permitted while setting flags on /data/ops/app.conf</code>.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ chattr +i /data/ops/app.conf</span><br><span class="line">chattr: Operation not permitted <span class="keyword">while</span> setting flags on /data/ops/app.conf</span><br></pre></td></tr></table></figure><br>From the <code>chattr</code> man page:</p>
<blockquote>
<p>A file with the ‘i’ attribute cannot be modified: it cannot be deleted or renamed, no link can be created to this file, most of the file’s metadata can not be modified, and the file can not be opened in write mode. <strong>Only the superuser or a process possessing the CAP_LINUX_IMMUTABLE capability can set or clear this attribute.</strong></p>
</blockquote>
<p>We can see that only the superuser or a process with the CAP_LINUX_IMMUTABLE capability can set or clear this attribute. So, getting an error when trying to set the <code>i</code> flag as a regular user is expected. When I run the following command, it works as expected:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> chattr +i /data/ops/app.conf</span><br></pre></td></tr></table></figure></p>
<p><strong>P.S.</strong><br>The same applies to the <code>a</code> flag (append only), and the <code>j</code> flag (data journaling) requires the CAP_SYS_RESOURCE capability.</p>
<blockquote>
<p><code>a</code> flag:<br>A file with the ‘a’ attribute set can only be opened in append mode for writing. <strong>Only the superuser or a process possessing the CAP_LINUX_IM‐MUTABLE capability can set or clear this attribute.</strong></p>
<p><code>j</code> flag:<br>A file with the ‘j’ attribute has all of its data written to the ext3 or ext4 journal before being written to the file itself, if the file system is mounted with the “data=ordered” or “data=writeback” options and the file system has a journal. When the filesystem is mounted with the “data=journal” option all file data is already ournalled and this attribute has no effect. <strong>Only the superuser or a process possessing the CAP_SYS_RESOURCE apability can set or clear this attribute.</strong></p>
</blockquote>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Understanding the &quot;chattr: Inappropriate ioctl for device while reading flags&quot; Error</title>
    <url>/2024/08/15/understanding-the-chattr-inappropriate-ioctl-for-device-while-reading-flags-error/</url>
    <content><![CDATA[<p>If you’ve encountered the error message <code>chattr: Inappropriate ioctl for device while reading flags on /etc/nginx/conf.d/test.conf</code>, you’re not alone. This error can be confusing, especially if you’re not familiar with the <code>chattr</code> command and its uses. Let’s break down what this error means and how to resolve it.</p>
<h2 id="What-is-the-chattr-Command"><a href="#What-is-the-chattr-Command" class="headerlink" title="What is the chattr Command?"></a>What is the <code>chattr</code> Command?</h2><p>The <code>chattr</code> (change attribute) command in Linux is used to change file attributes on files and directories. These attributes can control various aspects of file behavior, such as making a file immutable or append-only. The command is primarily used on ext2/ext3/ext4 file systems.</p>
<h2 id="Understanding-the-Error"><a href="#Understanding-the-Error" class="headerlink" title="Understanding the Error"></a>Understanding the Error</h2><p>The error message <code>chattr: Inappropriate ioctl for device while reading flags</code> indicates that <code>chattr</code> is unable to read or modify the attributes of a file due to an issue with the file system or the file type. Here’s why you might see this error:<br><strong>File System Compatibility</strong>: The file system on which your file resides may not support <code>chattr</code> attributes. <code>chattr</code> is designed for Linux systems, aka, supported filesystems, like xfs, ext2, ext3, ext4, etc, but also, there are some minor limitations as well. You can not use it on a different file system. If your file is on ntfs based filesystem, <code>chattr</code> won’t work, and you’ll see this error.</p>
<h2 id="How-to-Resolve-the-Issue"><a href="#How-to-Resolve-the-Issue" class="headerlink" title="How to Resolve the Issue"></a>How to Resolve the Issue</h2><p>Here are steps you can take to troubleshoot and resolve this issue:</p>
<ol>
<li><p><strong>Verify the File System</strong>: Check if the file is on an xfs, ext2, ext3, or ext4 file system. Use the <code>df -T /path/to/file</code> command to find out the file system type. If it’s not one of these, <code>chattr</code> won’t be applicable. For example, if your file is on a WSL (Windows Subsystem for Linux) filesystem, running this command will show the result below.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">df</span> -T /etc/nginx/conf.d/test.conf</span><br><span class="line">Filesystem     Type  1K-blocks      Used Available Use% Mounted on</span><br><span class="line">rootfs         wslfs 188744700 127470120  61274580  68% /</span><br></pre></td></tr></table></figure>
<p>As indicated, the file system type is wslfs, which means the <code>chattr</code> command has no effect.<br>Running this command on the ext4 file system yields the following result::</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">df</span> -T /etc/nginx/conf.d/default.conf</span><br><span class="line">Filesystem     Type 1K-blocks     Used Available Use% Mounted on</span><br><span class="line">/dev/vda1      ext4 103080204 79814876  18845100  81% /</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Alternative Commands</strong>: If you’re working with a non-ext file system and need similar functionality, consider using file system-specific tools or consult the documentation for your particular file system.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The <code>chattr: Inappropriate ioctl for device while reading flags</code> error typically arises when <code>chattr</code> is used on unsupported file systems. By verifying the file system type, you can resolve this issue and manage file attributes effectively. If you continue to face problems, consider exploring alternative commands or tools suitable for your file system.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Fix Docker GPG Key Installation Errors on Ubuntu</title>
    <url>/2024/09/04/how-to-fix-docker-gpg-key-installation-errors-on-ubuntu/</url>
    <content><![CDATA[<p>In this blog post, we’ll walk you through the process of fixing <code>gpg: no valid OpenPGP data found</code> error and get you back to smooth sailing with Docker.</p>
<h2 id="Issue-Overview"><a href="#Issue-Overview" class="headerlink" title="Issue Overview"></a>Issue Overview</h2><ol>
<li>Add the official Docker GPG key:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | <span class="built_in">sudo</span> apt-key add -</span><br></pre></td></tr></table></figure>
<ol>
<li>Some users might encounter the following issue:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | <span class="built_in">sudo</span> apt-key add -</span><br><span class="line">curl: (35) gnutls_handshake() failed: Handshake failed: Error <span class="keyword">in</span> the pull <span class="keyword">function</span>.</span><br><span class="line">gpg: no valid OpenPGP data found.</span><br></pre></td></tr></table></figure>
<h2 id="Step-by-Step-Solutions"><a href="#Step-by-Step-Solutions" class="headerlink" title="Step-by-Step Solutions"></a>Step-by-Step Solutions</h2><p>Here’s the solution I personally tested and found effective for a successful installation:</p>
<ol>
<li>First, download the official GPG key to your local machine. This will save the file as a <code>.gpg</code> file. The URL is:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://download.docker.com/linux/ubuntu/gpg</span><br></pre></td></tr></table></figure>
<ol>
<li>Once downloaded, use the following command to install the GPG key:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-key add /home/johnson/downloads/gpg</span><br></pre></td></tr></table></figure>
<ol>
<li>Note: <code>/home/johnson/downloads/gpg</code> is the file path to the GPG file on my Ubuntu system. Make sure to replace it with your own file path.</li>
</ol>
<p>With this solution, you should be able to resolve the issue and complete the installation perfectly!</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>HowTo</tag>
        <tag>ubuntu</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Delete Data in Elasticsearch: Single, Multiple, Clear, and All</title>
    <url>/2024/09/05/how-to-delete-data-in-elasticsearch-single-multiple-clear-and-all/</url>
    <content><![CDATA[<p>Are you working with Elasticsearch and need to manage your data effectively? One crucial aspect of data management is knowing how to delete data when necessary. In this comprehensive guide, we’ll explore various Elasticsearch operations for deleting data, including single document deletion, multiple document deletion, clearing indices, and removing all data.</p>
<h2 id="Deleting-a-Single-Document"><a href="#Deleting-a-Single-Document" class="headerlink" title="Deleting a Single Document"></a>Deleting a Single Document</h2><p>To delete a single document from Elasticsearch, you’ll use the DELETE API. Here’s the basic syntax:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE /index_name/_doc/document_id</span><br></pre></td></tr></table></figure>
<p>Replace <code>index_name</code> with your actual index name and <code>document_id</code> with the ID of the document you want to delete. For example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE /my_index/_doc/12345</span><br></pre></td></tr></table></figure>
<p>This operation will remove the document with ID 12345 from the “my_index” index.</p>
<h2 id="Deleting-Multiple-Documents"><a href="#Deleting-Multiple-Documents" class="headerlink" title="Deleting Multiple Documents"></a>Deleting Multiple Documents</h2><p>When you need to delete multiple documents that match specific criteria, use the Delete By Query API. This powerful tool allows you to remove documents based on a query. Here’s an example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /my_index/_delete_by_query</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;status&quot;: &quot;outdated&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This query will delete all documents in “my_index” where the “status” field matches “outdated”.</p>
<h2 id="Clearing-an-Index"><a href="#Clearing-an-Index" class="headerlink" title="Clearing an Index"></a>Clearing an Index</h2><p>To remove all documents from an index while keeping the index structure intact, you can use the Delete By Query API with a match_all query:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /my_index/_delete_by_query</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This operation will delete all documents in the specified index but preserve the index settings and mappings.</p>
<h2 id="Deleting-All-Data-Removing-Indices"><a href="#Deleting-All-Data-Removing-Indices" class="headerlink" title="Deleting All Data (Removing Indices)"></a>Deleting All Data (Removing Indices)</h2><p>If you want to remove all data, including the index structure, you can delete the entire index using the Delete Index API:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE /my_index</span><br></pre></td></tr></table></figure>
<p>To delete multiple indices at once, you can use wildcards or comma-separated index names:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE /index1,index2,index3</span><br></pre></td></tr></table></figure>
<p>Or to delete all indices (<em><strong>use with caution!</strong></em>):</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE /_all</span><br></pre></td></tr></table></figure>
<h2 id="Best-Practices-and-Considerations"><a href="#Best-Practices-and-Considerations" class="headerlink" title="Best Practices and Considerations"></a>Best Practices and Considerations</h2><ol>
<li>Always double-check your queries before executing delete operations, especially when dealing with production data.</li>
<li>Use the <code>_delete_by_query</code> API with caution on large datasets, as it can be resource-intensive. Consider using the <code>wait_for_completion=false</code> parameter for asynchronous execution on large datasets.</li>
<li>Implement proper access controls to prevent unauthorized deletion of data.</li>
<li>Regularly backup your Elasticsearch data to prevent accidental data loss.</li>
<li>Monitor your cluster’s performance during delete operations, as they can impact overall system resources.</li>
</ol>
<p>By mastering these Elasticsearch delete operations, you’ll be able to efficiently manage your data and keep your cluster optimized. Whether you need to remove a single document or clear out entire indices, these techniques will help you maintain a clean and efficient Elasticsearch environment.</p>
<p>Remember, with great power comes great responsibility – always exercise caution when performing delete operations on your valuable data!</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
        <tag>HowTo</tag>
      </tags>
  </entry>
  <entry>
    <title>Why Does Redis Use the SDS Structure for Strings Instead of char*?</title>
    <url>/2024/09/06/why-does-redis-use-the-sds-structure-for-strings-instead-of-char/</url>
    <content><![CDATA[<p>Redis, known for its performance and efficiency, uses a data structure called SDS (Simple Dynamic String) for handling strings in its key-value pairs rather than the traditional C string (<code>char*</code>). Understanding why this decision was made requires a look into both how Redis operates and the limitations of the C string.</p>
<h2 id="What-is-char-C-String"><a href="#What-is-char-C-String" class="headerlink" title="What is char* (C String)?"></a><strong>What is </strong><code>char*</code><strong> (C String)?</strong></h2><p>In C, strings are represented as arrays of characters terminated by a null character (<code>\0</code>). While simple and efficient for static, unchanging strings, they come with limitations that impact performance in systems like Redis, which require high efficiency, particularly in handling dynamic strings.</p>
<h2 id="What-is-SDS"><a href="#What-is-SDS" class="headerlink" title="What is SDS?"></a><strong>What is SDS?</strong></h2><p>SDS stands for Simple Dynamic String, a custom string library used by Redis. Unlike <code>char*</code>, SDS strings include extra metadata that helps optimize memory usage, manage string length efficiently, and perform operations without frequent reallocation or copying.</p>
<h2 id="Key-Advantages-of-SDS-over-char"><a href="#Key-Advantages-of-SDS-over-char" class="headerlink" title="Key Advantages of SDS over char*:"></a><strong>Key Advantages of SDS over </strong><code>char*</code><strong>:</strong></h2><h4 id="Efficient-Memory-Management"><a href="#Efficient-Memory-Management" class="headerlink" title="Efficient Memory Management"></a><strong>Efficient Memory Management</strong></h4><p>One of the most significant limitations of <code>char*</code> is that C strings do not inherently track their own length. This means that determining the length of a string requires traversing the entire array up to the null terminator, a time-consuming process for long strings. </p>
<p>SDS, on the other hand, stores the length of the string as metadata. This allows constant-time (<code>O(1)</code>) access to the string’s length, dramatically improving performance for operations that require string length information.</p>
<h4 id="Automatic-Memory-Allocation-and-Resizing"><a href="#Automatic-Memory-Allocation-and-Resizing" class="headerlink" title="Automatic Memory Allocation and Resizing"></a><strong>Automatic Memory Allocation and Resizing</strong></h4><p>In Redis, strings are often modified (appending, truncating, etc.). With <code>char*</code>, modifying a string could require reallocation, copying the existing data to a larger memory block, and updating pointers. This results in inefficiencies and potential bugs like buffer overflows if the programmer does not handle memory allocation properly.</p>
<p>SDS strings automatically handle memory reallocation behind the scenes. They also allocate additional space (over-allocation) when a string grows, reducing the frequency of memory reallocation operations. This reduces the overhead associated with dynamically resizing strings and improves Redis’s overall efficiency.</p>
<h4 id="Prevention-of-Buffer-Overflows"><a href="#Prevention-of-Buffer-Overflows" class="headerlink" title="Prevention of Buffer Overflows"></a><strong>Prevention of Buffer Overflows</strong></h4><p>Buffer overflow vulnerabilities are a common issue with <code>char*</code>, as there are no built-in protections to ensure that operations stay within allocated memory. With SDS, buffer overflows are less likely because the system manages memory allocations and resizes dynamically. The length-tracking mechanism in SDS also ensures that string manipulation stays within bounds, improving security.</p>
<h4 id="Binary-Safety"><a href="#Binary-Safety" class="headerlink" title="Binary Safety"></a><strong>Binary Safety</strong></h4><p>While <code>char*</code> strings are null-terminated, making them unsuitable for storing binary data (as the first null byte encountered would mark the end of the string), SDS does not rely on null termination. This makes it “binary safe,” meaning it can store arbitrary binary data, including null bytes, which is critical for Redis, where strings are often used to store non-textual data.</p>
<h4 id="Efficiency-in-Append-Only-Operations"><a href="#Efficiency-in-Append-Only-Operations" class="headerlink" title="Efficiency in Append-Only Operations"></a><strong>Efficiency in Append-Only Operations</strong></h4><p>Redis uses an append-only file (AOF) for persistence, meaning it frequently appends data to logs. SDS is designed to handle such append-heavy workloads efficiently. When appending data, SDS minimizes memory reallocation by using a pre-allocated buffer, improving performance for write-heavy operations.</p>
<h2 id="Redis-and-the-Need-for-High-Performance-String-Operations"><a href="#Redis-and-the-Need-for-High-Performance-String-Operations" class="headerlink" title="Redis and the Need for High-Performance String Operations"></a><strong>Redis and the Need for High-Performance String Operations</strong></h2><p>Redis is known for its blazing-fast performance, often being used in real-time applications like caching, messaging, and session management. The key to Redis’s performance lies in its ability to handle millions of requests per second with low latency.</p>
<p>Using <code>char*</code> for strings in Redis would introduce unnecessary overhead in memory management, string length calculations, and buffer resizing, all of which would slow Redis down significantly. By contrast, SDS provides a more efficient, flexible, and safe mechanism for string manipulation, enabling Redis to maintain its high performance even under heavy loads.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Redis opts for the SDS (Simple Dynamic String) structure for handling strings because it offers substantial benefits over the traditional <code>char*</code>. SDS improves memory management, ensures binary safety, avoids buffer overflow risks, and handles dynamic resizing efficiently—all of which are critical for Redis’s performance, reliability, and scalability. The SDS structure is an example of how Redis is engineered for high throughput and low-latency operations, allowing it to serve as the backbone for real-time data storage and retrieval systems.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>李大钊：青春</title>
    <url>/2021/05/01/ldz-1/</url>
    <content><![CDATA[<blockquote>
<p>《青春》一文，是反袁护国运动兴起以后，李大钊于1916年3至4月在日本所写的一篇理论文章，发表于同年9月出版的《新青年》第2卷第1号。这是他在《新青年》发表的第一篇论文。在《青春》中，李大钊系统地阐述了他对宇宙、对人生、对国家和民族前途的看法，歌颂了积极进取、乐观向上的革命精神，提出了“青春”的宇宙观和人生观。概括而言，主要有以下四点：一，宇宙无尽，青春无尽，天地老而青春永在。二，国家与民族是青春还是白首，取决于青年是否自觉，主张青年自觉方有青春。在此基础上，提出了“青春”的人生观，即积极进取的人生观。三， 提出“青春中华之创造”的历史使命。文章指出：正当“白发之中华垂亡，青春之中华未孕”之际，“吾族青年所当信誓旦旦，以昭示于世者，不在辩证白首中国之不死，乃在汲汲孕育青春中国之再生。吾族今后之能否立足于世界，不在白首中国之苟延残喘，而在青春中国之投胎复活。”四，主张青年不断地以“青春”的精神来改造自我。文章号召青年永远“进前而勿顾后，背黑暗而向光明”，“以青春之我，创建青春之家庭，青春之国家，青春之民族，青春之人类，青春之地球，青春之宇宙”，以“乘风破浪”的气魄，“为世界进文明，为人类造幸福”！</p>
<p>《青春》一文，在新文化运动初期产生重大影响，是中国近代思想史上的一篇著名文献。民国时期曾经广泛传播，中华人民共和国成立后，曾被选作大学生阅读的范文。党的十八大以来，习近平总书记曾多次在重要报告和讲话中引用此文。今年4月28日，是李大钊英勇就义九十四周年忌日，北京大学人文社会科学研究院谨推送此文，以纪念和缅怀这位伟大的革命先驱。感谢北京大学校史馆杨琥老师给予的帮助。</p>
</blockquote>
<p><strong>青 春</strong><br>文 / 李大钊<br>一九一六年四、五月</p>
<p>春日载阳，东风解冻。远从瀛岛，返顾祖邦。肃杀郁塞之象，一变而为清和明媚之象矣；冰雪沍寒之天，一幻而为百卉昭苏之天矣。每更节序，辄动怀思，人事万端，那堪回首，或则幽闺善怨，或则骚客工愁。当兹春雨梨花，重门深掩，诗人顦顇，独倚栏杆之际，登楼四瞩，则见千条垂柳，未半才黄，十里铺青，遥看有色。彼幽闲贞静之青春，携来无限之希望、无限之兴趣，飘然贡其柔丽之姿于吾前途辽远之青年之前，而默许以独享之权利。嗟吾青年可爱之学子乎！彼美之青春，念子之任重而道远也，子之内美而修能也，怜子之劳，爱子之才也，故而经年一度，展其怡和之颜，饯子于长征迈往之途，冀有以慰子之心也。纵子为尽瘁于子之高尚之理想，圣神之使命，远大之事业，艰巨之责任，而夙兴夜寐，不遑启处，亦当于千忙万迫之中，偷隙一盼，霁颜相向，领彼恋子之殷情，赠子之韶华，俾以青年纯洁之躬，饫尝青春之甘美，浃浴青春之恩泽，永续青春之生涯。致我为青春之我，我之家庭为青春之家庭，我之国家为青春之国家，我之民族为青春之民族。斯青春之我，乃不枉于遥遥百千万劫中，为此一大因缘，与此多情多爱之青春，相通逅于无尽青春中之一部分空间与时间也。</p>
<p>块然一躯，渺乎微矣。于此广大悠久之宇宙，殆犹沧海之一粟耳。其得永享青春之幸福与否，当问宇宙自然之青春是否为无尽。如其有尽，纵有彭、聃之寿，甚且与宇宙齐，亦奚能许我以常享之福？如其无尽，吾人奋其悲壮之精神，以与无尽之宇宙竞进，又何不能之有？而宇宙之果否为无尽，当问宇宙之有无初终。宇宙果有初乎？曰：初乎无也。果有终乎？曰：终乎无也。初乎无者，等于无初；终乎无者，等于无终。无初无终，是于空间为无限，于时间为无极。质言之，无而已矣，此绝对之说也。若由相对观之，则宇宙为有进化者。既有进化，必有退化。于是差别之万象万殊生焉。惟其为万象万殊，故于全体为个体，于全生为一生。个体之积，如何其广大，而终于有限。一生之命，如何其悠久，而终于有涯。于是有生即有死，有盛即有衰，有阴即有阳，有否即有泰，有剥即有复，有屈即有信，有消即有长，有盈即有虚，有吉即有凶，有祸即有福，有青春即有白首，有健壮即有颓老，质言之有而已矣。庄周有云：“朝菌不知晦朔，蟪蛄不知春秋。”又云：“小知不如大知，小年不如大年。”夫晦朔与春秋而果为有耶，何以菌蛄以外之有生，几经晦朔几历春秋者皆知之，而菌蛄独不知也？其果为无耶，又何以菌蛄虽不知，而菌蛄以外之有生，几经晦朔几历春秋者，皆知之也？是有无之说，亦至无定矣。以吾人之知，小于宇宙自然之知，其年小于宇宙自然之年，而欲断空间时间不能超越之宇宙为有为无，是亦朝菌之晦朔、蟪蛄之春秋耳！秘观宇宙有二相焉：由佛理言之，平等与差别也，空与色也。由哲理言之，绝对与相对也。由数理言之，有与无也。由易理言之，周与易也。周易非以昭代立名，宋儒罗泌尝论之于《路史》，而金氏圣叹序《离骚经》，释之尤近精微，谓“周其体也，易其用也。约法而论，周以常住为义，易以变易为义。双约人法，则周乃圣人之能事，易乃大千之变易。大千本无一有，更立不定，日新、日日新、又日新之谓也。圣人独能以忧患之心周之，尘尘刹刹，无不普遍，又复尘尘周于刹刹，刹刹周于尘尘，然后世界自见其易，圣人时得其常，故云周易。”仲尼曰：“自其异者视之，肝胆楚越也；自其同者视之，万物皆一也。”此同异之辨也。东坡曰：“自其变者而观之，则天地曾不能以一瞬；自其不变者而观之，则物与我皆无尽也。”此变不变之殊也。其变者青春之进程，其不变者无尽之青春也。其异者青春之进程，其同者无尽之青春也。其易者青春之进程，其周者无尽之青春也。其有者青春之进程，其无者无尽之青春也。其相对者青春之进程，其绝对者无尽之青春也。其色者差别者青春之进程，其空者平等者无尽之青春也。推而言之，乃至生死、盛衰、阴阳、否泰、剥复、屈信、消长、盈虚、吉凶、祸福、青春白首、健壮颓老之轮回反复，连续流转，无非青春之进程。而此无初无终、无限无极、无方无体之机轴，亦即无尽之青春也。青年锐进之子，尘尘刹刹，立于旋转簸扬循环无端之大洪流中，宜有江流不转之精神，屹然独立之气魄，冲荡其潮流，抵拒其势力，以其不变应其变，以其同操其异，以其周执其易，以其无持其有，以其绝对统其相对，以其空驭其色，以其平等律其差别，故能以宇宙之生涯为自我之生涯，以宇宙之青春为自我之青春。宇宙无尽，即青春无尽，即自我无尽。此之精神，即生死肉骨、回天再造之精神也。此之气魄，即慷慨悲壮、拔山盖世之气魄也。惟真知爱青春者，乃能识宇宙有无尽之青春。惟真能识宇宙有无尽之青春者，乃能具此种精神与气魄。惟真有此种精神与气魄者，乃能永享宇宙无尽之青春。</p>
<p>一成一毁者，天之道也。一阴一阳者，易之道也。唐生维廉与铁特二家，遽研物理，知天地必有终极，盖天之行也以其动，其动也以不均，犹水之有高下而后流也。今太阳本热常耗，以彗星来往度之递差，知地外有最轻之冈气，为能阻物，既能阻物，斯能耗热耗力。故大宇积热力，每散趋均平，及其均平，天地乃毁。天地且有时而毁，况其间所包蕴之万物乎？漫云天地，究何所指，殊嫌茫漠，征实言之，有若地球。地球之有生命，已为地质学家所明证，惟今日之地球，为儿童地球乎？青年地球乎？丁壮地球乎？抑白首地球乎？此实未答之问也。苟犹在儿童或青年之期，前途自足乐观，游优乐土，来日方长，人生趣味益以浓厚，神志益以飞舞；即在丁壮之年，亦属元神盛涌，血气畅发之期，奋志前行，亦当勿懈；独至地球之寿，已臻白发之颓龄，则栖息其上之吾人，夜夜仰见死气沉沉之月球，徒借曜灵之末光，以示伤心之颜色于人寰，若以警告地球之终有死期也者，言念及此，能勿愀然。虽然，地球即成白首，吾人尚在青春，以吾人之青春，柔化地球之白首，虽老犹未老也。是则地球一日存在，即吾人之青春一日存在。吾人之青春一日存在，即地球之青春一日存在。吾人有现在一刹那之地球，即有现在一刹那之青春，即当尽现在一刹那对于地球之责任。虽明知未来一刹那之地球必毁，当知未来一刹那之青春不毁，未来一刹那之地球，虽非现在一刹那之地球，而未来一刹那之青春，犹是现在一刹那之青春。未来一刹那之我，仍有对于未来一刹那之地球之责任。庸得以虞地球形体之幻灭，而猥为沮丧哉！</p>
<p>复次，生于地球上之人类，其犹在青春乎，抑已臻白首乎？将来衰亡之顷，究与地球同时自然死灭乎，抑因地球温度激变，突与动植物共死灭乎？其或先兹事变，如个人若民族之死灭乎？斯亦难决之题也。生物学者之言曰：人类之生活，反乎自然之生活也。自妇人畏葸，抱子而奔，始学立行，胸部暴露，必须被物以求遮卫，而人类遂有衣裳；又以播迁转徙，所携食物，易于腐败，而人类遂有火食。有衣裳而人类失其毛发矣，有火食而人类失其胃肠矣。其趋文明也日进，其背自然也日遐，浸假有舟车电汽，而人类丧其手足矣。有望远镜德律风等，而人类丧其耳目矣。他如有书报传译之速，文明利器之普，而人类亡其脑力。有机关枪四十二珊之炮，而人类弱其战能。有分工合作之都市生活，歌舞楼台之繁华景象，而人类增其新病。凡此种种，人类所以日响灭种之途者，若决江河，奔流莫遏，长此不已，劫焉可逃？此辈学者所由大声疾呼，布兹駴世听闻之噩耗，而冀以谋挽救之方也。宗教信士则从而反之，谓宇宙一切皆为神造，维护之任神自当之，吾人智能薄弱，惟托庇于神而能免于罪恶灾厄也。如生物家言，是为蔑夷神之功德，影响所及，将驱人类入于悲观之途，圣智且尚无灵，人工又胡能阏，惟有瞑心自放，居于下流，荒亡日久，将为人心世道之忧矣。末俗浇漓，未始非为此说者阶之厉也。吾人宜坚信上帝有全知全能，虔心奉祷，罪患如山，亦能免矣。由前之说，固易流于悲观，而其足以警觉世人，俾知谋矫正背乎自然之生活，此其所长也。由后之说，虽足以坚人信仰之力，俾其灵魂得优游于永生之天国，而其过崇神力，轻蔑本能，并以讳蔽科学之实际，乃其所短也。吾人于此，宜如宗教信士之信仰上帝者信人类有无尽之青春，更宜悚然于生物学者之旨，以深自警惕，力图于背逆自然生活之中，而能依人为之工夫，致其背逆自然之生活，无异于顺适自然之生活。斯则人类之寿，虽在耄耋之年，而吾人苟奋自我之欲能，又何不可返于无尽青春之域，而奏起死回生之功也？</p>
<p>人类之成一民族一国家者，亦各有其生命焉。有青春之民族，斯有白首之民族，有青春之国家，斯有白首之国家。吾之民族若国家，果为青春之民族、青春之国家欤，抑为白首之民族、白首之国家欤？苟已成白首之民族、白首之国家焉，吾辈青年之谋所以致之回春为之再造者，又应以何等信力与愿力从事，而克以著效。此则系乎青年之自觉何如耳！异族之觇吾国者，辄曰：支那者老大之邦也。支那之民族，濒灭之民族也。支那之国家，待亡之国家也。洪荒而后，民族若国家之递兴递亡者，茻然其不可纪矣。粤稽西史，罗马、巴比伦之盛时，丰功伟烈，彪著寰宇，曾几何时，一代声华，都成尘土矣。只今屈指，欧土名邦，若意大利，若法兰西，若西班牙，若葡萄牙，若和兰，若比利时，若丹马，若瑞典，若那威，乃至若英吉利，罔不有积尘之历史，以重累其国家若民族之生命。回溯往祀，是等国族，固皆尝有其青春之期，以其畅盛之生命，展其特殊之天才。而今已矣，声华渐落，躯壳空存，纷纷者皆成文明史上之过客矣。其校新者，惟德意志与勃牙利，此次战血洪涛中，又为其生命力之所注，勃然暴发，以挥展其天才矣。由历史考之，新兴之国族与陈腐之国族遇，陈腐者必败；朝气横溢之生命力与死灰沉滞之生命力遇，死灰沉滞者必败；青春之国民与白首之国民遇，白首者必败，此殆天演公例，莫或能逃者也。</p>
<p>支那自黄帝以降，赫赫然树独立之帜于亚东大陆者，四千八百余年于兹矣。历世久远，纵观横览，罕有其伦。稽其民族青春之期，远在有周之世，典章文物，灿然大备，过此以往，渐向衰歇之运，然犹浸衰浸微，扬其余辉，以至于今日者，得不谓为其民族之光欤？夫人寿之永，不过百年，民族之命，垂五千载，斯亦寿之至也。印度为生释迦而兴，故自释迦生而印度死；犹太为生耶稣而立，故自耶稣生而犹太亡；支那为生孔子而建，故自孔子生而支那衰，陵夷至于今日，残骸枯骨，满目黤然，民族之精英，澌灭尽矣，而欲不亡，庸可得乎？吾青年之骤闻斯言者，未有不变色裂眥，怒其侮我之甚也。虽然，勿怒也。吾之国族，已阅长久之历史，而此长久之历史，积尘重压，以桎梏其生命而臻于衰敝者，又宁容讳？然而吾族青年所当信誓旦旦，以昭示于世者，不在龈龈辩证白首中国之不死，乃在汲汲孕育青春中国之再生。吾族今后之能否立足于世界，不在白首中国之苟延残喘，而在青春中国之投胎复活。盖尝闻之，生命者，死与再生之连续也。今后人类之问题，民族之问题，非苟生残存之问题，乃复活更生、回春再造之问题也。与吾并称为老大帝国之土耳其，则青年之政治运动，屡试不一试焉。巴尔干诸邦，则各谋离土自立，而为民族之运动，兵连祸结，干戈频兴，卒以酿今兹世界之大变焉。遥望喜马拉亚山之巅，恍见印度革命之烽烟一缕，引而弥长，是亦欲回其民族之青春也。吾华自辛亥首义，癸丑之役继之，喘息未安，风尘澒洞，又复倾动九服，是亦欲再造其神州也。而在是等国族，凡以冲决历史之桎梏，涤荡历史之积秽，新造民族之生命，挽回民族之青春者，固莫不惟其青年是望矣。建国伊始，肇锡嘉名，实维中华。中华之义，果何居乎？中者，宅中位正之谓也。吾辈青年之大任，不仅以于空间能致中华为天下之中而遂足，并当于时间而谛时中之旨也。旷观世界之历史，古往今来，变迁何极！吾人当于今岁之青春，画为中点，中以前之历史，不过如进化论仅于考究太阳地球动植各物乃至人类之如何发生、如何进化者，以纪人类民族国家之如何发生、如何进化也。中以后之历史，则以是为古代史之职，而别以纪人类民族国家之更生回春为其中心之的也。中以前之历史，封闭之历史，焚毁之历史，葬诸坟墓之历史也。中以后之历史，洁白之历史，新装之历史，待施绚绘之历史也。中以前之历史，白首之历史，陈死人之历史也。中以后之历史，青春之历史，活青年之历史也。青年乎！其以中立不倚之精神，肩兹砥柱中流之责任，即由今年今春之今日今刹那为时中之起点，取世界一切白首之历史，一火而摧焚之，而专以发挥青春中华之中，缀其一生之美于中以后历史之首页，为其职志，而勿逡巡不前。华者，文明开敷之谓也，华与实相为轮回，即开敷与废落相为嬗代。白首中华者，青春中华本以胚孕之实也。青春中华者，白首中华托以再生之华也。白首中华者，渐即废落之中华也。青春中华者，方复开敷之中华也。有渐即废落之中华，所以有方复开敷之中华。有前之废落以供今之开敷，斯有后之开敷以续今之废落，即废落，即开敷，即开敷，即废落，终竟如是废落，终竟如是开敷。宇宙有无尽之青春，斯宇宙有不落之华，而栽之、培之、灌之、溉之、赏玩之、享爱之者，舍青春中华之青年，更谁与归矣？青年乎，勿徒发愿，愿春常在华常好也，愿华常得青春，青春常在于华也。宜有即华不得青春，青春不在于华，亦必奋其回春再造之努力，使废落者复为开敷，开敷者终不废落，使华不能不得青春，青春不能不在于华之决心也。抑吾闻之化学家焉，土质虽腴，肥料虽多，耕种数载，地方〔力〕必耗，砂土硬化，无能免也，将欲柔融之，俾再反于丰穰〔壤〕，惟有一种草木为能致之，为其能由空中吸收窒素肥料，注入土中而沃润之也。神州赤县，古称天府，胡以至今徒有万木秋声、萧萧落叶之悲，昔时繁华之盛，荒凉废落至于此极也！毋亦无此种草木为之文柔和润之耳。青年之于社会，殆犹此种草木之于田畮也。从此广植根蒂，深固不可复拔，不数年间，将见青春中华之参天蓊郁，错节盘根，树于世界，而神州之域，还其丰穗〔壤〕，复其膏腴矣。则谓此菁菁茁茁之青年，即此方复开敷之青春中华可也。</p>
<p>顾人之生也，苟不能窥见宇宙有无尽之青春，则自呱呱堕地，迄于老死，觉其间之春光，迅于电波石火，不可淹留，浮生若梦，直菌鹤马蜩之过乎前耳。是以川上尼父，有逝者如斯之嗟；湘水灵均，兴春秋代序之感。其他风骚雅士，或秉烛夜游；勤事劳人，或重惜分寸。而一代帝王，一时豪富，当其垂暮之年，绝诀之际，贪恋幸福，不忍离舍，每为咨嗟太息，尽其权力黄金之用，无能永一瞬之天年，而重留遗憾于长生之无术焉。秦政并吞八荒，统制四海，固一世之雄也，晚年畏死，遍遣羽客，搜觅神仙，求不老之药，卒未能获，一旦魂断，宫车晚出。汉武穷兵，蛮荒慑伏，汉代之英主也，暮年永叹，空有“欢乐极兮哀情多，少壮几时兮奈老何”之慨。最近美国富豪某，以毕主〔生〕之奋斗，博得□式之王冠，衰病相催，濒于老死，则抚枕而叹曰：“苟能延一月之命，报以千万金弗惜也。”然是又安可得哉？夫人之生也有限，其欲也无穷，以无穷之欲，逐有限之生，坐令似水年华，滔滔东去，红颜难再，白发空悲，其殆人之无奈天何者欤！涉念及此，灰肠断气，厌世之思，油然而生。贤者仁智俱穷，不肖者流连忘返，而人生之蕲向荒矣，是又岂青年之所宜出哉？人生兹世，更无一刹那不在青春，为其居无尽青春之一部，为无尽青春之过程也。顾青年之人，或不得常享青春之乐者，以其有黄金权力一切烦忧苦恼机械生活，为青春之累耳。谚云：“百金买骏马，千金买美人，万金买爵禄，何处买青春？”岂惟无处购买，邓氏铜山，郭家金穴，愈有以障繄〔翳〕青春之路俾无由达于其境也。罗马亚布达尔曼帝，位在皇极，富有四海，不可谓不尊矣，临终语其近侍，谓四十年间，真感愉快者，仅有三日。权力之不足福人，以视黄金，又无差等。而以四十年之青春，娱心不过三日，悼心悔憾，宁有穷耶？夫青年安心立命之所，乃在循今日主义以进，以吾人之生，洵如卡莱尔所云，特为时间所执之无限而已。无限现而为我，乃为现在，非为过去与将来也。苟了现在，即了无限矣。昔者圣叹作诗，有“何处谁人玉笛声”之句。释弓年小，窃以玉字为未安，而质之圣叹。圣叹则曰：“彼若说‘我所吹本是铁笛，汝何得用作玉笛？’我便云：‘我已用作玉笛，汝何得更吹铁笛？’天生我才，岂为汝铁笛作奴儿婢子来耶？”夫铁字与玉字，有何不可通融更易之处。圣叹顾与之争一字之短长而不惮烦者，亦欲与之争我之现在耳。诗人拜轮，放浪不羁，时人低之，谓于来世必当酷受地狱之苦。拜轮答曰：“基督教徒自苦于现世，而欲祈福于来世。非基督教徒，则于现世旷逸自遗〔遣〕，来世之苦，非所辞也。”二者相校，但有先后之别，安有分量之差。拜轮此言，固甚矫激，且寓风刺之旨。以余观之，现世有现世之乐，来世有来世之乐。现世有现世之青春，来世有来世之青春。为贪来世之乐与青春，而迟吾现世之乐与青春，固所不许。而为贪现世之乐与青春，遽弃吾来世之乐与青春，亦所弗应也。人生求乐，何所不可，亦何必妄分先后，区异今来也？耶曼孙曰：“尔若爱千古，当利用现在。昨日不能呼还，明日尚未确实。尔能确有把握者，惟有今日。今日之一日，适当明晨之二日。”斯言足发吾人之深省矣。盖现在者吾人青春中之青春也。青春作伴以还于大漠之乡，无如而不自得，更何烦忧之有焉。烦忧既解，恐怖奚为？耶比古达士曰：“贫不足恐，流窜不足恐，囹圄不足恐，最可恐者，恐怖其物也。”美之政雄罗斯福氏，解政之后，游猎荒山，奋其铁腕，以与虎豹熊罴相搏战。一日猎白熊，险遭吞噬，自传其事，谓为不以恐怖误其稍纵即逝之机之效，始获免焉。于以知恐怖为物，决不能拯人于危。苟其明日将有大祸临于吾躬，无论如何恐怖，明日之祸万不能因是而减其豪〔毫〕末。而今日之我，则因是而大损其气力，俾不足以御明日之祸而与之抗也。艰虞万难之境，横于吾前，吾惟有我、有我之现在而足恃。堂堂七尺之躯，徘徊回顾，前不见古人，后不见来者，惟有昂头阔步，独往独来，何待他人之援手，始以遂其生者，更胡为乎“念天地之悠悠，独怆然而涕下”哉？惟足为累于我之现在及现在之我者，机械生活之重荷，与过去历史之积尘，殆有同一之力焉。今人之赴利禄之途也，如蚁之就羶，蛾之投火，究其所企，克致志得意满之果，而营营扰扰，已逾半生，以孑然之身，强负黄金与权势之重荷以趋，几何不为所重压而僵毙耶？盖其优于权富即其短于青春者也。耶经有云：“富人之欲入天国，犹之骆驼欲潜身于针孔。”此以喻重荷之与青春不并存也。总之，青年之自觉，一在冲决过去历史之网罗，破坏陈腐学说之囹圄，勿令僵尸枯骨，束缚现在活泼泼地之我，进而纵现在青春之我，扑杀过去青春之我，促今日青春之我，禅让明日青春之我。一在脱绝浮世虚伪之机械生活，以特立独行之我，立于行健不息之大机轴。袒裼裸裎，去来无罫，全其优美高尚之天，不仅以今日青春之我，追杀今日白首之我，并宜以今日青春之我，预杀来日白首之我，此固人生唯一之蕲向，青年唯一之责任也矣。拉凯尔曰：“长保青春，为人生无上之幸福，尔欲享兹幸福，当死于少年之中。”吾愿吾亲爱之青年，生于青春死于青春，生于少年死于少年也。德国史家孟孙氏，评骘锡札曰：“彼由青春之杯，饮人生之水，并泡沫而干之。”吾愿吾亲爱之青年，擎此夜光之杯，举人生之醍醐浆液，一饮而干也。人能如是，方为不役于物，物莫之伤。大浸稽天而不溺，大旱金石流土山焦而不热，是其尘垢粃糠，将犹陶铸尧、舜。自我之青春，何能以外界之变动而改易，历史上残骸枯骨之灰，又何能塞蔽青年之聪明也哉？市南宜僚见鲁侯，鲁侯有忧色，市南子乃示以去累除忧之道，有曰“吾愿君去国捐俗，与道相辅而行。”君曰：“彼其道远而险，又有江山，我无舟车，奈何？”市南子曰：“君无形倨，无留居，以为舟车。”君曰：“彼其道幽远而无人，吾谁与为邻？吾无粮，我无食，安得而至焉？”示〔市〕南子曰：“少君之费，寡君之欲，虽无粮而乃足，君其涉于江而浮于海，望之而不见其崖，愈往而不知其所穷，送君者将自崖而反，君自此远矣。”此其谓道，殆即达于青春之大道。青年循蹈乎此，本其理性，加以努力，进前而勿顾后，背黑暗而向光明，为世界进文明，为人类造幸福，以青春之我，创建青春之家庭，青春之国家，青春之民族，青春之人类，青春之地球，青春之宇宙，资以乐其无涯之生。乘风破浪，迢迢乎远矣，复何无计留春望尘莫及之忧哉？吾文至此，已嫌冗赘，请诵漆园之语，以终斯篇。　</p>
<p><img src="https://i.loli.net/2021/07/20/Ixv8WzT9nJS6Gth.png" alt="本文刊登于《新青年》杂志第二卷第一号，1916年9月1日"><br>本文刊登于《新青年》杂志第二卷第一号，1916年9月1日</p>
<blockquote>
<p>剪报来源<br>公众号： 北京大学人文社会科学研究院<br>链　接：<a href="https://mp.weixin.qq.com/s/0Rg-uyGIjNULo7D74a6Dtw">https://mp.weixin.qq.com/s/0Rg-uyGIjNULo7D74a6Dtw</a><br>日　期：2021-04-28</p>
</blockquote>
]]></content>
      <categories>
        <category>剪报</category>
      </categories>
  </entry>
  <entry>
    <title>袁隆平：我的两个梦</title>
    <url>/2021/05/24/ylp-2/</url>
    <content><![CDATA[<blockquote>
<p><strong>【侠客岛按】</strong></p>
<p>今天中午，噩耗传来。“杂交水稻之父”、中国工程院院士、“共和国勋章”获得者袁隆平在湖南长沙逝世。</p>
<p>2019年10月23日，袁老曾在《人民日报》刊发文章，自述他的两个梦想，感人至深。侠客岛予以推荐，藉此缅怀这位伟大的科学家。</p>
<p>袁老，您走好。</p>
</blockquote>
<p>时光如白驹过隙，一转眼，90年过去，我成了正儿八经的“90后”。我大半辈子都在与水稻打交道，至今从事杂交水稻研究工作已有55个年头。我最关心的，就是与水稻和粮食相关的事。</p>
<p>新中国成立之前，中华大地上到处灾荒战乱，人民生活颠沛流离，少年时我就被迫从一个城市辗转到另一个城市，虽然少不更事，但每当看到沿路举家逃难、面如菜色的同胞，看到荒芜的田野和满目疮痍的土地，我的内心总会泛起一阵阵痛楚。报考大学时，我就对父母说，我要学农。母亲听了，吓一跳，说，傻孩子，学农多苦啊，你以为好玩儿呢？<strong>但我是真正爱上了农业，死活要学，还摆出大道理：吃饭可是天下第一桩大事，没有饭吃，人类怎么生存？</strong>最后，父母尊重我的选择。</p>
<p>毕业后，我被分配到湖南安江农校任教。安江农校地处偏远，临行前，学校的领导告诉我，那里很偏僻，“一盏孤灯照终身”，你可要做好思想准备。当时我想，能传播农业科学知识，也是为国家做贡献！没想到，去了不久，就碰上困难时期。我当时想，<strong>这么大一个国家，如果粮食安全得不到保障，其他一切都无从谈起，我要为让中国人吃饱饭而奋斗！</strong></p>
<p>一天，我看到一些农民从高山上兑了种子，担回来种，就问他们，为什么跑到那么高的山上去换种呢？他们说，山上的种子质量好一些，产得多些。他们接着还说了一句话，叫做“施肥不如勤换种”。这对我有很大启发：农业上增产的途径有很多，但其中良种是非常重要的因素。</p>
<p>从此以后，我开始自己的杂交水稻研究之路。一路走来，有汗水和辛酸，也有丰收和喜悦。<strong>科学探索无止境，在这条漫长而又艰辛的路上，我一直有两个梦，一个是禾下乘凉梦，一个是杂交水稻覆盖全球梦。</strong></p>
<p><strong>禾下乘凉梦，我是真做过，我梦见水稻长得有高粱那么高，穗子像扫把那么长，颗粒像花生那么大，而我则和助手坐在稻穗下面乘凉。其实我这个梦想的实质，就是水稻高产梦，让人们吃上更多的米饭，永远都不用再饿肚子。</strong></p>
<p>做梦容易，但要把梦变成现实，则需要付出大量艰苦的劳动和努力。我清楚地记得，<strong>那是1961年7月的一天，我到安江农校的试验田选种。突然，我发现了一株“鹤立鸡群”的稻株</strong>。穗大，颗粒饱满。我随手挑了一穗，竟有230粒之多！当时以为，选到了优良品种，岂不是可以增产无数粮食？</p>
<p>第二年春天，我把种子播下，结果却令人大失所望，一眼望去，高的高，矮的矮，没有一株赶得上最初的那株水稻。我不甘心，开始反复琢磨其中的奥秘，研究那一片试验田的稻株比例，最终得出一个结论：水稻是有杂交优势的，那株鹤立鸡群的水稻，就是天然的杂交水稻。既然天然杂交稻具有这样强的优势，那么人工杂交稻，也一定有优势。当时，遗传学理论一直否定自花授粉作物有杂交优势。我对此理论提出质疑。随后，我又拜访专家，翻找资料，<strong>最终得出结论，既然自然界存在杂交稻，那么人工杂交水稻也一定可以利用</strong>。而要想利用这一优势，首先需要找到“天然的雄性不育水稻”。</p>
<p>于是，我又走上曲折的寻找之旅。</p>
<p>其中，<strong>最令人刻骨铭心的是，在海南岛找到天然雄性不育野生稻“野败”并加以利用的过程</strong>。那是1970年11月，我和助手李必湖、尹华奇驻守在海南岛崖县南红农场，在当地寻找野生稻。在那里，有一位农专毕业的冯克珊，是南红良种繁育场的技术员，经常跑来听我讲课。冯克珊联想到农场附近有一种名叫“假禾”的草，很可能就是我要找的野生稻。</p>
<p>11月23日，他找到李必湖，来到南红农场铁路涵洞附近的水塘边，到那片正在开花的野生稻中察看。他们发现了三个雄花异常的野生稻穗，野生稻穗的花药细瘦，色浅呈水渍状，不开裂散粉。这三个稻穗生长于同一禾蔸，是从一粒种子长出、匍匐于水面的分蘖。他们立即把这蔸野生稻连泥挖起，放在铁桶里拉回去，然后移栽到试验田里，等待鉴定。</p>
<p>当时，我正在北京开会，收到助手们从海南发来的电报，连夜赶火车奔回海南岛。<strong>经过仔细检验，我们最终确认这是一株十分难得的天然雄性不育株野生稻，我给它命名为“野败”。</strong></p>
<p>这真是大海捞针啊！</p>
<p>“野败”的发现对杂交水稻研究具有里程碑的意义，更是杂交水稻“三系”配套成功的突破口。<strong>1973年，我们协作组历尽千辛万苦才通过测交找到恢复系，攻克“三系”配套难关，才有了新中国第一代杂交水稻。</strong>第一代以细胞质雄性不育系为遗传工具的杂交水稻，优点是不育系不育性稳定，但也有缺点，即配组的时候受到恢保关系制约，因此选择优良组合的几率比较低，难度大。</p>
<p>自上世纪80年代中后期起，我们开始研究两系杂交水稻。1995年，第二代以光温敏不育系为遗传工具的杂交水稻——两系法杂交稻研制成功，它的主要优点是配组自由选择，能选配到优良稻组合的几率比较高。但是，第二代杂交稻也不是完美的：不育系育性受气温和光照影响较大。我想，如果有一种杂交水稻，既兼具第一代和第二代的优点，又能克服二者的缺点，那该多好啊！</p>
<p><strong>2011年，我们又启动第三代杂交水稻育种技术的研究与利用，这是以遗传工程雄性不育系为遗传工具的杂交水稻，已初步研究成功，该杂交水稻克服了前两代的缺点。现在，我们甚至开始了第四代、第五代杂交水稻的研制。</strong></p>
<p><strong>袁隆平带各国朋友参观试验田（图源：新华社）</strong></p>
<p>追求高产更高产，是我们永恒的目标。自上世纪90年代中后期起，我们开始超级杂交稻攻关，分别于2000年、2004年、2011年、2014年实现大面积示范亩产700公斤、800公斤、900公斤、1000公斤目标。近5年又突破每公顷16吨、17吨的目标。<strong>2017年，世界水稻平均每公顷产量仅4.61吨，而我国杂交水稻平均产量每公顷达7.5吨，在世界上遥遥领先。</strong></p>
<p>不可否认，上个世纪我们的主要任务是解决人民群众的温饱问题，所以杂交水稻把产量摆在优先地位。现在生活水平提高了，人民不仅要吃饱，还要吃好。所以，我们也改变思路，提出既要高产，又要优质。但是必须说清楚，虽然要满足市场对优质大米的需求，但我们仍然坚持一条，即不能以牺牲产量来求优质。<strong>我始终觉得，粮食安全问题必须时刻警惕。历史也无数次告诫我们，把饭碗牢牢端在自己手中的最有效途径，就是提高水稻的产量。</strong></p>
<p>科学探索永无止境，我的另一个梦，就是<strong>杂交水稻走向世界、覆盖全球梦</strong>。</p>
<p>世界上超过一半人口以稻米为主食，一个令人担忧的事实却是，全球现有1.6亿公顷稻田中，杂交水稻种植面积还不到15%。发展杂交水稻不仅有广阔的舞台，更对保障世界粮食安全具有重要意义，倘若全球有一半稻田种上杂交稻，按每公顷比常规水稻增产2吨计算，则增产的粮食可以多养活4亿—5亿人口。杂交水稻覆盖全球不仅能提升全球水稻产量，造福人类，还能提升我国的国际地位。</p>
<p>为了实现这个梦，我们一直在努力。从上世纪80年代至今，我们坚持开办杂交水稻技术国际培训班，为80多个发展中国家培训了14000多名杂交水稻技术人才，我还受邀担任联合国粮农组织首席顾问，帮助其他国家发展杂交水稻。<strong>目前，杂交水稻已在印度、越南、菲律宾、孟加拉国、巴基斯坦、印度尼西亚、美国、巴西等国实现大面积种植。</strong>今年6月，在长沙举行的中非经贸博览会上，来了不少非洲国家农业界的朋友，看到他们对杂交水稻充满感激和期待，更坚定了我们将杂交水稻推向世界的信心与决心。</p>
<p>新中国杂交水稻事业能够取得丰硕成果，离不开党和国家的高度重视与大力支持，同时也是广大科技工作者集体智慧的结晶。<strong>我已经90岁了，但“老骥伏枥，志在千里”，我要力争让我们的团队早日完成每公顷18吨的高产攻关，做好第三代杂交水稻技术的生产应用。我希望最终能实现“禾下乘凉、覆盖全球”的两大心愿。</strong></p>
<p><em>文/袁隆平</em><br><em>编辑/点苍</em><br><strong>（原文刊于《 人民日报 》2019年10月23日第20 版）</strong></p>
<blockquote>
<p>剪报来源<br>公众号： 侠客岛<br>链　接：<a href="https://mp.weixin.qq.com/s/ore4_iTqusGz-gq4Kmg0Vw">https://mp.weixin.qq.com/s/ore4_iTqusGz-gq4Kmg0Vw</a><br>日　期：2021-05-22</p>
</blockquote>
]]></content>
      <categories>
        <category>剪报</category>
      </categories>
  </entry>
  <entry>
    <title>袁隆平：稻子熟了，妈妈，我来看您了</title>
    <url>/2021/05/24/ylp-1/</url>
    <content><![CDATA[<blockquote>
<p><strong>“他们说，我用一粒种子改变了世界。我知道，这粒种子，是妈妈您在我幼年时种下的！”</strong></p>
<p>2010年，在袁隆平院士80华诞，湖南卫视为他举办了“为了大地的丰收”专场文艺晚会，晚会上，袁院士写给母亲的信《妈妈，稻子熟了》感动了在场所有观众，字里行间，说不尽对母亲的思念与愧疚。</p>
<p>袁隆平动情写到：“没能多陪伴母亲，是我永远的后悔与遗憾。”今天，袁隆平院士逝世，读完这封旧信的网友纷纷留言：“读到一半就已泪流满面，可爱的袁爷爷，要去和妈妈团聚了。”</p>
<p>我们整理了信件原文，纪念袁隆平院士一路走好。</p>
<p>以下为信件原文。</p>
</blockquote>
<p>本来想一个人静静地陪您说会话，安江的乡亲们实在是太热情了，天这么热，他们还一直陪着，谢谢他们了。</p>
<p>妈妈，您在安江，我在长沙，隔得很远很远。我在梦里总是想着您，想着安江这个地方。</p>
<p>人事难料啊，您这样一位习惯了繁华都市的大家闺秀，最后竟会永远留在这么一个偏远的小山村。还记得吗？1957年，我要从重庆的大学分配到这儿，是您陪着我，脸贴着地图，手指顺着密密麻麻的细线，找了很久，才找到地图上这么一个小点点。当时您叹了口气说：<strong>“孩子，你到那儿，是要吃苦的呀……”</strong></p>
<p>我说：“我年轻，我还有一把小提琴。”</p>
<p>没想到的是，为了我，为了帮我带小孩，把您也拖到了安江。最后，受累吃苦的，是妈妈您哪！您哪里走得惯乡间的田埂！我总记得，每次都要小孙孙牵着您的手，您才敢走过屋前屋后的田间小道。</p>
<p>安江是我的一切，我却忘了，对一辈子都生活在大城市里的您来说，70岁了，一切还要重新来适应。我从来没有问过您有什么难处，我总以为会有时间的，会有时间的，等我闲一点一定好好地陪陪您……</p>
<p>哪想到，直到您走的时候，我还在长沙忙着开会。那天正好是中秋节，全国的同行都来了，搞杂交水稻不容易啊，我又是召集人，怎么着也得陪大家过这个节啊，只是儿子永远亏欠妈妈您了……</p>
<p>其实我知道，那个时候已经是您的最后时刻。我总盼望着妈妈您能多撑两天。谁知道，即便是天不亮就往安江赶，我还是没能见上妈妈您最后一面。</p>
<p>太晚了，一切都太晚了，我真的好后悔。妈妈，当时您一定等了我很久，盼了我很长，您一定有很多话要对儿子说，有很多事要交代。可我怎么就那么糊涂呢！这么多年，为什么我就不能少下一次田，少做一次实验，少出一天差，坐下来静静地好好陪陪您。哪怕……哪怕就一次。</p>
<p>妈妈，每当我的研究取得成果，每当我在国际讲坛上谈笑风生，每当我接过一座又一座奖杯，我总是对人说，这辈子对我影响最深的人就是妈妈您啊！</p>
<p>无法想象，没有您的英语启蒙，在一片闭塞中，我怎么能够阅读世界上最先进的科学文献，用超越那个时代的视野，去寻访遗传学大师孟德尔和摩尔根？无法想象，在那段颠沛流离的岁月中，从北平到汉口，从桃源到重庆，没有您的执著和鼓励，我怎么能获得系统的现代教育，获得在大江大河中自由翱翔的胆识？无法想象，没有您在摇篮前跟我讲尼采，讲这位昂扬着生命力、意志力的伟大哲人，我怎么能够在千百次的失败中坚信，必然有一粒种子可以使万千民众告别饥饿？</p>
<p>他们说，我用一粒种子改变了世界。<strong>我知道，这粒种子，是妈妈您在我幼年时种下的！</strong></p>
<p>稻子熟了，妈妈，您能闻到吗？安江可好？那里的田埂是不是还留着熟悉的欢笑？隔着21年的时光，我依稀看见，小孙孙牵着您的手，走过稻浪的背影；我还要告诉您，一辈子没有耕种过的母亲，稻芒划过手掌，稻草在场上堆积成垛，谷子在阳光中毕剥作响，水田在西晒下泛出橙黄的味道。这都是儿子要跟您说的话，说不完的话啊……</p>
<p><strong>妈妈，稻子熟了，我想您了！</strong></p>
<blockquote>
<p>剪报来源<br>公众号：中央政法委长安剑<br>链　接：<a href="https://mp.weixin.qq.com/s/42Y7nHEUkbXOFBGDcTeC4A">https://mp.weixin.qq.com/s/42Y7nHEUkbXOFBGDcTeC4A</a><br>日　期：2021-05-23</p>
</blockquote>
]]></content>
      <categories>
        <category>剪报</category>
      </categories>
  </entry>
  <entry>
    <title>Bulk Deleting Keys in Redis Using Wildcards</title>
    <url>/2024/09/18/bulk-deleting-keys-in-redis-using-wildcards/</url>
    <content><![CDATA[<div class="note orange icon-padding flat">
    <i class="note-icon fas fa-circle-exclamation"></i>
    <p>Be Cautious with the KEYS Command in Production: Commands like KEYS, FLUSHALL, and FLUSHDB can block Redis when working with large datasets. They may scan the entire keyspace, potentially locking up Redis and degrading performance.</p>
</div>


<p>Redis currently does not support bulk deletion of keys using wildcards. However, we can achieve this using the <code>del</code> command in combination with Linux pipes and the <code>xargs</code> command.</p>
<p>The <code>del</code> command in Redis allows you to delete one or more specified keys and returns the number of keys that were deleted. For example, the command <code>del key1 key2 key3</code> would delete those specific keys.</p>
<p>To delete all keys that start with <code>WxMpSessionKey</code>, you can use the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[redis@iztz9ploifbvce ~]# redis-cli -h 192.168.182.227 -p 1379 keys <span class="string">&quot;WxMpSessionKey*&quot;</span> | xargs redis-cli -h 192.168.182.227 -p 1379 del</span><br><span class="line">(<span class="built_in">integer</span>) 2674</span><br></pre></td></tr></table></figure>
<p>If you’re connecting to Redis at <code>127.0.0.1</code> on the default port <code>6379</code>, the command can be simplified to:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli keys <span class="string">&quot;WxMpSessionKey*&quot;</span> | xargs redis-cli del</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>毛泽东：体育之研究</title>
    <url>/2021/07/15/mzd-1/</url>
    <content><![CDATA[<h2 id="前-言"><a href="#前-言" class="headerlink" title="前   言"></a><strong>前   言</strong></h2><p>国力苶弱，武风不振，民族之体质，日趋轻细。此甚可忧之现象也。提倡之者，不得其本，久而无效。长是不改，弱且加甚。夫命中致远，外部之事，结果之事也。体力充实，内部之事，原因之事也。体不坚实，则见兵而畏之，何有于命中，何有于致远？坚实在于锻炼。锻炼在于自觉。今之提倡者，非不设种种之方法，然而无效者，外力不足以动其心，不知何为体育之真义。体育果有如何之价值，效果云何，著手何处，皆茫乎如在雾中，其无效亦宜。欲图体育之效，非动其主观，促其对体育之自觉不可。苟自觉矣，则体育之条目，可不言而自知，命中致远之效，亦当不求而自至矣。不佞深感体育之要，伤提倡者之不得其当，知海内同志，同此病而相怜者必多。不自惭赧，贡其愚见，以资商榷。所言并非皆己实行，尚多空言理想之处，不敢为欺。倘辱不遗，赐之教诲，所虚心百拜者也。</p>
<h2 id="第一-释体育"><a href="#第一-释体育" class="headerlink" title="第一  释体育"></a><strong>第一  释体育</strong></h2><p>自有生民以来，智识有愚闇，无不知自卫其生者。是故西山之薇，饥极必食；井上之李，不容不咽；巢木以为居；皮兽以为衣；盖发乎天能，不知所以然也。然而未精也。有圣人者出，于是乎有礼，饮食起居，皆有节度。故”子之燕居，申申如也，夭夭如也”；”食饐而谒，鱼馁而肉败，不食”；”射于矍相之圃，盖观者如墙堵焉”。人体之组成，与群动无不同，而群动不能及人之寿，所以制其生者无节度也。人则以节度制其生，愈降于后而愈明，于是乎有体育。体育者，养生之道也。<br>东西之所明者不一：庄子效法于庖丁，仲尼取资于射御；现今文明诸国，德为最盛，其斗剑之风，播于全国；日本则有武士道，近且因吾国之绪余，造成柔术，觥觥乎可观已。而考其内容，皆先精究生理，详于官体之构造，脉络之运行，何方发达为早，何部较有偏缺，其体育即准此为程序，抑其过而救其所不及。故其结论，在使身体平均发达。由此言之，体育者，人类自其养生之道，使身体平均发达，而有规则次序之可言者也。</p>
<h2 id="第二-体育在吾人之位置"><a href="#第二-体育在吾人之位置" class="headerlink" title="第二 体育在吾人之位置"></a><strong>第二 体育在吾人之位置</strong></h2><p>体育一道，配德育与智育，而德智皆寄于体。无体是无德智也。顾知之者或寡矣。或以为重在智识，或曰道德也。夫知识则诚可贵矣，人之所以异于动物者此耳。顾徒知识之何载乎？道德亦诚可贵矣，所以立群道平人己者此耳。顾徒道德之何寓乎？体者，为知识之载而为道德之寓者也。其载知识也如车，其寓道德也如舍。<br>体者，载知识之车而寓道德之舍也。儿童及年入小学，小学之时，宜专注重于身体之发育，而知识之增进道德之养成次之。宜以养护为主，而以教授训练为辅。今盖多不知之，故儿童缘读书而得疾病或至夭殇者有之矣。中学及中学以上，宜三育并重，今人则多偏于智。中学之年，身体之发育尚未完成，乃今培之者少而倾之者多，发育不将有中止之势乎？吾国学制，课程密如牛毛，虽成年之人，顽强之身，犹莫能举，况未成年者乎？况弱者乎？<br>观其意，教者若特设此繁重之课，以困学生，蹂躏其身而残贼其生，有不受者则罚之；智力过人者，则令加读某种某种之书，甘言以恬之，厚赏以诱之。嗟乎，此所谓贼夫人之子欤！学者亦若恶此生之永年，必欲摧折之，以身为殉而不悔。何其梦梦如是也！人独患无身耳，他复何患？求所以善其身者，他事亦随之矣。善其身无过于体育。体育于吾人实占第一之位置。体强壮而后学问道德之进修勇而收效远。于吾人研究之中，宜视为重要之部。”学有本末，事有终始，知所先后，则近道矣。”此之谓也。</p>
<h2 id="第三-前此体育之弊及吾人自处之道"><a href="#第三-前此体育之弊及吾人自处之道" class="headerlink" title="第三 前此体育之弊及吾人自处之道"></a><strong>第三 前此体育之弊及吾人自处之道</strong></h2><p>三育并重，然昔之为学者，详德智而略于体。及其弊也。偻身俯首，纤纤素手，登山则气迫，涉水则足痉。故有颜子而短命，有贾生而早夭，王勃卢照邻或幼伤或坐废。此皆有甚高之德与智也，一旦身不存，德智则从之而隳矣。惟北方之强，任金革死而不厌。燕赵多悲歌慷慨之士。烈士武臣，多出凉州。清之初世，颜习斋李刚主文而兼武。习斋远跋千里之外，学击剑之术于塞北，与勇士角而胜焉。故其言曰：”文武缺一岂道乎？”顾炎武南人也，好居于北，不喜乘船而喜乘马。此数古人者，皆可师者也。<br>学校既起，采各国之成法，风习稍稍改矣。然办学之人，犹未脱陈旧一流，囿于所习，不能骤变，或少注意及之，亦惟是外面铺张，不揣其本而齐其末。故愚观现今之体育，率多有形式而无实质。非不有体操课程也，非不有体操教员也，然而受体操之益者少。非徒无益，又有害焉。教者发令，学者强应，身顺而心违，精神受无量之痛苦，精神苦而身亦苦矣。盖一体操之终，未有不貌瘁神伤者也。饮食不求洁，无机之物、微生之菌，入于体中，化为疾病；室内光线不足，则目力受害不小；桌椅长短不合，削趾适履，则躯干受亏；其余类此者尚多，不能尽也。<br>然则为吾侪学者之计如之何？学校之设备，教师之教训，乃外的客观的也。吾人盖尚有内的主观的。夫内断于心，百体从令。祸福无不自己求之者，我欲仁斯仁至，况于体育乎。苟自之不振，虽使外的客观的尽善尽美，亦犹之乎不能受意也。故讲体育必自自动始。</p>
<h2 id="第四-体育之效"><a href="#第四-体育之效" class="headerlink" title="第四 体育之效"></a><strong>第四 体育之效</strong></h2><p>人者动物也，则动尚矣。人者有理性的动物也，则动必有道。然何贵乎此动邪？何贵乎此有道之动邪？动以营生也，此浅言之也；动以卫国也，此大言之也。皆非本义。动也者，盖养乎吾生乐乎吾心而已。朱子主敬，陆子主静。静，静也；敬，非动也，亦静而已。老子曰无动为大。释氏务求寂静。静坐之法，为朱陆之徒者咸尊之。近有因是子者，言静坐法，自诩其法之神，而鄙运动者之自损其体。是或一道，然予未敢效之也。愚拙之见，天地盖惟有动而已。<br>动之属于人类而有规则之可言者曰体育。前既言之，体育之效，则强筋骨也。愚昔尝闻，人之官骸肌络，及时而定，不复再可改易，大抵二十五岁以后，即一成无变。今乃知其不然。人之身盖日日变易者：新陈代谢之作用不绝行于各部组织之间，目不明可以明，耳不聪可以聪，虽六七十之人犹有改易官骸之效，事盖有必至者。又闻弱者难以转而为强，今亦知其非是。盖生而强者，滥用其强，不戒于种种嗜欲，以渐戕贼其身，自谓天生好身手，得此已足，尚待锻炼？故至强者或终转为至弱。至于弱者，则恒自悯其身之下全，而惧其生之不永，兢业自持。<br>于消极方面，则深戒嗜欲，不敢使有损失。于积极方面，则勤自锻炼，增益其所不能。久之遂变而为强矣。故生而强者不必自喜也，生而弱者不必自悲也。吾生而弱乎，或者夭之诱我以至于强，未可知也。东西著称之体育家，若美之罗斯福、德之孙棠、日本之嘉纳，皆以至弱之身，而得至强之效。又尝闻之，精神身体，不能并完。用思想之人，每歉于体；而体魄蛮健者，多缺于思。其说亦谬。<br>此盖指薄志弱行之人，非所以概乎君子也。孔子七十二而死，未闻其身体不健；释迹往来传道，死年亦高；邪苏不幸以冤死；至于摩诃末，左持经典，右执利剑，征压一世。此皆古之所谓圣人，而最大之思想家也。今之伍秩庸先生，七十有余岁矣，自谓可至百余岁，彼亦用思想之人也；王湘绮死年七十余，而康健矍铄。为是说者，其何以解邪？总之，勤体育则强筋骨，强筋骨则体质可变，弱可转强，身心可以并完。此盖非天命而全乎人力也。<br>非第强筋骨也，又足以增知识。近人有言曰：文明其精神，野蛮其体魄。此言是也。欲文明其精神，先自野蛮其体魄。苟野蛮其体魄矣，则文明之精神随之。夫知识之事，认识世间之事物而判断其理也。于此有须于体者焉。直观则赖乎耳目，思索则赖乎脑筋，耳目脑筋之谓体，体全而知识之事以全。故可谓间接从体育以得知识。今世百科之学，无论学校独修，总须力能胜任。力能胜任者，体之强者也。不能胜任者，其弱者也。强弱分，而所任之区域以殊矣。<br>非第增知识也，又足以调感情。感情之于人，其力极大。古人以理性制之，故曰”主人翁常惺惺否”，又曰”以理制心”。然理性出于心，心存乎体。常观罢弱之人，往往为感情所役，而无力以自拔；五官不全及肢体有缺者，多困于一偏之情，而理性不足以救之。故身体健全，感情斯正，可谓不易之理。以例言之：吾人遇某种不快之事，受其刺激，心神震荡，难于制止，苟加以严急之运动，立可汰去陈旧之观念，而复使脑筋清明，效盖可立而待也。<br>非第调感情也，又足以强意志。体育之大效，盖尤在此矣。夫体育之主旨，武勇也。武勇之目，若猛烈，若不畏，若敢为，若耐久，皆意志之事。取例明之，如冷水浴足以练习猛烈与不畏，又足以练习敢为。凡各种之运动，持续不改，皆有练习耐久之益。若长距离之赛跑，于耐久之练习尤著。夫力拔山气盖世，猛烈而已；不斩楼兰誓不还，不畏而已；化家为国，敢为而已；八年于外，三过其门而不入，耐久而已。要皆可于日常体育之小基之。意志也者，固人生事业之先躯也。<br>肢体纤小者举止轻浮，肤理缓弛者心意柔钝，身体之影响于心理也如是。体育之效，至于强筋骨，因而增知识，因而调感情，因而强意志。筋骨者，吾人之身；知识、感情、意志者，吾人之心。身心皆适，是谓俱泰。故夫体育非他，养乎吾生、乐乎吾心而已。</p>
<h2 id="第五-不好运动之原因"><a href="#第五-不好运动之原因" class="headerlink" title="第五 不好运动之原因"></a><strong>第五 不好运动之原因</strong></h2><p>运动力体育之最要者。今之学者多不好运动，其原因盖有四焉：一则无自觉心也。一事之见于行为也，必先动其喜为此事之情，尤必先有对于此事明白周详知其所以然之智。明白周详知所以然者，即自觉心也。人多不知运动对于自己有如何之关系，或知其大略，亦未至于亲切严密之度。无以发其智，因无以动其情。夫能研究各种科学孜孜不倦者，以其关系于己者切也。今日不为，他日将无以谋生。而运动则无此自觉，此其咎由于自己不能深省者半，而教师不知所以开之亦占其半也。一则积习难返也。我国历来重文，羞齿短后，动有好汉不当兵之语。<br>虽知运动当行之理，与各国运动致强之效，然旧观念之力尚强，其于新观念之运动，盖犹在迎拒参半之列。故不好运动，亦无怪其然。一则提倡不力也。此又有两种：其一，今之所称教育家，多不诺体育。自己不知体育，徒耳其名，亦从而体育之，所以出之也不诚，所以行之也无术，遂减学者研究之心。夫荡子而言自立，沉湎而言节饮，固无人信之矣。其次，教体操者多无学识，语言鄙俚，闻者塞耳。所知惟此一技，又未必精，日日相见者，惟此机械之动作而已。<br>夫徒有形式而无精意以贯注之者，其事不可一日存，而今之体操实如是。一则学者以运动力可羞也。以愚所考察，此实为不运动之大原因矣。夫衣裳檐檐（注：将木字旁换成衣字旁）、行止于于、瞻视舒徐而夷犹者，美好之态，而社会之所尚也。忽尔张臂露足，伸肢屈体，此何为者邪？宁非大可怪者邪？故有深知身体不可不运动，且甚思实行，竟不能实行者；有群行群止能运动，单独行动则不能者；有燕居私室能运动，稠人广众则不能者。一言蔽之，害羞之一念为之耳。四者皆不好运动之原因。第一与第四属于主观，改之在己；第二与第三属于客观，改之在人，君子求己，在人者听之可矣。</p>
<h2 id="第六-运动之方法贵少"><a href="#第六-运动之方法贵少" class="headerlink" title="第六 运动之方法贵少"></a><strong>第六 运动之方法贵少</strong></h2><p>愚自伤体弱，因欲研究卫生之术。顾古人言者亦不少矣。近今学校有体操、坊间有书册，冥心务泛，终难得益。盖此事不重言谈，重在实行，苟能实行，得一道半法已足，曾文正行临睡洗脚、食后千步之法，得益不少。有老者年八十犹康健，问之，曰：”吾惟不饱食耳。”今之体操，诸法樊陈，更仆尽之，宁止数十百种？巢林止于一枝，饮河止于满腹。吾人惟此身耳，惟此官骸藏络耳，虽百其法，不外欲使血脉流通。夫法之致其效者一，一法之效然，百法之效亦然，则余之九十九法可废也。目不两视而明，耳不两听而聪，筋骨之锻炼而百其方法，是扰之也。<br>欲其有效，未见其能有效矣。夫应诸方之用，与锻一己之身者，不同。浪桥所以适于航海，持竿所以适于逾高，游戏宜乎小学，兵式宜乎中学以上，此应诸方之用者也。运动筋骸使血脉流通，此锻一己之身者也。应诸方之用者其法宜多，锻一己之身者其法宜少。近之学者，多误此意，故其失有二：一则好运动者，以多为善，几欲一人之身，百般俱备，甚至无一益身者；一则不好运动者，见人之技艺多，吾所知者少，则绝弃之而不为，其宜多者不必善，务广而荒，又何贵乎？少者不必不善，虽一手一足之屈伸，苟以为常，亦有益焉。明乎此，而后体育始有进步可言矣。</p>
<h2 id="第七-运动应注意事项"><a href="#第七-运动应注意事项" class="headerlink" title="第七 运动应注意事项"></a><strong>第七 运动应注意事项</strong></h2><p>凡事皆宜有恒，运动亦然。有两人于此，其于运动也，一人时作时辍，一人到底不懈，则效不效必有分矣。运动而有恒，第一能生兴味。凡静者不能自动，必有所以动之者。动之无过于兴味。凡科学皆宜引起多方之兴味，而于运动尤然。人静处则甚逸，发动则甚劳，人恒好逸而恶劳，使无物焉以促之，则不足以移其势而变其好恶之心。<br>而此兴味之起，由于日日运动不辍。最好于才起临睡行两次运动，裸体最善，次则薄衣，多衣甚碍事。日以为常，使此运动之观念，相连而不绝，今日之运动，承乎昨日之运动，而又引起明日之运动。每次不必久，三十分钟已足。如此自生一种之兴味焉。第二能生快乐。运动既久，成效大著，发生自己价值之念。以之为学则胜任愉快，以之修德则日起有功，心中无限快乐，亦缘有恒而得也。快乐与兴味有辨。兴味者运动之始，快乐者运动之终。兴味生于进行，快乐生于结果。二者自异。<br>有恒矣，而不用心，亦难有效。走马观花，虽日日观，犹无观也。心在鸿鹄，虽与俱学，勿若之矣。故运动有注全力之道焉。运动之时，心在运动，闲思杂虑，一切屏去，运心于血脉如何流通，筋肉如何张弛，关节如何反复，呼吸如何出入。而运作按节，屈伸进退，皆一一踏实。朱子论主一无适，谓吃饭则想着吃饭，穿衣则想着穿衣。注全力于运动之时者，亦若是则已耳。<br>文明柔顺，君子之容。虽然，非所以语于运动也。运动宜蛮拙。骑突枪鸣十荡十决，暗噁颓山岳、叱咤变风云，力拔项王之山，勇贯由基之札，其道盖存乎蛮拙，而无与于纤巧之事。运动之进取宜蛮，蛮则气力雄，筋骨劲。运动之方法宜拙，拙则资守实，练习易。二者在初行运动之人为尤要。运动所宜注意者三：有恒一也，注全力二也，蛮拙三也。他所当注意者尚多。举其要者如此。</p>
<h2 id="第八-运动一得之商榷"><a href="#第八-运动一得之商榷" class="headerlink" title="第八 运动一得之商榷"></a><strong>第八 运动一得之商榷</strong></h2><p>愚既粗涉各种运动，以其皆系外铄而无当于一己之心得。乃提挚各种运动之长，自成一种运动，得此运动之益，颇为不少。凡分六段：手部也，足部也，躯干部也，头部也，打击运动也，调和运动也。段之中有节，凡二十有七节。以其为六段，因名之曰六段运动。兹述于后，世之君子，幸教正焉。<br><strong>一、手部运动，坐势</strong><br>1．握拳向前屈伸。左右参，三次（左右参者，左动右息，右动左息，相参互也）。<br>2．握拳屈时前侧后半圆形运动。左右参，三次。<br>3．握拳向前面下方屈伸。左右并，三次（左右并者，并动不相参互）。<br>4．手仰向外拿。左右参，三次。<br>5．手复向外拿。左右参，三次。<br>6．伸指屈时前刺。左右参，三次。<br><strong>二、足部运动，坐势</strong><br>1．手握拳左右垂。足就原位一前屈，一后斜伸。左右参，三次。2．手握拳前平。足一侧伸，一前屈。伸者可易位，屈者惟趾立。臀跟相接。左右参，三次。3．手握拳左右垂。足一支一揭。左右参，三次。4．手握拳左右垂。足一支一前踢。左右参，三次。5．手握拳左右垂。足一前屈，一后伸。屈者在原位，伸者易位，两足略在直线上。左右参，三次。6．手释拳。全身一起一蹲，蹲时臀跟略接，三次。<br><strong>三、躯干部运动，立势</strong><br>1．身向前后屈。三次（手握拳，下同）。<br>2．手一上伸，一下垂。绷张左右胸肋，左右各一次。<br>3．手一侧垂，一前斜垂。绷张左右背肋，左右各一次。<br>4．足丁字势。手左右横荡。扭捩腰胁。左右各一次。<br><strong>四、头部运动，坐势</strong><br>1．头前后屈。三次。<br>2．头左右转。三次。<br>3．用手按摩额部、颊部、鼻部、唇部、喉部、耳部、后颈部。<br>4．自由运动。头大体位置不动，用意使皮肤及下颚运动。五次。<br><strong>五、打击运动，不定势</strong><br>(打击运动者，以拳遍击身体各处，使血液奔注，筋肉坚实，为此运动之主）<br>1．手部，右手击左手，左手击右手<br>(1) 前膊，上面、下面、左面、右面<br>(2) 后膊，上面、下面、左面、右面<br>2．肩部<br>3．胸部<br>4．胁部<br>5．背部<br>6．腹部<br>7．臀部<br>8．腿部，上腿、下腿<br><strong>六、调和运动，不定势</strong><br>1．跳舞，十余次<br>2．深呼吸，三次</p>
<blockquote>
<p>剪报来源<br>公众号： 考研体育人<br>链　接：<a href="https://mp.weixin.qq.com/s/P3CjCEXDsekDTcWw2vLMFg">https://mp.weixin.qq.com/s/P3CjCEXDsekDTcWw2vLMFg</a><br>日　期：2020-07-13</p>
</blockquote>
]]></content>
      <categories>
        <category>剪报</category>
      </categories>
  </entry>
  <entry>
    <title>马龙：只要心怀热爱，永远都是当打之年！</title>
    <url>/2021/08/09/ml-1/</url>
    <content><![CDATA[<p>　　我的东京奥运会之旅圆满结束，无论单打冠军，还是团体金牌，都是我和我的队友、教练员，以及背后默默付出的陪练、队医、保障团队，团结一心共同奋斗出来的荣耀勋章。</p>
<p><img src="https://i.loli.net/2021/08/09/XbfCZRY2TQtFM9o.jpg" alt=""></p>
<p>　　当国歌响起，五星红旗缓缓升起，那一刻，我感慨万千。过去5年的甘苦画面历历在目。</p>
<p>　　<strong>2018年下半年至2019年初，我因伤远离国际赛场8个月，其间有3个月没有碰球，那是我职业生涯最艰难的一段时期，但我从没有想过放弃，因为乒乓球已经成为我生命中无法替代的一部分。</strong>我告诉自己，只要还有机会，我就一定要坚持训练，重新回到赛场。</p>
<p>　　终于，我来到了东京——第三次踏上了奥运会的赛场。强大的对手、紧张的气氛，让我感到熟悉又兴奋。最让我难忘的，还是与队友们并肩作战的经历。团体赛半决赛和决赛的两场双打，我和搭档许昕把赛前准备的战术打出来了，我真切地感受到了奥运会乒乓球比赛带给我的享受。</p>
<p>　　连续两届奥运会获得单打和团体两项金牌，许多人认为这是个了不起的成就。对此，我心怀感激，乒乓球带给了我一段精彩的人生。<strong>同时我也要感谢祖国和广大人民的支持和信任，这正是中国乒乓球事业不断向前的力量源泉。</strong></p>
<p>　　我已经32岁了，我觉得自己的身体状况还不错。<strong>事实上，不少比我年长的选手依然在赛场充满斗志，这对我也是一种激励。只要心怀热爱，永远都是当打之年！</strong></p>
<hr>
<p>来源：人民日报（2021年8月8日 第07版），原标题《心怀热爱，人生就会精彩（奥林匹克与我）》，作者：马龙，记者范佳元、孙龙飞采访整理</p>
<p>本期编辑：胡程远、石磊</p>
<blockquote>
<p>剪报来源<br>公众号：人民日报<br>链　接：<a href="https://mp.weixin.qq.com/s/kgjVfCvWg1mein0v6w0u7Q">https://mp.weixin.qq.com/s/kgjVfCvWg1mein0v6w0u7Q</a><br>日　期：2021-08-08</p>
</blockquote>
]]></content>
      <categories>
        <category>剪报</category>
      </categories>
  </entry>
  <entry>
    <title>极客时间-成为学习高手笔记</title>
    <url>/2021/09/30/high-efficiency-study-note-0/</url>
    <content><![CDATA[<p>获得：</p>
<ul>
<li>高手学习的 4 个底层思维</li>
<li>切实可行的 7 个超强学习技巧</li>
<li>让学习速度“开挂”的高效记忆法</li>
<li>自律到骨子里的 9 大精力管理法则</li>
</ul>
<h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><ul>
<li><a href="/2021/09/30/high-efficiency-study-note-1/">模块一：底层思维</a></li>
<li><a href="/2021/10/05/high-efficiency-study-note-2/">模块二：高效学习</a></li>
<li><a href="/2021/10/07/high-efficiency-study-note-3/">模块三：高度自律</a></li>
<li><a href="/2021/10/20/high-efficiency-study-note-4/">模块四：时间管理</a></li>
<li><a href="/2021/10/30/high-efficiency-study-note-5/">模块五：学霸养成</a></li>
</ul>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>模块一：底层思维</title>
    <url>/2021/09/30/high-efficiency-study-note-1/</url>
    <content><![CDATA[<ul>
<li><a href="/2021/09/30/high-efficiency-study-note-1/">模块一：底层思维</a></li>
<li><a href="/2021/10/05/high-efficiency-study-note-2/">模块二：高效学习</a></li>
<li><a href="/2021/10/07/high-efficiency-study-note-3/">模块三：高度自律</a></li>
<li><a href="/2021/10/20/high-efficiency-study-note-4/">模块四：时间管理</a></li>
<li><a href="/2021/10/30/high-efficiency-study-note-5/">模块五：学霸养成</a></li>
</ul>
<p><strong>01｜如何减少对学习的排斥和厌恶心理，使其变得相对愉悦？</strong></p>
<ol>
<li>在学习的过程中，可以穿插安排喜欢且擅长的环节，而不是一直死磕艰难的任务。</li>
<li>在制定计划的时候，量力而行，不要制定完不成的计划；</li>
<li>详细记录当天具体的时间使用情况，把自己的学习成果具像化，借以获得正反馈和成就感。</li>
<li>在感到疲倦时，可以试试换个位置或者换个场所。</li>
<li>每天别给自己安排太多类型的任务。</li>
<li>学习的时候，不用某种标准框住自己，也别总对自己的表现评头论足，更不必急着追求某种结果，而是注重做事的过程，把努力当成一种习惯。</li>
</ol>
<p><strong>02｜学会这4点，你也可以告别伪勤奋</strong></p>
<p>伪勤奋的做法：</p>
<ol>
<li>花大量时间做容易的环节；</li>
<li>从来不去检测自己获得了什么；</li>
<li>只是埋头苦学，从来不总结规律；</li>
<li>道德许可效应让你原地徘徊，沉迷于已经努力的幻觉之中。</li>
</ol>
<p>相应解决思路：</p>
<ol>
<li>制定合理的目标计划，适当安排有挑战的任务（需要思考、需要克服困难的任务）；</li>
<li>及时获得反馈，及时检测所学东西，是否记住，是否会做题；</li>
<li>观察、分析、总结自己的学习方法，对方法进行针对性的调整和完善，并且有意识地指导自己接下来的努力方向；</li>
<li>将想做的事情最简化，不搞形式主义，直接开始。</li>
</ol>
<p><strong>03｜掌握考试思维：成为一个特别会考试的人</strong></p>
<ol>
<li>备考时，要学会用考试的思维去学习（考什么学什么）；</li>
<li>研究考试题（出题范围和出题思路），分析题目要求你怎样回忆知识点、怎样运用知识点。并据此决定备考时如何学以及学什么；</li>
<li>最好能找到考试题的答案，知道高分的答案具有哪些元素，需要满足怎样的标准；</li>
<li>学习时，做到即用即学和即学即用，能对知识点有透彻的理解和记忆，并且在考试中，做到更为高效准确地调取，以及运用。</li>
<li>“检索式练习”，通过提问和主动回想的方式，去巩固知识点。</li>
</ol>
<p><strong>04｜用科学原理告诉你如何在考场上超常发挥</strong></p>
<p>1、在解决问题的时候，有一个用于暂时存放信息和加工信息的记忆系统，叫做“工作记忆”，它的容量有限。工作记忆能够存储和处理的信息容量越多，意味着解决问题的能力就越强。</p>
<p>2、考试中发挥失常，是因为过于担忧考试结果，纠结自己是不是做错了，以至于，相当一部分工作记忆的容量被焦虑占用。而真正用于答题的记忆容量，非常有限。</p>
<p>3、要想超常发挥，重要的是，考试时不去预先给自己设置标准，不去评价和思考自己做得怎么样。做完这一题，再做下一题；做下一题时，忘记上一题。</p>
<p>4、在平时的学习中，我们常常怀疑自己的方法是否正确，占用了很多的工作记忆，影响学习效率。有效的解决方法是：给自己一个小时的限定时间，先用眼下的方法，尽量专注学习。如果过程中对学习方法有更好的想法，就先记下来，一小时结束后，花两分钟对学习方法进行调整。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>模块三：高度自律</title>
    <url>/2021/10/07/high-efficiency-study-note-3/</url>
    <content><![CDATA[<ul>
<li><a href="/2021/09/30/high-efficiency-study-note-1/">模块一：底层思维</a></li>
<li><a href="/2021/10/05/high-efficiency-study-note-2/">模块二：高效学习</a></li>
<li><a href="/2021/10/07/high-efficiency-study-note-3/">模块三：高度自律</a></li>
<li><a href="/2021/10/20/high-efficiency-study-note-4/">模块四：时间管理</a></li>
<li><a href="/2021/10/30/high-efficiency-study-note-5/">模块五：学霸养成</a></li>
</ul>
<p>12｜每个人都能学会：5 分钟克服拖延症的方法</p>
<p>5 分钟起步法，开始做一件事的时候，先给自己 5 分钟的起步时间，别计较效率。接受自己刚开始那 5 分钟的烦躁和抗拒，继续做该做的事情，之后就好了。</p>
<p>稍微走在计划前面，给自己留下偷懒的资格和空间，当你相对拥有不做事的权利的时候，你才会更愿意追求主动做事。</p>
<p>替代拖延法：如果有一个更难的任务需要完成，我们就非常极其愿意去做相对简单的任务了。</p>
<p>13｜3 个思路，让你成为一个真正自律的人</p>
<p>真正的自律，它是指从“不自律”的念头中，约束自己的能力。</p>
<p>思路一：在两种痛苦之间做选择</p>
<p>面对懒惰、拖延、放纵的诱惑时，我们不是在快乐与痛苦之间做选择，也不是在所谓“长远的快乐”与“眼下的快乐”之间做选择。其实，<strong><em>我们是在一种痛苦与另一种痛苦之间做选择。</em></strong></p>
<p>在面对自律和放纵的抉择时，请告诉自己，你不是在快乐与痛苦之间选，你是要在两种痛苦之间选一种忍受，那么一般这个时候，你会选择那个有意义的痛苦。</p>
<p>思路二：反向思维</p>
<p>在某些固定的时间里放弃自律，反而会让你变得更自律。</p>
<p>凡是需要自我约束的地方，都可以用到这个思路：<em>只在规定的时间里自我管理，过时不候；剩下的时间，绝对不允许自律，一定要玩儿，一定要大吃大喝。结果反而更容易达成自律的目的。</em></p>
<p>思路三：</p>
<p>14｜通过选择环境，来提高学习和工作效率</p>
<p>图书馆、自习室</p>
<p>表演型学习心理、社会助长</p>
<p>“社会助长”，包括“共同活动效应”和“观众效应”，前者是指：在同他人共同活动时，我们的效率会提高；后者是指：当他人在场旁观时，我们的效率也会提高。</p>
<p>15｜一个人在家如何做到高度自律？</p>
<p>1、你早上起来后做的第一件事很重要。首先去做今天最需要完成的事情，它相对重要且紧急，有一定难度，只要做了这个，接下来一天都比较简单了。在清晨，你要给自己一个足 够大的力，推动你进入正确的轨道，那么接下来，不需要额外付出更多的力，你就可以维 持这种惯性。<br>2、第一步的难度应该是适中的、方便切入的。最好提前一天做好准备，保证第二天能够较 为顺畅地开始。<br>3、在开始后，你最好把需要完成的一切任务，在整块时间内，连续做完。中间可以休息和<br>吃饭，但不要做其它事情，比如看电影和打游戏。</p>
<p>4、你需要设置一个可以看到的、能较为容易达到的终点，只要满足那个标准，你就解脱 了、自由了。这对于一个人在家进行自我管理，特别有帮助。我推荐给你的解决方案是： 做 6 小时整就停下来。<br>5、在 6 小时之外，可以安排较为轻松的、感兴趣的，但对个人提升也有帮助的事情，不用<br>设置什么标准，随心去做就好，比如看书，或者学英语等等。</p>
<p>16｜一玩手机就停不下来？教你如何戒手机</p>
<p>1、玩手机停不下来是我们的天性。奖励系统在发现获得奖励的机会时，会释放出多巴胺， 驱使我们去追逐可能存在的快乐。具体到手机和电脑上，就是驱使我们不停地点击、搜 索、点击。<br>2、看似人的问题，实则情境问题。与其控制自己，不如控制环境。要想不让自己沉迷于玩 手机，自制力、上进心等等，其实都不太管用，在物理上进行隔绝，让自己接触不到手 机，才足够有效。<br>3、如果必须用手机做正事，中途忍不住想玩，不要立刻去打开某个 App 或网站，而是想 一想自己想干什么，并且记下来。这会使你的状态从“无意识”，转变为“有意识”，你 会更容易停下来。而且，“记下来”会给你安全感，你知道自己在完成任务后，可以在固 定的时间，去做想做的事情。另外，还有一点会很有帮助，如果一定要玩手机的话，可以 准确记录这件事的开始时间和结束时间。<br>4、很多时候，越是有紧急的任务要完成，我们越去“紧张地玩手机”，这是因为，处在压 力之中、感到痛苦的大脑，想变得快乐一点，便会驱使我们去寻找那些最简单易得的，能 激活奖励系统的事情，比如玩手机、打游戏、吃东西。<br>在问题解决之前，可以借助运动、阅读、听音乐、社交等方式来缓解压力；在真的做了某 些“堕落”的事情时，越是自我批评，越是会恶性循环，你要学会“自我谅解”，才能真<br>正得到改变。</p>
<p>要想不让自己沉迷于玩手机，自制力、意志力、上进心等等，其实都不太管 用，在物理上进行隔绝，让自己接触不到手机，才足够有效。</p>
<blockquote>
<p>美国心理学家协会的调查发现，最有效的解压方法包括：锻炼或者参加体育活动、阅 读、听音乐、与家人朋友相处、外出散步、冥想，以及培养有创意的爱好。最没效果的 缓解压力的方法包括：赌博、购物、抽烟、喝酒、暴饮暴食、玩游戏、上网、花两个小时以上看电影。转引自《自控力》</p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>模块二：高效学习</title>
    <url>/2021/10/05/high-efficiency-study-note-2/</url>
    <content><![CDATA[<ul>
<li><a href="/2021/09/30/high-efficiency-study-note-1/">模块一：底层思维</a></li>
<li><a href="/2021/10/05/high-efficiency-study-note-2/">模块二：高效学习</a></li>
<li><a href="/2021/10/07/high-efficiency-study-note-3/">模块三：高度自律</a></li>
<li><a href="/2021/10/20/high-efficiency-study-note-4/">模块四：时间管理</a></li>
<li><a href="/2021/10/30/high-efficiency-study-note-5/">模块五：学霸养成</a></li>
</ul>
<p>05｜教你全面提升专注力，学习时不再走神</p>
<p>专注力：一直专注于一件事若干时长的能力和走神之后重新让自己专注的能力。</p>
<p>保持专注的能力，其实是“走神 - 重新专注 - 走神 - 重新专注”的过程。</p>
<p><strong>提升专注力有三个实用的方法：互动、问题、默念。</strong>其中默念是自己跟自己不出声地对话（有口型），它可以让我们把注意力全部集中在眼前的题目上面，有助于忘记恐惧和焦虑，还可以在一定程度上帮助我们在考试时做到“超常发挥”。</p>
<p>互动的例子：</p>
<ol>
<li>听课时默默重复老师某句话中的关键词，主动地有选择地记笔记；</li>
<li>记忆东西时出声背诵，或者用笔不时地写写划划；</li>
<li>看书时寻找“句眼”进行划线；</li>
<li>做事的时候，不要让自己停留于“旁观者”的角色，要去主动进行“互动”，成为一个“参与者”。</li>
</ol>
<p>问题的例子（带着问题去学习，自然就会变得专注）</p>
<ol>
<li>学习的时候可以向自己提问：这段话可以回答什么问题？这个知识点，跟哪块儿知识有联系？（问题）</li>
</ol>
<p>默念的例子</p>
<p>啊这个题也太难了吧！这是人类能解决的问题吗？</p>
<p>不行，我一定要把这个知识点弄懂。</p>
<p>我就不相信了，这么个小破题，还能难倒我？</p>
<p>06｜教你高效复习：巧用学习神器取得好成绩</p>
<p>闭环思维：把一件事从头做到尾。</p>
<p>举个例子：</p>
<ul>
<li>你读了一本书，那么之后需要安排时间去温习笔记，甚至尝试把其中的素材和观点，应用到写作和表达中，也就是输出；</li>
<li>你做了一张试卷，对答案发现做错了一些题目，那么你需要弄清楚自己犯错的原因，是知识点没有掌握牢靠呢，还是计算过程出现了失误呢，然后对症下药，整理出错题本，在之后的学习中，要记得提醒自己去温习和巩固。</li>
</ul>
<p>如何高效复习（要及时复习、多次复习）</p>
<p>每天都要仔细安排好不同科目、不同章节的复习内容和时间，这个过程非常繁琐，可借助软件 Anki 进行规划。</p>
<p>Anki</p>
<p>为不同的科目分别创建记忆库，然后把每一科的知识点，以文字、图片或者音频的形式，做成笔记卡片，放到对应的记忆库中。</p>
<p>不需要把过于细碎的知识点制作成单独的卡片，因为这样非常耗费时间。按我的建议，把某本书的某一章节、某几页单词，作为一个整体的复习任务，记录成 Anki 的一页笔记，效率更高。</p>
<ul>
<li>如果你在复习某张卡片的时候，发现自己某一块知识掌握得不太好，可以重新编辑这张卡片，做一些记录，提醒自己在下次复习的时候，重点关注哪些内容；</li>
<li>在复习某个章节的时候，可以在卡片上，针对其中的知识点提出一些问题，每次复习时，试着主动回想、给出答案；</li>
<li>在 Anki 中，你可以随时编辑卡片，在页面上加入新的问题，或者删去旧的问题。</li>
</ul>
<p>“检索式练习”比“重复阅读”的记忆效果更好。</p>
<p>07｜我考北大中文系时，15 天背下 10 门专业课的连点成线法</p>
<p>机械复述 VS 精细复述</p>
<p>对大段文字进行加工，用自己的语言叙述出来</p>
<p>如何用自己的语言叙述？（关键词 → 串联 → 复述）</p>
<ol>
<li>记忆书本原有的关键词、知识点等“点”信息；</li>
<li>连“点”成“线”，把“点”信息串成有逻辑的内容（通过记关系方式，如并列/因果/时间/空间，特定人物或事件等）；</li>
<li>合上书本，试着用自己的语言和逻辑，把之前记下的关键词串起来。</li>
</ol>
<p>举个例子：</p>
<p>《自控力》这本书指出：长期睡眠不足让你更容易感到压力、萌生欲望、受到诱惑。你还会很难控制情绪、集中注意力。</p>
<p>关键词：“睡眠不足”“压力”“欲望”“情绪”“注意力”</p>
<p>关系：因果</p>
<p>串联：长期睡眠不足的危害有：增加压力、减弱自控力、情绪失控、注意力不足。</p>
<p>另一个诀窍（把要记住的内容和已有的知识经验联系起来）</p>
<p>先记“少”不记“多”，而后由“少”记“多”，</p>
<p>先选取最核心的那句话进行记忆，把它变为自己“已有的知识经验”，而后再去记“多”。</p>
<p>08｜高效记忆的根本方法：主动思考和加工 &amp; 组块化记忆</p>
<p>主动思考和加工，需要记忆的内容是经过自己主动思考和加工过的才容易记住。类似联想记忆法，但更注重主动，而不是别人灌输给你。</p>
<p>具体手段：精细化提问，多问自己为什么。（一个公式为什么这样构成？一个历史事件为什么发生在某个年份？一个单词为什么会有两个完全不搭边的意思？）</p>
<p>举个例子（<em>例子内容不重要，重要的是主动思考加工</em>）：</p>
<p>单词 turret，意思是角楼、塔楼。怎么记？当时我第一反应是，这个单词中间的“rr”，像角楼和塔楼顶上的两面小旗。</p>
<p>单词 stuffy，意思是通风不畅的、一本正经的。嗯？我看到这两个意思时，满脑袋问号：哈？通风不畅的环境会让一个人变得一本正经啊？是因为大脑缺氧，以至于没法思考不正经的事情了吗？</p>
<p>单词 retire，意思是退休，retire=r e tire= 阿姨累了所以“退休”了。</p>
<p>组块化记忆（叫什么名称不重要，重要的是知道这个方法是如何运用的）</p>
<p>用<em>组块</em>来衡量人的短时记忆容量，假如一个人能记忆的只有 5~9 块，我们可以通过增加块的内容来提升短时记忆容量。</p>
<p>打个比方，人的短时记忆容量只能装 7 瓶水，不善于记忆的人每瓶水只能装 100ml 的水，面善于记忆的人，每瓶水能装 1000ml 的水。</p>
<p>比如记忆金庸的代表作：飞雪连天射白鹿，笑书神侠倚碧鸳。</p>
<p>09｜如何高效读书？如何记住读过的每一本书？</p>
<p>快速阅读的关键</p>
<ul>
<li>丰富的知识储备（对某个领域的基本认识、专业术语有较为全面的了解）；</li>
<li>跳读，即跳过那些不重要的信息，脑袋要保持警醒，主动思考，去判断接下来的内容，是否有认真逐句阅读的价值。（仅适用于为了提升认知而进行的功利性阅读）</li>
</ul>
<p>举个例子</p>
<p>《习惯的力量》这本书，它在论证自己的观点时，讲了一个橄榄球队的故事，但我并不需要知道教练和球员叫什么名字，也不需要了解他们是如何打球的。我只需要大致判断出，这几行似乎是在讲如何打球，然后匆匆扫一眼，跳到最后的结论就可以了。</p>
<p><em>功利性阅读，读书本身不是目的，尽量少的时间获得尽量多的认知才是目的。</em></p>
<p>结果导向式读书和漫游式读书</p>
<p>前者是先有主题后去阅读，后者是大量积累素材。二者结合使用，会做到更高效地输入和输出。</p>
<p>如何记住读过的每一本书？</p>
<p>两个评判标准</p>
<ul>
<li>记得某本书中有某个观点；</li>
<li>在需要使用的时候，能够尽量快速地找到原文，并且化用到自己的表达之中。</li>
</ul>
<p>做笔记建议：做粗浅的标记，留下可供追溯的线索即可。</p>
<p><em>我们读过的书，如果没有用到，那就会忘记，相当于没读过；只有用到了的，才算真正“读过”。</em></p>
<p><em>在阅读以及做笔记的时候，要做的不是透彻地理解和记忆，而是发现有价值的内容，并且留下回顾的线索。在需要使用的时候，凭借残存的印象，翻到原文，直接引用某句核心观点，或者，用自己的语言去表达，都是可以的。</em></p>
<p>10｜如何快速入门新领域？论述题如何答出高分？</p>
<p>快速入门新领域的读书方法</p>
<p>这里的“新领域”，是指人文社科，而非需要计算和记忆公式的理工科。</p>
<p>方法：</p>
<ul>
<li>把握对这一新领域的总体的感觉，具体操作：先阅读几本综述性书籍，关注这个学科的研究对象、要解决什么问题、以怎样的思维方式解决等，而后才是阅读专业论著。</li>
<li>每一本书最好都能够读个两三遍（读书百遍，其义自现）；</li>
<li>刚开始阅读时不奢求能做出很好的笔记，</li>
<li>前几次阅读时，需要用不同颜色的笔、不同的符号，来做笔记，以此区分每一次的重点。</li>
</ul>
<p>论述题如何答出高分</p>
<p>在回答论述题的时候，有所创新、有自己的观点。</p>
<p>不是单纯地拼凑和堆砌，而是按照一定的逻辑，把素材串起来，佐证自己的观点。答论述题，要像写小论文一样，有论有述，有条理，还要细节丰盈。你并不需要把所有的知识点都答上去，只要结构完整、逻辑缜密、自圆其说即可。</p>
<p>11｜如何快速完成学习和工作任务，以及快速学会新技能？</p>
<p>如何快速完成学习和工作任务</p>
<p>先去抓核心、抓重点，先去完成，之后再去考虑完美。这是高效完成任务的重要诀窍。</p>
<p>（先完成→到完美）</p>
<p>准备工作并不需要也并不可能在做之前全部完成，因为，在做的过程中，真正需要解决的问题才会逐渐清晰，你才能做到有的放矢。</p>
<p>如何快速学会新技能</p>
<p>立刻开始做，立刻开始输出</p>
<p><em>需要积累成就感，积累正反馈，才有动力去继续探索。</em></p>
<p>（END）</p>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>模块五：学霸养成</title>
    <url>/2021/10/30/high-efficiency-study-note-5/</url>
    <content><![CDATA[<ul>
<li><a href="/2021/09/30/high-efficiency-study-note-1/">模块一：底层思维</a></li>
<li><a href="/2021/10/05/high-efficiency-study-note-2/">模块二：高效学习</a></li>
<li><a href="/2021/10/07/high-efficiency-study-note-3/">模块三：高度自律</a></li>
<li><a href="/2021/10/20/high-efficiency-study-note-4/">模块四：时间管理</a></li>
<li><a href="/2021/10/30/high-efficiency-study-note-5/">模块五：学霸养成</a></li>
</ul>
<p>21｜学霸为什么学什么都快？有哪些可以借鉴的方法论？</p>
<p>知识储备、能力储备不同</p>
<p>越早付出努力，你在之后的人生中，达成目的的速度越快、效率越高。</p>
<p>22｜如何通过练习，让自己变得更聪明？</p>
<p>刻意练习，才是真正能够提升能力、让你变聪明的方式。刻意练习有 4 个特点：</p>
<ul>
<li>目标要明确。</li>
<li>做事时需要极其专注。</li>
<li>需要及时看到反馈，并进行调整。</li>
<li>走出舒适区。</li>
</ul>
<p>看一本书、学一个科目，你要知道自己的目的是什么，需要回答哪些问题，记住哪些东 西，最终达到怎样的效果。</p>
<p>23｜教你利用“双加工理论”，有效提高学习能力</p>
<p>路径依赖、“自动化加工”、“受意识控制的加工”</p>
<p>24｜重要：别再去找更好的学习方法了</p>
<p>关于拖延症，“5 分钟起步法”足以解决这个问题；</p>
<p>关于焦虑，每天冥想 15 分钟 + 每周 跑步 3～4 次，可以在很大程度上使其得到缓解；</p>
<p>关于记忆，精细加工后自己复述出来，可以把 80% 的东西记得很好。</p>
<p>在学习和工作中，琐碎的、重复的、机械的工作，才占据更多的时间。只有把这些细枝 末节做好了，灵感或者说方法论，才能真正落实，并且让你取得更好的成绩。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>模块四：时间管理</title>
    <url>/2021/10/20/high-efficiency-study-note-4/</url>
    <content><![CDATA[<ul>
<li><a href="/2021/09/30/high-efficiency-study-note-1/">模块一：底层思维</a></li>
<li><a href="/2021/10/05/high-efficiency-study-note-2/">模块二：高效学习</a></li>
<li><a href="/2021/10/07/high-efficiency-study-note-3/">模块三：高度自律</a></li>
<li><a href="/2021/10/20/high-efficiency-study-note-4/">模块四：时间管理</a></li>
<li><a href="/2021/10/30/high-efficiency-study-note-5/">模块五：学霸养成</a></li>
</ul>
<p>17｜如何合理地制订计划？</p>
<p>使用 SMART 原则</p>
<p>S=Specific、M=Measurable、A=Attainable、R=Relevant、T=Time-bound</p>
<p>计划应该是具体的、可衡量的、可达到的、与大目标有一定的相关性、有明确的截止期限。</p>
<p>制定计划时要摆脱“倒数日”思维，长远计划只要清楚大致的方向和内容，更重要的是制定和关注今日的规划。</p>
<p>18｜如何保证100%完成你制订的计划？</p>
<p>常见问题：</p>
<ul>
<li>不切实际假以为自己能在指定的时间内完成指定的任务；</li>
<li>把计划以及执行计划，错当成了目的本身；</li>
<li>预先制定特别周密的计划。</li>
</ul>
<p>相应解决方法：</p>
<ul>
<li>摆正心态，事情该花多少时间，就应该花多少时间；</li>
<li>正确认识计划是让我们知道在什么时间段该做什么事，按照什么样的顺序做；</li>
<li>不要制定过于周密的计划，大致知道要哪些事情，理清大致的顺序，然后直接从中挑出一件开始做，并专注完成，完成后再接着挑另一件。</li>
</ul>
<p>19｜如何高效完成复杂艰难的、不喜欢的任务？</p>
<p>将复杂艰难的任务拆分成一个个可量化又相对较容易完成的具体的小目标，专注于眼前看得到的小目标，通过完成一个又一个小目标所带来的成就感来增加动力和信心，不断给自己提供正向反馈，从而提高做事的效率。</p>
<p>20｜如何做到每天高效学习 12 小时？</p>
<p>恢复精力的方法：</p>
<ul>
<li>冥想</li>
<li>做不同的事情，包括散步、听音乐、午休、和朋友面对面聊天等</li>
</ul>
<p>在一天之内，我们应该按照做事 - 恢复 - 做事 - 恢复的模式，去学习和工作；在一周中，最好也要做到至少有半天的休息时间。</p>
<p>过多的精力消耗和过度的恢复都是不好的</p>
<p>专注、休息、放松都很重要</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>学习方法</tag>
      </tags>
  </entry>
  <entry>
    <title>极客时间-技术管理实战36讲学习笔记</title>
    <url>/2021/08/10/technology-management-0/</url>
    <content><![CDATA[<blockquote>
<p>如果干得好，管理是最崇高的职业之一。没有哪一个职业能像管理一样为他人提供学习和成长的机会，让他们懂得承担责任并取得成绩，以及为团队的成功做出贡献。<br>——“颠覆式创新之父”克里斯坦森，《你要如何衡量你的人生》</p>
</blockquote>
<h2 id="为什么需要学管理？"><a href="#为什么需要学管理？" class="headerlink" title="为什么需要学管理？"></a>为什么需要学管理？</h2><p>对于互联网技术人来说，“管理”作为一项综合能力不再是一个可选项，无论是否身在技术管理岗，未来的职业发展都会围绕着<strong>技术和管理</strong>这两条腿在走路，一条腿是走不远的。</p>
<h2 id="重点内容"><a href="#重点内容" class="headerlink" title="重点内容"></a>重点内容</h2><ol>
<li><strong>自我倾听。</strong>理顺内心的纠结与彷徨，心无旁骛地走上管理之路。</li>
<li><strong>角色认知。</strong>提供一个管理工作的“全景图”，以方便按图索骥地<strong><em>了解管理工作所涵盖的方方面面。</em></strong></li>
<li><strong>管理方法。</strong>“管理三部曲”——<strong><em>管理规划、团队建设和任务管理</em></strong>，探讨<strong><em>“看方向”“带人”和“做事”</em></strong>的这三个关键的管理内容。</li>
<li><strong>管理沟通。</strong>探讨管理沟通的<strong><em>工具和技巧</em></strong>，并探讨<strong><em>向上、向下、横向</em></strong>等典型沟通场景下的沟通要点。</li>
<li><strong>管理之路。</strong>主要探讨<strong><em>如何积累管理方法论</em></strong>，以及<strong><em>如何成为自己所期待的管理者。</em></strong></li>
</ol>
<h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><ul>
<li>自我倾听<ul>
<li><a href="/2021/08/10/technology-management-1/">自我倾听（上）</a></li>
<li><a href="http://1.1">自我倾听（下）</a></li>
</ul>
</li>
<li>角色认知<ul>
<li><a href="/2021/08/11/technology-management-3/">角色认知</a></li>
</ul>
</li>
<li><p>管理规划</p>
<ul>
<li></li>
</ul>
</li>
<li><p>团队建设</p>
<ul>
<li><a href="http://c.c">团队建设六要素</a></li>
<li>能力培养——提升员工个人能力</li>
<li>员工激励——提升员工的工作意愿和积极性</li>
<li><a href="http://baidu.cc">团队分工——兼顾团队分工的稳定性和灵活性</a></li>
<li><a href="http://b.c">协作水平——有效提升团队凝聚力方法</a></li>
<li><a href="http://1.1">梯队建设——物色和培养核心人才</a></li>
<li><a href="http://1.1">团队文化——营造团队氛围</a></li>
<li></li>
</ul>
</li>
<li><p>任务管理</p>
<ul>
<li></li>
</ul>
</li>
<li><p>管理沟通</p>
<ul>
<li></li>
</ul>
</li>
<li><p>管理之路</p>
<ul>
<li></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>技术管理</tag>
      </tags>
  </entry>
  <entry>
    <title>自我倾听（上）</title>
    <url>/2021/08/10/technology-management-1/</url>
    <content><![CDATA[<h2 id="技术人常见的职业发展方向"><a href="#技术人常见的职业发展方向" class="headerlink" title="技术人常见的职业发展方向"></a>技术人常见的职业发展方向</h2><p><img src="/image/column/tech-mg/1629193567069-f3f58680-f2e6-4305-b8e7-4d3f09914adf.png" alt=""></p>
<p>技术类、管理类、创业类和顾问类方向的技能清单：</p>
<p><img src="/image/column/tech-mg/1628231014471-78f3c500-6793-4ad5-8bd7-d60d3e02404f.png" alt="技能清单"><br>无论走在哪条路上，有些能力是共通的，比如<strong>规划、带人、沟通、执行等管理能力</strong>。</p>
<h2 id="要不要做管理？"><a href="#要不要做管理？" class="headerlink" title="要不要做管理？"></a>要不要做管理？</h2><p>要不要做管理问题应从<strong>初衷和意愿</strong>两方面考虑。</p>
<h3 id="“做管理”是否更符合初衷？"><a href="#“做管理”是否更符合初衷？" class="headerlink" title="“做管理”是否更符合初衷？"></a>“做管理”是否更符合初衷？</h3><p>仔细思考自己做管理是因为外驱力还是内驱力？<strong>外驱让我们可以做好本职工作，而内驱才能让我们成就卓越。</strong></p>
<p><strong>外驱力</strong><br>外部的推力和诱惑，如不得已的选择、别人眼里的成功、不辜负组织的期待、对做管理的主观遐想等。</p>
<p>以下问题可供参考判断：</p>
<ul>
<li>“我对技术没有热情，也没有技术特长，所以只能做管理。”</li>
<li>“做技术又不能做一辈子，很多前辈都转管理了，我也要转。”</li>
<li>“没有办法，公司发展太快了，老板要求我带团队。”</li>
<li>“如果能做到公司高管，别人都会认为我是一个优秀和成功的人。”</li>
<li>“能够做管理带团队，这样在家人眼中会很风光。”</li>
<li>“上级说我适合做管理，我不能辜负他对我的期望。”</li>
<li>“公司需要我带团队，这是公司对我的信任，我一定得做好。”</li>
<li>“不用凡事亲力亲为，安排下级去做就好了，应该会轻松些。”</li>
<li>“做管理越晋升越轻松，你看高管都不坐班。”</li>
</ul>
<p><strong>内驱力</strong><br>建立在内心的渴望和意愿上（内在动力和真正诉求），如认同管理的价值观、对管理充满热情，并享受这些工作、看重在管理方面的成长等。</p>
<p>价值观、核心诉求、擅长和热爱等底层的动力，正是面对挑战、走向卓越所需要的最重要的东西。</p>
<p>以下表现可供参考判断：</p>
<ul>
<li>认为招聘面试、辅导员工、向上汇报、开会沟通、流程梳理、资源协调、进度推动、绩效评估等大部分管理工作，都是琐碎的“杂事”，很难从这些工作中获得价值感和成就感，甚至还对于这些工作挤占了写代码的时间而不满。</li>
<li>认为经理是给高工和架构师打下手的，职责就是支持好架构师的工作，所以比较郁闷。</li>
<li>认为管理的工作不如技术工作有价值，通过技术手段来解决问题才是最酷的事情。你是否也会这么认为呢？</li>
<li>是否主动地向自己的上级了解过团队的工作目标呢？</li>
<li>是否主动关心过新同事该怎么培养，以及如何更好地帮助他们成长呢？</li>
<li>是否享受去负责一个大项目的协调和推进？它的成功发布是否会给你带来强烈的成就感呢？</li>
<li>是否思考过什么样的流程和机制可以应对团队工作中的那些疏漏呢？</li>
<li>更大的责任、更立体的视角、更灵活的思维方式。</li>
</ul>
<h3 id="“做管理”是否更能激发投入的意愿？"><a href="#“做管理”是否更能激发投入的意愿？" class="headerlink" title="“做管理”是否更能激发投入的意愿？"></a>“做管理”是否更能激发投入的意愿？</h3><p>“做管理”带来的成长与收获：</p>
<ul>
<li><strong>成长感</strong>——到了一个更大的平台上，能力和视野将得到大幅度提升；</li>
<li><strong>成就感</strong>——能力变强，有了团队，能搞定更大、更复杂的事情，做出更大的成绩；</li>
<li><strong>影响力</strong>——带着团队做出越来越多的成就，团队也越来越优秀，团队成员都得到了成长，甚至还会影响到合作团队；</li>
<li><strong>获得感</strong>——能力、成绩、影响力全面提升，得到更多的精神和物质的回报。</li>
</ul>
<h2 id="哪些人容易走上管理岗位？"><a href="#哪些人容易走上管理岗位？" class="headerlink" title="哪些人容易走上管理岗位？"></a>哪些人容易走上管理岗位？</h2><p>做管理的“天时地利人和”：</p>
<ul>
<li><strong>机会、时机、大环境、时代背景；</strong></li>
<li><strong>自己的优势、能力以及所负责的工作内容；</strong></li>
<li><strong>得到他人的支持（资源提供者、伙伴/同行者、导师榜样、家人/朋友）。</strong></li>
</ul>
<p><img src="/image/column/tech-mg/1628238415051-6e3a052c-4604-4af9-9a5f-05251eb81817.png" alt=""></p>
<blockquote>
<p>TIPS：</p>
<ol>
<li>去能积累的公司做管理，会是更合理的选择；</li>
<li>负责<strong>最全局的模块</strong>（“广”）、负责<strong>最核心的技术模块</strong>（“深”）的工程师更容易成为管理者；</li>
<li>天使轮、A 轮这样的早期公司，大多处于生存期，还没有上规模，而没有规模的公司并不需要你去做管理，所以你很大概率会失望。</li>
<li>如果你主动去了解技术和业务的全局，并主动争取做一些大型项目的负责人，你就具备了做管理的“地利”。</li>
</ol>
</blockquote>
<p>“天时”“地利”“人和”这三类管理之路的外部因素都具备了（如下图），自然可以更顺利地走上管理岗位。</p>
<p><img src="/image/column/tech-mg/1628244980896-3120e339-3202-421b-acc2-552c6b5b9345.png" alt=""></p>
<p>但如果不具备这些外部因素，而你还想往管理方向走的话，那么以下这些之前可能并没做过的、公司也不会因此就给你多发薪水的工作，在编码之余依然要去关心：</p>
<ul>
<li>项目的流程该怎么改进；</li>
<li>团队合作的机制该怎么建立；</li>
<li>新员工入职该怎么培养；</li>
<li>团队的氛围该怎么建设。</li>
</ul>
<p><strong>因为，想被提拔为一个管理者最好的方式，就是首先成为一个实际上的管理者，这种“既定事实”的晋升理念在互联网行业里被广泛认同。</strong></p>
<h2 id="要不要转回去做技术？"><a href="#要不要转回去做技术？" class="headerlink" title="要不要转回去做技术？"></a>要不要转回去做技术？</h2><p>焦虑的感受：</p>
<ul>
<li>“管理的事儿太杂，都没时间写代码了，越来越心虚……”</li>
<li>“做管理最大的挑战是，要舍弃技术，特别难。”</li>
<li>“管理和技术到底该怎么平衡？”</li>
<li>“突然不写代码了，感觉吃饭的家伙没了，哈哈。”</li>
<li>“管理工作太琐碎，感觉离技术越来越远，现在特别担心个人发展。”</li>
<li>“管理是一个有违人性的事情，自己的技术专业性越来越差，但是却要带领整个团队。”</li>
<li>“反正想不明白，就多投入一些时间来兼顾技术和管理吧！”</li>
</ul>
<p>是否要转回去做技术，还是看自己的初衷（内驱/外驱），如果管理工作确实不是自己想要的，那么回去继续做工程师也完全没有问题。但内心如果是想往管理方向走，只是刚开始时感到焦虑等问题，可以通过<strong>提升对技术管理的认知</strong>来解决：</p>
<ol>
<li>做技术管理并没有放弃技术，而是换了一种方式去学习和运用技术，在一定程度上放弃了编码而已：<ol>
<li>要把技术提到更高视角来看待：从目标和评估角度去看待技术、借助团队成员的技术来实现更大的目标；</li>
<li>换一种学习方式来掌握技术：<strong>建立学习机制、请教专家、建立共创机制。</strong></li>
</ol>
</li>
<li>在做技术管理过程中，只要愿意去学习，持续不断地实践和练习，一定会有丰富的收获，以后也能靠做技术管理“吃饭”；</li>
<li>工作“升维”已不可避免，即便不做技术管理者，要做好一位技术带头人或架构师，或多或少也要懂管理（全局视野、规划能力、结果导向意识、项目管理方法、沟通协调能力等），那不如奋力向前；</li>
<li>可以做技术型管理者，结合自己的兴趣和优势，打造出自己的独特管理风格；</li>
<li>做技术管理并没有放弃技术，而且也不能放弃技术，放弃了技术是做不好技术管理的；</li>
<li>技术转管理并不意味着不关心技术，只是更关心更大的目标和整体结果了。</li>
</ol>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>技术管理</tag>
      </tags>
  </entry>
  <entry>
    <title>角色认知</title>
    <url>/2021/08/11/technology-management-3/</url>
    <content><![CDATA[<h2 id="管理到底都做哪些事儿？"><a href="#管理到底都做哪些事儿？" class="headerlink" title="管理到底都做哪些事儿？"></a>管理到底都做哪些事儿？</h2><p><strong>基于良好的角色认知和管理沟通，</strong>主要做好三件事：<strong>带人、做事、看方向。</strong></p>
<p>五个管理要素：<strong>角色认知、管理规划、团队建设、任务管理和管理沟通</strong>。</p>
<p>管理规划-看方向<br>团队建设-带人<br>任务管理-做事</p>
<p><img src="/image/column/tech-mg/1629193895904-00c79e57-479a-48ad-bc89-5d3f67d6b54f.png" alt=""></p>
<blockquote>
<p>TIPS：如何提升团队工作效率？<br>工业时代的团队：<strong>主要靠加强外驱，</strong>讲究“胡萝卜加大棒”，<strong>追求严格管控。</strong><br>知识经济时代的团队：<strong>更多是靠激发内驱</strong>，弹性工作制也好，发挥员工优势也好，都是希望员工<strong>更主动、自主，从而有更多的创造力。</strong> </p>
</blockquote>
<h2 id="从工程师到管理者，角色都发生了哪些变化？"><a href="#从工程师到管理者，角色都发生了哪些变化？" class="headerlink" title="从工程师到管理者，角色都发生了哪些变化？"></a>从工程师到管理者，角色都发生了哪些变化？</h2><div class="table-container">
<table>
<thead>
<tr>
<th>维度</th>
<th>工程师</th>
<th>管理者</th>
</tr>
</thead>
<tbody>
<tr>
<td>职责使命</td>
<td>做好自己手头的工作</td>
<td>带领整个团队往前走，上级只是帮你设定一个目标，剩下做什么、怎么做，都是要考虑的，所有对达成目标有帮助的工作都是份内的</td>
</tr>
<tr>
<td>负责对象</td>
<td>对自己和自己的工作负责，“管好自己就可以了”</td>
<td>对公司(上级)和团队(下级)都负责，关心团队成员的发展和成长</td>
</tr>
<tr>
<td>关注焦点</td>
<td>过程导向，把工作执行到位</td>
<td>目标和结果导向，关心目标和前进方向</td>
</tr>
<tr>
<td>工作内容和能力要求</td>
<td>内容单纯，主要靠专业能力</td>
<td>多维立体，所需能力维度大幅增加，技术判断力、目标管理能力、团队规划能力、项目管理能力、沟通协调能力、团队建设能力</td>
</tr>
<tr>
<td>任务来源</td>
<td>上级安排，听上级指挥</td>
<td>自己主动规划&amp;向上沟通，上级工作的拆解和安排，但更多是靠自己筹划，然后和上级去沟通确认，从被动“等活儿”变为主动规划。</td>
</tr>
<tr>
<td>实施手段</td>
<td>主要靠自己</td>
<td>主要靠团队</td>
</tr>
<tr>
<td>合作维度</td>
<td>平级合作为主</td>
<td>360度合作，维度立体，上级（规划目标）、下级（落地执行）、平级（联合项目）、平级的上、下级（协调资源和进度）</td>
</tr>
<tr>
<td>合作关系</td>
<td>和团队成员是平级竞合关系，以合作为主，也有“竞”的成分</td>
<td>和团队成员是全面合作关系</td>
</tr>
<tr>
<td>思维方式</td>
<td>执行思维，习惯关注确定性风险，特点是关注过程和细节，更重要的是关注风险和成本，希望通过对风险的排除和成本的掌控，来保证工作交付的确定性。</td>
<td>规划思维，习惯关注可能性收益</td>
</tr>
<tr>
<td>技术视角</td>
<td>技术实施视角</td>
<td>技术评估视角（技术判断力）</td>
</tr>
</tbody>
</table>
</div>
<h2 id="新经理六大常见的管理误区"><a href="#新经理六大常见的管理误区" class="headerlink" title="新经理六大常见的管理误区"></a>新经理六大常见的管理误区</h2><p>问题的共同点在哪里吗？你觉得这些问题背后的原因是什么？会带来哪些可能的后果呢？</p>
<h3 id="第一类：过程导向、被动执行"><a href="#第一类：过程导向、被动执行" class="headerlink" title="第一类：过程导向、被动执行"></a>第一类：过程导向、被动执行</h3><p>常见的做法和说法如下：</p>
<ul>
<li>不主动找活儿干，总是等待上级派活儿，如果上级没有明确安排，就“放羊”。 </li>
<li>即使上级有了安排，还总是指望上级替他做决定该怎么做，选哪个方案。 </li>
<li>在和上、下级沟通中，他主要充当“传话筒”的角色，常用句式是“老板说……”“某员工说……”，并没有反思每次沟通要达到的目的和效果是什么。 </li>
<li>过于关注苦劳和付出，常见说法是“某某还是不错的，没有功劳也有苦劳。”</li>
</ul>
<p>由于没有从“管理者”的视角出发，所以至少会带来如下三个后果：</p>
<ul>
<li><strong>团队方向感缺失</strong>。大家都只是着眼于手头工作，团队得不到愿景的凝聚和激励。 </li>
<li><strong>团队做不出有效的业绩</strong>。因为团队没有方向感，所以结果就很难有效。</li>
<li><strong>无法带领一个团队</strong>。由于视角局限，所以还不具备带领团队的能力。</li>
</ul>
<h3 id="第二类：大包大揽、唯我最强"><a href="#第二类：大包大揽、唯我最强" class="headerlink" title="第二类：大包大揽、唯我最强"></a>第二类：大包大揽、唯我最强</h3><p>常见的相关说法有：</p>
<ul>
<li>“某某做得太慢了，还是我来做吧，他半天的工作，我两个小时就搞定了。”（包工作）</li>
<li>“团队离了我就不转了，里里外外都靠我操心，他们都担不起这个责任。” （包责任）</li>
<li>“某某的工作主要靠我……”“在我的指导下，某某才……”“这件事主要是我做的……”（包功劳）</li>
</ul>
<p>可能会带来这样的后果：</p>
<ul>
<li><strong>梯队问题</strong>：大树底下寸草不生，梯队迟迟培养不起来。因为梯队的培养需要授权，需要让高潜人才有发挥空间并承担相应的责任。</li>
<li><strong>激励问题</strong>：由于管理者冲得太靠前，团队成员积极性受挫，遇事往后缩。</li>
<li><strong>个人发展问题</strong>：由于得不到团队成员的有效支持，自己又忙又累，做不了更大的业务。</li>
</ul>
<blockquote>
<p>有些成熟公司如京东就有规定，<em><strong>如果你没有培养出可以完全顶替你位置的人，你是不能晋升的。</strong></em></p>
</blockquote>
<h3 id="第三类：带头大哥、当家保姆"><a href="#第三类：带头大哥、当家保姆" class="headerlink" title="第三类：带头大哥、当家保姆"></a>第三类：带头大哥、当家保姆</h3><p>常见的相关说法有：</p>
<ul>
<li>“好好干，我不会亏待你的，我绝不会让跟着我的兄弟们吃亏！”</li>
<li>“某某可能会不高兴，可能会离职，怎么办呢？”</li>
<li>“某某技术比我强，我给他打好下手就行了。”</li>
</ul>
<p>这类问题带来的后果大体如下：</p>
<ul>
<li><strong>不职业的管理风格和文化</strong>，这会给公司带来很大的潜在风险。</li>
<li><strong>团队没有方向</strong>，所以很难有正确的判断和决策。</li>
</ul>
<blockquote>
<ol>
<li>“带头大哥”式的管理者，讲究的是兄弟感情，在他们心目中，不但兄弟的工作是我的， 兄弟人也是我的。这类管理者可能在某些情况下特别有战斗力，但是一旦情况有变，对公司的破坏性也是非常大的，因为他忘记了他带的<strong>团队是公司的资源</strong>，而不是自己的，所以不可能成为一个职业的管理者。</li>
<li>“当家保姆”式的管理者，由于团队里有资深的高级工程师，他在技术判断力方面不如这些高工，索性就给这些高工做起了“保姆”，而忘记了<strong>自己才是这个团队的舵手和船长，</strong>因此也不是一个职业的管理者。</li>
</ol>
</blockquote>
<h3 id="第四类：单一视角、固化思维"><a href="#第四类：单一视角、固化思维" class="headerlink" title="第四类：单一视角、固化思维"></a>第四类：单一视角、固化思维</h3><p>常见的相关说法有：</p>
<ul>
<li>“人手不够，没人，这真做不了，要做就得招人。”</li>
<li>“让团队加班的话，得给大家发加班费，不然没法提升积极性。”</li>
<li>“像某某那样的人才适合做管理，我跟他太不一样了，所以不适合做管理。”</li>
<li>“还有个 Bug 没修复，不能发布，我们一直都是这么规定的。”</li>
</ul>
<p>造成的后果是：</p>
<ul>
<li><strong>习惯性卡住</strong>。遇到问题和困难，很容易被卡住，到处都是绕不过去的鸿沟。</li>
<li><strong>认知层次低</strong>。由于被单一惯性思维所支配，认知层次和考虑问题的维度无法提升。</li>
<li><strong>难堪重任</strong>。由于创造性地解决问题的能力不足，难以承担具有挑战性的工作。</li>
</ul>
<h3 id="第五类：自扫门前雪、固守边界"><a href="#第五类：自扫门前雪、固守边界" class="headerlink" title="第五类：自扫门前雪、固守边界"></a>第五类：自扫门前雪、固守边界</h3><p>常见的相关说法有：</p>
<ul>
<li>“这个是测试的问题，这个是产品的问题，这个是别的部门的问题。”</li>
<li>“产品经理一点逻辑都没有，没法沟通。”</li>
<li>“这事不赖我们团队，是某某团队没有按时完成。”</li>
<li>“我查过了，不是我们的问题，惩罚不到我们。”</li>
</ul>
<p>所以，这类问题明显的管理者，常常带来这样的后果：</p>
<ul>
<li><strong>项目推进不畅，从而影响全局的结果</strong>。</li>
<li><strong>自我设限，因此个人成长受限</strong>。</li>
<li><strong>个人影响力无法扩展</strong>。因为目光和手脚都局限在团队内，所以无法在更大的范围产生影响力，也就无法成为更高级的管理者。</li>
</ul>
<blockquote>
<p>角色和责任的边界划分，是为了分工和合作，但由于很多大型项目有赖于多个团队一起协作完成，所以又需要有人主动站出来，去承担边界模糊的那部分职责。作为一个员工，边界分明无可厚非，但是作为一个管理者，就需要以全局的目标为己任，才能拿到公司要的业绩结果。<br>作为管理者，是要站高一层来看待问题的。</p>
</blockquote>
<h3 id="第六类：患得患失"><a href="#第六类：患得患失" class="headerlink" title="第六类：患得患失"></a>第六类：患得患失</h3><p>常见的说法有： </p>
<ul>
<li>“突然不写代码了，感觉吃饭的家伙没了，心里发虚。”</li>
<li>“管理工作太琐碎，感觉离技术越来越远，现在特别担心个人发展。” </li>
<li>“做管理最大的挑战是，要舍弃技术，特别难。” </li>
<li>“管理是个矛盾的事情，自己技术专业性越来越差，却要带领整个团队。”</li>
</ul>
<p>核心原因<br>把管理摆在了和技术对立的位置，同时由于管理能力还没有强大到可以作为自己的核心竞争力，因此忧虑自己的技术会落后，从而失去生存能力。</p>
<p>造成的后果：</p>
<ul>
<li>犹豫反复，无法全力以赴去做好管理，<strong>成长缓慢</strong>。</li>
<li><strong>对技术的看法太狭隘，从而影响技术判断力的提升</strong>。</li>
<li>由于<strong>误判</strong>，可能会错失一个好的发展平台。</li>
</ul>
]]></content>
      <categories>
        <category>读书学习笔记</category>
      </categories>
      <tags>
        <tag>技术管理</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to the C Language</title>
    <url>/2024/05/01/introduction-to-the-c-language/</url>
    <content><![CDATA[<h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p>The C programming language was originally invented as a tool for developing the Unix operating system.</p>
<p>In 1969, Ken Thompson and Dennis Ritchie at Bell Labs in the United States developed the Unix operating system. Unix was initially written in assembly language, making it difficult to port to other computers. To address this, they decided to rewrite it in a high-level language. However, existing high-level languages at the time did not meet their needs, so Thompson developed the B language based on BCPL.</p>
<p>In 1972, Dennis Ritchie and Brian Kernighan redesigned the B language, creating a new language that replaced B, which they named C.</p>
<p>By 1973, the entire Unix system was rewritten in C, and the language quickly gained popularity, becoming widely used for developing various operating systems and system software.</p>
<p>In 1988, the American National Standards Institute (ANSI) officially standardized the C language, marking its stabilization and formalization.</p>
<p>Decades later, C remains one of the most widely used and popular system programming languages, with Unix and Linux systems still developed in C.</p>
<hr>
<h2 id="Features-of-C-Language"><a href="#Features-of-C-Language" class="headerlink" title="Features of C Language"></a>Features of C Language</h2><p>The enduring popularity and widespread application of C can be attributed to several distinctive features:</p>
<ol>
<li><strong>Low-Level Language</strong><br>C allows direct hardware manipulation, memory management, and system-level operations, making it a language close to the machine level, or “low-level.” This makes it ideal for writing programs that interact closely with hardware or require high performance.</li>
<li><strong>Portability</strong><br>C was originally designed to help port Unix to different computer architectures, emphasizing portability from the start. C programs can be relatively easily adapted to run on different hardware and operating systems.<br>Beyond traditional computing, C is also the preferred language for embedded systems, such as those in cars, cameras, and home appliances, largely due to its portability.</li>
<li><strong>Simplicity</strong><br>C syntax is relatively straightforward, with a limited number of syntax rules and minimal syntactic sugar. Generally, C provides only one way to perform similar tasks, reducing language complexity.<br>Furthermore, C syntax is foundational, lacking advanced data structures like classes. Complex data structures must be manually constructed by the programmer.</li>
<li><strong>Flexibility</strong><br>C imposes few constraints on programmers. It assumes that programmers know what they are doing, allowing them to perform risky operations without restriction. You have complete freedom, but you are also responsible for the consequences.<br>The philosophy of C is “trust the programmer, don’t interfere.” For example, C requires manual memory management and does not offer features like automatic memory cleanup, type checking, array bounds checking, or pointer safety measures.<br>While this approach can seem dangerous, it provides experienced programmers with great flexibility, though it can make debugging more challenging.</li>
<li><strong>Summary</strong><br>These features allow C to write highly performant programs that fully utilize hardware potential, with a relatively simple compiler implementation. However, C code is prone to errors, and writing reliable programs can be challenging for most programmers.<br>Additionally, many modern languages, including C++, Java, C#, and JavaScript, are built on the foundations of C. Mastering C can deepen your understanding of these languages.</li>
</ol>
<hr>
<h2 id="Versions-of-C-Language"><a href="#Versions-of-C-Language" class="headerlink" title="Versions of C Language"></a>Versions of C Language</h2><p>Throughout history, C has evolved through several versions:</p>
<ol>
<li><strong>K&amp;R C</strong><br>K&amp;R C refers to the original version of the C language. In 1978, C’s creators, Dennis Ritchie and Brian Kernighan, co-authored the seminal textbook <em>The C Programming Language</em>. Since there was no formal C syntax standard at the time, this book became the de facto standard, named after the initials of its authors: “K&amp;R C.”</li>
<li><strong>ANSI C (also known as C89 or C90)</strong><br>The original C language was simple and vague in many aspects, and with C syntax still evolving, there were increasing calls for standardization.<br>In 1989, ANSI developed a formal C standard, which was later adopted by the International Organization for Standardization (ISO) in 1990. This version is known as “ANSI C” or, by its release years, “C89” or “C90.”</li>
<li><strong>C95</strong><br>In 1995, ANSI updated the 1989 standard with support for multibyte and wide characters, resulting in the C95 version.</li>
<li><strong>C99</strong><br>The first major revision of the C standard came in 1999, introducing many new features, such as the <code>//</code> comment syntax. C99 is currently one of the most widely used C versions.</li>
<li><strong>C11</strong><br>In 2011, the standard was revised again, adding support for Unicode and multithreading. This version is called C11.</li>
<li><strong>C17</strong><br>The C11 standard was patched in 2017, with the new version, released in 2018, fixing some of C11’s shortcomings without adding new features. This version is known as C17.</li>
<li><strong>C2x</strong><br>A new version of C is currently under discussion and is expected to be finalized by 2023, at which point it will be called C23.</li>
</ol>
<hr>
<h2 id="Compiling-C-Programs"><a href="#Compiling-C-Programs" class="headerlink" title="Compiling C Programs"></a>Compiling C Programs</h2><p>C is a compiled language, meaning its source code files, which typically end with the <code>.c</code> extension, are not directly executable. They must be translated into binary executable files through a compiler. This process, known as “compilation,” occurs during the compile time and differs from the runtime when the program is actually executed.</p>
<p>The most commonly used C compiler today is the GCC compiler from the Free Software Foundation, which is available for free. This book also uses GCC. Linux and Mac systems can directly install GCC, while Windows users can use MinGW. Alternatively, online compilers like CodingGround and OnlineGDB offer web-based simulation of C code execution:</p>
<ul>
<li><a href="https://tutorialspoint.com/compile_c_online.php">CodingGround</a>  </li>
<li><a href="https://onlinegdb.com/online_c_compiler">OnlineGDB</a></li>
</ul>
<p>The examples in this book are compiled using GCC from the command line.</p>
<hr>
<h2 id="Hello-World-Example"><a href="#Hello-World-Example" class="headerlink" title="Hello World Example"></a>Hello World Example</h2><p>A simple C program, typically named <code>hello.c</code>, is just a plain text file that can be edited with any text editor. Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This program’s sole purpose is to display “Hello World” on the screen.</p>
<p>To compile and run C code, ensure GCC is installed, then open the command line and run the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gcc hello.c</span><br></pre></td></tr></table></figure>
<p>This command compiles <code>hello.c</code> into a binary executable. Note that <code>$</code> is the command line prompt; you only need to type the part after it.</p>
<p>By default, this command generates an output file named <code>a.out</code> (or <code>a.exe</code> on Windows). Run this file to see the output:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./a.out</span><br><span class="line">Hello World</span><br></pre></td></tr></table></figure>
<p>The <code>-o</code> option (short for “output”) allows you to specify the output file name:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gcc -o hello hello.c</span><br></pre></td></tr></table></figure>
<p>This command specifies that the output file should be named <code>hello</code>, instead of the default <code>a.out</code>. Running the file will produce the same result:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./hello</span><br><span class="line">Hello World</span><br></pre></td></tr></table></figure>
<p>The <code>-std=</code> option allows you to specify the C standard version for compilation:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gcc -std=c99 hello.c</span><br></pre></td></tr></table></figure>
<p>This command compiles the code according to the C99 standard.</p>
<p>Note: The <code>-std</code> option uses <code>=</code> to connect the argument, unlike <code>-o</code>, which uses a space. Be sure there are no extra spaces around the <code>=</code> sign.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Basic C Language Syntax</title>
    <url>/2024/05/02/basic-c-language-syntax/</url>
    <content><![CDATA[<h2 id="Statements"><a href="#Statements" class="headerlink" title="Statements"></a>Statements</h2><p>C code is composed of statements. A statement is a command that the program executes. In C, each statement must end with a semicolon, unless specified otherwise.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>The above is a variable declaration statement, where the integer variable <code>x</code> is declared and assigned a value of <code>1</code>.</p>
<p>Multiple statements can be written on a single line:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x; x = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>Here, two statements are written on one line. Line breaks between statements aren’t required but are often used for readability.</p>
<p>A single statement can also be split across multiple lines, with semicolons indicating the end of the statement:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x;</span><br><span class="line">x</span><br><span class="line">=</span><br><span class="line"><span class="number">1</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure>
<p>In this example, the statement <code>x = 1;</code> is broken into four lines. The compiler ignores line breaks within a statement.</p>
<p>Even a single semicolon is a valid statement, called an “empty statement,” though it has no effect:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">;</span><br></pre></td></tr></table></figure>
<h2 id="Expressions"><a href="#Expressions" class="headerlink" title="Expressions"></a>Expressions</h2><p>In C, most calculations are performed through expressions. An expression represents a computation that produces a value.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>The above is an expression that calculates the result of <code>1 + 2</code>.</p>
<p>An expression followed by a semicolon can also become a statement, though it may not serve a practical purpose:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span>;</span><br><span class="line"><span class="number">3</span> + <span class="number">4</span>;</span><br></pre></td></tr></table></figure>
<p>The above are two expressions, which become statements when followed by a semicolon.</p>
<p>The key differences between expressions and statements are:</p>
<ul>
<li>A statement can contain an expression, but an expression alone is not a statement.</li>
<li>Expressions always return a value, while statements may or may not. For example, a variable declaration statement like <code>int x = 1;</code> does not return a value.</li>
</ul>
<h2 id="Statement-Blocks"><a href="#Statement-Blocks" class="headerlink" title="Statement Blocks"></a>Statement Blocks</h2><p>In C, multiple statements can be grouped together using curly braces <code>&#123;&#125;</code> to form a block, also known as a compound statement. A block of statements is treated as a single compound statement.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> x;</span><br><span class="line">  x = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the curly braces create a block of statements. There is no need to add a semicolon after the closing brace.</p>
<h2 id="Whitespace"><a href="#Whitespace" class="headerlink" title="Whitespace"></a>Whitespace</h2><p>Whitespace in C mainly serves to help the compiler distinguish between different syntax elements. Where spaces aren’t required for the compiler to differentiate syntax, they are optional and mainly used to enhance readability.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// Equivalent to:</span></span><br><span class="line"><span class="type">int</span> x=<span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>In the above example, spaces around the assignment operator <code>=</code> are optional since the compiler can interpret the code without them.</p>
<p>Multiple spaces between syntax elements are treated as a single space:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>    x =     <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<p>Here, the extra spaces have no effect on the code.</p>
<p>Whitespace is also used for indentation. While indentation doesn’t affect the program’s functionality, it enhances code readability, especially for distinguishing code blocks. Most C coding styles suggest indenting nested code by four spaces. However, for brevity, this text uses two spaces.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Four-space indentation</span></span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;positive\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Two-space indentation</span></span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;positive\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>A line containing only spaces is considered a blank line, which the compiler completely ignores.</p>
<h2 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h2><p>Comments are annotations in the code that the compiler ignores, meaning they don’t affect the program. C supports two types of comments.</p>
<ol>
<li>Block comments, enclosed by <code>/*...*/</code>, can span multiple lines:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Comment */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  This is a multi-line comment.</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<p>Block comments can also be placed inline:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">open</span><span class="params">(<span class="type">char</span>* s <span class="comment">/* file name */</span>, <span class="type">int</span> mode)</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>/* file name */</code> explains the function’s parameter without interfering with the code.</p>
<p>It’s important to close block comments with <code>*/</code>, or they may unintentionally span beyond their intended scope.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a &quot;</span>); <span class="comment">/* Comment 1</span></span><br><span class="line"><span class="comment">printf(&quot;b &quot;);</span></span><br><span class="line"><span class="comment">printf(&quot;c &quot;); /* Comment 2 */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;d &quot;</span>);</span><br></pre></td></tr></table></figure>
<p>In the example above, forgetting to close <code>Comment 1</code> causes the second comment to include unintended lines of code.</p>
<ol>
<li>Line comments, introduced in C99, start with <code>//</code> and extend to the end of the line:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// This is a comment</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x = <span class="number">1</span>; <span class="comment">// This is also a comment</span></span><br></pre></td></tr></table></figure>
<p>Comments cannot be placed within double quotes as they will be treated as part of the string.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;// hello /* world */ &quot;</span>);</span><br></pre></td></tr></table></figure>
<p>Here, the characters <code>//</code> and <code>/* ... */</code> are treated as part of the string and have no effect as comments.</p>
<p><del>When compiling, comments are replaced with spaces. So ~~`</del>min/<em> space </em>/Value<del>`</del> becomes <del>`</del>min Value<del>`</del> instead of <del>`</del>minValue<del>`</del>.~~</p>
<h2 id="printf"><a href="#printf" class="headerlink" title="printf()"></a><code>printf()</code></h2><h3 id="Basics"><a href="#Basics" class="headerlink" title="Basics"></a>Basics</h3><p>This guide often uses the <code>printf()</code> function, which outputs text to the screen. The <code>f</code> in <code>printf</code> stands for “formatted,” meaning you can customize the output.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>The above command prints the text “Hello World” to the screen.</p>
<p>By default, <code>printf()</code> doesn’t automatically add a newline. To move the cursor to the next line, include the newline character <code>\n</code> at the end of the string:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>To print a string across multiple lines, insert newline characters where needed:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello\nWorld\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>The above example can also be written as two separate <code>printf()</code> calls, producing the same output.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;World\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>Before using <code>printf()</code>, you must include the standard library header <code>stdio.h</code> at the beginning of your code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Placeholders"><a href="#Placeholders" class="headerlink" title="Placeholders"></a>Placeholders</h3><p>In <code>printf()</code>, you can specify placeholders in the output text. A “placeholder” is a symbol that will later be replaced with a specific value.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Output: There are 3 apples</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;There are %i apples\n&quot;</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<p>In this example, <code>&quot;There are %i apples\n&quot;</code> is the output string, and <code>%i</code> is the placeholder, indicating where a value should be inserted. Placeholders start with the percent sign <code>%</code>, and the second character specifies the data type, such as <code>%i</code>, which expects an integer.</p>
<p>The second argument of <code>printf()</code> provides the value to replace the placeholder. In this case, the integer <code>3</code> replaces <code>%i</code>. The resulting output will be: <code>There are 3 apples</code>.</p>
<p>Common placeholders include <code>%i</code> for integers and <code>%s</code> for strings:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s will come tonight\n&quot;</span>, <span class="string">&quot;Jane&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>Here, <code>%s</code> is a string placeholder, so the second argument of <code>printf()</code> must be a string. In this example, <code>&quot;Jane&quot;</code> is substituted, and the output will be: <code>Jane will come tonight</code>.</p>
<p>You can use multiple placeholders in one <code>printf()</code> call:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s says it is %i o&#x27;clock\n&quot;</span>, <span class="string">&quot;Ben&quot;</span>, <span class="number">21</span>);</span><br></pre></td></tr></table></figure>
<p>This string contains two placeholders: <code>%s</code> for a string and <code>%i</code> for an integer. They correspond to <code>&quot;Ben&quot;</code> and <code>21</code>, producing the output: <code>Ben says it is 21 o&#39;clock</code>.</p>
<p>The number of placeholders in the format string must match the number of arguments passed to <code>printf()</code>. For instance, if there are <code>n</code> placeholders, <code>printf()</code> needs <code>n + 1</code> arguments. Failing to provide the correct number of arguments can lead to unpredictable behavior, like displaying random memory values.</p>
<p><code>printf()</code> supports a wide range of placeholders, each corresponding to a different data type in C. Here’s a list of common placeholders:</p>
<ul>
<li><code>%a</code>: Hexadecimal floating point, lowercase.</li>
<li><code>%A</code>: Hexadecimal floating point, uppercase.</li>
<li><code>%c</code>: Single character.</li>
<li><code>%d</code>: Decimal integer.</li>
<li><code>%e</code>: Scientific notation, lowercase ‘e’.</li>
<li><code>%E</code>: Scientific notation, uppercase ‘E’.</li>
<li><code>%i</code>: Integer, similar to <code>%d</code>.</li>
<li><code>%f</code>: Floating point (both <code>float</code> and <code>double</code> types).</li>
<li><code>%g</code>: Floating point with up to 6 significant digits. The integer part is automatically converted to scientific notation once it exceeds 6 digits, and the ‘e’ in the exponent part is lowercase.</li>
<li><code>%G</code>: Same as <code>%g</code>, but with an uppercase ‘E’ in scientific notation.</li>
<li><code>%hd</code>: Decimal <code>short int</code>.</li>
<li><code>%ho</code>: Octal <code>short int</code>.</li>
<li><code>%hx</code>: Hexadecimal <code>short int</code>.</li>
<li><code>%hu</code>: Unsigned <code>short int</code>.</li>
<li><code>%ld</code>: Decimal <code>long int</code>.</li>
<li><code>%lo</code>: Octal <code>long int</code>.</li>
<li><code>%lx</code>: Hexadecimal <code>long int</code>.</li>
<li><code>%lu</code>: Unsigned <code>long int</code>.</li>
<li><code>%lld</code>: Decimal <code>long long int</code>.</li>
<li><code>%llo</code>: Octal <code>long long int</code>.</li>
<li><code>%llx</code>: Hexadecimal <code>long long int</code>.</li>
<li><code>%llu</code>: Unsigned <code>long long int</code>.</li>
<li><code>%Le</code>: Scientific notation for <code>long double</code>.</li>
<li><code>%Lf</code>: <code>long double</code>.</li>
<li><code>%n</code>: Outputs the number of characters printed so far. This placeholder does not output anything but stores the count in a variable.</li>
<li><code>%o</code>: Octal integer.</li>
<li><code>%p</code>: Pointer address.</li>
<li><code>%s</code>: String.</li>
<li><code>%u</code>: Unsigned integer.</li>
<li><code>%x</code>: Hexadecimal integer.</li>
<li><code>%zd</code>: <code>size_t</code> type.</li>
<li><code>%%</code>: Outputs a literal percent sign.</li>
</ul>
<h3 id="Formatting-Output"><a href="#Formatting-Output" class="headerlink" title="Formatting Output"></a>Formatting Output</h3><p><code>printf()</code> also allows customization of placeholder output.</p>
<ol>
<li><strong>Specifying Width</strong><br>You can define a minimum width for placeholders.</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d\n&quot;</span>, <span class="number">123</span>); <span class="comment">// Output: &quot;  123&quot;</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>%5d</code> specifies that the output will occupy at least 5 spaces. Since <code>123</code> is only three digits long, two spaces are added before it to meet the width requirement.</p>
<p>By default, values are right-aligned, meaning spaces are added in front. To left-align the value, insert a <code>-</code> after <code>%</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-5d\n&quot;</span>, <span class="number">123</span>); <span class="comment">// Output: &quot;123  &quot;</span></span><br></pre></td></tr></table></figure>
<p>For floating-point numbers, this width refers to the entire number, including decimal places:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Output: &quot;  123.450000&quot;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%12f\n&quot;</span>, <span class="number">123.45</span>);</span><br></pre></td></tr></table></figure>
<p>Here, <code>%12f</code> ensures that the output will take up at least 12 characters, including padding and decimal digits.</p>
<ol>
<li><strong>Always Showing Sign</strong><br>By default, <code>printf()</code> only displays the minus sign for negative numbers. To force it to show a plus sign for positive numbers, add a <code>+</code> after <code>%</code>:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%+d\n&quot;</span>, <span class="number">12</span>);  <span class="comment">// Output: +12</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%+d\n&quot;</span>, <span class="number">-12</span>); <span class="comment">// Output: -12</span></span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Limiting Decimal Places</strong><br>To limit the number of decimal places, you can specify the desired precision with <code>%.2f</code>:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Output: Number is 0.50</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Number is %.2f\n&quot;</span>, <span class="number">0.5</span>);</span><br></pre></td></tr></table></figure>
<p>This ensures that only two decimal places are shown. You can also combine this with width specification:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Output: &quot;  0.50&quot;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%6.2f\n&quot;</span>, <span class="number">0.5</span>);</span><br></pre></td></tr></table></figure>
<p>This format reserves 6 spaces for the entire number, with 2 reserved for decimal places.</p>
<p>You can dynamically specify both the width and precision using arguments:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%*.*f\n&quot;</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">0.5</span>); <span class="comment">// Equivalent to printf(&quot;%6.2f\n&quot;, 0.5);</span></span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Partial String Output</strong><br>By default, <code>%s</code> outputs the entire string. If you only want to display a portion, use <code>%.[m]s</code> to specify the length, where <code>[m]</code> is the number of characters to display:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Output: hello</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.5s\n&quot;</span>, <span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>Here, <code>%.5s</code> tells <code>printf()</code> to output only the first 5 characters, resulting in <code>hello</code>.</p>
<h2 id="Standard-Libraries-and-Header-Files"><a href="#Standard-Libraries-and-Header-Files" class="headerlink" title="Standard Libraries and Header Files"></a>Standard Libraries and Header Files</h2><p>In C, many functionalities, like <code>printf()</code>, are built into the language. You don’t need to write them from scratch. These built-in functions are part of the <strong>standard library</strong>. Since these functions are standardized, their behavior is consistent across different systems, ensuring code portability.</p>
<p>Functions are organized into <strong>header files</strong>, such as <code>stdio.h</code> for <code>printf()</code>. To use a function, you need to include its corresponding header file at the beginning of your program with the <code>#include</code> directive:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>This tells the compiler to load the required functions. Note that <code>#include</code> does not require a semicolon.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Understanding Variables in C Programming</title>
    <url>/2024/05/03/c-language-variables/</url>
    <content><![CDATA[<h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><p>A variable can be understood as the name of a memory location. By using the variable name, you can reference this memory and access the stored value. The value might change, which is why it’s called a variable. If the value remains constant, it’s referred to as a constant.</p>
<h2 id="Variable-Names"><a href="#Variable-Names" class="headerlink" title="Variable Names"></a>Variable Names</h2><p>In C, variable names are considered identifiers, and there are strict rules for naming them:</p>
<ul>
<li>They can only contain letters (both uppercase and lowercase), digits, and underscores (<code>_</code>).</li>
<li>They cannot begin with a digit.</li>
<li>The name must not exceed 63 characters in length.</li>
</ul>
<p>Here are some examples of invalid variable names:</p>
<ul>
<li><code>$zj</code></li>
<li><code>j**p</code></li>
<li><code>2cat</code></li>
<li><code>Hot-tab</code></li>
<li><code>tax rate</code></li>
<li><code>don&#39;t</code></li>
</ul>
<p>In each case, the variable name violates one or more of the rules.  </p>
<p>Variable names are case-sensitive, so <code>star</code>, <code>Star</code>, and <code>STAR</code> are considered different variables.</p>
<p>Not all words can be used as variable names. Certain words have special meanings in C (e.g., <code>int</code>) or are commands (e.g., <code>continue</code>). These are known as <strong>keywords</strong> and cannot be used as variable names. Additionally, some words are reserved for future use, known as <strong>reserved words</strong>, and also cannot be used.</p>
<p>Here are the main C keywords and reserved words:</p>
<p><code>auto, break, case, char, const, continue, default, do, double, else, enum, extern, float, for, goto, if, inline, int, long, register, restrict, return, short, signed, sizeof, static, struct, switch, typedef, union, unsigned, void, volatile, while</code></p>
<p>Additionally, variable names that start with two underscores or an underscore followed by a capital letter are reserved for the system and should not be used for custom variable names.</p>
<h2 id="Variable-Declaration"><a href="#Variable-Declaration" class="headerlink" title="Variable Declaration"></a>Variable Declaration</h2><p>In C, a variable must be declared before it is used. If a variable is used without being declared, the program will throw an error.</p>
<p>Each variable has a <strong>type</strong>. When declaring a variable, its type must be specified.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> height;</span><br></pre></td></tr></table></figure>
<p>The code above declares a variable <code>height</code> of type <code>int</code> (integer).</p>
<p>If multiple variables share the same type, they can be declared in the same line.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> height, width;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Equivalent to:</span></span><br><span class="line"><span class="type">int</span> height;</span><br><span class="line"><span class="type">int</span> width;</span><br></pre></td></tr></table></figure>
<p>Note that the declaration must end with a semicolon.</p>
<p>Once a variable is declared, its type cannot be changed at runtime.</p>
<h2 id="Variable-Assignment"><a href="#Variable-Assignment" class="headerlink" title="Variable Assignment"></a>Variable Assignment</h2><p>When a variable is declared, memory is allocated for it, but the memory may contain random values. Therefore, a variable should always be assigned a value before use.</p>
<p>Assignment is done using the assignment operator (<code>=</code>).</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> num;</span><br><span class="line">num = <span class="number">42</span>;</span><br></pre></td></tr></table></figure>
<p>Here, the variable <code>num</code> is declared first, and then assigned the value <code>42</code>.</p>
<p>The assigned value should match the variable’s type. For example, an integer variable should not be assigned a decimal value. While C automatically converts types in some cases, it is best to avoid mismatching types in assignments.</p>
<p>You can also declare and assign a value to a variable in one line.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> num = <span class="number">42</span>;</span><br></pre></td></tr></table></figure>
<p>Multiple variables of the same type can be assigned values in a single line.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">1</span>, y = <span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<p>An important feature in C is that assignment expressions return a value, which is the value on the right side of the assignment.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x, y;</span><br><span class="line"></span><br><span class="line">x = <span class="number">1</span>;</span><br><span class="line">y = (x = <span class="number">2</span> * x);</span><br></pre></td></tr></table></figure>
<p>In this example, <code>y</code> is assigned the result of the expression <code>(x = 2 * x)</code>, which is <code>2</code>.</p>
<p>Because assignment expressions return a value, C allows for chained assignments.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x, y, z, m, n;</span><br><span class="line"></span><br><span class="line">x = y = z = m = n = <span class="number">3</span>;</span><br></pre></td></tr></table></figure>
<p>This code is valid and assigns <code>3</code> to all variables in a single statement. The assignments are executed from right to left, starting with <code>n</code>.</p>
<p>C distinguishes between <strong>lvalues</strong> and <strong>rvalues</strong>. An <strong>lvalue</strong> is something that can appear on the left side of an assignment, typically a variable. An <strong>rvalue</strong> is something that can appear on the right side of an assignment, usually a value. For example, <code>x = 1</code> is valid, but <code>1 = x</code> will result in an error.</p>
<h2 id="Variable-Scope"><a href="#Variable-Scope" class="headerlink" title="Variable Scope"></a>Variable Scope</h2><p><strong>Scope</strong> refers to the region of the program where a variable is accessible. In C, variables generally have two types of scope: <strong>file scope</strong> and <strong>block scope</strong>.</p>
<p><strong>File scope</strong> applies to variables declared at the top level of a source file, outside any functions. These variables are accessible throughout the entire file, starting from the point of declaration.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%i\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the variable <code>x</code> is declared at the file level and can be accessed anywhere within the file, including inside the <code>main()</code> function.</p>
<p><strong>Block scope</strong> refers to variables declared within a block of code, defined by curly braces <code>&#123;&#125;</code>. Variables in block scope are only accessible within that block and are invisible outside of it.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">12</span>) &#123;</span><br><span class="line">  <span class="type">int</span> b = <span class="number">99</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, a, b);  <span class="comment">// 12 99</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);  <span class="comment">// 12</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b);  <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>In this example, the variable <code>b</code> is only visible within the <code>if</code> block, and attempting to access it outside the block results in an error.</p>
<p>Blocks can be nested, meaning a block can contain other blocks. Inner blocks can access variables from outer blocks, but not the other way around. If a variable is declared in both an inner and outer block, the inner variable will override the outer one within that inner scope.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);  <span class="comment">// 20</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);  <span class="comment">// 10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, the inner block declares a variable <code>i</code> that hides the outer <code>i</code> within its scope.</p>
<p>A common example of block scope is a function. Variables declared inside a function are not accessible outside it. Similarly, the loop variable in a <code>for</code> loop is scoped to the loop itself.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i); <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>In this example, the loop variable <code>i</code> is inaccessible outside the loop, and attempting to print it will cause an error.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Types in C Language</title>
    <url>/2024/05/06/c-language-types/</url>
    <content><![CDATA[<p>In C, every piece of data has a type that the compiler must understand to properly operate on it. The “type” refers to the shared characteristics of similar data, allowing you to know its properties and operations once its type is known.</p>
<p>There are three basic data types: <code>char</code> (character), <code>int</code> (integer), and <code>float</code> (floating-point). More complex types are built from these.</p>
<h2 id="Character-Type"><a href="#Character-Type" class="headerlink" title="Character Type"></a>Character Type</h2><p>The character type represents a single character and is declared with the <code>char</code> keyword.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> c = <span class="string">&#x27;B&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>c</code> is declared as a character type and assigned the value ‘B’. In C, character constants must be enclosed in single quotes.</p>
<p>Internally, characters are stored in one byte (8 bits). C treats them as integers, so a character is essentially an integer with a width of one byte. Each character corresponds to an integer (defined by the ASCII code), with ‘B’ corresponding to the integer 66.</p>
<p>Different systems may have different default ranges for the <code>char</code> type. Some systems use -128 to 127, while others use 0 to 255. Both ranges cover the ASCII range of 0 to 127.</p>
<p>Integers within the <code>char</code> range can be used interchangeably with characters and assigned to <code>char</code> variables.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> c = <span class="number">66</span>;</span><br><span class="line"><span class="comment">// Equivalent to</span></span><br><span class="line"><span class="type">char</span> c = <span class="string">&#x27;B&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, assigning 66 to <code>c</code> has the same effect as assigning ‘B’.</p>
<p>Character variables can also participate in arithmetic operations.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> a = <span class="string">&#x27;B&#x27;</span>; <span class="comment">// Equivalent to char a = 66;</span></span><br><span class="line"><span class="type">char</span> b = <span class="string">&#x27;C&#x27;</span>; <span class="comment">// Equivalent to char b = 67;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a + b); <span class="comment">// Outputs 133</span></span><br></pre></td></tr></table></figure>
<p>Here, adding <code>a</code> and <code>b</code> is treated like adding two integers, and <code>%d</code> prints the result as a decimal integer, yielding 133.</p>
<p>Single quotes themselves are characters, so to represent a single quote in a character constant, you need to escape it.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> t = <span class="string">&#x27;\&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>In this case, <code>t</code> holds the single quote character. Since character constants must be in single quotes, the internal single quote needs to be escaped.</p>
<p>Escape sequences are also used to represent unprintable control characters, which are part of the character type values:</p>
<ul>
<li><code>\a</code>: Alert (causes an alert sound or visual flash)</li>
<li><code>\b</code>: Backspace (moves the cursor back one character without deleting it)</li>
<li><code>\f</code>: Form feed (moves the cursor to the next page; in modern systems, it behaves like <code>\v</code>)</li>
<li><code>\n</code>: Newline</li>
<li><code>\r</code>: Carriage return (moves the cursor to the start of the line)</li>
<li><code>\t</code>: Horizontal tab (moves the cursor to the next tab stop, usually every 8 characters)</li>
<li><code>\v</code>: Vertical tab (moves the cursor to the next vertical tab stop, usually the same column on the next line)</li>
<li><code>\0</code>: Null character (represents no content; different from the number 0)</li>
</ul>
<p>Escape sequences can also use octal and hexadecimal notation:</p>
<ul>
<li><code>\nn</code>: Octal representation of the character, where <code>nn</code> is the octal value</li>
<li><code>\xnn</code>: Hexadecimal representation of the character, where <code>nn</code> is the hexadecimal value</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> x = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"><span class="type">char</span> x = <span class="number">66</span>;</span><br><span class="line"><span class="type">char</span> x = <span class="string">&#x27;\102&#x27;</span>; <span class="comment">// Octal</span></span><br><span class="line"><span class="type">char</span> x = <span class="string">&#x27;\x42&#x27;</span>; <span class="comment">// Hexadecimal</span></span><br></pre></td></tr></table></figure>
<p>All four of these declarations are equivalent.</p>
<h2 id="Integer-Types"><a href="#Integer-Types" class="headerlink" title="Integer Types"></a>Integer Types</h2><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>In C, integer types are used to represent whole numbers. The type is declared using the <code>int</code> keyword.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a;</span><br></pre></td></tr></table></figure>
<p>In the example above, an integer variable <code>a</code> is declared.</p>
<p>The size of the <code>int</code> type can vary between different computers. Commonly, an <code>int</code> is stored in 4 bytes (32 bits), but it can also be 2 bytes (16 bits) or 8 bytes (64 bits). The ranges of integers that these types can represent are as follows:</p>
<ul>
<li><strong>16-bit</strong>: -32,768 to 32,767</li>
<li><strong>32-bit</strong>: -2,147,483,648 to 2,147,483,647</li>
<li><strong>64-bit</strong>: -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807</li>
</ul>
<h3 id="Signed-and-Unsigned"><a href="#Signed-and-Unsigned" class="headerlink" title="Signed and Unsigned"></a>Signed and Unsigned</h3><p>In C, the <code>signed</code> keyword indicates that a type can hold both positive and negative values. Conversely, the <code>unsigned</code> keyword means the type can only hold zero and positive values.</p>
<p>By default, <code>int</code> is signed, which means <code>int</code> is equivalent to <code>signed int</code>. Although the <code>signed</code> keyword is usually omitted, it is not incorrect to include it.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">signed</span> <span class="type">int</span> a;  <span class="comment">// Equivalent to</span></span><br><span class="line"><span class="type">int</span> a;</span><br></pre></td></tr></table></figure>
<p>To declare an <code>int</code> without a sign (only non-negative values), use the <code>unsigned</code> keyword:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> a;</span><br></pre></td></tr></table></figure>
<p>An <code>unsigned int</code> can represent a larger maximum value compared to a signed <code>int</code> of the same size. For instance, a 16-bit <code>signed int</code> has a maximum value of 32,767, while an <code>unsigned int</code> can go up to 65,535.</p>
<p>The <code>int</code> in <code>unsigned int</code> can be omitted:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> a;</span><br></pre></td></tr></table></figure>
<p>The <code>char</code> type can also be signed or unsigned:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">signed</span> <span class="type">char</span> c;    <span class="comment">// Range: -128 to 127</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> c;  <span class="comment">// Range: 0 to 255</span></span><br></pre></td></tr></table></figure>
<p>Note that the default sign of <code>char</code> (whether it is signed or unsigned) is system-dependent. Unlike <code>int</code>, <code>char</code> is not guaranteed to be signed or unsigned.</p>
<h3 id="Integer-Subtypes"><a href="#Integer-Subtypes" class="headerlink" title="Integer Subtypes"></a>Integer Subtypes</h3><p>When an <code>int</code> type uses 4 or 8 bytes, it may be overkill for small integers. On the other hand, if larger integers are needed, 8 bytes might not be sufficient. To address these issues, C provides three subtypes of integers, allowing for more precise control over the integer range:</p>
<ul>
<li><strong>short int</strong> (or <code>short</code>): Uses no more than <code>int</code>, generally 2 bytes (range: -32,768 to 32,767)</li>
<li><strong>long int</strong> (or <code>long</code>): Uses at least as much space as <code>int</code>, generally 4 bytes</li>
<li><strong>long long int</strong> (or <code>long long</code>): Uses more space than <code>long</code>, at least 8 bytes</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">short</span> <span class="type">int</span> a;</span><br><span class="line"><span class="type">long</span> <span class="type">int</span> b;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="type">int</span> c;</span><br></pre></td></tr></table></figure>
<p>By default, <code>short</code>, <code>long</code>, and <code>long long</code> are signed. You can declare them as unsigned to double the maximum value they can represent:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">short</span> <span class="type">int</span> a;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> b;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> c;</span><br></pre></td></tr></table></figure>
<p>The <code>int</code> in these declarations can be omitted:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">short</span> a;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> a;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> b;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> b;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> c;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> c;</span><br></pre></td></tr></table></figure>
<p>The size of data types can vary between computers. Use <code>long</code> for 32-bit integers and <code>long long</code> for 64-bit integers to ensure proper size, and use <code>short</code> for 16-bit integers. For 8-bit integers, use <code>char</code>.</p>
<h3 id="Limits-of-Integer-Types"><a href="#Limits-of-Integer-Types" class="headerlink" title="Limits of Integer Types"></a>Limits of Integer Types</h3><p>To determine the maximum and minimum values of integer types on your system, use constants from the header file <code>limits.h</code>. For example:</p>
<ul>
<li><code>SCHAR_MIN</code> and <code>SCHAR_MAX</code> for <code>signed char</code></li>
<li><code>SHRT_MIN</code> and <code>SHRT_MAX</code> for <code>short</code></li>
<li><code>INT_MIN</code> and <code>INT_MAX</code> for <code>int</code></li>
<li><code>LONG_MIN</code> and <code>LONG_MAX</code> for <code>long</code></li>
<li><code>LLONG_MIN</code> and <code>LLONG_MAX</code> for <code>long long</code></li>
<li><code>UCHAR_MAX</code> for <code>unsigned char</code></li>
<li><code>USHRT_MAX</code> for <code>unsigned short</code></li>
<li><code>UINT_MAX</code> for <code>unsigned int</code></li>
<li><code>ULONG_MAX</code> for <code>unsigned long</code></li>
<li><code>ULLONG_MAX</code> for <code>unsigned long long</code></li>
</ul>
<p>Using these constants ensures your code remains portable across different systems.</p>
<h3 id="Integer-Literals-and-Formats"><a href="#Integer-Literals-and-Formats" class="headerlink" title="Integer Literals and Formats"></a>Integer Literals and Formats</h3><p>By default, integers in C are written in decimal. To represent octal and hexadecimal numbers, use specific prefixes:</p>
<ul>
<li><strong>Octal</strong>: Prefix with <code>0</code> (e.g., <code>017</code> or <code>0377</code>).</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">012</span>;  <span class="comment">// Octal, equivalent to decimal 10</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Hexadecimal</strong>: Prefix with <code>0x</code> or <code>0X</code> (e.g., <code>0xf</code> or <code>0X10</code>).</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0x1A2B</span>;  <span class="comment">// Hexadecimal, equivalent to decimal 6699</span></span><br></pre></td></tr></table></figure>
<p>Some compilers also support binary literals with the <code>0b</code> prefix (though this is not standard):</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">0b101010</span>;</span><br></pre></td></tr></table></figure>
<p>Different bases are only for representation; they do not affect the actual storage of the integer, which is always in binary. You can mix bases in expressions, such as <code>10 + 015 + 0x20</code>.</p>
<p>Use the following format specifiers with <code>printf()</code> to display integers in different bases:</p>
<ul>
<li><code>%d</code>: Decimal</li>
<li><code>%o</code>: Octal</li>
<li><code>%x</code>: Hexadecimal</li>
<li><code>%#o</code>: Octal with prefix <code>0</code></li>
<li><code>%#x</code>: Hexadecimal with prefix <code>0x</code></li>
<li><code>%#X</code>: Hexadecimal with prefix <code>0X</code></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;dec = %d\n&quot;</span>, x);       <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;octal = %o\n&quot;</span>, x);     <span class="comment">// 144</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hex = %x\n&quot;</span>, x);       <span class="comment">// 64</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;octal = %#o\n&quot;</span>, x);    <span class="comment">// 0144</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hex = %#x\n&quot;</span>, x);      <span class="comment">// 0x64</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hex = %#X\n&quot;</span>, x);      <span class="comment">// 0X64</span></span><br></pre></td></tr></table></figure>
<h2 id="Floating-Point-Numbers"><a href="#Floating-Point-Numbers" class="headerlink" title="Floating Point Numbers"></a>Floating Point Numbers</h2><p>In programming, a floating point number is a value with a decimal point, represented in the form ( $ m \times b^e $ ), where ( <code>m</code> ) is the mantissa, ( <code>b</code> ) is the base (usually <code>2</code>), and ( <code>e</code> ) is the exponent. This format balances precision and range, allowing for representation of very large or very small numbers.</p>
<p>In C, floating point types are declared using the <code>float</code> keyword. For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> c = <span class="number">10.5</span>;</span><br></pre></td></tr></table></figure>
<p>Here, <code>c</code> is a floating point variable. The <code>float</code> type uses 4 bytes (32 bits), with 8 bits for the exponent and sign, and 24 bits for the mantissa and sign. It provides at least 6 decimal digits of precision and can represent values from $ 10^{-37} $ to $ 10^{37} $.</p>
<p>For cases where more precision or range is needed, C offers two larger floating point types:</p>
<ul>
<li><code>double</code>: Uses 8 bytes (64 bits), with at least 13 decimal digits of precision.</li>
<li><code>long double</code>: Typically uses 16 bytes, but this can vary by system.</li>
</ul>
<p>Due to precision limits, floating point numbers are approximations, and calculations may not be exact. For example, in C, <code>0.1 + 0.2</code> does not exactly equal <code>0.3</code>, but has a small error:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0.1</span> + <span class="number">0.2</span> == <span class="number">0.3</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<p>Floating point numbers can also be represented using scientific notation, where <code>e</code> separates the decimal part from the exponent:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> x = <span class="number">123.456e+3</span>; <span class="comment">// Equivalent to 123.456 x 10^3</span></span><br><span class="line"><span class="comment">// or simply</span></span><br><span class="line"><span class="type">double</span> x = <span class="number">123.456e3</span>;</span><br></pre></td></tr></table></figure>
<p>The <code>+</code> in the exponent can be omitted, and spaces around <code>e</code> are not allowed. Leading or trailing zeros in the decimal part can be omitted:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">0.3E6</span> <span class="comment">// Equivalent to .3E6</span></span><br><span class="line"><span class="number">3.0E6</span> <span class="comment">// Equivalent to 3.E6</span></span><br></pre></td></tr></table></figure>
<h2 id="Boolean-Type"><a href="#Boolean-Type" class="headerlink" title="Boolean Type"></a>Boolean Type</h2><p>Originally, C did not have a dedicated boolean type. Instead, <code>0</code> was used for false, and any non-zero value was considered true:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (x) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;x is true!\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>With the C99 standard, <code>_Bool</code> was introduced to represent boolean values. This is essentially an alias for <code>int</code>, with <code>0</code> as false and <code>1</code> as true:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">_Bool</span> isNormal;</span><br><span class="line">isNormal = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (isNormal)</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Everything is OK.\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>The header file <code>stdbool.h</code> defines a <code>bool</code> type alias and constants <code>true</code> and <code>false</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Literal-types"><a href="#Literal-types" class="headerlink" title="Literal types"></a>Literal types</h2><p>Literals are fixed values directly written into the code.</p>
<p>For example:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">123</span>;</span><br></pre></td></tr></table></figure>
<p>In this code, <code>x</code> is a variable, and <code>123</code> is a literal.</p>
<p>At compile time, literals are also written to memory, so the compiler must assign a data type to them just as it does for variables.</p>
<p>Typically, decimal integer literals (like <code>123</code>) are assigned the <code>int</code> type by the compiler. If a number is too large for an <code>int</code>, the compiler assigns it <code>long int</code>. If it exceeds <code>long int</code>, it will be assigned <code>unsigned long</code>, and if that’s still not sufficient, it will be assigned <code>long long</code> or <code>unsigned long long</code>.</p>
<p>Floating-point literals (like <code>3.14</code>) are assigned the <code>double</code> type.</p>
<h2 id="Literal-Suffixes"><a href="#Literal-Suffixes" class="headerlink" title="Literal Suffixes"></a>Literal Suffixes</h2><p>Sometimes, programmers want to specify a different type for a literal. For instance, the compiler assigns an integer literal to the <code>int</code> type by default, but if a programmer wants to assign it as a <code>long</code>, they can add the suffix <code>l</code> or <code>L</code> to the literal. This signals to the compiler to treat the literal as a <code>long</code> type.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">123L</span>;</span><br></pre></td></tr></table></figure>
<p>In the above example, the literal <code>123</code> has the suffix <code>L</code>, so the compiler will treat it as a <code>long</code>. You can also write it as <code>123l</code>, but using <code>L</code> is recommended because the lowercase <code>l</code> can be easily confused with the number <code>1</code>.</p>
<p>Octal and hexadecimal values can also use the <code>l</code> or <code>L</code> suffix to indicate they should be treated as <code>long</code>, such as <code>020L</code> and <code>0x20L</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> y = <span class="number">0377L</span>;</span><br><span class="line"><span class="type">int</span> z = <span class="number">0x7fff</span>L;</span><br></pre></td></tr></table></figure>
<p>If you want to specify an unsigned integer, use the suffix <code>u</code> or <code>U</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">123U</span>;</span><br></pre></td></tr></table></figure>
<p>The <code>L</code> and <code>U</code> suffixes can be combined to indicate an <code>unsigned long</code>. The order and case of <code>L</code> and <code>U</code> do not matter.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">123LU</span>;</span><br></pre></td></tr></table></figure>
<p>For floating-point numbers, the compiler defaults to the <code>double</code> type. If you want to specify a different type, add the suffix <code>f</code> (for <code>float</code>) or <code>l</code> (for <code>long double</code>) after the decimal.</p>
<p>You can also use suffixes with scientific notation.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1.2345e+10</span>F</span><br><span class="line"><span class="number">1.2345e+10</span>L</span><br></pre></td></tr></table></figure>
<p>To summarize, here are the common literal suffixes:</p>
<ul>
<li><code>f</code> and <code>F</code>: <code>float</code> type.</li>
<li><code>l</code> and <code>L</code>: <code>long int</code> for integers, <code>long double</code> for floating-point numbers.</li>
<li><code>ll</code> and <code>LL</code>: <code>long long int</code>, such as <code>3LL</code>.</li>
<li><code>u</code> and <code>U</code>: <code>unsigned int</code>, such as <code>15U</code> or <code>0377U</code>.</li>
<li><code>u</code> can be combined with other integer suffixes, and the order doesn’t matter, e.g., <code>10UL</code>, <code>10ULL</code>, and <code>10LLU</code> are all valid.</li>
</ul>
<p>Here are some examples:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>           x = <span class="number">1234</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">int</span>      x = <span class="number">1234L</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="type">int</span> x = <span class="number">1234LL</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>           x = <span class="number">1234U</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span>      x = <span class="number">1234UL</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> x = <span class="number">1234ULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> x       = <span class="number">3.14f</span>;</span><br><span class="line"><span class="type">double</span> x      = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">double</span> x = <span class="number">3.14L</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Overflow"><a href="#Overflow" class="headerlink" title="Overflow"></a>Overflow</h2><p>Each data type has a defined range of values. If a value exceeds this range (either smaller than the minimum or larger than the maximum), an overflow occurs, requiring more binary space than available. If the value exceeds the maximum, it’s called an <strong>overflow</strong>; if it’s smaller than the minimum, it’s an <strong>underflow</strong>.</p>
<p>Generally, the compiler won’t throw an error for overflows. Instead, it will execute the code and discard the excess binary bits, leading to unexpected results. Therefore, overflows should be avoided.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> x = <span class="number">255</span>;</span><br><span class="line">x = x + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x); <span class="comment">// Output: 0</span></span><br></pre></td></tr></table></figure>
<p>In this example, adding <code>1</code> to <code>x</code> doesn’t result in <code>256</code>, but rather <code>0</code>. This happens because <code>x</code> is an <code>unsigned char</code> with a maximum value of <code>255</code> (binary <code>11111111</code>). Adding <code>1</code> causes an overflow, and the highest bit in <code>256</code> (binary <code>100000000</code>) is discarded, leaving <code>0</code>.</p>
<p>Here’s another example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> ui = UINT_MAX;  <span class="comment">// 4,294,967,295</span></span><br><span class="line">ui++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ui = %u\n&quot;</span>, ui); <span class="comment">// 0</span></span><br><span class="line">ui--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ui = %u\n&quot;</span>, ui); <span class="comment">// 4,294,967,295</span></span><br></pre></td></tr></table></figure>
<p>The constant <code>UINT_MAX</code> is the maximum value for <code>unsigned int</code>. Adding <code>1</code> causes an overflow, resulting in <code>0</code>. Subtracting <code>1</code> from <code>0</code> returns <code>UINT_MAX</code>.</p>
<p>Overflows are easy to overlook because the compiler won’t issue warnings, so extra caution is needed.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">int</span> i = n; i &gt;= <span class="number">0</span>; --i) <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>At first glance, this loop looks fine, but the variable <code>i</code> is an <code>unsigned int</code>, and its minimum value is <code>0</code>. It cannot produce a value less than <code>0</code>. When <code>i</code> reaches <code>0</code> and is decremented by <code>1</code>, it doesn’t result in <code>-1</code>, but rather the maximum value for <code>unsigned int</code>, which is always greater than or equal to <code>0</code>, leading to an infinite loop.</p>
<p>To prevent overflows, the best approach is to compare the result of an operation with the limits of the data type.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> ui;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> sum;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Incorrect</span></span><br><span class="line"><span class="keyword">if</span> (sum + ui &gt; UINT_MAX) too_big();</span><br><span class="line"><span class="keyword">else</span> sum = sum + ui;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Correct</span></span><br><span class="line"><span class="keyword">if</span> (ui &gt; UINT_MAX - sum) too_big();</span><br><span class="line"><span class="keyword">else</span> sum = sum + ui;</span><br></pre></td></tr></table></figure>
<p>In the above example, both <code>sum</code> and <code>ui</code> are of <code>unsigned int</code> type, and their sum might cause an overflow. However, you cannot determine an overflow by checking if the sum exceeds <code>UINT_MAX</code>, because <code>sum + ui</code> returns the overflowed result, which cannot be greater than <code>UINT_MAX</code>. The correct method is to compare <code>UINT_MAX - sum</code> with <code>ui</code>.</p>
<p>Here’s another common mistake:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">5</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> j = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i - j &lt; <span class="number">0</span>) <span class="comment">// Error</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;negative\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;positive\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>The above code will always print <code>positive</code>. This is because both <code>i</code> and <code>j</code> are <code>unsigned int</code>, so the result of <code>i - j</code> is also <code>unsigned int</code>, which has a minimum value of <code>0</code>. It cannot be less than <code>0</code>. The correct way to write this is:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (j &gt; i) <span class="comment">// ...</span></span><br></pre></td></tr></table></figure>
<h2 id="sizeof-Operator"><a href="#sizeof-Operator" class="headerlink" title="sizeof Operator"></a><code>sizeof</code> Operator</h2><p>The <code>sizeof</code> operator in C is used to determine the number of bytes occupied by a data type or a specific value. Its argument can be a data type keyword, a variable, or a literal value.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Argument as data type</span></span><br><span class="line"><span class="type">int</span> x = <span class="keyword">sizeof</span>(<span class="type">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Argument as a variable</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">sizeof</span>(i);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Argument as a literal</span></span><br><span class="line"><span class="keyword">sizeof</span>(<span class="number">3.14</span>);</span><br></pre></td></tr></table></figure>
<p>In the first example, <code>sizeof(int)</code> returns the number of bytes used by the <code>int</code> type (typically 4 or 8 bytes). The second example returns the size of the integer variable <code>i</code>, which will be the same as the first. The third example returns the size of the literal <code>3.14</code>, which is treated as a <code>double</code> by default, so it returns 8.</p>
<p>The return type of <code>sizeof</code> is an unsigned integer, but C does not mandate its specific type—it varies by system. It could be <code>unsigned int</code>, <code>unsigned long</code>, or even <code>unsigned long long</code>, and the corresponding <code>printf()</code> format specifiers are <code>%u</code>, <code>%lu</code>, and <code>%llu</code> respectively. This variability can impact the portability of programs across different systems.</p>
<p>To solve this, C provides the <code>size_t</code> type, defined in the <code>stddef.h</code> header (included automatically with <code>stdio.h</code>), which represents the return type of <code>sizeof</code> across different systems. This helps ensure portability.</p>
<p>C also provides the constant <code>SIZE_MAX</code>, which represents the maximum value that <code>size_t</code> can hold. The valid range for <code>size_t</code> is [0, SIZE_MAX].</p>
<p>For <code>printf()</code>, the specifiers <code>%zd</code> or <code>%zu</code> are specifically designed to handle <code>size_t</code> values.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%zd\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br></pre></td></tr></table></figure>
<p>In this example, <code>%zd</code> ensures correct output regardless of the underlying type returned by <code>sizeof</code>. If your system doesn’t support <code>%zd</code> or <code>%zu</code>, you can use <code>%u</code> for <code>unsigned int</code> or <code>%lu</code> for <code>unsigned long</code>.</p>
<h2 id="Automatic-Type-Conversion"><a href="#Automatic-Type-Conversion" class="headerlink" title="Automatic Type Conversion"></a>Automatic Type Conversion</h2><p>In certain situations, C automatically converts one data type to another.</p>
<h3 id="Assignment-Operations"><a href="#Assignment-Operations" class="headerlink" title="Assignment Operations"></a>Assignment Operations</h3><ol>
<li><strong>Assigning a floating-point value to an integer variable</strong><br>When assigning a floating-point value to an integer, C discards the fractional part rather than rounding.</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">3.14</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, the value assigned to <code>x</code> is <code>3</code>, as the fractional part <code>.14</code> is discarded.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">12.99</span>;</span><br></pre></td></tr></table></figure>
<p>Here, <code>x</code> becomes <code>12</code>, not the rounded value <code>13</code>.</p>
<ol>
<li><strong>Assigning an integer value to a floating-point variable</strong><br>When assigning an integer to a floating-point variable, C automatically converts the integer to a float.</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> y = <span class="number">12</span> * <span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<p>The value of <code>y</code> is <code>24.0</code> because the integer result <code>24</code> is automatically converted to a floating-point number.</p>
<ol>
<li><strong>Assigning a smaller type to a larger type</strong><br>When assigning a value of a narrower type (like <code>char</code>) to a wider type (like <code>int</code>), the value is automatically promoted to the larger type.</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> i = x + y;</span><br></pre></td></tr></table></figure>
<p>Here, <code>x</code> is promoted to <code>int</code> before the operation.</p>
<ol>
<li><strong>Assigning a larger type to a smaller type</strong><br>When assigning a larger type (like <code>int</code>) to a smaller type (like <code>char</code>), truncation occurs, and excess bits are discarded.</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">321</span>;</span><br><span class="line"><span class="type">char</span> ch = i;  <span class="comment">// ch holds 65, which is 321 % 256</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>ch</code> stores <code>65</code> because the excess binary digits of <code>321</code> are discarded, leaving only the last 8 bits (which represent <code>65</code> in decimal).</p>
<p>Similarly, assigning a floating-point value to an integer variable truncates the decimal part.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> pi = <span class="number">3.14159</span>;</span><br><span class="line"><span class="type">int</span> i = pi;  <span class="comment">// i becomes 3</span></span><br></pre></td></tr></table></figure>
<h3 id="Mixed-Type-Operations"><a href="#Mixed-Type-Operations" class="headerlink" title="Mixed-Type Operations"></a>Mixed-Type Operations</h3><p>When different types are mixed in an expression, C converts them to a common type before performing the operation:</p>
<ol>
<li><strong>Integer and floating-point operations</strong><br>In operations involving both integers and floating-point values, integers are converted to floating-point types.</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> + <span class="number">1.2</span>  <span class="comment">// Result: 4.2</span></span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Floating-point type promotion</strong><br>When performing operations between different floating-point types, the smaller type is promoted to the larger type (e.g., <code>float</code> to <code>double</code>).</li>
<li><strong>Integer type promotion</strong><br>For integer operations, smaller integer types are promoted to larger types (e.g., <code>short</code> to <code>int</code>).</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">-5</span>;</span><br><span class="line"><span class="keyword">if</span> (a &lt; <span class="keyword">sizeof</span>(<span class="type">int</span>)) </span><br><span class="line">  do_something();</span><br></pre></td></tr></table></figure>
<p>Here, <code>a</code> is a signed integer, and <code>sizeof(int)</code> returns an unsigned integer (<code>size_t</code>). C automatically converts <code>a</code> to an unsigned type, which leads to an unexpected comparison result.</p>
<h3 id="Integer-Operations"><a href="#Integer-Operations" class="headerlink" title="Integer Operations"></a>Integer Operations</h3><p>For integer types smaller than <code>int</code>, arithmetic results are promoted to <code>int</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> a = <span class="number">66</span>;</span><br><span class="line"><span class="keyword">if</span> (-a &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;negative\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>In this example, <code>-a</code> is promoted to <code>int</code>, so the result is negative even though <code>a</code> is <code>unsigned char</code>.</p>
<p>Another example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> b = <span class="number">255</span>;</span><br><span class="line"><span class="keyword">if</span> ((a - <span class="number">5</span>) &lt; <span class="number">0</span>) do_something();</span><br><span class="line"><span class="keyword">if</span> ((b + <span class="number">255</span>) &gt; <span class="number">300</span>) do_something();</span><br></pre></td></tr></table></figure>
<p>In both cases, the expressions are promoted to <code>int</code>, so the operations execute as expected.</p>
<h3 id="Function-Parameter-and-Return-Type-Conversion"><a href="#Function-Parameter-and-Return-Type-Conversion" class="headerlink" title="Function Parameter and Return Type Conversion"></a>Function Parameter and Return Type Conversion</h3><p>Function parameters and return values are automatically converted to match the function’s defined types.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">dostuff</span><span class="params">(<span class="type">int</span>, <span class="type">unsigned</span> <span class="type">char</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> m = <span class="number">42</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> n = <span class="number">43</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> c = dostuff(m, n);</span><br></pre></td></tr></table></figure>
<p>In this case, <code>m</code> and <code>n</code> are converted to <code>int</code> and <code>unsigned char</code> respectively, matching the function’s signature.</p>
<p>Similarly, return values are automatically converted:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> <span class="title function_">func</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="type">int</span> a = <span class="number">42</span>;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, the function returns a <code>char</code>, so the <code>int</code> variable <code>a</code> is converted accordingly.</p>
<h2 id="Explicit-Type-Casting"><a href="#Explicit-Type-Casting" class="headerlink" title="Explicit Type Casting"></a>Explicit Type Casting</h2><p>In principle, automatic type conversion should be avoided to prevent unexpected results. C provides explicit type casting, allowing you to manually convert a value to a specified type.</p>
<p>To cast a value or variable, simply place the desired type in parentheses before the value or variable. This is called “type casting.”</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(<span class="type">unsigned</span> <span class="type">char</span>) ch</span><br></pre></td></tr></table></figure>
<p>The example above casts the variable <code>ch</code> to an unsigned character type.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">long</span> <span class="type">int</span> y = (<span class="type">long</span> <span class="type">int</span>) <span class="number">10</span> + <span class="number">12</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>(long int)</code> explicitly converts <code>10</code> to a <code>long int</code>. However, this cast is unnecessary because the assignment operator will automatically convert the right-hand value to the type of the left-hand variable.</p>
<h2 id="Portable-Data-Types"><a href="#Portable-Data-Types" class="headerlink" title="Portable Data Types"></a>Portable Data Types</h2><p>The width of C’s integer types (<code>short</code>, <code>int</code>, <code>long</code>) can vary across different machines, making it difficult to predict how many bytes these types will occupy. To write more portable code, programmers can control the exact width of integers. The header file <code>stdint.h</code> provides type aliases for this purpose.</p>
<ol>
<li><strong>Exact-width integer types</strong> guarantee the size of an integer:<ul>
<li><code>int8_t</code>: 8-bit signed integer.</li>
<li><code>int16_t</code>: 16-bit signed integer.</li>
<li><code>int32_t</code>: 32-bit signed integer.</li>
<li><code>int64_t</code>: 64-bit signed integer.</li>
<li><code>uint8_t</code>: 8-bit unsigned integer.</li>
<li><code>uint16_t</code>: 16-bit unsigned integer.</li>
<li><code>uint32_t</code>: 32-bit unsigned integer.</li>
<li><code>uint64_t</code>: 64-bit unsigned integer.</li>
</ul>
</li>
</ol>
<p>These are type aliases that the compiler maps to the appropriate underlying type. For example, if <code>int</code> is 32 bits on a given system, <code>int32_t</code> will map to <code>int</code>. If <code>long</code> is 32 bits, <code>int32_t</code> will map to <code>long</code>.</p>
<p>Example usage:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int32_t</span> x32 = <span class="number">45933945</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;x32 = %d\n&quot;</span>, x32);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>x32</code> is declared as an <code>int32_t</code>, ensuring a width of 32 bits.</p>
<ol>
<li><strong>Minimum-width types</strong> guarantee a minimum number of bits:<ul>
<li><code>int_least8_t</code></li>
<li><code>int_least16_t</code></li>
<li><code>int_least32_t</code></li>
<li><code>int_least64_t</code></li>
<li><code>uint_least8_t</code></li>
<li><code>uint_least16_t</code></li>
<li><code>uint_least32_t</code></li>
<li><code>uint_least64_t</code></li>
</ul>
</li>
</ol>
<p>These types ensure that the integer occupies at least the specified number of bits. For example, <code>int_least8_t</code> is guaranteed to be at least 8 bits wide.</p>
<ol>
<li><strong>Fastest minimum-width types</strong> ensure the fastest integer operations for a given width:<ul>
<li><code>int_fast8_t</code></li>
<li><code>int_fast16_t</code></li>
<li><code>int_fast32_t</code></li>
<li><code>int_fast64_t</code></li>
<li><code>uint_fast8_t</code></li>
<li><code>uint_fast16_t</code></li>
<li><code>uint_fast32_t</code></li>
<li><code>uint_fast64_t</code></li>
</ul>
</li>
</ol>
<p>These types guarantee both the width and the fastest operation speed. For instance, <code>int_fast8_t</code> represents the fastest type for storing an 8-bit signed integer. On some machines, processing 32-bit integers may be faster than processing 16-bit integers, so the fastest type might be larger than 8 bits.</p>
<ol>
<li><strong>Pointer-sized integer types</strong> store pointers as integers:<ul>
<li><code>intptr_t</code>: A signed integer capable of holding a pointer (memory address).</li>
<li><code>uintptr_t</code>: An unsigned integer capable of holding a pointer.</li>
</ul>
</li>
</ol>
<ol>
<li><strong>Maximum-width integer types</strong> store the largest possible integers:<ul>
<li><code>intmax_t</code>: Can store any valid signed integer.</li>
<li><code>uintmax_t</code>: Can store any valid unsigned integer.</li>
</ul>
</li>
</ol>
<p>These types can store larger integers than <code>long long</code> and <code>unsigned long</code>.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Operators in C Language</title>
    <url>/2024/05/04/c-language-operator/</url>
    <content><![CDATA[<p>C language includes a wide variety of operators, more than 50 in total, which can be categorized into several types.</p>
<h2 id="Arithmetic-Operators"><a href="#Arithmetic-Operators" class="headerlink" title="Arithmetic Operators"></a>Arithmetic Operators</h2><p>Arithmetic operators are used for mathematical operations. The main ones are as follows:</p>
<ul>
<li><code>+</code>: Unary plus (positive sign)  </li>
<li><code>-</code>: Unary minus (negative sign)  </li>
<li><code>+</code>: Addition (binary operator)  </li>
<li><code>-</code>: Subtraction (binary operator)  </li>
<li><code>*</code>: Multiplication  </li>
<li><code>/</code>: Division  </li>
<li><code>%</code>: Modulus (remainder of division)</li>
</ul>
<ol>
<li><strong>Unary</strong> <code>+</code> <strong>and</strong> <code>-</code>:<br>The <code>+</code> and <code>-</code> can act as unary operators, requiring only one operand. Unary <code>-</code> negates a value:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">-12</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>-</code> changes 12 to -12.</p>
<p>Unary <code>+</code> has no effect and can be omitted without any issue:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">-12</span>;</span><br><span class="line"><span class="type">int</span> y = +x;  <span class="comment">// y remains -12</span></span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Binary</strong> <code>+</code> <strong>and</strong> <code>-</code>:<br>These operators are used for addition and subtraction:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">4</span> + <span class="number">22</span>;  <span class="comment">// x is 26</span></span><br><span class="line"><span class="type">int</span> y = <span class="number">61</span> - <span class="number">23</span>;  <span class="comment">// y is 38</span></span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Multiplication</strong> <code>*</code>:<br>Used for multiplication:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> num = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%i\n&quot;</span>, num * num);  <span class="comment">// Outputs 25</span></span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Division</strong> <code>/</code>:<br>Used for division. Note that division between two integers results in an integer:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> x = <span class="number">6</span> / <span class="number">4</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, x);  <span class="comment">// Outputs 1.000000</span></span><br></pre></td></tr></table></figure>
<p>In this example, even though <code>x</code> is of type <code>float</code>, the division <code>6 / 4</code> results in <code>1.0</code>, not <code>1.5</code>. This is because integer division in C truncates the decimal part, returning only the integer portion.  </p>
<p>To get a floating-point result, at least one operand must be a float. For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> x = <span class="number">6.0</span> / <span class="number">4</span>;  <span class="comment">// Or 6 / 4.0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, x);  <span class="comment">// Outputs 1.500000</span></span><br></pre></td></tr></table></figure>
<p>Here, <code>6.0 / 4</code> performs floating-point division, yielding <code>1.5</code>.</p>
<p>Consider this example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> score = <span class="number">5</span>;</span><br><span class="line">score = (score / <span class="number">20</span>) * <span class="number">100</span>;</span><br></pre></td></tr></table></figure>
<p>You might expect <code>score</code> to be <code>25</code>, but it will actually be <code>0</code>. This is because <code>score / 20</code> performs integer division, resulting in <code>0</code>, and multiplying this by <code>100</code> also gives <code>0</code>.</p>
<p>To get the expected result, change <code>20</code> to <code>20.0</code> to use floating-point division:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">score = (score / <span class="number">20.0</span>) * <span class="number">100</span>;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Modulus</strong> <code>%</code>:<br>The <code>%</code> operator represents the modulo operation, which returns the remainder of dividing two integers. This operator can only be used with integers, not floating-point numbers. For example:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">6</span> % <span class="number">4</span>; <span class="comment">// Result is 2</span></span><br></pre></td></tr></table></figure>
<p>The rules for modulo with negative numbers dictate that the sign of the result is determined by the sign of the first operand(<strong>the sign of the result follows the first operand</strong>):</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11 % -5  // Result is 1</span><br><span class="line">-11 % -5 // Result is -1</span><br><span class="line">-11 % 5  // Result is -1</span><br></pre></td></tr></table></figure>
<p>In these examples, the sign of the result (whether it is positive or negative) matches the sign of the first operand (11 or -11).</p>
<ol>
<li><strong>Compound Assignment Operators</strong></li>
</ol>
<p>C provides shorthand forms for performing arithmetic operations on a variable and assigning the result back to the same variable. These compound assignment operators combine the assignment operator with an arithmetic operator:</p>
<ul>
<li><code>+=</code></li>
<li><code>-=</code></li>
<li><code>*=</code></li>
<li><code>/=</code></li>
<li><code>%=</code></li>
</ul>
<p>Here are some examples:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">i += <span class="number">3</span>;  <span class="comment">// Equivalent to i = i + 3</span></span><br><span class="line">i -= <span class="number">8</span>;  <span class="comment">// Equivalent to i = i - 8</span></span><br><span class="line">i *= <span class="number">9</span>;  <span class="comment">// Equivalent to i = i * 9</span></span><br><span class="line">i /= <span class="number">2</span>;  <span class="comment">// Equivalent to i = i / 2</span></span><br><span class="line">i %= <span class="number">5</span>;  <span class="comment">// Equivalent to i = i % 5</span></span><br></pre></td></tr></table></figure>
<p>These shorthand notations make code more concise and readable.</p>
<h2 id="Increment-and-Decrement-Operators"><a href="#Increment-and-Decrement-Operators" class="headerlink" title="Increment and Decrement Operators"></a>Increment and Decrement Operators</h2><p>C has two operators to increase or decrease a variable by 1:</p>
<ul>
<li><code>++</code>: Increment  operator</li>
<li><code>--</code>: Decrement operator</li>
</ul>
<p>Example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line">i++;  <span class="comment">// Equivalent to i = i + 1</span></span><br><span class="line">i--;  <span class="comment">// Equivalent to i = i - 1</span></span><br></pre></td></tr></table></figure>
<p>The position of these operators affects their behavior. If placed before a variable (<code>++i</code>), it increments first and then returns the value. If placed after (<code>i++</code>), it returns the current value before incrementing.</p>
<p>Consider this example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"></span><br><span class="line">j = (i++ + <span class="number">10</span>);</span><br><span class="line"><span class="comment">// i: 43</span></span><br><span class="line"><span class="comment">// j: 52</span></span><br><span class="line"></span><br><span class="line">j = (++i + <span class="number">10</span>);</span><br><span class="line"><span class="comment">// i: 44</span></span><br><span class="line"><span class="comment">// j: 54</span></span><br></pre></td></tr></table></figure>
<p>The position of the increment operator affects the value assigned to <code>j</code>. To avoid confusion and improve code clarity, separate the increment from the expression:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Option 1 */</span></span><br><span class="line">j = (i + <span class="number">10</span>);</span><br><span class="line">i++;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Option 2 */</span></span><br><span class="line">i++;</span><br><span class="line">j = (i + <span class="number">10</span>);</span><br></pre></td></tr></table></figure>
<p>This way, the increment operation and the value assignment are distinct, reducing potential errors and enhancing readability.</p>
<h2 id="Relational-Operators"><a href="#Relational-Operators" class="headerlink" title="Relational Operators"></a>Relational Operators</h2><p>In C, relational operators are used to compare values and are crucial for conditional statements. Here are the six primary relational operators:</p>
<ul>
<li><code>&gt;</code> : Greater than</li>
<li><code>&lt;</code> : Less than</li>
<li><code>&gt;=</code> : Greater than or equal to</li>
<li><code>&lt;=</code> : Less than or equal to</li>
<li><code>==</code> : Equal to</li>
<li><code>!=</code> : Not equal to</li>
</ul>
<p>Examples:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a == b;  <span class="comment">// Checks if a is equal to b</span></span><br><span class="line">a != b;  <span class="comment">// Checks if a is not equal to b</span></span><br><span class="line">a &lt; b;   <span class="comment">// Checks if a is less than b</span></span><br><span class="line">a &gt; b;   <span class="comment">// Checks if a is greater than b</span></span><br><span class="line">a &lt;= b;  <span class="comment">// Checks if a is less than or equal to b</span></span><br><span class="line">a &gt;= b;  <span class="comment">// Checks if a is greater than or equal to b</span></span><br></pre></td></tr></table></figure>
<p>Relational expressions return 0 (false) or 1 (true). For instance, <code>20 &gt; 12</code> returns 1, while <code>12 &gt; 20</code> returns 0.</p>
<p>These expressions are commonly used in <code>if</code> or <code>while</code> statements:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x == <span class="number">3</span>) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;x is 3.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Note: The equality operator <code>==</code> is different from the assignment operator <code>=</code>. Avoid mistakes like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x = <span class="number">3</span>) ...</span><br></pre></td></tr></table></figure>
<p>This assigns 3 to <code>x</code> and always evaluates to true. Instead, write:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">3</span> == x) ...</span><br></pre></td></tr></table></figure>
<p>This way, if you mistakenly use <code>=</code> instead of <code>==</code>, the compiler will catch the error.</p>
<p>Also, avoid chaining relational operators like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">i &lt; j &lt; k</span><br></pre></td></tr></table></figure>
<p>This does not check if <code>j</code> is between <code>i</code> and <code>k</code>. Instead, use:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">i &lt; j &amp;&amp; j &lt; k</span><br></pre></td></tr></table></figure>
<h2 id="Logical-Operators"><a href="#Logical-Operators" class="headerlink" title="Logical Operators"></a>Logical Operators</h2><p>Logical operators are used for logical comparisons and constructing more complex expressions. Here are the three main logical operators:</p>
<ul>
<li><code>!</code> : Logical NOT (reverses the truth value of a single expression).</li>
<li><code>&amp;&amp;</code> : Logical AND (true if both expressions are true, otherwise false).</li>
<li><code>||</code> : Logical OR (true if at least one of the expressions is true, otherwise false).</li>
</ul>
<p>For example with the AND operator:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">10</span> &amp;&amp; y &gt; <span class="number">20</span>)</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Doing something!\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>In this case, <code>x &lt; 10 &amp;&amp; y &gt; 20</code> is true only if both <code>x &lt; 10</code> and <code>y &gt; 20</code> are true.</p>
<p>For the NOT operator:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(x &lt; <span class="number">12</span>))</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;x is not less than 12\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>Here, <code>!</code> has higher precedence than <code>&lt;</code>, so parentheses are needed to negate <code>x &lt; 12</code>. A more straightforward way to write this would be <code>if (x &gt;= 12)</code>.</p>
<p>Logical operators treat any non-zero value as true and zero as false. For instance, <code>5 || 0</code> returns 1, and <code>5 &amp;&amp; 0</code> returns 0.</p>
<p>A key feature of logical operators is short-circuit evaluation: the left expression is evaluated first, and if it determines the result, the right expression is not evaluated. For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (number != <span class="number">0</span> &amp;&amp; <span class="number">12</span>/number == <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>If <code>number</code> is 0, <code>12/number</code> will not be evaluated, preventing a divide-by-zero error.</p>
<p>When using logical operators, be cautious of changing variables within the expressions:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> ((x++ &lt; <span class="number">10</span>) &amp;&amp; (x + y &lt; <span class="number">20</span>))</span><br></pre></td></tr></table></figure>
<p>Here, <code>x</code> is incremented in the left expression, potentially affecting the right expression in unexpected ways.</p>
<h2 id="Bitwise-Operators"><a href="#Bitwise-Operators" class="headerlink" title="Bitwise Operators"></a>Bitwise Operators</h2><p>C provides several bitwise operators to manipulate binary digits (bits). Here’s a rundown of each:</p>
<h3 id="Bitwise-NOT-Operator"><a href="#Bitwise-NOT-Operator" class="headerlink" title="Bitwise NOT Operator (~)"></a>Bitwise NOT Operator (<code>~</code>)</h3><p>The bitwise NOT operator (<code>~</code>) is a unary operator that inverts each bit of its operand, changing 0s to 1s and 1s to 0s.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Returns 01101100</span></span><br><span class="line">~<span class="number">10010011</span></span><br></pre></td></tr></table></figure>
<p>In the example above, applying <code>~</code> to each bit of <code>10010011</code> results in a new value. Note that the <code>~</code> operator does not alter the original value but returns a new one.</p>
<h3 id="Bitwise-AND-Operator-amp"><a href="#Bitwise-AND-Operator-amp" class="headerlink" title="Bitwise AND Operator (&amp;)"></a>Bitwise AND Operator (&amp;)</h3><p>The bitwise AND operator (<code>&amp;</code>) compares each bit of two operands. It returns 1 if both bits are 1; otherwise, it returns 0.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Returns 00010001</span></span><br><span class="line"><span class="number">10010011</span> &amp; <span class="number">00111101</span></span><br></pre></td></tr></table></figure>
<p>Here, <code>10010011</code> and <code>00111101</code> are compared bit by bit, resulting in a new value. The <code>&amp;</code> operator can be combined with the assignment operator <code>=</code>, written as <code>&amp;=</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> val = <span class="number">3</span>;</span><br><span class="line">val = val &amp; <span class="number">0377</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shorthand</span></span><br><span class="line">val &amp;= <span class="number">0377</span>;</span><br></pre></td></tr></table></figure>
<h3 id="Bitwise-OR-Operator"><a href="#Bitwise-OR-Operator" class="headerlink" title="Bitwise OR Operator (|)"></a>Bitwise OR Operator (<code>|</code>)</h3><p>The bitwise OR operator (<code>|</code>) compares each bit of two operands and returns 1 if at least one of the bits is 1. If both bits are 0, it returns 0.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Returns 10111111</span></span><br><span class="line"><span class="number">10010011</span> | <span class="number">00111101</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>10010011</code> and <code>00111101</code> are compared bit by bit, resulting in a new value. The <code>|</code> operator can also be combined with the assignment operator <code>=</code>, written as <code>|=</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> val = <span class="number">3</span>;</span><br><span class="line">val = val | <span class="number">0377</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shorthand</span></span><br><span class="line">val |= <span class="number">0377</span>;</span><br></pre></td></tr></table></figure>
<h3 id="Bitwise-XOR-Operator"><a href="#Bitwise-XOR-Operator" class="headerlink" title="Bitwise XOR Operator (^)"></a>Bitwise XOR Operator (<code>^</code>)</h3><p>The bitwise XOR operator (<code>^</code>) compares each bit of two operands. It returns 1 if only one of the bits is 1; if both are 0 or both are 1, it returns 0.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Returns 10101110</span></span><br><span class="line"><span class="number">10010011</span> ^ <span class="number">00111101</span></span><br></pre></td></tr></table></figure>
<p>The <code>^</code> operator can be combined with the assignment operator <code>=</code>, written as <code>^=</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> val = <span class="number">3</span>;</span><br><span class="line">val = val ^ <span class="number">0377</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shorthand</span></span><br><span class="line">val ^= <span class="number">0377</span>;</span><br></pre></td></tr></table></figure>
<h3 id="Left-Shift-Operator-lt-lt"><a href="#Left-Shift-Operator-lt-lt" class="headerlink" title="Left Shift Operator (&lt;&lt;)"></a>Left Shift Operator (<code>&lt;&lt;</code>)</h3><p>The left shift operator (<code>&lt;&lt;</code>) shifts the bits of its left operand to the left by a specified number of positions. The empty positions on the right are filled with 0s.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Returns 1000101000</span></span><br><span class="line"><span class="number">10001010</span> &lt;&lt; <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>Here, each bit in <code>10001010</code> is shifted two positions to the left. The left shift operator is equivalent to multiplying the operand by 2 raised to the specified power (e.g., shifting left by 2 positions is the same as multiplying by 4).</p>
<p>The left shift operator can be combined with the assignment operator <code>=</code>, written as <code>&lt;&lt;=</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> val = <span class="number">1</span>;</span><br><span class="line">val = val &lt;&lt; <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shorthand</span></span><br><span class="line">val &lt;&lt;= <span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<h3 id="Right-Shift-Operator-gt-gt"><a href="#Right-Shift-Operator-gt-gt" class="headerlink" title="Right Shift Operator (&gt;&gt;)"></a>Right Shift Operator (<code>&gt;&gt;</code>)</h3><p>The right shift operator (<code>&gt;&gt;</code>) shifts the bits of its left operand to the right by a specified number of positions. The bits that fall off are discarded, and the empty positions on the left are filled with 0s.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Returns 00100010</span></span><br><span class="line"><span class="number">10001010</span> &gt;&gt; <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>In this example, each bit in <code>10001010</code> is shifted two positions to the right. The two lowest bits (<code>10</code>) are discarded, and the leftmost bits are filled with 0s. Note that right shifting is best used with unsigned integers to avoid issues with how different systems handle the sign bit.</p>
<p>The right shift operator is equivalent to dividing the operand by 2 raised to the specified power (e.g., shifting right by 2 positions is the same as dividing by 4).</p>
<p>The right shift operator can be combined with the assignment operator <code>=</code>, written as <code>&gt;&gt;=</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> val = <span class="number">1</span>;</span><br><span class="line">val = val &gt;&gt; <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shorthand</span></span><br><span class="line">val &gt;&gt;= <span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<h2 id="Comma-Operator"><a href="#Comma-Operator" class="headerlink" title="Comma Operator"></a>Comma Operator</h2><p>The comma operator allows multiple expressions to be written in a single statement, executing them from left to right.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">x = <span class="number">10</span>, y = <span class="number">20</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, the comma operator lets you include both <code>x = 10</code> and <code>y = 20</code> in one statement.</p>
<p>The comma operator returns the value of the last expression, which is the value of the whole statement.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x;</span><br><span class="line">x = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<p>Here, the comma operator inside the parentheses results in <code>x</code> being assigned the value <code>3</code>, the last expression.</p>
<h2 id="Operator-Precedence"><a href="#Operator-Precedence" class="headerlink" title="Operator Precedence"></a>Operator Precedence</h2><p>Operator precedence determines the order of operations in expressions with multiple operators. Different operators have different precedence levels.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> + <span class="number">4</span> * <span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<p>In this expression, multiplication (<code>*</code>) has higher precedence than addition (<code>+</code>), so <code>4 * 5</code> is calculated first.</p>
<p>If operators have the same precedence, their associativity decides the order. Most operators are left-associative (evaluated from left to right), while a few, like the assignment operator (<code>=</code>), are right-associative (evaluated from right to left).</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">5</span> * <span class="number">6</span> / <span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<p>Since both <code>*</code> and <code>/</code> have the same precedence and are left-associative, the expression is evaluated as <code>5 * 6</code> first, then <code>30 / 2</code>.</p>
<p>The precedence of operators is complex. Here’s a simplified list from highest to lowest:</p>
<ol>
<li>Parentheses <code>()</code></li>
<li>Increment (<code>++</code>), Decrement (<code>--</code>)</li>
<li>Unary operators (<code>+</code>, <code>-</code>)</li>
<li>Multiplication (<code>*</code>), Division (<code>/</code>)</li>
<li>Addition (<code>+</code>), Subtraction (<code>-</code>)</li>
<li>Relational operators (<code>&lt;</code>, <code>&gt;</code>, etc.)</li>
<li>Assignment operators (<code>=</code>)</li>
</ol>
<p>Using parentheses can override default precedence and improve code clarity:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = (<span class="number">3</span> + <span class="number">4</span>) * <span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<p>In this case, the parentheses ensure that addition is performed before multiplication.</p>
<p>Remembering all operator precedences is unnecessary. Use parentheses to clarify and ensure your code behaves as expected.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Flow Control in C Language</title>
    <url>/2024/05/05/c-language-flow-control/</url>
    <content><![CDATA[<p>In C programming, execution is sequential, meaning statements are executed one after the other. To control the flow of execution, developers use flow control structures, primarily conditional and loop statements.</p>
<h2 id="if-Statement"><a href="#if-Statement" class="headerlink" title="if Statement"></a><code>if</code> Statement</h2><p>The <code>if</code> statement is used for conditional execution; it executes a specified statement if the condition is true.</p>
<p>Syntax:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (expression) statement</span><br></pre></td></tr></table></figure>
<p>Here, <code>expression</code> must be true (non-zero) for <code>statement</code> to execute. The condition inside the parentheses must be enclosed in parentheses, or it will result in an error. The <code>statement</code> can be a single statement or a block enclosed in curly braces. </p>
<p>Example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x == <span class="number">10</span>) </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;x is 10&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>In this case, if <code>x</code> equals 10, the message “x is 10” will be printed. For a single statement, it’s common to place it on a new line.</p>
<p>Example with newline:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x == <span class="number">10</span>)</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;x is 10\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>If there are multiple statements, they should be enclosed in curly braces.</p>
<p>Example with multiple statements:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (line_num == MAX_LINES) &#123;</span><br><span class="line">  line_num = <span class="number">0</span>;</span><br><span class="line">  page_num++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The <code>if</code> statement can also have an <code>else</code> branch, which executes if the condition is false.</p>
<p>Syntax:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (expression) statement</span><br><span class="line"><span class="keyword">else</span> statement</span><br></pre></td></tr></table></figure>
<p>Example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (i &gt; j)</span><br><span class="line">  max = i;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  max = j;</span><br></pre></td></tr></table></figure>
<p>If the <code>else</code> statement has multiple lines, enclose them in curly braces.</p>
<p>The <code>else</code> clause can be used with another <code>if</code> to create a chain of conditions.</p>
<p>Syntax:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (expression)</span><br><span class="line">  statement</span><br><span class="line"><span class="keyword">else</span> <span class="title function_">if</span> <span class="params">(expression)</span></span><br><span class="line">  statement</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span> <span class="title function_">if</span> <span class="params">(expression)</span></span><br><span class="line">  statement</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  statement</span><br></pre></td></tr></table></figure>
<p>In complex cases, remember that <code>else</code> matches the nearest preceding <code>if</code>.</p>
<p>Example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (number &gt; <span class="number">6</span>)</span><br><span class="line">  <span class="keyword">if</span> (number &lt; <span class="number">12</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The number is more than 6, less than 12.\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;It is a wrong number.\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>In this example, the <code>else</code> matches the closest <code>if</code> (i.e., <code>number &lt; 12</code>). Thus, if <code>number</code> is 6, the <code>else</code> part does not execute. To avoid confusion and improve readability, use curly braces to clearly define the scope of <code>else</code>.</p>
<p>Example with curly braces:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (number &gt; <span class="number">6</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (number &lt; <span class="number">12</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The number is more than 6, less than 12.\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;It is a wrong number.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This makes it clear that the <code>else</code> belongs to the outer <code>if</code>.</p>
<h2 id="Ternary-Operator"><a href="#Ternary-Operator" class="headerlink" title="Ternary Operator (?:)"></a>Ternary Operator (<code>?:</code>)</h2><p>In C language, the ternary operator <code>?:</code> is a shorthand for an <code>if...else</code> statement:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&lt;expression1&gt; ? &lt;expression2&gt; : &lt;expression3&gt;</span><br></pre></td></tr></table></figure>
<p>This means if <code>expression1</code> is true (non-zero), <code>expression2</code> is executed; otherwise, <code>expression3</code> is executed.</p>
<p>For example, to return the larger of two values:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(i &gt; j) ? i : j;</span><br></pre></td></tr></table></figure>
<p>This is equivalent to:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (i &gt; j)</span><br><span class="line">  <span class="keyword">return</span> i;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">return</span> j;</span><br></pre></td></tr></table></figure>
<h2 id="switch-Statement"><a href="#switch-Statement" class="headerlink" title="switch Statement"></a><code>switch</code> Statement</h2><p>The <code>switch</code> statement is a specialized form of <code>if...else</code> used when you have multiple possible outcomes. It replaces multiple <code>else if</code> statements with a more readable format:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (expression) &#123;</span><br><span class="line">  <span class="keyword">case</span> value1: statement;</span><br><span class="line">  <span class="keyword">case</span> value2: statement;</span><br><span class="line">  <span class="keyword">default</span>: statement;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The code executes the <code>case</code> block matching the value of <code>expression</code>. If no match is found, the <code>default</code> block is executed.</p>
<p>For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (grade) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;False&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;True&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Illegal&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, depending on the value of <code>grade</code>, different <code>case</code> blocks are executed. If <code>grade</code> is 0, it executes the <code>case 0</code> block; if 1, it executes the <code>case 1</code> block; otherwise, it executes the <code>default</code> block. The <code>default</code> block handles cases where no <code>case</code> matches.</p>
<p>Each <code>case</code> block should end with a <code>break</code> statement to prevent fall-through to the next case. If <code>break</code> is omitted, the next <code>case</code> or <code>default</code> block will be executed as well.</p>
<p>For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (grade) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;False&quot;</span>);</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;True&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Illegal&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, missing the <code>break</code> after <code>case 0</code> causes the <code>case 1</code> block to execute as well.</p>
<p>You can group multiple <code>case</code> labels to share the same statement:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (grade) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;True&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Illegal&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this case, both <code>case 0</code> and <code>case 1</code> execute the same statement. Note that <code>case</code> labels do not need curly braces, which is why <code>break</code> is necessary to avoid falling through.</p>
<p>The <code>default</code> block is optional and should be placed at the end of the <code>switch</code> statement. If omitted, the <code>switch</code> will exit without executing any code if no cases match.</p>
<h2 id="while-Statement"><a href="#while-Statement" class="headerlink" title="while Statement"></a><code>while</code> Statement</h2><p>The <code>while</code> loop repeatedly executes a block of code as long as its condition is true.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (expression)</span><br><span class="line">  statement;</span><br></pre></td></tr></table></figure>
<p>In this code, if <code>expression</code> is non-zero (true), <code>statement</code> is executed, and <code>expression</code> is checked again. If <code>expression</code> becomes zero (false), the loop exits.</p>
<p>Example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (i &lt; n)</span><br><span class="line">  i = i + <span class="number">2</span>;</span><br></pre></td></tr></table></figure>
<p>In the example above, <code>i</code> will keep increasing by 2 as long as <code>i</code> is less than <code>n</code>.</p>
<p>To execute multiple statements in the loop, use braces:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (expression) &#123;</span><br><span class="line">  statement1;</span><br><span class="line">  statement2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;i is now %d!\n&quot;</span>, i);</span><br><span class="line">  i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;All done!\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>In this example, the loop runs 10 times, incrementing <code>i</code> by 1 each time until <code>i</code> equals 10.</p>
<p>An infinite loop can be created like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Use <code>break</code> to exit an infinite loop.</p>
<h2 id="do-while-Structure"><a href="#do-while-Structure" class="headerlink" title="do...while Structure"></a><code>do...while</code> Structure</h2><p>The <code>do...while</code> loop executes its body once before checking the condition.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">  statement;</span><br><span class="line"><span class="keyword">while</span> (expression);</span><br></pre></td></tr></table></figure>
<p>Here, <code>statement</code> is executed at least once regardless of <code>expression</code>. After the statement executes, <code>expression</code> is checked to determine if the loop should continue.</p>
<p>Example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">i = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;i is %d\n&quot;</span>, i);</span><br><span class="line">  i++;</span><br><span class="line">&#125; <span class="keyword">while</span> (i &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;All done!\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>Even though <code>i</code> is not less than 10 initially, the loop body executes once.</p>
<h2 id="for-Statement"><a href="#for-Statement" class="headerlink" title="for Statement"></a><code>for</code> Statement</h2><p>The <code>for</code> loop is used for precise control over the number of iterations.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (initialization; condition; action)</span><br><span class="line">  statement;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>initialization</code>: Sets up the loop variable (executed once).</li>
<li><code>condition</code>: Checked before each iteration (loop continues if true).</li>
<li><code>action</code>: Updates the loop variable after each iteration.</li>
</ul>
<p>Example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">10</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;i is %d\n&quot;</span>, i);</span><br></pre></td></tr></table></figure>
<p>Here, <code>i</code> is initialized to 10, decremented each time, and the loop runs while <code>i</code> is greater than 0.</p>
<p>Multiple statements can be used in any of the three parts of the <code>for</code> loop, separated by commas:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">999</span>; i &lt; <span class="number">10</span>; i++, j--) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>, i, j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>If all three parts are omitted, the loop becomes infinite:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (;;) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;This line will loop indefinitely.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="break-Statement"><a href="#break-Statement" class="headerlink" title="break Statement"></a><code>break</code> Statement</h2><p>The <code>break</code> statement has two primary uses: one is with <code>switch</code> statements to exit a particular case, and the other is to exit a loop prematurely.</p>
<p><strong>Example with Nested Loops:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>, i, j);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the <code>break</code> statement exits the inner loop, causing the program to proceed to the next iteration of the outer loop.</p>
<p><strong>Example with </strong><code>while</code><strong> Loop:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> ((ch = getchar()) != EOF) &#123;</span><br><span class="line">  <span class="keyword">if</span> (ch == <span class="string">&#x27;\n&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">  <span class="built_in">putchar</span>(ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, the <code>break</code> statement exits the <code>while</code> loop as soon as a newline character is encountered, so it stops processing further input.</p>
<p><strong>Note:</strong> The <code>break</code> statement can only exit from loops and <code>switch</code> statements, not from <code>if</code> statements.</p>
<p><strong>Invalid Use Example:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">1</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (n &gt; <span class="number">2</span>) <span class="keyword">break</span>; <span class="comment">// Invalid</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;hello\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the <code>break</code> statement is ineffective because it cannot exit from an <code>if</code> statement.</p>
<h2 id="continue-Statement"><a href="#continue-Statement" class="headerlink" title="continue Statement"></a><code>continue</code> Statement</h2><p>The <code>continue</code> statement is used to skip the rest of the current loop iteration and proceed to the next iteration.</p>
<p><strong>Example with Nested Loops:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>, i, j);</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this case, the <code>continue</code> statement does not change the behavior of the loop because it simply moves to the next iteration of the inner loop, which would happen even without it.</p>
<p><strong>Example with </strong><code>while</code><strong> Loop:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (ch == <span class="string">&#x27;\t&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">  <span class="built_in">putchar</span>(ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, if a tab character (<code>\t</code>) is encountered, the <code>continue</code> statement skips printing it and proceeds to the next character.</p>
<h2 id="goto-Statement"><a href="#goto-Statement" class="headerlink" title="goto Statement"></a><code>goto</code> Statement</h2><p>The <code>goto</code> statement allows jumping to a specified label within the same function. Its use is generally discouraged as it can make code harder to read and maintain.</p>
<p><strong>Example with Label:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> ch;</span><br><span class="line"></span><br><span class="line">top: ch = getchar();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;q&#x27;</span>)</span><br><span class="line">  <span class="keyword">goto</span> top;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>top</code> is a label, and the <code>goto</code> statement transfers control to that label. This causes the program to loop back and read characters until ‘q’ is encountered.</p>
<p><strong>Example of Infinite Loop:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">infinite_loop:</span><br><span class="line">  print(<span class="string">&quot;Hello, world!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">goto</span> infinite_loop;</span><br></pre></td></tr></table></figure>
<p>This code results in an infinite loop because the <code>goto</code> statement continuously jumps back to the <code>infinite_loop</code> label.</p>
<p><strong>Using </strong><code>goto</code><strong> to Exit Nested Loops:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(...) &#123;</span><br><span class="line">  <span class="keyword">for</span> (...) &#123;</span><br><span class="line">    <span class="keyword">while</span> (...) &#123;</span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (some_error_condition)</span><br><span class="line">          <span class="keyword">goto</span> bail;    </span><br><span class="line">      &#125; <span class="keyword">while</span>(...);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bail:</span><br><span class="line"><span class="comment">// ... ...</span></span><br></pre></td></tr></table></figure>
<p>In this case, <code>goto</code> is used to break out of several nested loops quickly when an error condition is met.</p>
<p><strong>Using </strong><code>goto</code><strong> for Early Exit:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (do_something() == ERR)</span><br><span class="line">  <span class="keyword">goto</span> error;</span><br><span class="line"><span class="keyword">if</span> (do_something2() == ERR)</span><br><span class="line">  <span class="keyword">goto</span> error;</span><br><span class="line"><span class="keyword">if</span> (do_something3() == ERR)</span><br><span class="line">  <span class="keyword">goto</span> error;</span><br><span class="line"><span class="keyword">if</span> (do_something4() == ERR)</span><br><span class="line">  <span class="keyword">goto</span> error;</span><br></pre></td></tr></table></figure>
<p>Here, <code>goto</code> allows the program to skip the remaining checks and jump to the <code>error</code> label if any of the conditions fail.</p>
<p><strong>Note:</strong> <code>goto</code> can only be used within the same function; it cannot jump to a label in a different function.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Pointer in C Language</title>
    <url>/2024/05/07/c-language-pointer/</url>
    <content><![CDATA[<p>Pointers are one of the most important and challenging concepts in the C programming language.</p>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>What is a pointer? In essence, it’s a value representing a memory address, acting as a signpost to a specific location in memory.</p>
<p>The asterisk <code>*</code> represents a pointer and is usually placed after the type keyword to indicate what type of value the pointer is referencing. For example, <code>char*</code> is a pointer to a character, and <code>float*</code> is a pointer to a float.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>* intPtr;</span><br></pre></td></tr></table></figure>
<p>The above example declares a variable <code>intPtr</code>, which is a pointer that points to a memory address storing an integer.</p>
<p>The asterisk <code>*</code> can be placed in various positions between the variable name and the type, and all are valid, like:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>   *intPtr;</span><br><span class="line"><span class="type">int</span> * intPtr;</span><br><span class="line"><span class="type">int</span>*  intPtr;</span><br></pre></td></tr></table></figure>
<p>This book follows the convention of placing the asterisk immediately after the type keyword (i.e., <code>int* intPtr;</code>) to emphasize that the pointer variable is just a regular variable, except its value is a memory address.</p>
<p>However, if you declare two pointer variables on the same line, be mindful of this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Correct</span></span><br><span class="line"><span class="type">int</span> *foo, *bar;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Incorrect</span></span><br><span class="line"><span class="type">int</span>* foo, bar;</span><br></pre></td></tr></table></figure>
<p>In the incorrect example, <code>foo</code> is a pointer to an integer, but <code>bar</code> is just an integer. The <code>*</code> only applies to the first variable.</p>
<p>You can also have pointers to pointers, indicated by two asterisks <code>**</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>** foo;</span><br></pre></td></tr></table></figure>
<p>This example declares <code>foo</code> as a pointer to another pointer, where the second pointer points to an integer.</p>
<h2 id="Dereferencing-Operator"><a href="#Dereferencing-Operator" class="headerlink" title="Dereferencing Operator *"></a>Dereferencing Operator <code>*</code></h2><p>The <code>*</code> symbol, besides indicating a pointer, also acts as an operator to retrieve the value at the memory address the pointer references.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">increment</span><span class="params">(<span class="type">int</span>* p)</span> &#123;</span><br><span class="line">  *p = *p + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the function <code>increment()</code> takes a pointer <code>p</code> as its parameter. Inside the function, <code>*p</code> refers to the value that <code>p</code> points to. By assigning a new value to <code>*p</code>, you’re modifying the value at the memory address <code>p</code> is pointing to.</p>
<p>The function adds 1 to the input value, and there’s no need for a return statement. This is because the function operates directly on the memory address passed in, so any changes affect the original value outside the function. This is a common practice in C for passing values through pointers.</p>
<p>Passing the address of a variable instead of the variable itself also has the advantage of saving memory and time, especially when dealing with large variables. Copying large variables would be inefficient, whereas passing a pointer is more effective.</p>
<h2 id="Address-of-Operator-amp"><a href="#Address-of-Operator-amp" class="headerlink" title="Address-of Operator &amp;"></a>Address-of Operator <code>&amp;</code></h2><p>The <code>&amp;</code> operator retrieves the memory address of a variable.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x&#x27;s address is %p\n&quot;</span>, &amp;x);</span><br></pre></td></tr></table></figure>
<p>In this example, <code>x</code> is an integer variable, and <code>&amp;x</code> is the memory address of <code>x</code>. The <code>%p</code> format specifier in <code>printf()</code> outputs the memory address.</p>
<p>The function to increment a value could be used like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">increment</span><span class="params">(<span class="type">int</span>* p)</span> &#123;</span><br><span class="line">  *p = *p + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line">increment(&amp;x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x); <span class="comment">// Output: 2</span></span><br></pre></td></tr></table></figure>
<p>Here, after calling <code>increment()</code>, the value of <code>x</code> increases by 1 because the function received the memory address of <code>x</code> (<code>&amp;x</code>).</p>
<p>The <code>&amp;</code> and <code>*</code> operators are inverses of each other, so the following expression is always valid:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i == *(&amp;i)) <span class="comment">// True</span></span><br></pre></td></tr></table></figure>
<h2 id="Pointer-Initialization"><a href="#Pointer-Initialization" class="headerlink" title="Pointer Initialization"></a>Pointer Initialization</h2><p>When you declare a pointer variable, the compiler allocates memory for the pointer itself, but its value is initially random, meaning the pointer points to a random memory address. You should never read or write to this random address, as it could lead to severe consequences.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>* p;</span><br><span class="line">*p = <span class="number">1</span>; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>The above code is incorrect because <code>p</code> points to a random address. Writing <code>1</code> to that address can cause unpredictable results.</p>
<p>The correct approach is to assign a valid memory address to the pointer before reading or writing to it. This process is known as pointer initialization.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>* p;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">p = &amp;i;</span><br><span class="line">*p = <span class="number">13</span>;</span><br></pre></td></tr></table></figure>
<p>Here, <code>p</code> is a pointer variable. After declaration, <code>p</code> points to a random memory address. To fix this, we declare an integer <code>i</code> and assign <code>p</code> to point to <code>i</code>‘s memory address (<code>p = &amp;i;</code>). After initialization, we can safely assign a value to the memory address <code>p</code> points to (<code>*p = 13;</code>).</p>
<p>To prevent the use of uninitialized pointers, it’s a good practice to set them to <code>NULL</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>* p = <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure>
<p><code>NULL</code> is a constant in C that represents the memory address <code>0</code>, which is inaccessible. Attempting to read or write to this address will raise an error.</p>
<h2 id="Pointer-Arithmetic"><a href="#Pointer-Arithmetic" class="headerlink" title="Pointer Arithmetic"></a>Pointer Arithmetic</h2><p>Pointers are essentially unsigned integers representing memory addresses, but pointer arithmetic follows its own set of rules.</p>
<ol>
<li><strong>Addition/Subtraction with Integers</strong></li>
</ol>
<p>When you add or subtract an integer to a pointer, it moves the pointer by a certain number of memory units.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">short</span>* j;</span><br><span class="line">j = (<span class="type">short</span>*)<span class="number">0x1234</span>;</span><br><span class="line">j = j + <span class="number">1</span>; <span class="comment">// Now points to 0x1236</span></span><br></pre></td></tr></table></figure>
<p>Here, <code>j</code> is a pointer to a memory address <code>0x1234</code>. Since <code>j</code> is of type <code>short*</code>, adding <code>1</code> moves the pointer by two bytes (the size of a <code>short</code>), resulting in <code>0x1236</code>. Similarly, subtracting <code>1</code> would give <code>0x1232</code>.</p>
<p>The amount by which the pointer moves depends on the size of the data type it points to.</p>
<ol>
<li><strong>Pointer Addition</strong></li>
</ol>
<p>Pointers cannot be added together. This is illegal in C.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">short</span>* j;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span>* k;</span><br><span class="line">x = j + k; <span class="comment">// Illegal</span></span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Pointer Subtraction</strong></li>
</ol>
<p>You can subtract pointers of the same type. This operation returns the number of data units between them, not the difference in memory addresses.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">short</span>* j1;</span><br><span class="line"><span class="type">short</span>* j2;</span><br><span class="line"></span><br><span class="line">j1 = (<span class="type">short</span>*)<span class="number">0x1234</span>;</span><br><span class="line">j2 = (<span class="type">short</span>*)<span class="number">0x1236</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">ptrdiff_t</span> dist = j2 - j1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%td\n&quot;</span>, dist); <span class="comment">// Output: 1</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>j1</code> and <code>j2</code> are <code>short</code> pointers, and the difference between their memory addresses is <code>1</code>, because the two pointers are one <code>short</code> value apart (2 bytes).</p>
<ol>
<li><strong>Pointer Comparison</strong></li>
</ol>
<p>You can compare pointers to see which memory address is greater. This comparison returns <code>1</code> (true) or <code>0</code> (false).</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>String in C Language</title>
    <url>/2024/05/10/c-language-string/</url>
    <content><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>C doesn’t have a dedicated string type. Instead, strings are treated as arrays of characters (char arrays). For example, the string “Hello” is processed as the array {‘H’, ‘e’, ‘l’, ‘l’, ‘o’}.</p>
<p>The compiler allocates a continuous block of memory for the array, with all characters stored in adjacent memory units. C automatically adds a null byte (‘\0’) at the end of the string to indicate its termination. This null character is different from the character ‘0’. The null character has an ASCII code of 0 (binary 00000000), while ‘0’ has an ASCII code of 48 (binary 00110000). So, the string “Hello” is actually stored as {‘H’, ‘e’, ‘l’, ‘l’, ‘o’, ‘\0’}.</p>
<p>Every string ends with the null character ‘\0’. This allows C to read strings from memory without knowing their length in advance - it simply reads characters until it encounters ‘\0’.</p>
<p>For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> localString[<span class="number">10</span>];</span><br></pre></td></tr></table></figure>
<p>This declares a character array with 10 elements, which can be used as a string. Since one position must be reserved for ‘\0’, it can hold a string of up to 9 characters.</p>
<p>Writing strings as arrays can be cumbersome. C provides a shorthand: characters within double quotes are automatically treated as character arrays.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;\0&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// is equivalent to</span></span><br><span class="line"><span class="string">&quot;Hello&quot;</span></span><br></pre></td></tr></table></figure>
<p>Both representations are equivalent and stored the same way internally. With double quotes, you don’t need to add ‘\0’ yourself - C does it automatically.</p>
<p>Note: Double quotes denote strings, while single quotes denote characters. They’re not interchangeable. Putting “Hello” in single quotes will cause a compiler error.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Error</span></span><br><span class="line"><span class="string">&#x27;Hello&#x27;</span></span><br></pre></td></tr></table></figure>
<p>Even a single character in double quotes (like “a”) is treated as a string (stored as 2 bytes), not as a character ‘a’ (stored as 1 byte).</p>
<p>If a string contains double quotes, they need to be escaped with a backslash:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;She replied, \&quot;It does.\&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>Backslashes can also represent other special characters, like newlines (\n) or tabs (\t):</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hello, world!\n&quot;</span></span><br></pre></td></tr></table></figure>
<p>For long strings, you can use a backslash (<code>\</code>) at the end of a line to split it across multiple lines:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;hello \</span></span><br><span class="line"><span class="string">world&quot;</span></span><br></pre></td></tr></table></figure>
<p>This approach has a drawback: the second line must start at the leftmost column, or any indentation will be included in the string. To solve this, C allows concatenation of string literals if they’re adjacent or separated only by whitespace:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> greeting[<span class="number">50</span>] = <span class="string">&quot;Hello, &quot;</span><span class="string">&quot;how are you &quot;</span><span class="string">&quot;today!&quot;</span>;</span><br><span class="line"><span class="comment">// equivalent to</span></span><br><span class="line"><span class="type">char</span> greeting[<span class="number">50</span>] = <span class="string">&quot;Hello, how are you today!&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>This syntax also supports multi-line string concatenation:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> greeting[<span class="number">50</span>] = <span class="string">&quot;Hello, &quot;</span></span><br><span class="line">  <span class="string">&quot;how are you &quot;</span></span><br><span class="line">  <span class="string">&quot;today!&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>To print strings, use the %s format specifier with printf():</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="String-Variable-Declaration"><a href="#String-Variable-Declaration" class="headerlink" title="String Variable Declaration"></a>String Variable Declaration</h2><p>String variables can be declared either as character arrays or as pointers to character arrays:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Method 1</span></span><br><span class="line"><span class="type">char</span> s[<span class="number">14</span>] = <span class="string">&quot;Hello, world!&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Method 2</span></span><br><span class="line"><span class="type">char</span>* s = <span class="string">&quot;Hello, world!&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>Both methods declare a string variable <code>s</code>. With the first method, you can let the compiler calculate the array length:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s[] = <span class="string">&quot;Hello, world!&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>The compiler will set the length of array s to 14, exactly fitting the string.</p>
<p>The array length can be larger than the actual string length:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s[<span class="number">50</span>] = <span class="string">&quot;hello&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>Here, s has a length of 50, but “hello” only uses 6 positions (including ‘\0’). The remaining 44 positions are initialized to ‘\0’.</p>
<p>However, the array length cannot be smaller than the actual string length:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s[<span class="number">5</span>] = <span class="string">&quot;hello&quot;</span>; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>This will cause a compiler error because the array is too small to hold the string and its null terminator.</p>
<p>While character pointers and character arrays are mostly equivalent for declaring string variables, there are two key differences:</p>
<ol>
<li>Strings declared as pointers are treated as constants and cannot be modified:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s = <span class="string">&quot;Hello, world!&quot;</span>;</span><br><span class="line">s[<span class="number">0</span>] = <span class="string">&#x27;z&#x27;</span>; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>This will lead to unpredictable results or errors at runtime.</p>
<p>With array declaration, you can modify any array element:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s[] = <span class="string">&quot;Hello, world!&quot;</span>;</span><br><span class="line">s[<span class="number">0</span>] = <span class="string">&#x27;z&#x27;</span>; <span class="comment">// OK</span></span><br></pre></td></tr></table></figure>
<p>This difference arises because string literals are stored in the constant memory area, which users can’t modify. When declared as a pointer, the variable stores an address pointing to this constant area. But when declared as an array, the compiler allocates separate memory and copies the characters there, allowing modification.</p>
<p>To emphasize that a string pointer is read-only, you can use the <code>const</code> keyword:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span>* s = <span class="string">&quot;Hello, world!&quot;</span>;</span><br></pre></td></tr></table></figure>
<ol>
<li>Pointer variables can be reassigned to other strings:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">s = <span class="string">&quot;world&quot;</span>; <span class="comment">// OK</span></span><br></pre></td></tr></table></figure>
<p>But array variables cannot point to another string:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s[] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">s = <span class="string">&quot;world&quot;</span>; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>The array name always points to its initial memory address and can’t be changed.</p>
<p>For the same reason, you can’t directly assign a string to a character array after declaration:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s[<span class="number">10</span>];</span><br><span class="line">s = <span class="string">&quot;abc&quot;</span>; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>To assign a new string to an array, use the <code>strcpy()</code> function:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(s, <span class="string">&quot;abc&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>This copies the string “abc” into s without changing <code>s</code>‘s address.</p>
<h2 id="strlen"><a href="#strlen" class="headerlink" title="strlen()"></a><code>strlen()</code></h2><p>The <code>strlen()</code> function returns the byte length of a string, excluding the null terminator (<code>\0</code>). Its prototype is as follows:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// string.h</span></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">strlen</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* s)</span>;</span><br></pre></td></tr></table></figure>
<p>The parameter is a string variable, and it returns a value of type <code>size_t</code>, which is an unsigned integer. In most cases, it can be treated as an <code>int</code>, unless dealing with extremely long strings. Here’s an example of how to use it:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* str = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(str); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure>
<p>The prototype for <code>strlen()</code> is defined in the standard library header file <code>string.h</code>, so you need to include it:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">char</span>* s = <span class="string">&quot;Hello, world!&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The string is %zd characters long.\n&quot;</span>, <span class="built_in">strlen</span>(s));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Note that string length (<code>strlen()</code>) and the size of the string variable (<code>sizeof()</code>) are two different concepts.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s[<span class="number">50</span>] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(s));  <span class="comment">// 5</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="keyword">sizeof</span>(s));  <span class="comment">// 50</span></span><br></pre></td></tr></table></figure>
<p>In this example, the string length is 5, while the size of the string variable is 50 bytes.</p>
<p>If you choose not to use <code>strlen()</code>, you can manually calculate the string length by checking for the null terminator:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">my_strlen</span><span class="params">(<span class="type">char</span> *s)</span> &#123;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (s[count] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        count++;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="strcpy"><a href="#strcpy" class="headerlink" title="strcpy()"></a><code>strcpy()</code></h2><p>In C, to copy strings, you cannot use the assignment operator (<code>=</code>) directly with character arrays. For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> str1[<span class="number">10</span>];</span><br><span class="line"><span class="type">char</span> str2[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;abc&quot;</span>; <span class="comment">// Error</span></span><br><span class="line">str2 = str1;  <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>Both attempts result in errors because array variable names represent fixed memory addresses that cannot be reassigned.</p>
<p>For character pointers, using the assignment operator (<code>=</code>) merely copies the address:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s1;</span><br><span class="line"><span class="type">char</span>* s2;</span><br><span class="line"></span><br><span class="line">s1 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">s2 = s1;</span><br></pre></td></tr></table></figure>
<p>Here, <code>s1</code> and <code>s2</code> point to the same string, rather than copying the string content.</p>
<p>C provides the <code>strcpy()</code> function to copy the content of one string to another, effectively functioning as a string assignment. The prototype is found in the <code>string.h</code> header file:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strcpy</span>(<span class="type">char</span> dest[], <span class="type">const</span> <span class="type">char</span> source[]);</span><br></pre></td></tr></table></figure>
<p>The first parameter is the destination string array, and the second is the source. Ensure that the destination is large enough to hold the source; otherwise, this can lead to buffer overflow, causing unpredictable behavior. The <code>const</code> qualifier indicates that the source string will not be modified.</p>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="type">char</span> s[] = <span class="string">&quot;Hello, world!&quot;</span>;</span><br><span class="line">  <span class="type">char</span> t[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">strcpy</span>(t, s);</span><br><span class="line"></span><br><span class="line">  t[<span class="number">0</span>] = <span class="string">&#x27;z&#x27;</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);  <span class="comment">// &quot;Hello, world!&quot;</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, t);  <span class="comment">// &quot;zello, world!&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the contents of <code>s</code> are copied to <code>t</code>, resulting in two separate strings. Modifying one does not affect the other. Note that the uninitialized positions in <code>t</code> may contain random values.</p>
<p>You can also use <code>strcpy()</code> to assign a string to a character array:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> str[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(str, <span class="string">&quot;abcd&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>The return value of <code>strcpy()</code> is a pointer to the first character of the destination string.</p>
<p>Another example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s1 = <span class="string">&quot;beast&quot;</span>;</span><br><span class="line"><span class="type">char</span> s2[<span class="number">40</span>] = <span class="string">&quot;Be the best that you can be.&quot;</span>;</span><br><span class="line"><span class="type">char</span>* ps;</span><br><span class="line"></span><br><span class="line">ps = <span class="built_in">strcpy</span>(s2 + <span class="number">7</span>, s1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(s2); <span class="comment">// Be the beast</span></span><br><span class="line"><span class="built_in">puts</span>(ps); <span class="comment">// beast</span></span><br></pre></td></tr></table></figure>
<p>This code copies “beast” starting from the 7th position in <code>s2</code>, altering the latter’s content.</p>
<p><code>strcpy()</code> can also be nested to assign multiple strings:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strcpy</span>(str1, <span class="built_in">strcpy</span>(str2, <span class="string">&quot;abcd&quot;</span>));</span><br></pre></td></tr></table></figure>
<p>However, it’s safer to declare the first parameter as an initialized array, not as an uninitialized pointer:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* str;</span><br><span class="line"><span class="built_in">strcpy</span>(str, <span class="string">&quot;hello world&quot;</span>); <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>This is problematic because <code>str</code> points to a random location.</p>
<p>If you prefer to implement your own string copy function, you can do so like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* <span class="title function_">strcpy</span><span class="params">(<span class="type">char</span>* dest, <span class="type">const</span> <span class="type">char</span>* source)</span> &#123;</span><br><span class="line">  <span class="type">char</span>* ptr = dest;</span><br><span class="line">  <span class="keyword">while</span> (*dest++ = *source++);</span><br><span class="line">  <span class="keyword">return</span> ptr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The crucial line is <code>while (*dest++ = *source++);</code>, which copies each character until it reaches the null terminator (<code>\0</code>).</p>
<p>Finally, note that <code>strcpy()</code> poses security risks, as it does not check if the destination has enough space. If there’s a chance of overflow, consider using <code>strncpy()</code> instead.</p>
<h2 id="strncpy"><a href="#strncpy" class="headerlink" title="strncpy()"></a><code>strncpy()</code></h2><p>The usage of <code>strncpy()</code> is similar to that of <code>strcpy()</code>, with the addition of a third parameter that specifies the maximum number of characters to copy. This helps prevent buffer overflow in the destination string.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* <span class="title function_">strncpy</span><span class="params">(</span></span><br><span class="line"><span class="params">  <span class="type">char</span>* dest, </span></span><br><span class="line"><span class="params">  <span class="type">const</span> <span class="type">char</span>* src, </span></span><br><span class="line"><span class="params">  <span class="type">size_t</span> n</span></span><br><span class="line"><span class="params">)</span>;</span><br></pre></td></tr></table></figure>
<p>In the prototype above, the third parameter <code>n</code> defines the maximum number of characters to copy. If the source string has more characters than <code>n</code>, the copying will stop, and the destination string will not have a null terminator (<code>\0</code>). This is an important consideration. If the source string has fewer characters than <code>n</code>, the behavior of <code>strncpy()</code> is identical to that of <code>strcpy()</code>.</p>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strncpy</span>(str1, str2, <span class="keyword">sizeof</span>(str1) - <span class="number">1</span>);</span><br><span class="line">str1[<span class="keyword">sizeof</span>(str1) - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>str2</code> is copied to <code>str1</code>, but only up to <code>sizeof(str1) - 1</code> characters. The last position in <code>str1</code> is reserved for the null terminator. Since <code>strncpy()</code> does not automatically append a <code>\0</code>, it’s necessary to add it manually if the copied substring does not include one.</p>
<p><code>strncpy()</code> can also be used to copy a portion of a string:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s1[<span class="number">40</span>];</span><br><span class="line"><span class="type">char</span> s2[<span class="number">12</span>] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">strncpy</span>(s1, s2, <span class="number">5</span>);</span><br><span class="line">s1[<span class="number">5</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s1); <span class="comment">// Output: hello</span></span><br></pre></td></tr></table></figure>
<p>In this example, only the first 5 characters of <code>s2</code> are copied to <code>s1</code>.</p>
<h2 id="strcat"><a href="#strcat" class="headerlink" title="strcat()"></a><code>strcat()</code></h2><p>The <code>strcat()</code> function is used to concatenate two strings. It takes two strings as parameters and appends a copy of the second string to the end of the first, modifying the first string in the process. The function prototype is defined in the <code>string.h</code> header file:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* <span class="title function_">strcat</span><span class="params">(<span class="type">char</span>* s1, <span class="type">const</span> <span class="type">char</span>* s2)</span>;</span><br></pre></td></tr></table></figure>
<p>The return value is a pointer to the first string.</p>
<p>For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s1[<span class="number">12</span>] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="type">char</span> s2[<span class="number">6</span>] = <span class="string">&quot;world&quot;</span>;</span><br><span class="line"><span class="built_in">strcat</span>(s1, s2);</span><br><span class="line"><span class="built_in">puts</span>(s1); <span class="comment">// Outputs: &quot;helloworld&quot;</span></span><br></pre></td></tr></table></figure>
<p>Note that the first string must have enough space to hold the concatenated result. If not, it may overflow, leading to undefined behavior. To avoid this, consider using <code>strncat()</code>.</p>
<h2 id="strncat"><a href="#strncat" class="headerlink" title="strncat()"></a><code>strncat()</code></h2><p>The <code>strncat()</code> function is used to concatenate two strings, similar to <code>strcat()</code>, but it includes a third parameter that specifies the maximum number of characters to append. The function stops adding characters when it reaches the specified limit or encounters a null character (<code>\0</code>) in the source string. Its prototype is defined in the <code>string.h</code> header file:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* <span class="title function_">strncat</span><span class="params">(</span></span><br><span class="line"><span class="params">  <span class="type">char</span>* dest,</span></span><br><span class="line"><span class="params">  <span class="type">const</span> <span class="type">char</span>* src,</span></span><br><span class="line"><span class="params">  <span class="type">size_t</span> n</span></span><br><span class="line"><span class="params">)</span>;</span><br></pre></td></tr></table></figure>
<p>The <code>strncat()</code> function returns a pointer to the destination string.</p>
<p>To ensure that the concatenated string does not exceed the length of the destination buffer, <code>strncat()</code> is typically called like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">strncat</span>(</span><br><span class="line">  str1, </span><br><span class="line">  str2, </span><br><span class="line">  <span class="keyword">sizeof</span>(str1) - <span class="built_in">strlen</span>(str1) - <span class="number">1</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><code>strncat()</code> automatically adds a null character (<code>\0</code>) at the end of the concatenated result. Therefore, the maximum value for the third parameter should be the length of <code>str1</code> minus its current length, minus one. Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s1[<span class="number">10</span>] = <span class="string">&quot;Monday&quot;</span>;</span><br><span class="line"><span class="type">char</span> s2[<span class="number">8</span>] = <span class="string">&quot;Tuesday&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">strncat</span>(s1, s2, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">puts</span>(s1); <span class="comment">// Outputs: &quot;MondayTue&quot;</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>s1</code> has a total length of 10 and a current length of 6. The difference, minus one, is 3, meaning <code>s1</code> can safely add three more characters. Thus, the result is “MondayTue”.</p>
<h2 id="strcmp"><a href="#strcmp" class="headerlink" title="strcmp()"></a><code>strcmp()</code></h2><p>To compare two strings in C, you can’t do it directly; instead, you must compare them character by character. The C language provides the <code>strcmp()</code> function for this purpose.</p>
<p>The <code>strcmp()</code> function is used to compare the contents of two strings. Its prototype is defined in the <code>string.h</code> header file:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">strcmp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* s1, <span class="type">const</span> <span class="type">char</span>* s2)</span>;</span><br></pre></td></tr></table></figure>
<p>The function compares the strings in lexicographical order. It returns:</p>
<ul>
<li>0 if the strings are equal,</li>
<li>a value less than 0 if <code>s1</code> is less than <code>s2</code>,</li>
<li>a value greater than 0 if <code>s1</code> is greater than <code>s2</code>.</li>
</ul>
<p>Here’s a usage example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// s1 = &quot;Happy New Year&quot;</span></span><br><span class="line"><span class="comment">// s2 = &quot;Happy New Year&quot;</span></span><br><span class="line"><span class="comment">// s3 = &quot;Happy Holidays&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">strcmp</span>(s1, s2); <span class="comment">// returns 0</span></span><br><span class="line"><span class="built_in">strcmp</span>(s1, s3); <span class="comment">// returns a value greater than 0</span></span><br><span class="line"><span class="built_in">strcmp</span>(s3, s1); <span class="comment">// returns a value less than 0</span></span><br></pre></td></tr></table></figure>
<p>Note that <code>strcmp()</code> is intended solely for comparing strings, not individual characters. Since characters are essentially small integers, you can compare them directly using the equality operator (<code>==</code>). Therefore, do not pass character values to <code>strcmp()</code>.</p>
<h2 id="strncmp"><a href="#strncmp" class="headerlink" title="strncmp()"></a><code>strncmp()</code></h2><p><code>strncmp()</code> is a variation of <code>strcmp()</code> that allows comparison of only a specified number of characters from two strings. It includes a third parameter, <code>n</code>, which defines the maximum number of characters to compare. The function prototype is defined in the <code>string.h</code> header file:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">strncmp</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* s1, <span class="type">const</span> <span class="type">char</span>* s2, <span class="type">size_t</span> n)</span>;</span><br></pre></td></tr></table></figure>
<p>The return value is similar to <code>strcmp()</code>: it returns 0 if the strings are identical, a negative value if <code>s1</code> is less than <code>s2</code>, and a positive value if <code>s1</code> is greater than <code>s2</code>.</p>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> s1[<span class="number">12</span>] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line"><span class="type">char</span> s2[<span class="number">12</span>] = <span class="string">&quot;hello C&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strncmp</span>(s1, s2, <span class="number">5</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;They both start with &#x27;hello&#x27;.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, only the first 5 characters of the two strings are compared.</p>
<h2 id="sprintf-snprintf"><a href="#sprintf-snprintf" class="headerlink" title="sprintf(), snprintf()"></a><code>sprintf()</code>, <code>snprintf()</code></h2><p>The <code>sprintf()</code> and <code>snprintf()</code> functions are used in C to format strings. While <code>sprintf()</code> writes formatted data to a string, <code>snprintf()</code> adds an additional layer of safety by preventing buffer overflows.</p>
<h3 id="sprintf"><a href="#sprintf" class="headerlink" title="sprintf()"></a><code>sprintf()</code></h3><p>The prototype for <code>sprintf()</code> is defined in the <code>stdio.h</code> header file:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sprintf</span><span class="params">(<span class="type">char</span>* s, <span class="type">const</span> <span class="type">char</span>* format, ...)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>The first parameter is a pointer to the output string.</li>
<li>The second parameter is a format string, followed by any additional variables to be formatted.</li>
</ul>
<hr>
<p><strong>Example:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> first[<span class="number">6</span>] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="type">char</span> last[<span class="number">6</span>] = <span class="string">&quot;world&quot;</span>;</span><br><span class="line"><span class="type">char</span> s[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(s, <span class="string">&quot;%s %s&quot;</span>, first, last);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s); <span class="comment">// Output: hello world</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>sprintf()</code> combines the strings “hello” and “world” into the variable <code>s</code>. The function returns the number of characters written (excluding the null terminator). If an error occurs, it returns a negative value.</p>
<p>However, <code>sprintf()</code> poses a significant security risk: if the formatted output exceeds the allocated buffer size, it can lead to buffer overflows.</p>
<h3 id="snprintf"><a href="#snprintf" class="headerlink" title="snprintf()"></a><code>snprintf()</code></h3><p>To mitigate this risk, C provides <code>snprintf()</code>, which has an additional parameter to specify the maximum number of characters to write:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">snprintf</span><span class="params">(<span class="type">char</span>* s, <span class="type">size_t</span> n, <span class="type">const</span> <span class="type">char</span>* format, ...)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>The second parameter <code>n</code> limits the output to <code>n - 1</code> characters, leaving space for the null terminator.</li>
</ul>
<p><strong>Example:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">snprintf</span>(s, <span class="number">12</span>, <span class="string">&quot;%s %s&quot;</span>, <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>In this case, <code>snprintf()</code> will ensure that at most 11 characters are written, plus the null terminator. The function always writes the null terminator, and if the formatted output exceeds <code>n</code>, it writes only <code>n - 1</code> characters, ensuring safety.</p>
<p>The return value of <code>snprintf()</code> is similar to <code>sprintf()</code>, indicating the number of characters that would have been written (excluding the null terminator). If the formatted string is larger than <code>n</code>, the return value may exceed <code>n</code>. To confirm a complete write, the return value should be non-negative and less than <code>n</code>.</p>
<h2 id="String-Array"><a href="#String-Array" class="headerlink" title="String Array"></a>String Array</h2><p>A string array can be implemented using a two-dimensional character array when each element is a string. In this example, we define an array of strings representing the days of the week:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> weekdays[<span class="number">7</span>][<span class="number">10</span>] = &#123;</span><br><span class="line">  <span class="string">&quot;Monday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Tuesday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Wednesday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Thursday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Friday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Saturday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Sunday&quot;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>Here, we have a string array with 7 elements, where the maximum length of any string, including the null terminator, is 10 characters.</p>
<p>Since the compiler can automatically determine the size of the first dimension, we can simplify the declaration:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> weekdays[][<span class="number">10</span>] = &#123;</span><br><span class="line">  <span class="string">&quot;Monday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Tuesday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Wednesday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Thursday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Friday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Saturday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Sunday&quot;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>However, this approach wastes space since most strings are shorter than 10 characters. A more efficient solution is to use an array of character pointers:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* weekdays[] = &#123;</span><br><span class="line">  <span class="string">&quot;Monday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Tuesday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Wednesday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Thursday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Friday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Saturday&quot;</span>,</span><br><span class="line">  <span class="string">&quot;Sunday&quot;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>In this case, we have a one-dimensional array of 7 pointers, each pointing to a string.</p>
<p>To iterate over this string array, you can use the following code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, weekdays[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Union in C Language</title>
    <url>/2024/05/14/c-language-union/</url>
    <content><![CDATA[<p>Sometimes, you need a data structure that can represent different data types depending on the situation. For instance, if you use a single structure to represent the quantity of fruit, it may need to be an integer (like 6 apples) at times and a float (like 1.5 kilograms of strawberries) at others.</p>
<p>In C, you can use a union to create a flexible data structure. A union can contain various members that share the same memory space, meaning only one member can hold a meaningful value at any given time. Assigning a new value to one member will overwrite the previous one, which is a key advantage for memory savings.</p>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">quantity</span> &#123;</span></span><br><span class="line">  <span class="type">short</span> count;</span><br><span class="line">  <span class="type">float</span> weight;</span><br><span class="line">  <span class="type">float</span> volume;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>In this example, the union <code>quantity</code> defines three members, but only one can hold a value at a time. The last assigned member will be the one that holds a meaningful value.</p>
<p>To use it, declare a variable of this type:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">quantity</span> <span class="title">q</span>;</span></span><br><span class="line">q.count = <span class="number">4</span>;</span><br></pre></td></tr></table></figure>
<p>You can also assign values using different syntax:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">quantity</span> <span class="title">q</span> =</span> &#123;.count=<span class="number">4</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">quantity</span> <span class="title">q</span> =</span> &#123;<span class="number">4</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>In the example above, if the last writing style does not specify a member name, it will be assigned to the first member.</p>
<p>After running this code, <code>q.count</code> holds the value, while the other members do not. Accessing them can lead to undefined behavior until assigned a value.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;count is %i\n&quot;</span>, q.count); <span class="comment">// count is 4</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;weight is %f\n&quot;</span>, q.weight); <span class="comment">// undefined behavior</span></span><br></pre></td></tr></table></figure>
<p>To access the <code>weight</code>, you must assign it first:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">q.weight = <span class="number">0.5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;weight is %f\n&quot;</span>, q.weight); <span class="comment">// weight is 0.5</span></span><br></pre></td></tr></table></figure>
<p>Once you assign a value to another member, the original member may no longer hold a meaningful value. The usage of unions is similar to structures otherwise.</p>
<p>Unions also support the pointer operator <code>-&gt;</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">quantity</span> <span class="title">q</span>;</span></span><br><span class="line">q.count = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">quantity</span>* <span class="title">ptr</span> =</span> &amp;q;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ptr-&gt;count); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure>
<p>Here, <code>ptr</code> points to <code>q</code>, allowing access to its members directly.</p>
<p>When using unions with pointers:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">foo</span> &#123;</span></span><br><span class="line">  <span class="type">int</span> a;</span><br><span class="line">  <span class="type">float</span> b;</span><br><span class="line">&#125; x;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* foo_int_p = (<span class="type">int</span> *)&amp;x;</span><br><span class="line"><span class="type">float</span>* foo_float_p = (<span class="type">float</span> *)&amp;x;</span><br><span class="line"></span><br><span class="line">x.a = <span class="number">12</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x.a);           <span class="comment">// 12</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *foo_int_p);    <span class="comment">// 12</span></span><br><span class="line"></span><br><span class="line">x.b = <span class="number">3.141592</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, x.b);           <span class="comment">// 3.141592</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, *foo_float_p);  <span class="comment">// 3.141592</span></span><br></pre></td></tr></table></figure>
<p>The type of the pointer is determined by the current member that is assigned a value.</p>
<p>You can also create type aliases for unions using <code>typedef</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">  <span class="type">short</span> count;</span><br><span class="line">  <span class="type">float</span> weight;</span><br><span class="line">  <span class="type">float</span> volume;</span><br><span class="line">&#125; quantity;</span><br></pre></td></tr></table></figure>
<p>This way, <code>quantity</code> becomes an alias for the union type.</p>
<p>The primary benefit of using unions is memory efficiency, as they allow the reuse of memory for different data types, occupying space equal to the largest member.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Functions in C Language</title>
    <url>/2024/05/08/c-language-function/</url>
    <content><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>A function is a reusable block of code that can accept different parameters and perform specific tasks. Here’s an example of a function:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">plus_one</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This code declares a function named <code>plus_one()</code>.</p>
<p><strong>Key Points of Function Declarations:</strong></p>
<ol>
<li><strong>Return Type</strong>: Specify the return type at the start of the declaration. In the example, <code>int</code> indicates the function returns an integer.</li>
<li><strong>Parameters</strong>: Declare the types and names of parameters in parentheses following the function name. <code>plus_one(int n)</code> means the function takes one integer parameter, <code>n</code>.</li>
<li><strong>Function Body</strong>: The body of the function is enclosed in braces <code>&#123;&#125;</code>. No semicolon is needed after the closing brace. Braces can start on the same line or a new line; this book uses the same line.</li>
<li><strong>Return Statement</strong>: The <code>return</code> statement specifies the function’s return value and exits the function. If the function does not return a value, you can omit the <code>return</code> statement or use <code>return;</code>.</li>
</ol>
<p>To call a function, write its name followed by parentheses containing the actual arguments:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = plus_one(<span class="number">13</span>);</span><br><span class="line"><span class="comment">// a is 14</span></span><br></pre></td></tr></table></figure>
<p>The number of arguments in the function call must match the function’s declaration. Too many or too few arguments will cause an error.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">plus_one</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">plus_one(<span class="number">2</span>, <span class="number">2</span>); <span class="comment">// Error</span></span><br><span class="line">plus_one();     <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>In the above example, <code>plus_one()</code> only accepts one argument. Passing two or no arguments will cause an error.</p>
<p>A function must be declared before it is used:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = plus_one(<span class="number">13</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">plus_one</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In the above example, the function <code>plus_one()</code> is used before it is declared, leading to a compilation error.</p>
<p>The C standard specifies that functions must be declared at the top level of the source file and cannot be declared inside other functions.</p>
<p>For functions that do not return a value, use the <code>void</code> keyword:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">myFunc</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The <code>myFunc()</code> function neither returns a value nor requires parameters.</p>
<p>Functions can call themselves, a technique known as recursion. Here is an example with the Fibonacci sequence:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="title function_">Fibonacci</span><span class="params">(<span class="type">unsigned</span> n)</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (n &gt; <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> Fibonacci(n - <span class="number">1</span>) + Fibonacci(n - <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>Fibonacci()</code> calls itself, simplifying the algorithm.</p>
<h2 id="main-Function"><a href="#main-Function" class="headerlink" title="main() Function"></a>main() Function</h2><p>In C, <code>main()</code> is the entry point of the program and is required for every program. Execution starts here. Other functions are invoked through <code>main()</code>.</p>
<p>The <code>main()</code> function is declared like other functions, specifying the return type and parameters:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The <code>return 0;</code> statement indicates the function ends successfully. A return value of 0 signifies success, while a non-zero value indicates an error. The return value of <code>main()</code> determines the program’s success.</p>
<p>If <code>return 0;</code> is omitted, the compiler adds it by default, making the following equivalent:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Since the compiler only defaults the return value for <code>main()</code>, it’s recommended to always include the <code>return</code> statement for consistency.</p>
<h2 id="Passing-Parameters-by-Value"><a href="#Passing-Parameters-by-Value" class="headerlink" title="Passing Parameters by Value"></a>Passing Parameters by Value</h2><p>When a function parameter is a variable, the value passed into the function is a copy of that variable, not the variable itself.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">increment</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">  a++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i = <span class="number">10</span>;</span><br><span class="line">increment(i);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure>
<p>In this example, after calling <code>increment(i)</code>, the variable <code>i</code> remains unchanged, still equal to 10. This is because what is passed to the function is a copy of <code>i</code>, not <code>i</code> itself. Changes to the copy do not affect the original variable. This is known as “pass by value.”</p>
<p>To modify the variable, you should return the new value:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">increment</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">  a++;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i = <span class="number">10</span>;</span><br><span class="line">i = increment(i);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i); <span class="comment">// 11</span></span><br></pre></td></tr></table></figure>
<p>In this revised example, the function <code>increment</code> returns the incremented value, and <code>i</code> is updated with the returned value.</p>
<p><strong>Swapping Values</strong></p>
<p>Consider the <code>Swap()</code> function that aims to swap two variables’ values. Due to pass-by-value, the following approach won’t work:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Swap</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">  <span class="type">int</span> temp;</span><br><span class="line">  temp = x;</span><br><span class="line">  x = y;</span><br><span class="line">  y = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">2</span>;</span><br><span class="line">Swap(a, b); <span class="comment">// Ineffective</span></span><br></pre></td></tr></table></figure>
<p>This code does not swap the values of <code>a</code> and <code>b</code> because the function receives copies of <code>a</code> and <code>b</code>. Changes within the function do not affect the original variables.</p>
<p>To modify the original variables, pass their addresses instead:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Swap</span><span class="params">(<span class="type">int</span>* x, <span class="type">int</span>* y)</span> &#123;</span><br><span class="line">  <span class="type">int</span> temp;</span><br><span class="line">  temp = *x;</span><br><span class="line">  *x = *y;</span><br><span class="line">  *y = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">2</span>;</span><br><span class="line">Swap(&amp;a, &amp;b);</span><br></pre></td></tr></table></figure>
<p>By passing the addresses of <code>a</code> and <code>b</code>, the function can directly modify the original variables.</p>
<p><strong>Note</strong> that functions should not return pointers to internal variables.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="title function_">f</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="keyword">return</span> &amp;i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In the example above, the function returns a pointer to the internal variable <code>i</code>, which is incorrect. When the function finishes execution, the internal variable disappears, making the pointer to <code>i</code> invalid. Using this address afterward is very dangerous.</p>
<h2 id="Function-Pointers"><a href="#Function-Pointers" class="headerlink" title="Function Pointers"></a>Function Pointers</h2><p><strong>Returning Function Pointers</strong></p>
<p>Functions are essentially blocks of code stored in memory, and C allows functions to be accessed through pointers.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> (*print_ptr)(<span class="type">int</span>) = &amp;print;</span><br></pre></td></tr></table></figure>
<p>Here, <code>print_ptr</code> is a function pointer that points to the <code>print</code> function. You can use <code>&amp;print</code> to get the function’s address, but <code>print</code> alone is sufficient.</p>
<p>You can call the function through the pointer like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(*print_ptr)(<span class="number">10</span>);</span><br><span class="line"><span class="comment">// Equivalent to</span></span><br><span class="line">print(<span class="number">10</span>);</span><br></pre></td></tr></table></figure>
<p>In C, the function name itself acts as a pointer to the function, so <code>print</code> and <code>&amp;print</code> are equivalent.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (print == &amp;print) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<p>Therefore, <code>print_ptr</code> is effectively the same as <code>print</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> (*print_ptr)(<span class="type">int</span>) = &amp;print;</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="type">void</span> (*print_ptr)(<span class="type">int</span>) = print;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (print_ptr == print) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<p>You can call a function using any of these five methods:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Method 1</span></span><br><span class="line">print(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Method 2</span></span><br><span class="line">(*print)(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Method 3</span></span><br><span class="line">(&amp;print)(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Method 4</span></span><br><span class="line">(*print_ptr)(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Method 5</span></span><br><span class="line">print_ptr(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<p>Typically, function names are used without <code>*</code> and <code>&amp;</code> for simplicity.</p>
<p><strong>Function Pointers as Parameters</strong></p>
<p>A function’s parameters or return values can also be functions. This is how you declare such functions:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">compute</span><span class="params">(<span class="type">int</span> (*myfunc)(<span class="type">int</span>), <span class="type">int</span>, <span class="type">int</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>This prototype indicates that <code>compute()</code>‘s first parameter is a function.</p>
<h2 id="Function-Prototypes"><a href="#Function-Prototypes" class="headerlink" title="Function Prototypes"></a>Function Prototypes</h2><p>As mentioned earlier, functions must be declared before they are used. Since the <code>main()</code> function is executed first in a program, all other functions must be declared before it. </p>
<p>Here is an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">func1</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func2</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  func1();</span><br><span class="line">  func2();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>main()</code> function must be declared last. If not, the compiler will issue a warning because it won’t find the declarations for <code>func1()</code> or <code>func2()</code>.</p>
<p>However, since <code>main()</code> is the entry point of the program and contains the main logic, it is often better to place it at the beginning. On the other hand, with many functions, ensuring the correct order can become cumbersome.</p>
<p>To address this, C provides a solution: you can declare function prototypes at the beginning of the program, allowing you to use the functions before defining them. A function prototype tells the compiler the return type and parameter types of the function in advance. You don’t need to include the function body; the actual implementation can come later.</p>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">twice</span><span class="params">(<span class="type">int</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="type">int</span> num = <span class="number">5</span>;</span><br><span class="line">  <span class="keyword">return</span> twice(num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">twice</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span> * num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the function <code>twice()</code> is defined after <code>main()</code>, but because the prototype is provided at the top, the code compiles correctly. As long as you provide the prototype in advance, the placement of the function definition is flexible.</p>
<p>Function prototypes may also include parameter names, which can help readers understand the function’s purpose, although the compiler does not require them:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">twice</span><span class="params">(<span class="type">int</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Equivalent to</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">twice</span><span class="params">(<span class="type">int</span> num)</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, whether or not the parameter name <code>num</code> appears in the prototype is optional.</p>
<p>Note that function prototypes must end with a semicolon.</p>
<p>Typically, the top of each source file contains the prototypes for all the functions used in that file.</p>
<h2 id="exit"><a href="#exit" class="headerlink" title="exit()"></a><code>exit()</code></h2><p>The <code>exit()</code> function is used to terminate a program immediately. Once this function is called, the program ends right away. The prototype of <code>exit()</code> is defined in the header file <code>stdlib.h</code>.</p>
<p>The <code>exit()</code> function can return a value to the operating system. The argument passed to <code>exit()</code> represents the program’s return status. Generally, two constants are used as arguments: <code>EXIT_SUCCESS</code> (equivalent to 0) indicates successful execution, while <code>EXIT_FAILURE</code> (equivalent to 1) indicates an abnormal termination. Both constants are defined in <code>stdlib.h</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Successful execution</span></span><br><span class="line"><span class="comment">// Equivalent to exit(0);</span></span><br><span class="line"><span class="built_in">exit</span>(EXIT_SUCCESS);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Abnormal termination</span></span><br><span class="line"><span class="comment">// Equivalent to exit(1);</span></span><br><span class="line"><span class="built_in">exit</span>(EXIT_FAILURE);</span><br></pre></td></tr></table></figure>
<p>In the <code>main()</code> function, <code>exit()</code> is equivalent to using the <code>return</code> statement. When used in other functions, <code>exit()</code> terminates the entire program and has no other effects.</p>
<p>C also provides the <code>atexit()</code> function, which registers additional functions to be executed when <code>exit()</code> is called. This can be used for cleanup tasks when the program terminates. The prototype of <code>atexit()</code> is also defined in <code>stdlib.h</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">atexit</span><span class="params">(<span class="type">void</span> (*func)(<span class="type">void</span>))</span>;</span><br></pre></td></tr></table></figure>
<p>The parameter to <code>atexit()</code> is a function pointer. Note that the function pointed to (in the example, <code>print</code>) must not take parameters and must not return a value.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;something went wrong!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">atexit(print);</span><br><span class="line"><span class="built_in">exit</span>(EXIT_FAILURE);</span><br></pre></td></tr></table></figure>
<p>In the example above, when <code>exit()</code> is called, the <code>print()</code> function registered with <code>atexit()</code> will be executed first, followed by the termination of the program.</p>
<h2 id="Function-Specifiers-in-C"><a href="#Function-Specifiers-in-C" class="headerlink" title="Function Specifiers in C"></a>Function Specifiers in C</h2><p>C provides several function specifiers that help clarify how functions are used.</p>
<h3 id="extern-Specifier"><a href="#extern-Specifier" class="headerlink" title="extern Specifier"></a><code>extern</code> Specifier</h3><p>In multi-file projects, source files often use functions declared in other files. In such cases, the current file needs to provide the function prototype and use the <code>extern</code> specifier to indicate that the function definition is in another file.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">foo</span><span class="params">(<span class="type">int</span> arg1, <span class="type">char</span> arg2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="type">int</span> a = foo(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>foo()</code> is defined in another file, and <code>extern</code> tells the compiler that this file does not contain the definition of <code>foo()</code>.</p>
<p>However, because function prototypes are <code>extern</code> by default, including <code>extern</code> is optional and does not change the behavior.</p>
<h3 id="static-Specifier"><a href="#static-Specifier" class="headerlink" title="static Specifier"></a><code>static</code> Specifier</h3><p>By default, each time a function is called, its internal variables are reinitialized, and their previous values are not retained. The <code>static</code> specifier changes this behavior.</p>
<p>When used inside a function to declare a variable, <code>static</code> ensures that the variable is initialized only once and retains its value between function calls.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">counter</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="type">static</span> <span class="type">int</span> count = <span class="number">1</span>;  <span class="comment">// Initialized only once</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">  count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  counter();  <span class="comment">// 1</span></span><br><span class="line">  counter();  <span class="comment">// 2</span></span><br><span class="line">  counter();  <span class="comment">// 3</span></span><br><span class="line">  counter();  <span class="comment">// 4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the <code>count</code> variable in the <code>counter()</code> function is declared with <code>static</code>, meaning it is initialized only once and retains its value across calls, resulting in an incrementing effect.</p>
<p>Note that <code>static</code> variables can only be initialized with constants, not variables.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">3</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> j = i; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>In the above example, <code>j</code> is a static variable, and it cannot be initialized with another variable <code>i</code>.</p>
<p>Additionally, within block scope, <code>static</code> variables have a default value of <code>0</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> foo;</span><br><span class="line"><span class="comment">// Equivalent to</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> foo = <span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<p>The <code>static</code> specifier can also be used to modify functions themselves.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">Twice</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">  <span class="type">int</span> result = num * <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, <code>static</code> means that the function <code>Twice()</code> is only accessible within the current file. Without <code>static</code>, other files could also use this function (by declaring its prototype).</p>
<p><code>static</code> can also be used with parameters to specify array sizes.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum_array</span><span class="params">(<span class="type">int</span> a[<span class="type">static</span> <span class="number">3</span>], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this case, <code>static</code> indicates to the compiler that the array must have at least 3 elements. This information can sometimes improve performance. Note that <code>static</code> can only specify the size of the first dimension in multi-dimensional arrays.</p>
<h3 id="const-Specifier"><a href="#const-Specifier" class="headerlink" title="const Specifier"></a><code>const</code> Specifier</h3><p>The <code>const</code> specifier in function parameters indicates that the function should not modify the variable pointed to by the parameter.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span>* p)</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, <code>f()</code> takes a pointer <code>p</code>, which can modify the value pointed to by <code>p</code>, affecting the outside world.</p>
<p>To prevent this modification, you can use <code>const</code> to indicate that the function cannot alter the value pointed to by the pointer.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">const</span> <span class="type">int</span>* p)</span> &#123;</span><br><span class="line">  *p = <span class="number">0</span>; <span class="comment">// Error</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>const</code> specifies that the value pointed to by <code>p</code> cannot be modified, so <code>*p = 0</code> will produce an error.</p>
<p>However, the address stored in <code>p</code> itself can still be changed.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">const</span> <span class="type">int</span>* p)</span> &#123;</span><br><span class="line">  <span class="type">int</span> x = <span class="number">13</span>;</span><br><span class="line">  p = &amp;x; <span class="comment">// Allowed</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this case, modifying <code>p</code> is allowed, but modifying <code>*p</code> is not.</p>
<p>If you want to restrict modifications to <code>p</code>, place the <code>const</code> keyword before <code>p</code>. </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span>* <span class="type">const</span> p)</span> &#123;</span><br><span class="line">  <span class="type">int</span> x = <span class="number">13</span>;</span><br><span class="line">  p = &amp;x; <span class="comment">// This line will cause an error</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>To prevent modification of both <code>p</code> and the value it points to, use <code>const</code> in both places.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p)</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this declaration, <code>const</code> applies to both the pointer <code>p</code> and the value it points to.</p>
<h2 id="Variable-Arguments"><a href="#Variable-Arguments" class="headerlink" title="Variable Arguments"></a>Variable Arguments</h2><p>Some functions have an indeterminate number of parameters. When declaring such functions, you can use ellipses (<code>...</code>) to indicate a variable number of arguments.</p>
<p>For example, the <code>printf()</code> function is declared as:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">printf</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* format, ...)</span>;</span><br></pre></td></tr></table></figure>
<p>In this prototype, the number of arguments following the first one is variable and depends on the format string’s placeholders. The ellipses (<code>...</code>) indicate this variability.</p>
<p>Note that the ellipses must appear at the end of the parameter list; otherwise, it will cause an error.</p>
<p>The header file <code>stdarg.h</code> defines macros for handling variable arguments:</p>
<ol>
<li><strong>va_list</strong>: A type used to define a variable argument object. It must be initialized before accessing variable arguments.</li>
<li><strong>va_start</strong>: A function that initializes the variable argument object. It takes two parameters: the variable argument object and the last fixed parameter before the variable arguments to locate them.</li>
<li><strong>va_arg</strong>: A function used to retrieve the current variable argument. After each call, it advances the internal pointer to the next argument. It takes two parameters: the variable argument object and the type of the current argument.</li>
<li><strong>va_end</strong>: A function that cleans up the variable argument object.</li>
</ol>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">average</span><span class="params">(<span class="type">int</span> count, ...)</span> &#123;</span><br><span class="line">  <span class="type">double</span> total = <span class="number">0</span>;</span><br><span class="line">  va_list ap;</span><br><span class="line">  va_start(ap, count);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">    total += va_arg(ap, <span class="type">double</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  va_end(ap);</span><br><span class="line">  <span class="keyword">return</span> total / count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>va_list ap</code> defines <code>ap</code> as the variable argument object. <code>va_start(ap, count)</code> initializes <code>ap</code> to access the arguments following <code>count</code>. <code>va_arg(ap, double)</code> retrieves each argument as a <code>double</code>, and <code>va_end(ap)</code> cleans up the variable argument object.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Typedef Command in C Language</title>
    <url>/2024/05/11/c-language-typedef/</url>
    <content><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>The <code>typedef</code> command is used to create an alias for a specific type.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> type name;</span><br></pre></td></tr></table></figure>
<p>In this code, <code>type</code> represents the original type, while <code>name</code> is the alias.</p>
<p>For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> BYTE;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>typedef</code> creates an alias <code>BYTE</code> for the type <code>unsigned char</code>, allowing you to declare variables using <code>BYTE</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">BYTE c = <span class="string">&#x27;z&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="Multiple-Aliases"><a href="#Multiple-Aliases" class="headerlink" title="Multiple Aliases"></a>Multiple Aliases</h3><p>You can use <code>typedef</code> to define multiple aliases at once:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> antelope, bagel, mushroom;</span><br></pre></td></tr></table></figure>
<p>Here, <code>antelope</code>, <code>bagel</code>, and <code>mushroom</code> are all aliases for <code>int</code>.</p>
<h3 id="Pointer-Aliases"><a href="#Pointer-Aliases" class="headerlink" title="Pointer Aliases"></a>Pointer Aliases</h3><p>You can also create aliases for pointer types:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span>* intptr;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>intptr</code> is an alias for <code>int*</code>. Be cautious when using this, as it may not be immediately clear that <code>x</code> is a pointer:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">intptr x = &amp;a;</span><br></pre></td></tr></table></figure>
<h3 id="Array-Type-Aliases"><a href="#Array-Type-Aliases" class="headerlink" title="Array Type Aliases"></a>Array Type Aliases</h3><p><code>typedef</code> can also be used for array types:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> five_ints[<span class="number">5</span>];</span><br></pre></td></tr></table></figure>
<p>In this case, <code>five_ints</code> is an alias for an array of 5 integers:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">five_ints x = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="Function-Type-Aliases"><a href="#Function-Type-Aliases" class="headerlink" title="Function Type Aliases"></a>Function Type Aliases</h3><p>To create an alias for a function type, you can use the following syntax:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">signed</span> <span class="title function_">char</span> <span class="params">(*fp)</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>fp</code> is an alias for a pointer to a function that returns <code>signed char</code> and takes no parameters.</p>
<h2 id="Benefits-of-typedef"><a href="#Benefits-of-typedef" class="headerlink" title="Benefits of typedef"></a>Benefits of <code>typedef</code></h2><p>The advantages of using <code>typedef</code> for creating type aliases are as follows:</p>
<ol>
<li><strong>Improved Code Readability</strong><br>Using <code>typedef</code> enhances clarity. For example:  </li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">char</span>* STRING;</span><br><span class="line">STRING name;</span><br></pre></td></tr></table></figure>
<p>Here, <code>STRING</code> clearly indicates that the variable is a string.</p>
<ol>
<li><strong>Creating Aliases for Complex Data Structures</strong><br><code>typedef</code> simplifies references to complex structures, unions, and enums. For instance:  </li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">treenode</span> &#123;</span> <span class="comment">/* ... */</span> &#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">treenode</span>* <span class="title">Tree</span>;</span></span><br></pre></td></tr></table></figure>
<p>In this case, <code>Tree</code> serves as an alias for <code>struct treenode*</code>.</p>
<ol>
<li><strong>Facilitating Type Changes</strong><br>It allows easy type modifications later. For example:  </li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">float</span> app_float;</span><br><span class="line">app_float f1, f2, f3;</span><br></pre></td></tr></table></figure>
<p>If you need to change the type later, simply update the <code>typedef</code>:  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">double</span> app_float;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>Portability</strong><br>Different machines may interpret types differently. For example:  </li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int32_t</span> i = <span class="number">100000</span>;</span><br></pre></td></tr></table></figure>
<p>This guarantees <code>i</code> is always a 32-bit integer, ensuring portability across architectures.</p>
<ol>
<li><strong>Simplifying Type Declarations</strong><br>Complex declarations can be made clearer with <code>typedef</code>. For instance:  </li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="title function_">char</span> <span class="params">(*Func)</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">typedef</span> Func Arr[<span class="number">5</span>];</span><br><span class="line">Arr* <span class="title function_">x</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>This makes it easier to understand that <code>x</code> returns a pointer to an array of functions.</p>
<p>Overall, <code>typedef</code> enhances code clarity, maintainability, and portability in C programming.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Enum in C Language</title>
    <url>/2024/05/15/c-language-enum/</url>
    <content><![CDATA[<p>When a data type has only a few possible values, each with its own specific meaning, defining these values as an <code>enum</code> (short for “enumeration”) can enhance code readability.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">colors</span> &#123;</span> RED, GREEN, BLUE &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, RED);   <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, GREEN); <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, BLUE);  <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>
<p>In the example above, if a program requires three colors, we can use the <code>enum</code> command to define these colors as a single enumeration type called <code>colors</code>, which consists of the possible values RED, GREEN, and BLUE. These names automatically become integer constants, with the compiler assigning them the values 0, 1, and 2, respectively. This makes RED much more readable than just using the number 0.</p>
<p>Note that the names of constants in an <code>enum</code> follow the identifier naming conventions, but they are typically written in uppercase.</p>
<p>You can declare a variable as an <code>enum</code> type as follows:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">colors</span> <span class="title">color</span>;</span></span><br></pre></td></tr></table></figure>
<p>This code declares the variable <code>color</code> as an <code>enum colors</code> type, allowing it to take on one of the constant values RED, GREEN, or BLUE.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">color = BLUE;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%i\n&quot;</span>, color); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>
<p>Here, we assign the value BLUE to the variable <code>color</code>, which corresponds to the constant with a value of 2.</p>
<p>The <code>typedef</code> command can be used to create an alias for an <code>enum</code> type:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">  SHEEP,</span><br><span class="line">  WHEAT,</span><br><span class="line">  WOOD,</span><br><span class="line">  BRICK,</span><br><span class="line">  ORE</span><br><span class="line">&#125; RESOURCE;</span><br><span class="line"></span><br><span class="line">RESOURCE r;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>RESOURCE</code> serves as an alias for the <code>enum</code> type. You can use this alias when declaring variables.</p>
<p>Another less common syntax allows you to declare an <code>enum</code> type and assign values to variables in the same line:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">  SHEEP,</span><br><span class="line">  WHEAT,</span><br><span class="line">  WOOD,</span><br><span class="line">  BRICK,</span><br><span class="line">  ORE</span><br><span class="line">&#125; r = BRICK, s = WOOD;</span><br></pre></td></tr></table></figure>
<p>In this case, <code>r</code> is assigned the value 3 (BRICK), and <code>s</code> is assigned the value 2 (WOOD).</p>
<p>Since the <code>enum</code> automatically declares constants, sometimes the purpose of using an <code>enum</code> is simply to define a set of constants. This can be done succinctly:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span> ONE, TWO &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, ONE, TWO);  <span class="comment">// 0 1</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>enum</code> is a keyword followed by a block of code, within which the constants are declared. ONE and TWO are two <code>enum</code> constants.</p>
<p>Constants are separated by commas, and the trailing comma after the last constant is optional.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span> ONE, TWO, &#125;;</span><br></pre></td></tr></table></figure>
<p>Because <code>enum</code> automatically assigns increasing values starting from 0, you do not need to assign values manually. However, C does allow you to specify values for <code>enum</code> constants, but only as integers, not other types. Therefore, any situation where you can use integers, you can also use <code>enum</code> constants.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span> ONE = <span class="number">1</span>, TWO = <span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, ONE, TWO);  <span class="comment">// 1 2</span></span><br></pre></td></tr></table></figure>
<p><code>enum</code> constants can have non-contiguous values:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span> X = <span class="number">2</span>, Y = <span class="number">18</span>, Z = <span class="number">-2</span> &#125;;</span><br></pre></td></tr></table></figure>
<p>They can also share the same value:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span> X = <span class="number">2</span>, Y = <span class="number">2</span>, Z = <span class="number">2</span> &#125;;</span><br></pre></td></tr></table></figure>
<p>If some constants in a set are assigned values while others are not, the unspecified constants will automatically increment from the last specified value.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">  A,    <span class="comment">// 0</span></span><br><span class="line">  B,    <span class="comment">// 1</span></span><br><span class="line">  C = <span class="number">4</span>, <span class="comment">// 4</span></span><br><span class="line">  D,    <span class="comment">// 5</span></span><br><span class="line">  E,    <span class="comment">// 6</span></span><br><span class="line">  F = <span class="number">3</span>, <span class="comment">// 3</span></span><br><span class="line">  G,    <span class="comment">// 4</span></span><br><span class="line">  H     <span class="comment">// 5</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>The scope of an <code>enum</code> is the same as that of a variable. If declared at the top level, it is valid throughout the file; if declared within a block, it is only valid in that block. Compared to using <code>int</code> for constants, the advantage of <code>enum</code> is that it clearly conveys the intent of the code.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>assert.h in C Language</title>
    <url>/2024/05/23/c-language-lib-assert-h/</url>
    <content><![CDATA[<h2 id="assert"><a href="#assert" class="headerlink" title="assert()"></a>assert()</h2><p>The <code>assert.h</code> header file defines the <code>assert()</code> macro, which is used to verify that a program meets certain conditions at runtime. If a condition is not met, the program will terminate with an error message. This macro is often referred to as an “assertion.”</p>
<p>For example, consider the following code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">assert(PI &gt; <span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<p>When the program reaches this line, it checks whether the variable <code>PI</code> is greater than 3. If it is, the program continues to run; if not, the program will terminate and provide an error message.</p>
<p>The <code>assert()</code> macro takes an expression as its parameter. If the expression evaluates to true (a non-zero value), <code>assert()</code> has no effect, and the program continues. If the expression evaluates to false (zero), <code>assert()</code> will trigger an error, writing a message to the standard error stream (<code>stderr</code>). This message includes the failed expression, the file name, and the line number where the assertion failed. Finally, it calls the <code>abort()</code> function to terminate the program (the prototype for <code>abort()</code> is found in the <code>stdlib.h</code> header file).</p>
<p>For instance:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">z = x * x - y * y;</span><br><span class="line">assert(z &gt;= <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
<p>This assertion is equivalent to the following code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (z &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;z less than 0&quot;</span>);</span><br><span class="line">    <span class="built_in">abort</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>If the assertion fails, the program will output an error message like this:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Assertion failed: (z &gt;= 0), function main, file /Users/assert.c, line 14.</span><br></pre></td></tr></table></figure>
<p>The format of the error message is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Assertion failed: [expression], function [function_name], file [file_name], line [line_number].</span><br></pre></td></tr></table></figure>
<p>Here, the sections in brackets are replaced with actual data.</p>
<p>Using <code>assert()</code> has several advantages: it automatically identifies the file and line number where the issue occurred, and it allows you to enable or disable assertions without changing the code. If you have confirmed that your program is functioning correctly and no assertions are needed, you can define a macro <code>NDEBUG</code> before including <code>assert.h</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NDEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>After recompiling the program, the compiler will disable all <code>assert()</code> statements in the file. If issues arise again, you can remove this <code>#define NDEBUG</code> directive (or comment it out) and recompile to re-enable the assertions.</p>
<p>However, one drawback of <code>assert()</code> is that it introduces additional checks, which can increase the runtime of the program.</p>
<h2 id="static-assert"><a href="#static-assert" class="headerlink" title="static_assert()"></a>static_assert()</h2><p>Introduced in C11, <code>static_assert()</code> is used for compile-time assertions. Its syntax is as follows:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static_assert</span>(constant-expression, <span class="built_in">string</span>-literal);</span><br></pre></td></tr></table></figure>
<p><code>static_assert()</code> takes two parameters: the first, <code>constant-expression</code>, must be a compile-time constant; the second, <code>string-literal</code>, is an error message. If the first parameter evaluates to false, a compilation error occurs, and the second parameter is displayed as the error message.</p>
<p>For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) == <span class="number">4</span>, <span class="string">&quot;64-bit code generation is not supported.&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>This code means that if the size of <code>int</code> on the current machine is not 4 bytes, a compilation error will be raised.</p>
<p>It’s important to note that <code>static_assert()</code> only runs during compilation and cannot evaluate variable values. If you try to assert on a variable, it will result in a compilation error:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">positive</span><span class="params">(<span class="type">const</span> <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">static_assert</span>(n &gt; <span class="number">0</span>, <span class="string">&quot;value must be &gt; 0&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This code will cause a compilation error because the compiler cannot determine the value of <code>n</code> at compile time.</p>
<p>The benefits of <code>static_assert()</code> include detecting errors during compilation, which can save development time by avoiding runtime errors. Additionally, assertions within functions may not be executed if the function isn’t called, whereas <code>static_assert()</code> checks regardless of whether the function runs. Lastly, <code>static_assert()</code> does not generate executable code, meaning it does not add any runtime performance overhead.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>CLI in C Language</title>
    <url>/2024/05/21/c-language-cli/</url>
    <content><![CDATA[<h2 id="Command-Line-Arguments"><a href="#Command-Line-Arguments" class="headerlink" title="Command Line Arguments"></a>Command Line Arguments</h2><p>C programs can receive parameters from the command line.</p>
<p>For example, running:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./foo hello world</span><br></pre></td></tr></table></figure>
<p>The program <code>foo</code> receives two command line arguments: <code>hello</code> and <code>world</code>.</p>
<p>How does the program access these command line arguments? C stores the command line input in an array, which can be accessed through the parameters of the <code>main()</code> function.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; argc; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;arg %d: %s\n&quot;</span>, i, argv[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, the <code>main()</code> function has two parameters: <code>argc</code> (argument count) and <code>argv</code> (argument variable). While these parameter names can be anything, the convention is to use these specific terms.</p>
<p>The first parameter, <code>argc</code>, represents the number of command line arguments. Since the program name is included, <code>argc</code> is technically the number of arguments plus one.</p>
<p>The second parameter, <code>argv</code>, is an array that holds all the command line inputs, with each element being a string pointer.</p>
<p>For the command <code>./foo hello world</code>, <code>argc</code> is 3, indicating three components: <code>./foo</code>, <code>hello</code>, and <code>world</code>. The <code>argv</code> array holds these inputs: <code>argv[0]</code> is the program name <code>./foo</code>, <code>argv[1]</code> is <code>hello</code>, and <code>argv[2]</code> is <code>world</code>. Generally, <code>argv[1]</code> to <code>argv[argc - 1]</code> represent all command line parameters, and <code>argv[argc]</code> is a NULL pointer.</p>
<p>String pointers can be viewed as character arrays, so the following two declarations are equivalent:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Option 1</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Option 2</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span><br></pre></td></tr></table></figure>
<p>Moreover, each command line argument can be accessed either through the array notation <code>argv[i]</code> or pointer notation <code>*(argv + i)</code>.</p>
<p>Using <code>argc</code>, you can enforce the number of parameters a function accepts:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;usage: mult x y\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, atoi(argv[<span class="number">1</span>]) * atoi(argv[<span class="number">2</span>]));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, if <code>argc</code> is not equal to 3, an error is returned, ensuring that the program requires two parameters to run.</p>
<p>Additionally, the last element of the <code>argv</code> array is a NULL pointer (<code>argv[argc] == NULL</code>), allowing for traversal in the following manner:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">char</span>** p = argv; *p != <span class="literal">NULL</span>; p++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;arg: %s\n&quot;</span>, *p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, the pointer <code>p</code> moves through each member of <code>argv</code>, terminating when it reaches the NULL pointer. Since the address of <code>argv</code> is fixed, it cannot be incremented directly; thus, an intermediate variable <code>p</code> is used for the traversal.</p>
<h2 id="Exit-Status"><a href="#Exit-Status" class="headerlink" title="Exit Status"></a>Exit Status</h2><p>C specifies that if the <code>main()</code> function lacks a return statement, it implicitly adds <code>return 0</code>, indicating successful termination. This is why it’s customary for <code>main()</code> to return an integer value, with a return value of 0 signifying success and any non-zero value indicating an error.</p>
<p>You can check the exit status of the last command using the Bash environment variable <code>$?</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./foo hello world</span><br><span class="line">$ <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure>
<p>In this case, <code>echo $?</code> prints the value of <code>$?</code>, which is 0, indicating the previous command executed successfully.</p>
<p>Note that only <code>main()</code> has this default behavior; other functions do not.</p>
<h2 id="Environment-Variables"><a href="#Environment-Variables" class="headerlink" title="Environment Variables"></a>Environment Variables</h2><p>C provides the <code>getenv()</code> function (declared in <code>stdlib.h</code>) for reading command line environment variables.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">char</span>* val = getenv(<span class="string">&quot;HOME&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (val == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Cannot find the HOME environment variable\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Value: %s\n&quot;</span>, val);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>getenv(&quot;HOME&quot;)</code> retrieves the <code>$HOME</code> environment variable. If this variable is NULL, the program returns an error.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>ctype.h in Language</title>
    <url>/2024/05/24/c-language-lib-ctype-h/</url>
    <content><![CDATA[<p>The <code>&lt;ctype.h&gt;</code> header file defines a set of prototypes for character handling functions.</p>
<h2 id="Character-Testing-Functions"><a href="#Character-Testing-Functions" class="headerlink" title="Character Testing Functions"></a>Character Testing Functions</h2><p>These functions are used to determine whether a character belongs to a specific type:</p>
<ul>
<li><code>isalnum()</code>: Checks if the character is alphanumeric.</li>
<li><code>isalpha()</code>: Checks if the character is a letter.</li>
<li><code>isdigit()</code>: Checks if the character is a digit.</li>
<li><code>isxdigit()</code>: Checks if the character is a hexadecimal digit.</li>
<li><code>islower()</code>: Checks if the character is a lowercase letter.</li>
<li><code>isupper()</code>: Checks if the character is an uppercase letter.</li>
<li><code>isblank()</code>: Checks if the character is a standard whitespace character (including space, horizontal tab, or newline).</li>
<li><code>isspace()</code>: Checks if the character is any whitespace character (such as space, newline, form feed, carriage return, vertical tab, or horizontal tab).</li>
<li><code>iscntrl()</code>: Checks if the character is a control character (e.g., Ctrl + B).</li>
<li><code>isprint()</code>: Checks if the character is a printable character.</li>
<li><code>isgraph()</code>: Checks if the character is any printable character except space.</li>
<li><code>ispunct()</code>: Checks if the character is a punctuation character (any printable character except space, letter, or digit).</li>
</ul>
<p>These functions take an <code>int</code> parameter (not a <code>char</code>) because they also accept EOF as a valid argument.</p>
<p>If the character belongs to the specified type, the function returns a non-zero integer (typically 1, indicating true); otherwise, it returns 0 (indicating false).</p>
<p>Here’s an example: the user inputs a character, and the program checks if it is an English letter.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">char</span> ch = getchar();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isalpha</span>(ch))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;it is an alpha character.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;it is not an alpha character.\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Character-Mapping-Functions"><a href="#Character-Mapping-Functions" class="headerlink" title="Character Mapping Functions"></a>Character Mapping Functions</h2><p>These functions return a corresponding form of a character, primarily consisting of two functions:</p>
<ul>
<li><code>tolower()</code>: If the argument is an uppercase character, it returns the lowercase equivalent; otherwise, it returns the original character.</li>
<li><code>toupper()</code>: If the argument is a lowercase character, it returns the uppercase equivalent; otherwise, it returns the original character.</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Convert character to uppercase</span></span><br><span class="line">ch = <span class="built_in">toupper</span>(ch);</span><br></pre></td></tr></table></figure>
<p>Note that these functions do not modify the original character.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>errno.h in C Language</title>
    <url>/2024/05/25/c-language-lib-errno-h/</url>
    <content><![CDATA[<h2 id="The-errno-Variable"><a href="#The-errno-Variable" class="headerlink" title="The errno Variable"></a>The errno Variable</h2><p>The <code>errno.h</code> header file declares the <code>errno</code> variable, which is an <code>int</code> used to store error codes (positive integers).</p>
<p>If <code>errno</code> has a non-zero value, it indicates that an error occurred during the execution of a program.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">-1</span>;</span><br><span class="line">errno = <span class="number">0</span>;  <span class="comment">// Reset errno to 0</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> y = <span class="built_in">sqrt</span>(x);  <span class="comment">// Attempt to calculate the square root of a negative number</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (errno != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;sqrt error; program terminated.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, calculating the square root of a negative number is invalid, which sets <code>errno</code> to a non-zero value.</p>
<p>To check for errors after calling a function, always reset <code>errno</code> to 0 before the function call to avoid interference from other functions.</p>
<h2 id="Error-Macros"><a href="#Error-Macros" class="headerlink" title="Error Macros"></a>Error Macros</h2><p>The value of <code>errno</code> is often one of two macros defined in <code>errno.h</code>: <code>EDOM</code> or <code>ERANGE</code>. These represent possible errors when using mathematical functions.</p>
<ul>
<li><strong>Domain Error (EDOM):</strong> This occurs when an argument passed to a function is outside its valid range, such as passing a negative number to <code>sqrt()</code>.</li>
<li><strong>Range Error (ERANGE):</strong> This happens when the return value of a function is too large to be represented by its return type, like passing 1000 to <code>exp()</code>, since ( e^{1000} ) exceeds what a <code>double</code> can represent.</li>
</ul>
<p>When using mathematical functions, you can compare the value of <code>errno</code> with <code>EDOM</code> and <code>ERANGE</code> to determine the type of error that occurred.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>float.h in C Language</title>
    <url>/2024/05/26/c-language-lib-float-h/</url>
    <content><![CDATA[<p>The header file <code>float.h</code> defines various macros related to the floating-point types <code>float</code>, <code>double</code>, and <code>long double</code>, specifying their ranges and precision.</p>
<ol>
<li><code>FLT_ROUNDS</code><br>This macro indicates the rounding direction used in floating-point addition. Its possible values are:<ul>
<li><strong>-1</strong>: Undetermined.</li>
<li><strong>0</strong>: Round towards zero.</li>
<li><strong>1</strong>: Round to the nearest integer.</li>
<li><strong>2</strong>: Round towards positive infinity.</li>
<li><strong>3</strong>: Round towards negative infinity.</li>
</ul>
</li>
<li><code>FLT_RADIX</code><br>This macro represents the base of the exponent in scientific notation, which is generally 2.</li>
<li><strong>Maximum Values of Floating-Point Types</strong><ul>
<li><code>FLT_MAX</code></li>
<li><code>DBL_MAX</code></li>
<li><code>LDBL_MAX</code></li>
</ul>
</li>
<li><strong>Minimum Positive Values of Floating-Point Types</strong><ul>
<li><code>FLT_MIN</code></li>
<li><code>DBL_MIN</code></li>
<li><code>LDBL_MIN</code></li>
</ul>
</li>
<li><strong>Smallest Difference Representable Between Two Floating-Point Values (Machine Precision)</strong><ul>
<li><code>FLT_EPSILON</code></li>
<li><code>DBL_EPSILON</code></li>
<li><code>LDBL_EPSILON</code></li>
</ul>
</li>
<li><code>DECIMAL_DIG</code><br>This macro indicates the number of decimal digits that can be represented accurately.</li>
<li><code>FLT_EVAL_METHOD</code><br>This macro specifies how floating-point expressions are evaluated regarding type conversion. Its possible values are:<ul>
<li><strong>-1</strong>: Undetermined.</li>
<li><strong>0</strong>: Operations are performed in the current type.</li>
<li><strong>1</strong>: Operations involving <code>float</code> and <code>double</code> use the range and precision of <code>double</code>.</li>
<li><strong>2</strong>: All floating-point operations use the range and precision of <code>long double</code>.</li>
</ul>
</li>
<li><strong>Number of Bits in the Mantissa</strong><ul>
<li><code>FLT_MANT_DIG</code></li>
<li><code>DBL_MANT_DIG</code></li>
<li><code>LDBL_MANT_DIG</code></li>
</ul>
</li>
<li><strong>Number of Decimal Digits in the Exponent</strong><ul>
<li><code>FLT_DIG</code></li>
<li><code>DBL_DIG</code></li>
<li><code>LDBL_DIG</code></li>
</ul>
</li>
<li><strong>Minimum Negative Exponent in Scientific Notation</strong><ul>
<li><code>FLT_MIN_EXP</code></li>
<li><code>DBL_MIN_EXP</code></li>
<li><code>LDBL_MIN_EXP</code></li>
</ul>
</li>
<li><strong>Minimum Decimal Exponent in Scientific Notation (Negative)</strong><ul>
<li><code>FLT_MIN_10_EXP</code></li>
<li><code>DBL_MIN_10_EXP</code></li>
<li><code>LDBL_MIN_10_EXP</code></li>
</ul>
</li>
<li><strong>Maximum Exponent in Scientific Notation</strong><ul>
<li><code>FLT_MAX_EXP</code></li>
<li><code>DBL_MAX_EXP</code></li>
<li><code>LDBL_MAX_EXP</code></li>
</ul>
</li>
<li><strong>Maximum Decimal Exponent in Scientific Notation</strong><ul>
<li><code>FLT_MAX_10_EXP</code></li>
<li><code>DBL_MAX_10_EXP</code></li>
<li><code>LDBL_MAX_10_EXP</code></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Multibyte Character in C Language</title>
    <url>/2024/05/22/c-language-multibyte-character/</url>
    <content><![CDATA[<h2 id="Overview-of-Unicode"><a href="#Overview-of-Unicode" class="headerlink" title="Overview of Unicode"></a>Overview of Unicode</h2><p>When the C language was first developed, it primarily focused on English characters, utilizing 7-bit ASCII to represent all characters. The ASCII range spans from 0 to 127, which means it can represent a maximum of about 128 characters, with each character fitting into a single byte.</p>
<p>However, dealing with non-English characters requires more than one byte. For example, just the Chinese language includes tens of thousands of characters, necessitating a character set that uses multiple bytes.</p>
<p>Initially, different countries had their own character encoding systems, making it difficult to mix various character sets. To address this, Unicode was developed, consolidating all characters into a single character set.</p>
<p>Unicode assigns a unique number to each character, known as a code point. The range from 0 to 127 overlaps with ASCII. Characters are typically represented in the format “U+hexadecimal code point,” where, for example, <code>U+0041</code> represents the letter <code>A</code>.</p>
<p>Currently, Unicode encompasses over a million characters, with code points ranging from U+0000 to U+10FFFF. To fully represent the entire Unicode character set, at least three bytes are needed. However, not all documents require that many characters. For English texts that only use ASCII, representing each character with three bytes would result in files three times larger than necessary.</p>
<p>To accommodate different usage needs, the Unicode Consortium has provided three encoding methods for representing Unicode code points:</p>
<ul>
<li><strong>UTF-8</strong>: Uses 1 to 4 bytes to represent a code point, with the number of bytes varying by character.</li>
<li><strong>UTF-16</strong>: Represents characters in the Basic Multilingual Plane (U+0000 to U+FFFF) with 2 bytes, while other characters use 4 bytes.</li>
<li><strong>UTF-32</strong>: Uses a uniform 4 bytes for each code point.</li>
</ul>
<p>UTF-8 is the most widely used encoding, as it represents ASCII characters (U+0000 to U+007F) with just one byte, making it compatible with traditional ASCII encoding.</p>
<p>C provides two macros that indicate the maximum number of bytes supported for character encoding, both defined in the <code>limits.h</code> header:</p>
<ul>
<li><strong>MB_LEN_MAX</strong>: The maximum byte length supported by any locale.</li>
<li><strong>MB_CUR_MAX</strong>: The maximum byte length for the current locale, which is always less than or equal to MB_LEN_MAX.</li>
</ul>
<h2 id="Character-Representation"><a href="#Character-Representation" class="headerlink" title="Character Representation"></a>Character Representation</h2><p>The essence of character representation is mapping each character to an integer, allowing retrieval from an encoding table.</p>
<p>C offers various methods to express the integer values of characters:</p>
<ul>
<li><code>\123</code>: Represents a character using an octal value (three digits following the backslash).</li>
<li><code>\x4D</code>: Represents a character using a hexadecimal value (<code>\x</code> followed by a hexadecimal integer).</li>
<li><code>\u2620</code>: Represents a character using a Unicode code point (not applicable to ASCII), with four hexadecimal digits following <code>\u</code>.</li>
<li><code>\U0001243F</code>: Represents a character using a Unicode code point (not applicable to ASCII), with eight hexadecimal digits following <code>\U</code>.</li>
</ul>
<p>Examples:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ABC\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\101\102\103\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\x41\x42\x43\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>All three lines output “ABC”.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\u2022 Bullet 1\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\U00002022 Bullet 1\n&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>Both of these lines output “• Bullet 1”.</p>
<h2 id="Representation-of-Multi-Byte-Characters-in-C"><a href="#Representation-of-Multi-Byte-Characters-in-C" class="headerlink" title="Representation of Multi-Byte Characters in C"></a>Representation of Multi-Byte Characters in C</h2><p>In C, only basic characters can be represented using string literals. Other characters should be represented using their code points, and the current system must support the encoding method for those code points.</p>
<p><strong>Basic characters</strong> refer to all printable ASCII characters, with three exceptions: <code>@</code>, <code>$</code>, and ```.</p>
<p>Thus, for non-English characters, you should use the Unicode code point format.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s = <span class="string">&quot;\u6625\u5929&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s); <span class="comment">// Outputs: 春天</span></span><br></pre></td></tr></table></figure>
<p>The code above outputs the Chinese word “春天” (spring).</p>
<p>If the current system uses UTF-8 encoding, you can directly represent multi-byte characters with string literals:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s = <span class="string">&quot;春天&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);</span><br></pre></td></tr></table></figure>
<p>Note that the <code>\u</code> and <code>\U</code> syntax cannot be used to represent ASCII characters (code points less than <code>0xA0</code>), except for the following three characters: <code>0x24</code> (<code>$</code>), <code>0x40</code> (<code>@</code>), and <code>0x60</code> (```).</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s = <span class="string">&quot;\u0024\u0040\u0060&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);  <span class="comment">// Outputs: @$`</span></span><br></pre></td></tr></table></figure>
<p>The code above correctly outputs the three Unicode characters “@$`”, but other ASCII characters cannot be represented this way.</p>
<p>To ensure that characters are correctly interpreted during program execution, it’s best to switch the program environment to a localized setting:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>The <code>setlocale()</code> function changes the execution environment to the system’s locale language. Its prototype is defined in the header file <code>locale.h</code>, as detailed in the standard library section on <code>locale.h</code>.</p>
<p>You can also specify the encoding explicitly:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;zh_CN.UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>This switches the program environment to a Chinese locale with UTF-8 encoding.</p>
<p>C also allows the use of the <code>u8</code> prefix to specify UTF-8 encoding for multi-byte strings:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s = <span class="string">u8&quot;春天&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);</span><br></pre></td></tr></table></figure>
<p>When a string contains multi-byte characters, the number of bytes does not equal the number of characters. For example, a string may be 10 bytes long but contain only 7 or 5 characters.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* s = <span class="string">&quot;春天&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">strlen</span>(s)); <span class="comment">// Outputs: 6</span></span><br></pre></td></tr></table></figure>
<p>In this example, the string <code>s</code> contains only two characters, but <code>strlen()</code> returns 6, indicating that these two characters occupy 6 bytes.</p>
<p>C’s string functions only work with single-byte characters, so functions like <code>strtok()</code>, <code>strchr()</code>, <code>strspn()</code>, <code>toupper()</code>, <code>tolower()</code>, and <code>isalpha()</code> will not yield correct results with multi-byte characters.</p>
<h2 id="Wide-Characters"><a href="#Wide-Characters" class="headerlink" title="Wide Characters"></a>Wide Characters</h2><p>In the previous section, we discussed multi-byte strings, where the byte width of each character can vary. While this encoding method is convenient, it complicates string processing since each character must be examined individually to determine its byte length. To address this, C provides a fixed-width character storage method known as <strong>wide characters</strong>.</p>
<p><strong>Wide characters</strong> use a consistent number of bytes per character, either 2 bytes or 4 bytes. This uniformity simplifies and speeds up processing.</p>
<p>Wide characters are represented by a specific data type, <code>wchar_t</code>, which can be either signed or unsigned, depending on the implementation. This type typically has a length of 16 bits (2 bytes) or 32 bits (4 bytes), making it capable of storing all characters used by the current system. The <code>wchar_t</code> type is defined in the header file <code>wchar.h</code>.</p>
<p>To define wide character literals, you must prefix them with an “L”. Without this prefix, C will treat the literal as a narrow character type.</p>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">wchar_t</span> c = <span class="string">L&#x27;牛&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lc\n&quot;</span>, c);</span><br><span class="line"></span><br><span class="line"><span class="type">wchar_t</span>* s = <span class="string">L&quot;春天&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%ls\n&quot;</span>, s);</span><br></pre></td></tr></table></figure>
<p>In this example, the “L” prefix before the single quote indicates a wide character, which corresponds to the <code>%lc</code> format specifier in <code>printf()</code>. Similarly, the prefix before the double quote signifies a wide string, corresponding to the <code>%ls</code> specifier.</p>
<p>Wide strings also end with a wide null character, which occupies multiple bytes.</p>
<p>When working with wide characters, you should use functions specifically designed for them, most of which are defined in the <code>wchar.h</code> header file.</p>
<h2 id="Multibyte-Character-Handling-Functions"><a href="#Multibyte-Character-Handling-Functions" class="headerlink" title="Multibyte Character Handling Functions"></a>Multibyte Character Handling Functions</h2><h3 id="mblen"><a href="#mblen" class="headerlink" title="mblen()"></a><strong>mblen()</strong></h3><p>The <code>mblen()</code> function returns the number of bytes occupied by a multibyte character. Its prototype is defined in the <code>stdlib.h</code> header file:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">mblen</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* mbstr, <span class="type">size_t</span> n)</span>;</span><br></pre></td></tr></table></figure>
<p>This function takes two parameters: the first is a pointer to a multibyte string, which typically checks the first character of the string; the second is the number of bytes to check, which should not exceed the maximum bytes used by a single character on the current system, typically represented by <code>MB_CUR_MAX</code>.</p>
<p>The return value indicates the number of bytes used by the current character. If the character is a null wide character, it returns 0; if the character is invalid, it returns -1.</p>
<p>Example usage:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* mbs1 = <span class="string">&quot;春天&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, mblen(mbs1, MB_CUR_MAX)); <span class="comment">// Outputs: 3</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* mbs2 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, mblen(mbs2, MB_CUR_MAX)); <span class="comment">// Outputs: 1</span></span><br></pre></td></tr></table></figure>
<p>In the examples above, the first character “春” in the string “春天” occupies 3 bytes, while the first character “a” in the string “abc” occupies 1 byte.</p>
<h3 id="wctomb"><a href="#wctomb" class="headerlink" title="wctomb()"></a>wctomb()</h3><p>The <code>wctomb()</code> function (wide character to multibyte) converts a wide character to a multibyte character. Its prototype is also defined in the <code>stdlib.h</code> header file:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">wctomb</span><span class="params">(<span class="type">char</span>* s, <span class="type">wchar_t</span> wc)</span>;</span><br></pre></td></tr></table></figure>
<p><code>wctomb()</code> takes two parameters: the first is a buffer for the resulting multibyte character, and the second is the wide character to convert. The return value indicates the number of bytes used to store the multibyte character; if the conversion fails, it returns -1.</p>
<p>Example usage:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">wchar_t</span> wc = <span class="string">L&#x27;牛&#x27;</span>;</span><br><span class="line"><span class="type">char</span> mbStr[<span class="number">10</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> nBytes = wctomb(mbStr, wc);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, mbStr);  <span class="comment">// Outputs: 牛</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, nBytes);  <span class="comment">// Outputs: 3</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>wctomb()</code> converts the wide character “牛” into a multibyte character, and the return value indicates that it occupies 3 bytes.</p>
<h3 id="mbtowc"><a href="#mbtowc" class="headerlink" title="mbtowc()"></a>mbtowc()</h3><p>The <code>mbtowc()</code> function converts a multibyte character to a wide character. Its prototype is defined in the header file <code>stdlib.h</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">mbtowc</span><span class="params">(<span class="type">wchar_t</span>* wchar, <span class="type">const</span> <span class="type">char</span>* mbchar, <span class="type">size_t</span> count)</span>;</span><br></pre></td></tr></table></figure>
<p><strong>Parameters:</strong></p>
<ul>
<li><code>wchar_t* wchar</code>: A pointer to the wide character that will store the result.</li>
<li><code>const char* mbchar</code>: A pointer to the multibyte character to be converted.</li>
<li><code>size_t count</code>: The number of bytes available in the multibyte character.</li>
</ul>
<p><strong>Return Value:</strong><br>Returns the number of bytes used by the multibyte character if successful; returns -1 if the conversion fails.</p>
<p><strong>Example:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* mbchar = <span class="string">&quot;牛&quot;</span>;</span><br><span class="line"><span class="type">wchar_t</span> wc;</span><br><span class="line"><span class="type">wchar_t</span>* pwc = &amp;wc;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> nBytes = mbtowc(pwc, mbchar, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, nBytes); <span class="comment">// Output: 3</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lc\n&quot;</span>, *pwc);  <span class="comment">// Output: 牛</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>mbtowc()</code> converts the multibyte character “牛” to the wide character <code>wc</code>, returning 3 as the number of bytes used by <code>mbchar</code>.</p>
<h3 id="wcstombs"><a href="#wcstombs" class="headerlink" title="wcstombs()"></a>wcstombs()</h3><p>The <code>wcstombs()</code> function converts a wide string to a multibyte string. Its prototype is also defined in <code>stdlib.h</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">size_t</span> <span class="title function_">wcstombs</span><span class="params">(<span class="type">char</span>* mbstr, <span class="type">const</span> <span class="type">wchar_t</span>* wcstr, <span class="type">size_t</span> count)</span>;</span><br></pre></td></tr></table></figure>
<p><strong>Parameters:</strong></p>
<ul>
<li><code>char* mbstr</code>: A pointer to the destination multibyte string.</li>
<li><code>const wchar_t* wcstr</code>: A pointer to the wide string to be converted.</li>
<li><code>size_t count</code>: The maximum number of bytes to write to the multibyte string.</li>
</ul>
<p><strong>Return Value:</strong><br>Returns the number of bytes written to the multibyte string, not including the terminating null byte; returns -1 if the conversion fails.</p>
<p><strong>Example:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> mbs[<span class="number">20</span>];</span><br><span class="line"><span class="type">wchar_t</span>* wcs = <span class="string">L&quot;春天&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> nBytes = wcstombs(mbs, wcs, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, mbs); <span class="comment">// Output: 春天</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, nBytes); <span class="comment">// Output: 6</span></span><br></pre></td></tr></table></figure>
<p>In this case, <code>wcstombs()</code> converts the wide string <code>wcs</code> to the multibyte string <code>mbs</code>, returning 6, which represents the number of bytes written, excluding the null terminator.</p>
<p>If the first argument of <code>wcstombs()</code> is NULL, the function returns the number of bytes required for the conversion.</p>
<h3 id="mbstowcs"><a href="#mbstowcs" class="headerlink" title="mbstowcs()"></a>mbstowcs()</h3><p>The <code>mbstowcs()</code> function converts a multibyte string to a wide string. Its prototype is defined in <code>stdlib.h</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">size_t</span> <span class="title function_">mbstowcs</span><span class="params">(<span class="type">wchar_t</span>* wcstr, <span class="type">const</span> <span class="type">char</span>* mbstr, <span class="type">size_t</span> count)</span>;</span><br></pre></td></tr></table></figure>
<p><strong>Parameters:</strong></p>
<ul>
<li><code>wchar_t* wcstr</code>: A pointer to the destination wide string.</li>
<li><code>const char* mbstr</code>: A pointer to the multibyte string to be converted.</li>
<li><code>size_t count</code>: The maximum number of multibyte characters to convert.</li>
</ul>
<p><strong>Return Value:</strong><br>Returns the number of wide characters successfully converted; returns -1 if the conversion fails. If the return value equals the third parameter, the resulting wide string is not null-terminated.</p>
<p><strong>Example:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* mbs = <span class="string">&quot;天气不错&quot;</span>;</span><br><span class="line"><span class="type">wchar_t</span> wcs[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> nBytes = mbstowcs(wcs, mbs, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%ls\n&quot;</span>, wcs); <span class="comment">// Output: 天气不错</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, nBytes); <span class="comment">// Output: 4</span></span><br></pre></td></tr></table></figure>
<p>In this example, the multibyte string <code>mbs</code> is converted to a wide string <code>wcs</code>, successfully converting 4 characters, which is reflected in the return value.</p>
<p>If the first argument of <code>mbstowcs()</code> is NULL, the function returns the number of wide characters that would be generated.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>inttypes.h in C Language</title>
    <url>/2024/05/27/c-language-lib-inttypes-h/</url>
    <content><![CDATA[<p>In C, the <code>inttypes.h</code> header file provides format specifiers for integer types defined in <code>stdint.h</code> that can be used with <code>printf()</code> and <code>scanf()</code>. Here are the four types of integer types available:</p>
<ol>
<li><strong>Fixed-width integer types</strong>, e.g., <code>int8_t</code></li>
<li><strong>Minimum-width integer types</strong>, e.g., <code>int_least8_t</code></li>
<li><strong>Fastest minimum-width integer types</strong>, e.g., <code>int_fast8_t</code></li>
<li><strong>Maximum-width integer types</strong>, e.g., <code>intmax_t</code></li>
</ol>
<p>The format specifiers for <code>printf()</code> are formed by combining <code>PRI</code> + original specifier + type keyword/width. For example, if the original specifier is <code>%d</code>, the format specifiers are as follows:</p>
<ul>
<li><code>PRIdn</code> (fixed-width types)</li>
<li><code>PRIdLEASTn</code> (minimum-width types)</li>
<li><code>PRIdFASTn</code> (fastest minimum-width types)</li>
<li><code>PRIdMAX</code> (maximum-width types)</li>
</ul>
<p>The <code>n</code> in these specifiers can be replaced with <code>8</code>, <code>16</code>, <code>32</code>, or <code>64</code>, depending on the integer width.</p>
<p>Here is an example of how to use these specifiers:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;inttypes.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int_least16_t</span> x = <span class="number">3490</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The value is %&quot;</span> PRIdLEAST16 <span class="string">&quot;!\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>PRIdLEAST16</code> is used to match the type <code>int_least16_t</code>, with the original specifier <code>%d</code>. Note that the first argument in <code>printf()</code> uses concatenated strings.</p>
<p>Here are the format specifiers for other original placeholders:</p>
<ul>
<li><code>%i</code>: <code>PRIin</code>, <code>PRIiLEASTn</code>, <code>PRIiFASTn</code>, <code>PRIiMAX</code></li>
<li><code>%o</code>: <code>PRIon</code>, <code>PRIoLEASTn</code>, <code>PRIoFASTn</code>, <code>PRIoMAX</code></li>
<li><code>%u</code>: <code>PRIun</code>, <code>PRIuLEASTn</code>, <code>PRIuFASTn</code>, <code>PRIuMAX</code></li>
<li><code>%x</code>: <code>PRIxn</code>, <code>PRIxLEASTn</code>, <code>PRIxFASTn</code>, <code>PRIxMAX</code></li>
<li><code>%X</code>: <code>PRIXn</code>, <code>PRIXLEASTn</code>, <code>PRIXFASTn</code>, <code>PRIXMAX</code></li>
</ul>
<p>The <code>scanf()</code> format specifiers follow a similar pattern:</p>
<ul>
<li><code>%d</code>: <code>SCNdn</code>, <code>SCNdLEASTn</code>, <code>SCNdFASTn</code>, <code>SCNdMAX</code></li>
<li><code>%i</code>: <code>SCNin</code>, <code>SCNiLEASTn</code>, <code>SCNiFASTn</code>, <code>SCNiMAX</code></li>
<li><code>%o</code>: <code>SCNon</code>, <code>SCNoLEASTn</code>, <code>SCNoFASTn</code>, <code>SCNoMAX</code></li>
<li><code>%u</code>: <code>SCNun</code>, <code>SCNuLEASTn</code>, <code>SCNuFASTn</code>, <code>SCNuMAX</code></li>
<li><code>%x</code>: <code>SCNxn</code>, <code>SCNxLEASTn</code>, <code>SCNxFASTn</code>, <code>SCNxMAX</code></li>
</ul>
<p>These conventions ensure that the correct specifier is used for each integer type, making the code more portable and readable.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>iso646.h in C Language</title>
    <url>/2024/05/28/c-language-lib-iso646-h/</url>
    <content><![CDATA[<p>The <code>iso646.h</code> header file specifies alternative spellings for some common operators. For example, it uses the keyword <code>and</code> as a substitute for the logical operator <code>&amp;&amp;</code>. </p>
<p>Here’s how the following condition can be expressed using these alternatives:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">6</span> <span class="keyword">and</span> x &lt; <span class="number">12</span>)</span><br><span class="line"><span class="comment">// is equivalent to</span></span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">6</span> &amp;&amp; x &lt; <span class="number">12</span>)</span><br></pre></td></tr></table></figure>
<p>The defined alternative spellings are as follows:</p>
<ul>
<li><code>and</code> replaces <code>&amp;&amp;</code></li>
<li><code>and_eq</code> replaces <code>&amp;=</code></li>
<li><code>bitand</code> replaces <code>&amp;</code></li>
<li><code>bitor</code> replaces <code>|</code></li>
<li><code>compl</code> replaces <code>~</code></li>
<li><code>not</code> replaces <code>!</code></li>
<li><code>not_eq</code> replaces <code>!=</code></li>
<li><code>or</code> replaces <code>||</code></li>
<li><code>or_eq</code> replaces <code>|=</code></li>
<li><code>xor</code> replaces <code>^</code></li>
<li><code>xor_eq</code> replaces <code>^=</code></li>
</ul>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>locale.h in C Language</title>
    <url>/2024/05/30/c-language-lib-locale-h/</url>
    <content><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>The <code>locale.h</code> header file manages localization settings in programs, affecting the following behaviors:</p>
<ul>
<li>Number formatting</li>
<li>Currency formatting</li>
<li>Character classification</li>
<li>Date and time formatting</li>
</ul>
<p>It defines several macros:</p>
<ul>
<li><strong>LC_COLLATE</strong>: Influences string comparison functions <code>strcoll()</code> and <code>strxfrm()</code>.</li>
<li><strong>LC_CTYPE</strong>: Affects character processing functions.</li>
<li><strong>LC_MONETARY</strong>: Impacts currency formatting.</li>
<li><strong>LC_NUMERIC</strong>: Modifies number formatting for <code>printf()</code>.</li>
<li><strong>LC_TIME</strong>: Affects date and time formatting functions <code>strftime()</code> and <code>wcsftime()</code>.</li>
<li><strong>LC_ALL</strong>: Sets all categories to the specified locale.</li>
</ul>
<h2 id="setlocale"><a href="#setlocale" class="headerlink" title="setlocale()"></a>setlocale()</h2><p>The function <code>setlocale()</code> sets the current locale.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* <span class="title function_">setlocale</span><span class="params">(<span class="type">int</span> category, <span class="type">const</span> <span class="type">char</span>* locale)</span>;</span><br></pre></td></tr></table></figure>
<p>It accepts two parameters: the first indicates the scope (if it’s one of the five category macros, it only affects that category; if <code>LC_ALL</code>, it affects all). The second parameter is usually <code>&quot;C&quot;</code> (default) or <code>&quot;&quot;</code> (local mode).</p>
<p>By default, every program starts with:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;C&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>To localize formatting, use:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>Here, the second parameter as an empty string indicates the use of the current environment’s locale.</p>
<p>The second parameter can also be set to a specific format supported by the system, like:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">setlocale(LC_ALL, <span class="string">&quot;en_US.UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>However, this reduces portability, as other systems may not support that format. Typically, it’s best to use an empty string to utilize the OS’s current settings.</p>
<p><code>setlocale()</code> returns a string pointer representing the configured locale. If it fails, it returns <code>NULL</code>. You can also query the current locale by setting the second parameter to <code>NULL</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> *loc;</span><br><span class="line">loc = setlocale(LC_ALL, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Starting locale: %s\n&quot;</span>, loc);</span><br><span class="line">loc = setlocale(LC_ALL, <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Native locale: %s\n&quot;</span>, loc);</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="localeconv"><a href="#localeconv" class="headerlink" title="localeconv()"></a>localeconv()</h2><p>The function <code>localeconv()</code> retrieves detailed information about the current locale settings.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> lconv* <span class="title function_">localeconv</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>It returns a pointer to a <code>struct</code> containing various formatting properties:</p>
<ul>
<li><code>char* mon_decimal_point</code>: Decimal point character (e.g., <code>.</code>).</li>
<li><code>char* mon_thousands_sep</code>: Thousands separator (e.g., <code>,</code>).</li>
<li><code>char* mon_grouping</code>: Grouping descriptor for currency.</li>
<li><code>char* positive_sign</code>: Positive sign character (e.g., <code>+</code> or empty).</li>
<li><code>char* negative_sign</code>: Negative sign character (e.g., <code>-</code>).</li>
<li><code>char* currency_symbol</code>: Currency symbol (e.g., <code>$</code>).</li>
<li><code>char frac_digits</code>: Number of decimal places for currency.</li>
<li><code>char p_cs_precedes</code>: Indicates if the currency symbol appears before non-negative amounts (1 = yes, 0 = no).</li>
<li><code>char n_cs_precedes</code>: Indicates if the currency symbol appears before negative amounts (1 = yes, 0 = no).</li>
<li><code>char p_sep_by_space</code>: Determines space between non-negative amounts and the currency symbol.</li>
<li><code>char n_sep_by_space</code>: Determines space between negative amounts and the currency symbol.</li>
<li><code>char p_sign_posn</code>: Position of the positive sign.</li>
<li><code>char n_sign_posn</code>: Position of the negative sign.</li>
<li><code>char* int_curr_symbol</code>: International currency symbol (e.g., <code>USD</code>).</li>
<li><code>char int_frac_digits</code>: The value of <code>frac_digits</code> when using the international symbol.</li>
<li><code>char int_p_cs_precedes</code>: The value of <code>p_cs_precedes</code> when using the international symbol.</li>
<li><code>char int_n_cs_precedes</code>: The value of <code>n_cs_precedes</code> when using the international symbol.</li>
<li><code>char int_p_sep_by_space</code>: The value of <code>p_sep_by_space</code> when using the international symbol.</li>
<li><code>char int_n_sep_by_space</code>: The value of <code>n_sep_by_space</code> when using the international symbol.</li>
<li><code>char int_p_sign_posn</code>: The value of <code>p_sign_posn</code> when using the international symbol.</li>
<li><code>char int_n_sign_posn</code>: The value of <code>n_sign_posn</code> when using the international symbol.</li>
</ul>
<h2 id="Example-Program"><a href="#Example-Program" class="headerlink" title="Example Program"></a>Example Program</h2><p>The following program prints the current system’s locale settings:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    setlocale (LC_ALL,<span class="string">&quot;zh_CN&quot;</span>);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">lconv</span> * <span class="title">lc</span>;</span></span><br><span class="line">    lc=localeconv();</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;decimal_point: %s\n&quot;</span>,lc-&gt;decimal_point);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;thousands_sep: %s\n&quot;</span>,lc-&gt;thousands_sep);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;grouping: %s\n&quot;</span>,lc-&gt;grouping);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;int_curr_symbol: %s\n&quot;</span>,lc-&gt;int_curr_symbol);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;currency_symbol: %s\n&quot;</span>,lc-&gt;currency_symbol);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;mon_decimal_point: %s\n&quot;</span>,lc-&gt;mon_decimal_point);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;mon_thousands_sep: %s\n&quot;</span>,lc-&gt;mon_thousands_sep);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;mon_grouping: %s\n&quot;</span>,lc-&gt;mon_grouping);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;positive_sign: %s\n&quot;</span>,lc-&gt;positive_sign);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;negative_sign: %s\n&quot;</span>,lc-&gt;negative_sign);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;frac_digits: %d\n&quot;</span>,lc-&gt;frac_digits);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;p_cs_precedes: %d\n&quot;</span>,lc-&gt;p_cs_precedes);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;n_cs_precedes: %d\n&quot;</span>,lc-&gt;n_cs_precedes);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;p_sep_by_space: %d\n&quot;</span>,lc-&gt;p_sep_by_space);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;n_sep_by_space: %d\n&quot;</span>,lc-&gt;n_sep_by_space);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;p_sign_posn: %d\n&quot;</span>,lc-&gt;p_sign_posn);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;n_sign_posn: %d\n&quot;</span>,lc-&gt;n_sign_posn);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;int_frac_digits: %d\n&quot;</span>,lc-&gt;int_frac_digits);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;int_p_cs_precedes: %d\n&quot;</span>,lc-&gt;int_p_cs_precedes);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;int_n_cs_precedes: %d\n&quot;</span>,lc-&gt;int_n_cs_precedes);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;int_p_sep_by_space: %d\n&quot;</span>,lc-&gt;int_p_sep_by_space);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;int_n_sep_by_space: %d\n&quot;</span>,lc-&gt;int_n_sep_by_space);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;int_p_sign_posn: %d\n&quot;</span>,lc-&gt;int_p_sign_posn);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;int_n_sign_posn: %d\n&quot;</span>,lc-&gt;int_n_sign_posn);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>limits.h in C Language</title>
    <url>/2024/05/29/c-language-lib-limits-h/</url>
    <content><![CDATA[<p>The <code>limits.h</code> header provides macros that define the range of values for various integer types, including character types. Here are the key macros:</p>
<ul>
<li><code>CHAR_BIT</code>: Number of bits in a character.</li>
<li><code>SCHAR_MIN</code>: Minimum value of a signed <code>char</code>.</li>
<li><code>SCHAR_MAX</code>: Maximum value of a signed <code>char</code>.</li>
<li><code>UCHAR_MAX</code>: Maximum value of an unsigned <code>char</code>.</li>
<li><code>CHAR_MIN</code>: Minimum value of a <code>char</code>.</li>
<li><code>CHAR_MAX</code>: Maximum value of a <code>char</code>.</li>
<li><code>MB_LEN_MAX</code>: Maximum number of bytes in a multibyte character.</li>
<li><code>SHRT_MIN</code>: Minimum value of a <code>short int</code>.</li>
<li><code>SHRT_MAX</code>: Maximum value of a <code>short int</code>.</li>
<li><code>USHRT_MAX</code>: Maximum value of an unsigned <code>short int</code>.</li>
<li><code>INT_MIN</code>: Minimum value of an <code>int</code>.</li>
<li><code>INT_MAX</code>: Maximum value of an <code>int</code>.</li>
<li><code>UINT_MAX</code>: Maximum value of an unsigned <code>int</code>.</li>
<li><code>LONG_MIN</code>: Minimum value of a <code>long int</code>.</li>
<li><code>LONG_MAX</code>: Maximum value of a <code>long int</code>.</li>
<li><code>ULONG_MAX</code>: Maximum value of an unsigned <code>long int</code>.</li>
<li><code>LLONG_MIN</code>: Minimum value of a <code>long long int</code>.</li>
<li><code>LLONG_MAX</code>: Maximum value of a <code>long long int</code>.</li>
<li><code>ULLONG_MAX</code>: Maximum value of an unsigned <code>long long int</code>.</li>
</ul>
<p>Here’s an example of using preprocessor directives to check if an <code>int</code> type can store values larger than 100,000:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> INT_MAX &lt; 100000</span></span><br><span class="line">  <span class="meta">#<span class="keyword">error</span> int type is too small</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>In this example, if the <code>int</code> type is too small, the preprocessor will display an error message.</p>
<p>You can use macros from <code>limits.h</code> to select the correct underlying type for a type alias. For example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> INT_MAX &gt;= 100000</span></span><br><span class="line">  <span class="keyword">typedef</span> <span class="type">int</span> Quantity;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">  <span class="keyword">typedef</span> <span class="type">long</span> <span class="type">int</span> Quantity;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>In this example, if the maximum value for the <code>int</code> type (<code>INT_MAX</code>) is at least 100,000, the alias <code>Quantity</code> will be defined as <code>int</code>. Otherwise, it will be defined as <code>long int</code>.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>Array in C Language</title>
    <url>/2024/05/09/c-language-array/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>An array is a collection of values of the same type stored in a sequential manner. Arrays are represented by a variable name followed by square brackets, with the number inside the brackets indicating the number of elements in the array.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> scores[<span class="number">100</span>];</span><br></pre></td></tr></table></figure>
<p>In this example, an array named <code>scores</code> is declared with 100 elements, each of which is of type <code>int</code>.</p>
<p><strong>Note:</strong> When declaring an array, you must specify its size.</p>
<p>Array elements are indexed starting from 0. Thus, in an array <code>scores[100]</code>, the indices range from 0 to 99. The last element’s index is always one less than the array’s length.</p>
<p>You can access and assign values to array elements using their index in square brackets:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">scores[<span class="number">0</span>] = <span class="number">13</span>;</span><br><span class="line">scores[<span class="number">99</span>] = <span class="number">42</span>;</span><br></pre></td></tr></table></figure>
<p>The above example assigns values to the first and last positions of the <code>scores</code> array.</p>
<p><strong>Note:</strong> Accessing an out-of-bounds index (i.e., accessing an element that does not exist) does not produce an error, so you must be very careful to avoid such out-of-bounds access.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> scores[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">scores[<span class="number">100</span>] = <span class="number">51</span>;</span><br></pre></td></tr></table></figure>
<p>In this example, the array <code>scores</code> only has 100 elements, so <code>scores[100]</code> is out of bounds. Accessing this index will not produce an error but will modify memory adjacent to the array, potentially altering other variables. This can lead to difficult-to-diagnose errors.</p>
<p>Arrays can also be initialized using curly braces at the time of declaration:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">22</span>, <span class="number">37</span>, <span class="number">3490</span>, <span class="number">18</span>, <span class="number">95</span>&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>Note:</strong> When initializing an array with curly braces, you must do so at the time of declaration. Initializing an already declared array with curly braces will result in a compilation error.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>];</span><br><span class="line">a = &#123;<span class="number">22</span>, <span class="number">37</span>, <span class="number">3490</span>, <span class="number">18</span>, <span class="number">95</span>&#125;; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>The error occurs because, once an array is declared, its memory address cannot be changed, as will be explained later. Therefore, you cannot reassign values to an already declared array using curly braces.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">a = &#123;<span class="number">22</span>, <span class="number">37</span>, <span class="number">3490</span>, <span class="number">18</span>, <span class="number">95</span>&#125;; <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>Reassigning values using curly braces after an initial declaration is also not allowed.</p>
<p>When using curly braces for initialization, if you provide more values than the array’s size, a compilation error will occur.</p>
<p>If you provide fewer values than the array size, the remaining elements will be automatically initialized to 0.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">22</span>, <span class="number">37</span>, <span class="number">3490</span>&#125;;</span><br><span class="line"><span class="comment">// Equivalent to</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">22</span>, <span class="number">37</span>, <span class="number">3490</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>To initialize an entire array to zero, you can use:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>You can also specify values for specific positions in an array:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">15</span>] = &#123;[<span class="number">2</span>] = <span class="number">29</span>, [<span class="number">9</span>] = <span class="number">7</span>, [<span class="number">14</span>] = <span class="number">48</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>In this example, only the 2nd, 9th, and 14th positions are assigned values; all other positions default to 0.</p>
<p>Assignments to specific positions can be done in any order:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">15</span>] = &#123;[<span class="number">9</span>] = <span class="number">7</span>, [<span class="number">14</span>] = <span class="number">48</span>, [<span class="number">2</span>] = <span class="number">29</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>You can combine specific position assignments with sequential initialization:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">15</span>] = &#123;<span class="number">1</span>, [<span class="number">5</span>] = <span class="number">10</span>, <span class="number">11</span>, [<span class="number">10</span>] = <span class="number">20</span>, <span class="number">21</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>In this example, elements at positions 0, 5, 6, 10, and 11 are assigned values.</p>
<p>C allows you to omit the size of an array during declaration. In this case, the array’s length is automatically determined by the number of values provided:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[] = &#123;<span class="number">22</span>, <span class="number">37</span>, <span class="number">3490</span>&#125;;</span><br><span class="line"><span class="comment">// Equivalent to</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>] = &#123;<span class="number">22</span>, <span class="number">37</span>, <span class="number">3490</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>Here, the length of the array <code>a</code> is 3, based on the number of values in the curly braces.</p>
<p>When using specific position assignments with omitted sizes, the array length will be one more than the highest specified index:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[] = &#123;[<span class="number">2</span>] = <span class="number">6</span>, [<span class="number">9</span>] = <span class="number">12</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>In this case, the highest specified index is 9, so the array length is 10.</p>
<h2 id="Array-Length"><a href="#Array-Length" class="headerlink" title="Array Length"></a>Array Length</h2><p>In C, the <code>sizeof</code> operator returns the total byte size of an array.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[] = &#123;<span class="number">22</span>, <span class="number">37</span>, <span class="number">3490</span>&#125;;</span><br><span class="line"><span class="type">int</span> arrLen = <span class="keyword">sizeof</span>(a); <span class="comment">// 12 bytes</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>sizeof(a)</code> returns the total byte size of the array <code>a</code>, which is 12 bytes.</p>
<p>Since all elements in the array are of the same type, each element occupies the same number of bytes. Therefore, to determine the number of elements in the array, you divide the total byte size of the array by the byte size of a single element:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sizeof</span>(a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<p>In this case, <code>sizeof(a)</code> gives the total byte size of the array, while <code>sizeof(a[0])</code> provides the byte size of a single element. Dividing these values gives the number of elements in the array.</p>
<p>Note that <code>sizeof</code> returns a value of type <code>size_t</code>, so the result of <code>sizeof(a) / sizeof(a[0])</code> is also of type <code>size_t</code>. Use <code>%zu</code> or <code>%zd</code> format specifiers in <code>printf</code> to print <code>size_t</code> values.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x[<span class="number">12</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%zu\n&quot;</span>, <span class="keyword">sizeof</span>(x));     <span class="comment">// 48 bytes</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%zu\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>));  <span class="comment">// 4 bytes</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%zu\n&quot;</span>, <span class="keyword">sizeof</span>(x) / <span class="keyword">sizeof</span>(<span class="type">int</span>)); <span class="comment">// 12 elements</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>sizeof(x) / sizeof(int)</code> computes the number of elements in the array, which is 12.</p>
<h2 id="Multidimensional-Arrays"><a href="#Multidimensional-Arrays" class="headerlink" title="Multidimensional Arrays"></a>Multidimensional Arrays</h2><p>C allows you to declare arrays with multiple dimensions by using multiple sets of square brackets. For example, a two-dimensional array is declared with two sets of square brackets:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> board[<span class="number">10</span>][<span class="number">10</span>];</span><br></pre></td></tr></table></figure>
<p>Here, <code>board</code> is a two-dimensional array with 10 elements in each dimension, resulting in a total of 100 elements (10 x 10).</p>
<p>In a multidimensional array, each element of the higher dimension is itself an array. For instance, in <code>board[10][10]</code>, each of the 10 elements in the first dimension is an array of 10 elements.</p>
<p>To reference elements in a two-dimensional array, you use two sets of square brackets to specify the row and column:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">board[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">13</span>;</span><br><span class="line">board[<span class="number">9</span>][<span class="number">9</span>] = <span class="number">13</span>;</span><br></pre></td></tr></table></figure>
<p>Note that <code>board[0][0]</code> should not be written as <code>board[0, 0]</code>, because <code>0, 0</code> is a comma-separated expression and evaluates to <code>0</code>, making <code>board[0, 0]</code> equivalent to <code>board[0]</code>.</p>
<p>Just like with one-dimensional arrays, indexing in multidimensional arrays starts at 0.</p>
<p>Multidimensional arrays can also be initialized with nested braces:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">5</span>] = &#123;</span><br><span class="line">  &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">  &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>a</code> is a two-dimensional array. This initialization syntax assigns values to the array elements, with any omitted values automatically set to 0.</p>
<p>You can also initialize specific elements using designated initializers:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">2</span>] = &#123;[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>, [<span class="number">1</span>][<span class="number">1</span>] = <span class="number">2</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>Here, only the elements at <code>[0][0]</code> and <code>[1][1]</code> are set to 1 and 2 respectively, with all other elements defaulting to 0.</p>
<p>Regardless of the number of dimensions, arrays are stored in memory in a linear fashion. For example, in a 2D array, elements are stored row by row. Therefore, you can also use a single set of braces for initialization:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">2</span>] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>This syntax is equivalent to the previous initialization methods, with values assigned in row-major order.</p>
<h2 id="Variable-Length-Arrays-VLAs"><a href="#Variable-Length-Arrays-VLAs" class="headerlink" title="Variable-Length Arrays (VLAs)"></a>Variable-Length Arrays (VLAs)</h2><p>When declaring arrays, their length can be specified with a variable, not just a constant. This is known as a variable-length array (VLA).</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n = x + y;</span><br><span class="line"><span class="type">int</span> arr[n];</span><br></pre></td></tr></table></figure>
<p>In this example, <code>arr</code> is a VLA because its length depends on the variable <code>n</code>, which is determined at runtime.</p>
<p>A VLA is characterized by having its length only known at runtime. This allows programmers to allocate arrays with precise lengths at runtime instead of guessing a size during development.</p>
<p>Any array whose length is determined at runtime is a VLA.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a1[i];</span><br><span class="line"><span class="type">int</span> a2[i + <span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> a3[i + k];</span><br></pre></td></tr></table></figure>
<p>In these examples, the lengths of <code>a1</code>, <code>a2</code>, and <code>a3</code> are only known at runtime, so they are all VLAs.</p>
<p>VLAs can also be used in multidimensional arrays.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> m = <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> c[m][n];</span><br></pre></td></tr></table></figure>
<p>Here, <code>c[m][n]</code> is a two-dimensional VLA.</p>
<h2 id="Array-Addresses"><a href="#Array-Addresses" class="headerlink" title="Array Addresses"></a>Array Addresses</h2><p>Arrays consist of a sequence of contiguous values of the same type. By obtaining the address of the first element, you can calculate the addresses of the other elements.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"><span class="type">int</span>* p;</span><br><span class="line"></span><br><span class="line">p = &amp;a[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p);  <span class="comment">// Prints &quot;11&quot;</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>&amp;a[0]</code> is the address of the first element of <code>a</code>, and <code>*p</code> retrieves its value.</p>
<p>Since getting the starting address of an array is a common operation, C provides a shorthand: the array name itself represents the address of the first element.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"><span class="type">int</span>* p = &amp;a[<span class="number">0</span>];  <span class="comment">// Equivalent to</span></span><br><span class="line"><span class="type">int</span>* p = a;</span><br></pre></td></tr></table></figure>
<p>Here, <code>&amp;a[0]</code> and <code>a</code> are equivalent.</p>
<p>Passing an array to a function is the same as passing a pointer to its first element. You can declare a function to accept an array like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Option 1</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span>;</span><br><span class="line"><span class="comment">// Option 2</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> len)</span>;</span><br></pre></td></tr></table></figure>
<p>The function prototype with <code>arr[]</code> or <code>*arr</code> is interchangeable. Here’s how you can sum the elements using a pointer:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    total += arr[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here, the function takes a pointer <code>arr</code> (which is also the array name) and an integer <code>len</code> for the array length, summing the array elements.</p>
<p>Pointer operations also apply to multidimensional arrays.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">4</span>][<span class="number">2</span>];</span><br><span class="line"><span class="comment">// Accessing a[0][0]</span></span><br><span class="line">*(a[<span class="number">0</span>]);  <span class="comment">// Equivalent to **a</span></span><br></pre></td></tr></table></figure>
<p>In this case, <code>a[0]</code> is a pointer to the first row of the array, and <code>**a</code> accesses <code>a[0][0]</code>.</p>
<p>Note that the array name is fixed and cannot be reassigned.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> ints[<span class="number">100</span>];</span><br><span class="line">ints = <span class="literal">NULL</span>;  <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>Reassigning the array name will cause an error.</p>
<p>Similarly, you cannot assign one array to another.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Option 1</span></span><br><span class="line"><span class="type">int</span> b[<span class="number">5</span>] = a;  <span class="comment">// Error</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Option 2</span></span><br><span class="line"><span class="type">int</span> b[<span class="number">5</span>];</span><br><span class="line">b = a;  <span class="comment">// Error</span></span><br></pre></td></tr></table></figure>
<p>Both attempts to reassign the array address will result in an error.</p>
<p>Here’s a refined version of the explanation in English:</p>
<h2 id="Pointer-Arithmetic-with-Arrays"><a href="#Pointer-Arithmetic-with-Arrays" class="headerlink" title="Pointer Arithmetic with Arrays"></a>Pointer Arithmetic with Arrays</h2><p>In C, you can perform addition and subtraction operations on array pointers. This effectively moves between the memory addresses of array elements. For instance, <code>a + 1</code> gives the address of the next element, while <code>a - 1</code> gives the address of the previous element.</p>
<p>Consider the following array and loop:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *(a + i));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, we use pointer arithmetic to traverse the array. The expression <code>a + i</code> points to the address of the <code>i</code>-th element, and <code>*(a + i)</code> retrieves the value at that address, which is equivalent to <code>a[i]</code>. For the first element, <code>*(a + 0)</code> (or <code>*a</code>) is the same as <code>a[0]</code>.</p>
<p>Since array names and pointers are equivalent, the following equality always holds:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a[b] == *(a + b)</span><br></pre></td></tr></table></figure>
<p>This demonstrates two ways to access array elements: using the subscript notation <code>a[b]</code> and pointer dereferencing <code>*(a + b)</code>.</p>
<p>If a pointer variable <code>p</code> points to an array element, then <code>p++</code> will point to the next element. This is commonly used to traverse arrays:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[] = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">999</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* p = a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (*p != <span class="number">999</span>) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p);</span><br><span class="line">  p++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In this example, <code>p++</code> moves the pointer to the next element.</p>
<p>Note that the address of the array itself (<code>a</code>) cannot be modified, so <code>a++</code> is invalid. Instead, assign the array’s address to a pointer variable and increment the pointer:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[] = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">999</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* p = a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (p &lt; a + <span class="number">6</span>) &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, *p);</span><br><span class="line">  p++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Calculating-Array-Length"><a href="#Calculating-Array-Length" class="headerlink" title="Calculating Array Length"></a>Calculating Array Length</h3><p>You can also compute the length of an array by comparing pointers:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>* start, <span class="type">int</span>* end)</span> &#123;</span><br><span class="line">  <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (start &lt; end) &#123;</span><br><span class="line">    total += *start;</span><br><span class="line">    start++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">5</span>] = &#123;<span class="number">20</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">39</span>, <span class="number">4</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%i\n&quot;</span>, sum(arr, arr + <span class="number">5</span>));</span><br></pre></td></tr></table></figure>
<p>Here, <code>arr</code> is the start address and <code>arr + 5</code> is the end address. As long as the start address is less than the end address, the function accumulates the values.</p>
<p>To find the number of elements between two pointers:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">5</span>] = &#123;<span class="number">20</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">39</span>, <span class="number">88</span>&#125;;</span><br><span class="line"><span class="type">int</span>* p = arr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (*p != <span class="number">88</span>)</span><br><span class="line">  p++;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%i\n&quot;</span>, p - arr); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure>
<p>The difference <code>p - arr</code> gives the number of elements between the start of the array and the pointer <code>p</code>.</p>
<h3 id="Pointer-Arithmetic-with-Multidimensional-Arrays"><a href="#Pointer-Arithmetic-with-Multidimensional-Arrays" class="headerlink" title="Pointer Arithmetic with Multidimensional Arrays"></a>Pointer Arithmetic with Multidimensional Arrays</h3><p>For multidimensional arrays, pointer arithmetic works differently depending on the dimension:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">4</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Pointer points to arr[1]</span></span><br><span class="line">arr + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Pointer points to arr[0][1]</span></span><br><span class="line">arr[<span class="number">0</span>] + <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>arr</code> is a 2D array. <code>arr + 1</code> moves the pointer to the next 1D array (i.e., <code>arr[1]</code>). Since each 1D array is an array of integers, <code>arr[0] + 1</code> moves the pointer to the next integer in the first 1D array, which is <code>arr[0][1]</code>.</p>
<h2 id="Array-Copying"><a href="#Array-Copying" class="headerlink" title="Array Copying"></a>Array Copying</h2><p>Since array names are pointers, you cannot directly copy arrays by assigning their names:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>* a;</span><br><span class="line"><span class="type">int</span> b[<span class="number">3</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">a = b;</span><br></pre></td></tr></table></figure>
<p>In this case, <code>a</code> and <code>b</code> point to the same array. To copy arrays, you need to copy each element individually:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">  a[i] = b[i];</span><br></pre></td></tr></table></figure>
<p>Alternatively, you can use <code>memcpy()</code> from the <code>string.h</code> library, which is faster:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(a, b, <span class="keyword">sizeof</span>(b));</span><br></pre></td></tr></table></figure>
<p>This copies the entire memory block occupied by array <code>b</code> to array <code>a</code>.</p>
<h2 id="Passing-Arrays-to-Functions"><a href="#Passing-Arrays-to-Functions" class="headerlink" title="Passing Arrays to Functions"></a>Passing Arrays to Functions</h2><p>When passing arrays to functions, you typically provide both the array name and its length.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum_array</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[] = &#123;<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> sum = sum_array(a, <span class="number">4</span>);</span><br></pre></td></tr></table></figure>
<p>In this example, <code>sum_array()</code> takes the array <code>a</code> and its length <code>4</code> as parameters. The array name alone (i.e., <code>a</code>) is a pointer to the first element, so the function only knows where the array starts, not its size. Hence, you need to pass the length as well.</p>
<p>For multidimensional arrays, you need to specify the size of all but the first dimension in the function definition.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum_array</span><span class="params">(<span class="type">int</span> a[][<span class="number">4</span>], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">  &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">  &#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> sum = sum_array(a, <span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<p>Here, <code>sum_array()</code> takes a 2D array with the second dimension size specified (4). The first dimension (2) is passed as a separate parameter, and the function knows each element’s size because the second dimension is provided.</p>
<h3 id="Variable-Length-Arrays"><a href="#Variable-Length-Arrays" class="headerlink" title="Variable-Length Arrays"></a>Variable-Length Arrays</h3><p>When using variable-length arrays (VLAs) as parameters, the syntax changes slightly:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum_array</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> a[n])</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[] = &#123;<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> sum = sum_array(<span class="number">4</span>, a);</span><br></pre></td></tr></table></figure>
<p>In this case, the array’s length depends on the value of <code>n</code>, which must be passed before the VLA parameter. The function prototype can omit variable names:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum_array</span><span class="params">(<span class="type">int</span>, <span class="type">int</span> [])</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sum_array</span><span class="params">(<span class="type">int</span>, <span class="type">int</span> [*])</span>;</span><br></pre></td></tr></table></figure>
<p>For multidimensional arrays, you can omit the size of the last dimension:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum_array</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m, <span class="type">int</span> a[n][m])</span>;</span><br></pre></td></tr></table></figure>
<h3 id="Array-Literals-as-Parameters"><a href="#Array-Literals-as-Parameters" class="headerlink" title="Array Literals as Parameters"></a>Array Literals as Parameters</h3><p>You can pass array literals directly to functions:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum_array</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = sum_array((<span class="type">int</span> [])&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;, <span class="number">4</span>);</span><br></pre></td></tr></table></figure>
<p>This approach avoids declaring a separate array variable, directly passing the literal <code>&#123;2, 3, 4, 5&#125;</code> as an array.</p>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>math.h in C Language</title>
    <url>/2024/05/31/c-language-lib-math-h/</url>
    <content><![CDATA[<h2 id="Type-and-Macros-in-math-h"><a href="#Type-and-Macros-in-math-h" class="headerlink" title="Type and Macros in math.h"></a>Type and Macros in math.h</h2><p>The <code>math.h</code> header defines two type aliases:</p>
<ul>
<li><strong>float_t</strong>: The type that provides the most efficient execution of <code>float</code> operations on the current system, with a width that is at least equal to that of a <code>float</code>.</li>
<li><strong>double_t</strong>: The type that provides the most efficient execution of <code>double</code> operations on the current system, with a width that is at least equal to that of a <code>double</code>.</li>
</ul>
<p>You can determine their specific types using the <code>FLT_EVAL_METHOD</code> macro.</p>
<hr>
<p><strong>Mapping of FLT_EVAL_METHOD Values</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>FLT_EVAL_METHOD Value</th>
<th>Type for float_t</th>
<th>Type for double_t</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>float</td>
<td>double</td>
</tr>
<tr>
<td>1</td>
<td>double</td>
<td>double</td>
</tr>
<tr>
<td>2</td>
<td>long double</td>
<td>long double</td>
</tr>
<tr>
<td>Other</td>
<td>Implementation Defined</td>
<td>Implementation Defined</td>
</tr>
</tbody>
</table>
</div>
<p>Additionally, <code>math.h</code> defines several macros:</p>
<ul>
<li><strong>INFINITY</strong>: Represents positive infinity and returns a <code>float</code> type value.</li>
<li><strong>NAN</strong>: Represents Not-A-Number (NaN) and returns a <code>float</code> type value.</li>
</ul>
<h2 id="Error-Types-in-Mathematical-Functions"><a href="#Error-Types-in-Mathematical-Functions" class="headerlink" title="Error Types in Mathematical Functions"></a>Error Types in Mathematical Functions</h2><p>Mathematical functions can produce the following types of errors:</p>
<ul>
<li><strong>Range Errors</strong>: The result cannot be represented by the function’s return type.</li>
<li><strong>Domain Errors</strong>: Function parameters are invalid for the given function.</li>
<li><strong>Pole Errors</strong>: Parameters cause the function’s limit to become infinite.</li>
<li><strong>Overflow Errors</strong>: The result is too large, leading to overflow.</li>
<li><strong>Underflow Errors</strong>: The result is too small, leading to underflow.</li>
</ul>
<p>The variable <code>math_errhandling</code> indicates how the current system handles mathematical errors.</p>
<hr>
<p><strong>Values of math_errhandling</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Value</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>MATH_ERRNO</td>
<td>The system uses <code>errno</code> to indicate mathematical errors.</td>
</tr>
<tr>
<td>MATH_ERREXCEPT</td>
<td>The system uses exceptions to indicate mathematical errors.</td>
</tr>
<tr>
<td>MATH_ERRNO</td>
<td>MATH_ERREXCEPT</td>
<td>The system uses both methods to indicate mathematical errors.</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Value-Type"><a href="#Value-Type" class="headerlink" title="Value Type"></a>Value Type</h2><p>The parameters of a mathematical function can be categorized into the following types: normal values, infinite values, finite values, and non-numeric values.</p>
<p>The following functions are used to determine the type of a given value:</p>
<ul>
<li><strong>fpclassify()</strong>: Classifies the given floating-point number.</li>
<li><strong>isfinite()</strong>: Returns true if the parameter is neither infinite nor NaN.</li>
<li><strong>isinf()</strong>: Returns true if the parameter is infinite.</li>
<li><strong>isnan()</strong>: Returns true if the parameter is not a number.</li>
<li><strong>isnormal()</strong>: Returns true if the parameter is a normal number.</li>
</ul>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">isfinite(<span class="number">1.23</span>)    <span class="comment">// 1</span></span><br><span class="line">isinf(<span class="number">1</span>/<span class="built_in">tan</span>(<span class="number">0</span>))   <span class="comment">// 1</span></span><br><span class="line">isnan(<span class="built_in">sqrt</span>(<span class="number">-1</span>))   <span class="comment">// 1</span></span><br><span class="line">isnormal(<span class="number">1e-310</span>)) <span class="comment">// 0</span></span><br></pre></td></tr></table></figure>
<h2 id="signbit"><a href="#signbit" class="headerlink" title="signbit()"></a>signbit()</h2><p>Checks whether the parameter has a sign. It returns 1 if the parameter is negative and 0 otherwise.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">signbit(<span class="number">3490.0</span>) <span class="comment">// 0</span></span><br><span class="line">signbit(<span class="number">-37.0</span>)  <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>
<h2 id="Trigonometric-Functions"><a href="#Trigonometric-Functions" class="headerlink" title="Trigonometric Functions"></a>Trigonometric Functions</h2><p>The following are trigonometric functions that take radians as parameters:</p>
<ul>
<li><strong>acos()</strong>: Arccosine</li>
<li><strong>asin()</strong>: Arcsine</li>
<li><strong>atan()</strong>: Arctangent</li>
<li><strong>atan2()</strong>: Arctangent of two variables</li>
<li><strong>cos()</strong>: Cosine</li>
<li><strong>sin()</strong>: Sine</li>
<li><strong>tan()</strong>: Tangent</li>
</ul>
<p>Remember, all of these functions have a float version (with an “f” suffix) and a long double version (with an “l” suffix).</p>
<p>Here’s an example:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cos</span>(PI/<span class="number">4</span>) <span class="comment">// 0.707107</span></span><br></pre></td></tr></table></figure>
<p>Here’s a more natural English expression for your content:</p>
<h2 id="Hyperbolic-Functions"><a href="#Hyperbolic-Functions" class="headerlink" title="Hyperbolic Functions"></a>Hyperbolic Functions</h2><p>The following are hyperbolic functions that take floating-point parameters:</p>
<ul>
<li><strong>acosh()</strong>: Inverse hyperbolic cosine.</li>
<li><strong>asinh()</strong>: Inverse hyperbolic sine.</li>
<li><strong>atanh()</strong>: Inverse hyperbolic tangent.</li>
<li><strong>cosh()</strong>: Hyperbolic cosine.</li>
<li><strong>sinh()</strong>: Hyperbolic sine.</li>
<li><strong>tanh()</strong>: Hyperbolic tangent.</li>
</ul>
<h2 id="Exponential-and-Logarithmic-Functions"><a href="#Exponential-and-Logarithmic-Functions" class="headerlink" title="Exponential and Logarithmic Functions"></a>Exponential and Logarithmic Functions</h2><p>The following are exponential and logarithmic functions, all returning a value of type <code>double</code>:</p>
<ul>
<li><strong>exp()</strong>: Computes Euler’s number ( e ) raised to the power of ( x ) (i.e., ( $e^x$ )).</li>
<li><strong>exp2()</strong>: Computes ( 2 ) raised to the power of ( x ) (i.e., ( $ 2^x $ )).</li>
<li><strong>expm1()</strong>: Computes ( $ e^x - 1 $ ).</li>
<li><strong>log()</strong>: Computes the natural logarithm, the inverse of <code>exp()</code>.</li>
<li><strong>log2()</strong>: Computes the logarithm base ( 2 ).</li>
<li><strong>log10()</strong>: Computes the logarithm base ( 10 ).</li>
<li><strong>log1p()</strong>: Computes the natural logarithm of ( x + 1 ) (i.e., ( $ \ln(x + 1) $ )).</li>
<li><strong>logb()</strong>: Computes the logarithm with base defined by the macro <code>FLT_RADIX</code> (typically ( 2 )), returning only the integer part.</li>
</ul>
<p><strong>Examples</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exp</span>(<span class="number">3.0</span>);     <span class="comment">// 20.085500</span></span><br><span class="line"><span class="built_in">log</span>(<span class="number">20.0855</span>); <span class="comment">// 3.000000</span></span><br><span class="line"><span class="built_in">log10</span>(<span class="number">10000</span>); <span class="comment">// 4.000000</span></span><br></pre></td></tr></table></figure>
<p>If the result exceeds the maximum value representable in C, the function returns <code>HUGE_VAL</code>, which is defined in <code>math.h</code> as a <code>double</code> type value.</p>
<p>If the result is too small to be represented as a <code>double</code>, the function returns <code>0</code>. Both cases are considered errors.</p>
<h2 id="frexp"><a href="#frexp" class="headerlink" title="frexp()"></a>frexp()</h2><p>The <code>frexp()</code> function decomposes a floating-point number into its fractional and exponent parts, using 2 as the base. For example, the number 1234.56 can be expressed as ( $ 0.6028125 \times 2^{11} $ ). This function returns the fractional part and provides the exponent.</p>
<p><strong>Function Signature:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">frexp</span><span class="params">(<span class="type">double</span> value, <span class="type">int</span>* <span class="built_in">exp</span>)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Parameters:</strong><ul>
<li><code>value</code>: The floating-point number to decompose.</li>
<li><code>exp</code>: A pointer to an integer where the exponent will be stored.</li>
</ul>
</li>
</ul>
<p>The function returns the fractional part and assigns the exponent to the variable pointed to by <code>exp</code>. If the input is 0, both the fractional part and the exponent will be 0.</p>
<p><strong>Example:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> frac;</span><br><span class="line"><span class="type">int</span> expt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// expt will be 11</span></span><br><span class="line">frac = <span class="built_in">frexp</span>(<span class="number">1234.56</span>, &amp;expt);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Output: 1234.56 = 0.6028125 x 2^11</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1234.56 = %.7f x 2^%d\n&quot;</span>, frac, expt);</span><br></pre></td></tr></table></figure>
<h2 id="ilogb"><a href="#ilogb" class="headerlink" title="ilogb()"></a>ilogb()</h2><p>The <code>ilogb()</code> function returns the exponent of a floating-point number, with the base defined by the macro <code>FLT_RADIX</code> (usually 2).</p>
<p><strong>Function Signature:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ilogb</span><span class="params">(<span class="type">double</span> x)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Parameter:</strong><ul>
<li><code>x</code>: The floating-point number whose exponent is to be determined.</li>
</ul>
</li>
</ul>
<p>The return value is ( $\text{log}_r |x|$ ), where ( r ) is the macro <code>FLT_RADIX</code>.</p>
<p><strong>Usage Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ilogb(<span class="number">257</span>); <span class="comment">// Returns 8</span></span><br><span class="line">ilogb(<span class="number">256</span>); <span class="comment">// Returns 8</span></span><br><span class="line">ilogb(<span class="number">255</span>); <span class="comment">// Returns 7</span></span><br></pre></td></tr></table></figure>
<h2 id="ldexp"><a href="#ldexp" class="headerlink" title="ldexp()"></a>ldexp()</h2><p>The <code>ldexp()</code> function multiplies a number by 2 raised to a specified power. It can be seen as the inverse of <code>frexp()</code>, combining a fractional part and an exponent into the form ( $f\times2^n$).</p>
<p><strong>Function Signature:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">ldexp</span><span class="params">(<span class="type">double</span> x, <span class="type">int</span> <span class="built_in">exp</span>)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Parameters:</strong><ul>
<li><code>x</code>: The multiplicand.</li>
<li><code>exp</code>: The exponent of 2.</li>
</ul>
</li>
</ul>
<p>The function returns ( $ x \times 2^{\text{exp}} $ ).</p>
<p><strong>Usage Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ldexp</span>(<span class="number">1</span>, <span class="number">10</span>); <span class="comment">// Returns 1024.000000</span></span><br><span class="line"><span class="built_in">ldexp</span>(<span class="number">3</span>, <span class="number">2</span>);  <span class="comment">// Returns 12.000000</span></span><br><span class="line"><span class="built_in">ldexp</span>(<span class="number">0.75</span>, <span class="number">4</span>); <span class="comment">// Returns 12.000000</span></span><br><span class="line"><span class="built_in">ldexp</span>(<span class="number">0.5</span>, <span class="number">-1</span>); <span class="comment">// Returns 0.250000</span></span><br></pre></td></tr></table></figure>
<h2 id="modf"><a href="#modf" class="headerlink" title="modf()"></a>modf()</h2><p>The <code>modf()</code> function separates a number into its integer and fractional parts.</p>
<p><strong>Function Signature:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">modf</span><span class="params">(<span class="type">double</span> value, <span class="type">double</span>* iptr)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Parameters:</strong><ul>
<li><code>value</code>: The number to be separated.</li>
<li><code>iptr</code>: A pointer to a double variable where the integer part will be stored.</li>
</ul>
</li>
</ul>
<p>The function returns the fractional part, while the integer part is stored in the variable pointed to by <code>iptr</code>.</p>
<p><strong>Example:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> int_part;</span><br><span class="line"><span class="built_in">modf</span>(<span class="number">3.14159</span>, &amp;int_part); <span class="comment">// Returns 0.14159, int_part will be 3.0</span></span><br></pre></td></tr></table></figure>
<p>Here’s an optimized version of your text, tailored to sound more natural in English:</p>
<hr>
<h2 id="scalbn"><a href="#scalbn" class="headerlink" title="scalbn()"></a>scalbn()</h2><p>The <code>scalbn()</code> function computes the value of ( $ x \times r^n $ ), where ( r ) is defined by the macro <code>FLT_RADIX</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">scalbn</span><span class="params">(<span class="type">double</span> x, <span class="type">int</span> n)</span>;</span><br></pre></td></tr></table></figure>
<p>It takes two parameters: the first parameter ( x ) is the base, and the second parameter ( n ) is the exponent. It returns the result of ( $ x \times r^n $ ).</p>
<p><strong>Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">scalbn(<span class="number">2</span>, <span class="number">8</span>); <span class="comment">// returns 512.000000</span></span><br></pre></td></tr></table></figure>
<p>There are several versions of this function:</p>
<ul>
<li><code>scalbn()</code>: uses an <code>int</code> for the exponent ( n ).</li>
<li><code>scalbnf()</code>: the <code>float</code> version of <code>scalbn()</code>.</li>
<li><code>scalbnl()</code>: the <code>long double</code> version of <code>scalbn()</code>.</li>
<li><code>scalbln()</code>: uses a <code>long int</code> for the exponent ( n ).</li>
<li><code>scalblnf()</code>: the <code>float</code> version of <code>scalbln()</code>.</li>
<li><code>scalblnl()</code>: the <code>long double</code> version of <code>scalbln()</code>.</li>
</ul>
<h2 id="round"><a href="#round" class="headerlink" title="round()"></a>round()</h2><p>The <code>round()</code> function rounds a number to the nearest integer, using standard rounding rules (e.g., 1.5 rounds to 2, -1.5 rounds to -2).</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">round</span><span class="params">(<span class="type">double</span> x)</span>;</span><br></pre></td></tr></table></figure>
<p>It returns a floating-point number.</p>
<p><strong>Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">round(<span class="number">3.14</span>);  <span class="comment">// returns 3.000000</span></span><br><span class="line">round(<span class="number">3.5</span>);   <span class="comment">// returns 4.000000</span></span><br><span class="line">round(<span class="number">-1.5</span>);  <span class="comment">// returns -2.000000</span></span><br><span class="line">round(<span class="number">-1.14</span>); <span class="comment">// returns -1.000000</span></span><br></pre></td></tr></table></figure>
<p>Other versions include:</p>
<ul>
<li><code>lround()</code>: returns a <code>long int</code>.</li>
<li><code>llround()</code>: returns a <code>long long int</code>.</li>
</ul>
<h2 id="trunc"><a href="#trunc" class="headerlink" title="trunc()"></a>trunc()</h2><p>The <code>trunc()</code> function truncates the decimal part of a floating-point number and returns the integer part as a floating-point value.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">trunc</span><span class="params">(<span class="type">double</span> x)</span>;</span><br></pre></td></tr></table></figure>
<p><strong>Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">trunc(<span class="number">3.14</span>);  <span class="comment">// returns 3.000000</span></span><br><span class="line">trunc(<span class="number">3.8</span>);   <span class="comment">// returns 3.000000</span></span><br><span class="line">trunc(<span class="number">-1.5</span>);  <span class="comment">// returns -1.000000</span></span><br><span class="line">trunc(<span class="number">-1.14</span>); <span class="comment">// returns -1.000000</span></span><br></pre></td></tr></table></figure>
<h2 id="ceil"><a href="#ceil" class="headerlink" title="ceil()"></a>ceil()</h2><p>The <code>ceil()</code> function returns the smallest integer value that is greater than or equal to its argument (rounded up).</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">ceil</span><span class="params">(<span class="type">double</span> x)</span>;</span><br></pre></td></tr></table></figure>
<p><strong>Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ceil</span>(<span class="number">7.1</span>);   <span class="comment">// returns 8.0</span></span><br><span class="line"><span class="built_in">ceil</span>(<span class="number">7.9</span>);   <span class="comment">// returns 8.0</span></span><br><span class="line"><span class="built_in">ceil</span>(<span class="number">-7.1</span>);  <span class="comment">// returns -7.0</span></span><br><span class="line"><span class="built_in">ceil</span>(<span class="number">-7.9</span>);  <span class="comment">// returns -7.0</span></span><br></pre></td></tr></table></figure>
<h2 id="floor"><a href="#floor" class="headerlink" title="floor()"></a>floor()</h2><p>The <code>floor()</code> function returns the largest integer value that is less than or equal to its argument (rounded down).</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">floor</span><span class="params">(<span class="type">double</span> x)</span>;</span><br></pre></td></tr></table></figure>
<p><strong>Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">floor</span>(<span class="number">7.1</span>);   <span class="comment">// returns 7.0</span></span><br><span class="line"><span class="built_in">floor</span>(<span class="number">7.9</span>);   <span class="comment">// returns 7.0</span></span><br><span class="line"><span class="built_in">floor</span>(<span class="number">-7.1</span>);  <span class="comment">// returns -8.0</span></span><br><span class="line"><span class="built_in">floor</span>(<span class="number">-7.9</span>);  <span class="comment">// returns -8.0</span></span><br></pre></td></tr></table></figure>
<p><strong>Custom Rounding Function</strong></p>
<p>The following function implements rounding to the nearest integer:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">round_nearest</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> x &lt; <span class="number">0.0</span> ? <span class="built_in">ceil</span>(x - <span class="number">0.5</span>) : <span class="built_in">floor</span>(x + <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="fmod"><a href="#fmod" class="headerlink" title="fmod()"></a>fmod()</h2><p>The <code>fmod()</code> function computes the remainder of the division of the first parameter by the second. It serves as the floating-point equivalent of the modulus operator <code>%</code>, which is limited to integers.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">fmod</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> y)</span>;</span><br></pre></td></tr></table></figure>
<p>It effectively calculates ( $ x - \text{trunc}(x / y) \times y $ ), ensuring that the sign of the result matches that of ( x ).</p>
<p><strong>Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">fmod</span>(<span class="number">5.5</span>, <span class="number">2.2</span>);  <span class="comment">// returns 1.100000</span></span><br><span class="line"><span class="built_in">fmod</span>(<span class="number">-9.2</span>, <span class="number">5.1</span>); <span class="comment">// returns -4.100000</span></span><br><span class="line"><span class="built_in">fmod</span>(<span class="number">9.2</span>, <span class="number">5.1</span>);  <span class="comment">// returns 4.100000</span></span><br></pre></td></tr></table></figure>
<p>Sure! Here’s an optimized version of your text for clarity and fluency in English:</p>
<hr>
<h2 id="Floating-Point-Comparison-Functions"><a href="#Floating-Point-Comparison-Functions" class="headerlink" title="Floating-Point Comparison Functions"></a>Floating-Point Comparison Functions</h2><p>The following functions are used to compare two floating-point numbers and return an integer result:</p>
<ul>
<li><strong>isgreater(x, y)</strong>: Returns 1 if ( x &gt; y ), otherwise returns 0.</li>
<li><strong>isgreaterequal(x, y)</strong>: Returns 1 if ( $ x \geq y $ ), otherwise returns 0.</li>
<li><strong>isless(x, y)</strong>: Returns 1 if ( x &lt; y ), otherwise returns 0.</li>
<li><strong>islessequal(x, y)</strong>: Returns 1 if ( $ x \leq y $ ), otherwise returns 0.</li>
<li><strong>islessgreater(x, y)</strong>: Returns 1 if ( x &lt; y ) or ( x &gt; y ) (i.e., not equal), otherwise returns 0.</li>
</ul>
<hr>
<p><strong>Examples:</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">isgreater(<span class="number">10.0</span>, <span class="number">3.0</span>)         <span class="comment">// 1</span></span><br><span class="line">isgreaterequal(<span class="number">10.0</span>, <span class="number">10.0</span>)   <span class="comment">// 1</span></span><br><span class="line">isless(<span class="number">10.0</span>, <span class="number">3.0</span>)            <span class="comment">// 0</span></span><br><span class="line">islessequal(<span class="number">10.0</span>, <span class="number">3.0</span>)       <span class="comment">// 0</span></span><br><span class="line">islessgreater(<span class="number">10.0</span>, <span class="number">3.0</span>)     <span class="comment">// 1</span></span><br><span class="line">islessgreater(<span class="number">10.0</span>, <span class="number">30.0</span>)    <span class="comment">// 1</span></span><br><span class="line">islessgreater(<span class="number">10.0</span>, <span class="number">10.0</span>)     <span class="comment">// 0</span></span><br></pre></td></tr></table></figure>
<h2 id="isunordered"><a href="#isunordered" class="headerlink" title="isunordered()"></a>isunordered()</h2><ul>
<li><strong>isunordered(x, y)</strong>: Returns 1 if either argument is NaN (Not a Number), otherwise returns 0.</li>
</ul>
<hr>
<p><strong>Example:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">isunordered(1.0, 2.0)         // 0</span><br><span class="line">isunordered(1.0, sqrt(-1))    // 1</span><br><span class="line">isunordered(NAN, 30.0)        // 1</span><br><span class="line">isunordered(NAN, NAN)         // 1</span><br></pre></td></tr></table></figure>
<h2 id="Other-Functions-in-lt-math-h-gt"><a href="#Other-Functions-in-lt-math-h-gt" class="headerlink" title="Other Functions in &lt;math.h&gt;"></a>Other Functions in <code>&lt;math.h&gt;</code></h2><p>The <code>&lt;math.h&gt;</code> library includes several other useful functions:</p>
<ul>
<li><strong>pow(x, y)</strong>: Computes ( x ) raised to the power of ( y ).</li>
<li><strong>sqrt(x)</strong>: Computes the square root of ( x ).</li>
<li><strong>cbrt(x)</strong>: Computes the cube root of ( x ).</li>
<li><strong>fabs(x)</strong>: Computes the absolute value of ( x ).</li>
<li><strong>hypot(x, y)</strong>: Computes the length of the hypotenuse given the lengths of the two perpendicular sides ( x ) and ( y ).</li>
<li><strong>fmax(x, y)</strong>: Returns the larger of ( x ) and ( y ).</li>
<li><strong>fmin(x, y)</strong>: Returns the smaller of ( x ) and ( y ).</li>
<li><strong>remainder(x, y)</strong>: Computes the remainder according to the IEC 60559 standard.</li>
<li><strong>remquo(x, y)</strong>: Computes the remainder and quotient at the same time.</li>
<li><strong>copysign(x, y)</strong>: Returns a value with the magnitude of ( x ) and the sign of ( y ).</li>
<li><strong>nan()</strong>: Returns a NaN value.</li>
<li><strong>nextafter(x, y)</strong>: Computes the next representable floating-point value after ( x ) in the direction of ( y ).</li>
<li><strong>fdim(x, y)</strong>: Returns ( x - y ) if positive, otherwise returns 0.</li>
<li><strong>fma(x, y, z)</strong>: Computes ( $ x \times y + z $ ) in a single operation.</li>
<li><strong>nearbyint(x)</strong>: Rounds ( x ) to the nearest integer using the current rounding mode.</li>
<li><strong>rint(x)</strong>: Rounds ( x ) to the nearest integer and may raise the INEXACT exception.</li>
<li><strong>lrint(x)</strong>: Rounds ( x ) to the nearest integer and returns it as a long integer.</li>
<li><strong>erf(x)</strong>: Computes the error function of ( x ).</li>
<li><strong>erfc(x)</strong>: Computes the complementary error function of ( x ).</li>
<li><strong>tgamma(x)</strong>: Computes the Gamma function of ( x ).</li>
<li><strong>lgamma(x)</strong>: Computes the natural logarithm of the absolute value of the Gamma function.</li>
</ul>
<hr>
<p><strong>Examples:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pow(3, 4)               // 81.000000</span><br><span class="line">sqrt(3.0)               // 1.73205</span><br><span class="line">cbrt(1729.03)           // 12.002384</span><br><span class="line">fabs(-3490.0)           // 3490.000000</span><br><span class="line">hypot(3, 4)             // 5.000000</span><br><span class="line">fmax(3.0, 10.0)         // 10.000000</span><br><span class="line">fmin(10.0, 3.0)         // 3.000000</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C Tutorial</category>
      </categories>
      <tags>
        <tag>C Programming Language</tag>
      </tags>
  </entry>
  <entry>
    <title>极简教程 - Gson</title>
    <url>/2023/09/05/tutorial-gson/</url>
    <content><![CDATA[<p><a href="/2023/09/03/gson-overview/">深入解析Gson：一个强大的Java JSON库</a></p>
<p><a href="/2023/08/26/gson-serializing-and-deserializing-objects/">深入了解Gson：Java对象的序列化和反序列化</a></p>
<p><a href="/2023/09/05/gson-bases">Gson基本使用：序列化与反序列化操作详解</a></p>
<p><a href="/2023/08/27/gson-serializing-and-deserializing-array-set-map/">使用Gson进行数组、集合和映射的序列化与反序列化</a></p>
<p><a href="/2023/08/28/gson-serializing-and-deserializing-nested-classes/">使用Gson对嵌套类进行序列化和反序列化</a></p>
<p><a href="/2023/08/30/gson-serializing-and-deserializing-generic-types/">深入探索Gson的泛型序列化和反序列化能力</a></p>
<p><a href="/2023/07/25/java-gson-camel-cased-underscore/">使用Gson库在Java中实现下划线与驼峰格式的转换</a></p>
<p><a href="/2022/12/30/java-gson-validate-json-string/">Java使用Gson判断字符串是否为JSON格式</a></p>
<p><a href="/2022/08/16/how-to-serialize-a-null-field-using-gson-library-in-java/">在Java中如何使用Gson库序列化NULL字段</a></p>
<p><a href="/2022/08/03/gson-string-to-jsonobject/">使用Gson将字符串转成JsonObject对象</a></p>
<p><a href="/2023/07/24/java-json-pretty-print-with-gson/">Java使用Gson库格式化输出JSON字符串</a></p>
]]></content>
      <categories>
        <category>极简教程</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Gson</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to HTML</title>
    <url>/2024/06/13/html-introduction/</url>
    <content><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>HTML is the language of the web, defining the structure and content of web pages. When a browser visits a website, it essentially downloads HTML code from the server and renders it into a webpage.</p>
<p>HTML stands for “HyperText Markup Language,” invented in the early 1990s by Tim Berners-Lee, a physicist at CERN (European Organization for Nuclear Research). Its most distinctive feature is support for hyperlinks, allowing users to jump to other web pages with a simple click, thus forming the foundation of the entire internet.</p>
<p>HTML 4.01, released in 1999, became the widely accepted HTML standard. The current version, HTML 5, was released in 2014 and is in use today.</p>
<p>Web development involves three key technologies: HTML, CSS, and JavaScript. HTML defines the structure and content of web pages, CSS determines their style, and JavaScript enables user interaction. HTML forms the foundation of web development; CSS and JavaScript build upon it. Even without these two, HTML alone can display basic content. This tutorial focuses solely on HTML.</p>
<p>Here’s a simple example of HTML source code:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>You can save this code as “hello.html”. Opening this local file in a browser will display the text “Hello World”.</p>
<p>To view the HTML source code of any webpage, right-click and select “View page source” in your</p>
<h2 id="Basic-Concepts"><a href="#Basic-Concepts" class="headerlink" title="Basic Concepts"></a>Basic Concepts</h2><h3 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h3><p>HTML code for web pages consists of numerous different tags. Learning HTML essentially means learning how to use these various tags.<br>Here’s an example of a tag:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this code, <code>&lt;title&gt;</code> and <code>&lt;/title&gt;</code> form a pair of tags.<br>Tags tell the browser how to handle the enclosed content. The content between tags is what the browser renders and displays on the web page.<br>Tags are enclosed in angle brackets (like <code>&lt;title&gt;</code>). Most tags come in pairs: an opening tag and a closing tag. The closing tag includes a forward slash before the tag name (like <code>&lt;/title&gt;</code>). However, some tags are self-closing and don’t require a separate closing tag, such as the <code>&lt;meta&gt;</code> tag from our earlier example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>These self-closing tags typically provide instructions to the browser without needing to enclose any content.<br>Tags can be nested:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Here, the <code>&lt;div&gt;</code> tag contains a <code>&lt;p&gt;</code> tag.<br>When nesting tags, ensure proper closing order to avoid unexpected rendering results:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  <span class="comment">&lt;!-- Incorrect nesting --&gt;</span></span><br></pre></td></tr></table></figure><br>HTML tag names are case-insensitive, so <code>&lt;title&gt;</code> and <code>&lt;TITLE&gt;</code> are the same tag. However, lowercase is generally preferred.<br>HTML ignores indentation and line breaks. The following examples will render identically:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line">  Page Title</span><br><span class="line"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Page</span><br><span class="line">Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In fact, an entire HTML document could be written on a single line and still be parsed correctly by browsers. Developers sometimes compress their code to a single line before publishing to reduce file size.<br>Page styling effects like indentation and line breaks are primarily achieved through CSS.</p>
<h3 id="Elements"><a href="#Elements" class="headerlink" title="Elements"></a>Elements</h3><p>When a browser renders a web page, it parses the HTML source into a tag tree, with each tag becoming a node. These nodes are called elements. “Tag” and “element” are essentially synonymous, but used in different contexts: we talk about tags in source code and elements in programming.<br>Nested tags create a hierarchy of elements:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Here, the <code>div</code> element contains a <code>p</code> element. The outer element is called the “parent element,” and the inner one is the “child element.”</p>
<h3 id="Block-vs-Inline-Elements"><a href="#Block-vs-Inline-Elements" class="headerlink" title="Block vs. Inline Elements"></a>Block vs. Inline Elements</h3><p>Elements fall into two main categories: block-level and inline.<br>Block-level elements occupy their own space, starting on a new line and typically taking up 100% of the available width:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>These <code>p</code> elements will display on separate lines.<br>Inline elements flow within the text and don’t force new lines:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>world<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><br>These <code>span</code> elements will display on the same line.</p>
<h3 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h3><p>Attributes provide additional information for tags, separated from the tag name and other attributes by spaces:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;demo.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Here, the <code>&lt;img&gt;</code> tag has two attributes: <code>src</code> and <code>width</code>.<br>Attribute values are specified with an equals sign and are usually enclosed in double quotes (recommended but not required).<br>Note that attribute names are case-insensitive, so <code>onclick</code> and <code>onClick</code> are the same attribute.<br>HTML offers numerous attributes to customize tag behavior. For more details, refer to the “Element Attributes” chapter.</p>
<h2 id="Basic-HTML-Tags"><a href="#Basic-HTML-Tags" class="headerlink" title="Basic HTML Tags"></a>Basic HTML Tags</h2><p>A web page that complies with HTML standards should have the following basic structure:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Every web page, no matter how complex, is derived from this basic structure.<br>As mentioned earlier, indentation and line breaks in HTML code don’t affect browser rendering. The above code could be written on a single line with the same result. We format it this way for better readability.<br>Let’s explore the main tags that form the skeleton of a web page:</p>
<h3 id="lt-doctype-gt"><a href="#lt-doctype-gt" class="headerlink" title="&lt;!doctype&gt;"></a><code>&lt;!doctype&gt;</code></h3><p>The first tag in a web page is usually <code>&lt;!doctype&gt;</code>, which declares the document type and tells the browser how to parse the page.<br>Generally, a simple declaration like this is sufficient:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This tells the browser to process the page according to HTML5 rules.<br>Sometimes, this tag is written in all caps to distinguish it from regular HTML tags, as it’s more of a processing instruction than a true tag:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="lt-html-gt"><a href="#lt-html-gt" class="headerlink" title="&lt;html&gt;"></a><code>&lt;html&gt;</code></h3><p>The <code>&lt;html&gt;</code> tag is the top-level container for the web page, or the root element of the tag tree structure. All other elements are its children. A web page can have only one <code>&lt;html&gt;</code> tag.</p>
<p>Its lang attribute indicates the default language of the page content:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This example shows that the page content is in English. For more detailed information, see the “Element Attributes” chapter. </p>
<h3 id="lt-head-gt"><a href="#lt-head-gt" class="headerlink" title="&lt;head&gt;"></a><code>&lt;head&gt;</code></h3><p>The <code>&lt;head&gt;</code> tag is a container for metadata about the web page. Its content doesn’t appear on the page itself but provides additional information for rendering.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><code>&lt;head&gt;</code> is the first child element of <code>&lt;html&gt;</code>. If a page doesn’t include <code>&lt;head&gt;</code>, the browser will create one automatically. <code>&lt;head&gt;</code> typically contains seven types of child elements, which we’ll discuss in detail later:</p>
<ol>
<li><code>&lt;meta&gt;</code>: Sets metadata for the page.</li>
<li><code>&lt;link&gt;</code>: Connects external stylesheets.</li>
<li><code>&lt;title&gt;</code>: Sets the page title.</li>
<li><code>&lt;style&gt;</code>: Contains embedded stylesheets.</li>
<li><code>&lt;script&gt;</code>: Imports scripts.</li>
<li><code>&lt;noscript</code>&gt;: Specifies content to display when the browser doesn’t support scripts.</li>
<li><code>&lt;base&gt;</code>: Sets the base URL for relative URLs within the document.</li>
</ol>
<h3 id="lt-meta-gt"><a href="#lt-meta-gt" class="headerlink" title="&lt;meta&gt;"></a><code>&lt;meta&gt;</code></h3><p>The <code>&lt;meta&gt;</code> tag is used to set or describe metadata for the web page and must be placed inside the <code>&lt;head&gt;</code>. Each <code>&lt;meta&gt;</code> tag represents one piece of metadata, and a page can have multiple <code>&lt;meta&gt;</code> tags. By convention, <code>&lt;meta&gt;</code> tags are placed at the beginning of the <code>&lt;head&gt;</code> content.</p>
<p>Generally, every web page should include at least these two <code>&lt;meta&gt;</code> tags:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this example, the first <code>&lt;meta&gt;</code> tag specifies that the page uses UTF-8 encoding, while the second enables automatic scaling on mobile devices.</p>
<p>The <code>&lt;meta&gt;</code> tag has five attributes, which we’ll discuss next.</p>
<p><strong>(1) charset Attribute</strong><br>The <code>charset</code> attribute of the <code>&lt;meta&gt;</code> tag specifies the character encoding for the web page. This attribute is crucial; if set incorrectly, the browser may not decode the content properly, resulting in garbled text.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">htmlCopy code</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br></pre></td></tr></table></figure><br>This declares the page as UTF-8 encoded. While developers can use other encoding methods, UTF-8 is almost always the correct choice.<br>Note that the declared encoding should match the actual encoding of the page. If UTF-8 is declared but the page is actually saved in a different encoding (like GB2312), the browser won’t automatically convert the encoding, potentially resulting in garbled text.<br><strong>(2) name and content Attributes</strong><br>The <code>name</code> attribute of the <code>&lt;meta&gt;</code> tag specifies the name of the metadata, while the <code>content</code> attribute specifies its value. Used together, they can define a piece of metadata for the page.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Introduction to HTML&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML,tutorial&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;John Doe&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This code includes three pieces of meta <code>description</code> (a summary of the page content), <code>keywords</code> (key terms related to the page content), and <code>author</code> (the page’s creator).<br>There are many types of metadata, most of which relate to internal browser mechanisms or specific use cases. Here are a few more examples:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;application-name&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Application Name&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;generator&quot;</span> <span class="attr">content</span>=<span class="string">&quot;program&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;subject&quot;</span> <span class="attr">content</span>=<span class="string">&quot;your document&#x27;s subject&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-referrer&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br><strong>(3) http-equiv and content Attributes</strong><br>The <code>http-equiv</code> attribute of the <code>&lt;meta&gt;</code> tag is used to supplement HTTP response header fields. If the server’s HTTP response is missing a certain field, it can be added using this attribute. The <code>content</code> attribute provides the corresponding field content. These attributes are related to the HTTP protocol and are considered advanced usage, so we won’t go into detail here.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Security-Policy&quot;</span> <span class="attr">content</span>=<span class="string">&quot;default-src &#x27;self&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This sets the <code>Content-Security-Policy</code> field of the HTTP response.<br>Here are some more examples:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Type=text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;30;URL=&#x27;http://website.com&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="lt-title-gt"><a href="#lt-title-gt" class="headerlink" title="&lt;title&gt;"></a><code>&lt;title&gt;</code></h3><p>The <code>&lt;title&gt;</code> tag specifies the title of the web page, which appears in the browser’s title bar or tab.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Search engines use this tag to display the title of each page in search results. It has a significant impact on the page’s search engine ranking and should be carefully crafted to reflect the page’s main topic.<br>The <code>&lt;title&gt;</code> tag can only contain plain text, not other tags.</p>
<h3 id="lt-body-gt"><a href="#lt-body-gt" class="headerlink" title="&lt;body&gt;"></a><code>&lt;body&gt;</code></h3><p>The <code>&lt;body&gt;</code> tag is a container for the main content of the web page. All visible page content goes inside this tag. It’s the second child element of <code>&lt;html&gt;</code>, immediately following <code>&lt;head&gt;</code>.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Whitespace-and-Line-Breaks"><a href="#Whitespace-and-Line-Breaks" class="headerlink" title="Whitespace and Line Breaks"></a>Whitespace and Line Breaks</h2><p>HTML has its own rules for handling whitespace. Leading and trailing spaces within tag content are ignored:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>  hello world   <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The spaces before “hello” and after “world” are ignored by the browser.<br>Multiple consecutive spaces (including tabs) within tag content are collapsed into a single space:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello      world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This will render with only one space between “hello” and “world”.<br>Browsers also replace newline (<code>\n</code>) and carriage return (<code>\r</code>) characters in text with spaces:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">world</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This will render with a single space between “hello” and “world”.<br>This means that line breaks in HTML source code don’t create line breaks in the rendered output.</p>
<h2 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h2><p>HTML code can include comments, which browsers automatically ignore. Comments start with <code>&lt;!--</code> and end with <code>--&gt;</code>, like this:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- This is a comment --&gt;</span></span><br></pre></td></tr></table></figure><br>Comments can span multiple lines, and any HTML within them is ineffective:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  &lt;p&gt;hello world&lt;/p&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><br>This entire block is a comment, and the code inside won’t be parsed or rendered by the browser.<br>Comments are helpful for explaining code, especially before complex code blocks.</p>
<p>Link to original article:<br><a href="https://wangdoc.com/html/intro">https://wangdoc.com/html/intro</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Element Attributes</title>
    <url>/2024/06/15/html-element-attributes/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>HTML element attributes customize the behavior of elements. Different attributes lead to different behaviors. Attributes are written as “key-value pairs” inside HTML tags.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this code, <code>lang=&quot;en&quot;</code> within the <code>&lt;html&gt;</code> tag is an attribute of the <code>html</code>element. The attribute name is <code>lang</code>, and its value is <code>en</code>.</p>
<p>Attribute names, like tag names, are case-insensitive. <code>lang</code> and <code>LANG</code> refer to the same attribute.</p>
<p>Attribute names and values are connected by an equals sign (<code>=</code>). Values can be enclosed in single or double quotes, but double quotes are recommended. Some attribute values can be used without quotes, but this practice is discouraged.</p>
<p>Some attributes are boolean, meaning they only have two states: “on” or “off”. For these, you can simply include the attribute name to turn it on, without specifying a value.</p>
<p>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Here, required is a boolean attribute of the <code>&lt;input&gt;</code> tag. Its presence indicates it’s turned on, while its absence means it’s off.</p>
<h2 id="Global-Attributes"><a href="#Global-Attributes" class="headerlink" title="Global Attributes"></a>Global Attributes</h2><p>Global attributes can be used with any HTML element. While you can add these attributes to any element, they may not have a meaningful effect on all elements.</p>
<p>Here are some common global attributes:</p>
<h3 id="id"><a href="#id" class="headerlink" title="id"></a>id</h3><p>The <code>id</code> attribute provides a unique identifier for an element within a webpage. For instance:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Each <code>&lt;p&gt;</code> tag has a different <code>id</code>, allowing them to be distinguished. <code>id</code> values must be unique within a page and cannot contain spaces.</p>
<p>You can also use an <code>id</code> as an anchor in a URL by prefixing it with <code>#</code>. For example, <code>https://foo.com/index.html#bar</code> will automatically scroll the page to the element with <code>id=&quot;bar&quot;</code>.</p>
<h3 id="class"><a href="#class" class="headerlink" title="class"></a>class</h3><p>The <code>class</code> attribute categorizes elements. Elements with the same <code>class</code> value are considered to be of the same type:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;para&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;para&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, the first and third <code>&lt;p&gt;</code> elements are of the same class.</p>
<p>An element can have multiple classes, separated by spaces:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1 p2 p3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>This <code>&lt;p&gt;</code> element has three classes: <code>p1</code>, <code>p2</code>, and <code>p3</code>.</p>
<h3 id="title"><a href="#title" class="headerlink" title="title"></a>title</h3><p>The <code>title</code> attribute adds supplementary information to an element. In most browsers, this appears as a tooltip when the mouse hovers over the element:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">title</span>=<span class="string">&quot;Copyright notice&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This site&#x27;s content is under a Creative Commons license and free to use.<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>title</code> attribute explains the purpose of this section of content. When the mouse hovers over it, the browser displays a tooltip. Once the mouse moves away, the tooltip disappears.</p>
<h3 id="tabindex"><a href="#tabindex" class="headerlink" title="tabindex"></a>tabindex</h3><blockquote>
<p>Web pages are typically operated with a mouse, but in some cases, users may prefer or only have the option to use a keyboard. Therefore, browsers allow navigation through web page elements using the <strong>Tab</strong> key. This means that by continuously pressing the Tab key, the focus of the web page shifts from one element to another. Once an element is focused, users can proceed with actions such as pressing Enter to follow a link or directly entering text into an input field.<br>However, a question arises: how does the browser determine the order when Tab is pressed? HTML addresses this with the <code>tabindex</code> attribute, which resolves this issue. Its name signifies the order (index) in which Tab should navigate.<br>The <code>tabindex</code> attribute takes an integer value that determines the sequence in which focus shifts when users press the Tab key. Different values of this attribute have different meanings.</p>
</blockquote>
<p>The <code>tabindex</code> attribute determines the order in which elements are focused when using the Tab key to navigate a webpage. It’s particularly useful for keyboard accessibility. Its values have different meanings:</p>
<ul>
<li>Negative integer (usually -1): The element can receive focus (e.g., via JavaScript’s <code>focus()</code> method) but doesn’t participate in sequential keyboard navigation.</li>
<li>0: The element participates in sequential keyboard navigation, in an order determined by the browser (usually based on the element’s position in the document).</li>
<li>Positive integer: The element participates in sequential keyboard navigation, with its order defined by the tabindex value (lowest to highest).</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">tabindex</span>=<span class="string">&quot;0&quot;</span>&gt;</span>This text can receive focus.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>&lt;p&gt;</code> tag has a <code>tabindex</code> of <code>0</code>, which means this element can receive focus and can also be navigated using the Tab key, with the order determined by its position in the source code.</p>
<p>Generally, it’s best to set the <code>tabindex</code> attribute to 0 for most cases, allowing natural sequential navigation that aligns with user expectations, unless the webpage has a specific layout requirement. If no elements on the webpage have a <code>tabindex</code> set, only those default navigable elements (like links and input fields) can be navigated using the Tab key, with the order determined by their position in the source code. Therefore, in practice, setting the <code>tabindex</code> attribute is only necessary for elements that cannot naturally receive focus, such as <code>&lt;span&gt;</code> or <code>&lt;div&gt;</code>.</p>
<h3 id="accesskey"><a href="#accesskey" class="headerlink" title="accesskey"></a>accesskey</h3><p>The <code>accesskey</code> attribute specifies a keyboard shortcut to focus on an element. Its value must be a single printable character:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">accesskey</span>=<span class="string">&quot;s&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>&lt;button&gt;</code> element has a shortcut key of ‘s’, allowing it to receive focus when the shortcut key is pressed.</p>
<p>The <code>accesskey</code> attribute’s character key must be pressed together with a modifier key to take effect. This means the shortcut key is a combination of “modifier key + character key”. Different browsers and operating systems use different modifier keys. For instance, in Chrome on Windows and Linux systems, the shortcut key is <code>Alt + character key</code>, while on Mac systems, it is <code>Ctrl + Alt + character key</code>.</p>
<p>It’s important to note that if <code>accesskey</code> conflicts with system-level or browser-level shortcuts, it will not function.</p>
<h3 id="style"><a href="#style" class="headerlink" title="style"></a>style</h3><p>The <code>style</code> attribute allows inline CSS styling:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The above code specifies that the text color is red.</p>
<h3 id="hidden"><a href="#hidden" class="headerlink" title="hidden"></a>hidden</h3><p>The <code>hidden</code> attribute is a boolean attribute that indicates an element is not currently relevant and should not be rendered:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">hidden</span>&gt;</span>This sentence won&#x27;t appear on the page.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, this <code>&lt;p&gt;</code> element will not appear on the webpage. </p>
<p>Note that CSS visibility settings take precedence over the <code>hidden</code> attribute. If CSS makes the element visible, the <code>hidden</code> attribute will be ignored.</p>
<h3 id="lang-and-dir"><a href="#lang-and-dir" class="headerlink" title="lang and dir"></a>lang and dir</h3><p>The <code>lang</code> attribute specifies the language of an element’s content:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>lang</code> attribute of the first <code>&lt;p&gt;</code> element indicates that the text is in English, while the <code>lang</code> attribute of the second <code>&lt;p&gt;</code> element indicates that the text is in Chinese.</p>
<p>The value of the <code>lang</code> attribute must comply with the BCP47 standard. Here are some common language codes:</p>
<ul>
<li>zh: Chinese</li>
<li>zh-Hans: Simplified Chinese</li>
<li>zh-Hant: Traditional Chinese</li>
<li>en: English</li>
<li>en-US: American English</li>
<li>en-GB: British English</li>
<li>es: Spanish</li>
<li>fr: French</li>
</ul>
<p>The <code>dir</code> attribute indicates the text direction:</p>
<ol>
<li><code>ltr</code>: left-to-right (e.g., English)</li>
<li><code>rtl</code>: right-to-left (e.g., Arabic, Persian, Hebrew)</li>
<li><code>auto</code>: browser decides based on content</li>
</ol>
<h3 id="translate"><a href="#translate" class="headerlink" title="translate"></a>translate</h3><p>The <code>translate</code> attribute indicates whether the element’s content should be translated:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">translate</span>=<span class="string">&quot;no&quot;</span>&gt;</span>Wien<span class="tag">&lt;/<span class="name">span</span>&gt;</span> </span><br><span class="line">  named world&#x27;s most liveable city (again)! </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above, <code>translate=&quot;no&quot;</code> is used to instruct the translation software not to translate the text within the <code>&lt;span&gt;</code> element.</p>
<p>If <code>translate</code> is set to “yes,” it tells the translation software to translate the text.</p>
<h3 id="contenteditable"><a href="#contenteditable" class="headerlink" title="contenteditable"></a>contenteditable</h3><p>By default, HTML web content is not editable by users. The <code>contenteditable</code> attribute allows users to modify the content and can have two possible values:</p>
<ul>
<li><code>true</code> or an empty string: The content is editable.</li>
<li><code>false</code>: The content is not editable.</li>
</ul>
<p>In the code snippet below, clicking on the sentence will enter edit mode, allowing users to change the text. However, unless the changes are submitted to the server, refreshing the page will revert to the original content.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">contenteditable</span>=<span class="string">&quot;true&quot;</span>&gt;</span> Click this sentence to edit its content. <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>contenteditable</code> attribute is an enumerated attribute, not a boolean one, so it’s best to include the attribute value explicitly.</p>
<h3 id="spellcheck"><a href="#spellcheck" class="headerlink" title="spellcheck"></a>spellcheck</h3><p>Browsers typically include a built-in spell check feature, which underlines misspelled words with a red, wavy line. The <code>spellcheck</code> attribute determines whether spell check is enabled.<br>It has two possible values:</p>
<ul>
<li><code>true</code>: Enables spell check.</li>
<li><code>false</code>: Disables spell check.</li>
</ul>
<p>In the example below, the word “seperate” will be underlined to indicate it’s misspelled:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">contenteditable</span>=<span class="string">&quot;true&quot;</span> <span class="attr">spellcheck</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">The English word &quot;separate&quot; is often mistakenly written as &quot;seperate&quot;.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Note that the <code>spellcheck</code> attribute only takes effect when the content is editable, which is why the <code>contenteditable</code> attribute is included. Clicking on the text will allow you to edit it and see the spell check suggestions. Spell check will not be active if the content is not editable. For non-editable elements, the <code>spellcheck</code> attribute has no effect.</p>
<p>Although the <code>spellcheck</code> attribute appears to be boolean, it is actually an enumerated attribute, so it’s best to always specify its value. If the attribute is not set, the browser will decide whether to enable spell check on its own.</p>
<h3 id="data-attributes"><a href="#data-attributes" class="headerlink" title="data- attributes"></a><code>data-</code> attributes</h3><p>The <code>data-</code> attribute is used to store custom data. If there is no other suitable attribute or element to hold the data, you can use <code>data-</code>.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tooltip&quot;</span> <span class="attr">data-tip</span>=<span class="string">&quot;this is the tip!&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this code, <code>data-tip</code> holds the tooltip text for the link.</p>
<p>Since <code>data-</code> attributes are only accessible through CSS or JavaScript, they won’t be covered in detail here. Below are examples of how to use them with CSS:<br><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* HTML code:</span></span><br><span class="line"><span class="comment">&lt;div data-role=&quot;mobile&quot;&gt;</span></span><br><span class="line"><span class="comment">Mobile only content</span></span><br><span class="line"><span class="comment">&lt;/div&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-attr">[data-role=<span class="string">&quot;mobile&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* HTML code:</span></span><br><span class="line"><span class="comment">&lt;div class=&quot;test&quot; data-content=&quot;This is the div content&quot;&gt;test&lt;/div&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.test</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.test</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="built_in">attr</span>(data-content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="Event-Handler-Attributes"><a href="#Event-Handler-Attributes" class="headerlink" title="Event Handler Attributes"></a>Event Handler Attributes</h3><p>Global attributes also include event handler attributes that respond to user actions. These attributes take JavaScript code as their value. For a complete list and usage details, please refer to a JavaScript tutorial.</p>
<blockquote>
<p>onabort, onautocomplete, onautocompleteerror, onblur, oncancel, oncanplay, oncanplaythrough, onchange, onclick, onclose, oncontextmenu, oncuechange, ondblclick, ondrag, ondragend, ondragenter, ondragexit, ondragleave, ondragover, ondragstart, ondrop, ondurationchange, onemptied, onended, onerror, onfocus, oninput, oninvalid, onkeydown, onkeypress, onkeyup, onload, onloadeddata, onloadedmetadata, onloadstart, onmousedown, onmouseenter, onmouseleave, onmousemove, onmouseout, onmouseover, onmouseup, onmousewheel, onpause, onplay, onplaying, onprogress, onratechange, onreset, onresize, onscroll, onseeked, onseeking, onselect, onshow, onsort, onstalled, onsubmit, onsuspend, ontimeupdate, ontoggle, onvolumechange, onwaiting</p>
</blockquote>
<p>Link to original article:<br><a href="https://wangdoc.com/html/attribute">https://wangdoc.com/html/attribute</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to HTML URL</title>
    <url>/2024/06/14/html-url-introduction/</url>
    <content><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>URL stands for “Uniform Resource Locator,” commonly known as a web address. It represents the internet address of various resources. Here’s a typical URL:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.example.com/path/index.html</span><br></pre></td></tr></table></figure><br>Resources can be understood as any files accessible via the internet, such as web pages, images, audio, video, JavaScript scripts, and more. Knowing their URLs is essential to access them on the internet.<br>Any resource accessible through the internet must have a corresponding URL. While one URL corresponds to one resource, a single resource may have multiple URLs.<br>URLs are fundamental to the internet. The “inter” in internet exists because web pages can include “links” to other URLs. Users can jump from one URL to another, visiting different websites with a simple click.</p>
<h2 id="Components-of-a-URL"><a href="#Components-of-a-URL" class="headerlink" title="Components of a URL"></a>Components of a URL</h2><p>URLs consist of multiple parts. Here’s a complex URL example (actual URLs are usually simpler):<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.example.com:80/path/to/myfile.html?key1=value1&amp;key2=value2#anchor</span><br></pre></td></tr></table></figure><br>Let’s break down the parts of this URL:</p>
<h3 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h3><p>The protocol (or scheme) is the method the browser uses to request resources from the server. In our example, it’s the <code>https://</code> part, indicating the use of the HTTPS protocol.<br>The internet supports multiple protocols, and it’s necessary to specify which one the URL uses. The default is typically HTTP. If you omit the protocol and enter <code>www.example.com</code> in the browser’s address bar, it will default to <code>http://www.example.com</code>. HTTPS is the encrypted version of HTTP, and for security reasons, more and more websites are adopting this protocol.<br>HTTP and HTTPS protocol names are followed by a colon and two forward slashes (<code>://</code>). Other protocols may differ; for example, the email address protocol <code>mailto:</code> is followed by only a colon, as in <code>mailto:foo@example.com</code>.</p>
<h3 id="Host"><a href="#Host" class="headerlink" title="Host"></a>Host</h3><p>The host is the name of the website or server where the resource is located, also known as the domain name. In our example, the host is <code>www.example.com</code>.<br>Some hosts don’t have domain names and only use IP addresses (e.g., <code>192.168.2.15</code>). This is common in local area networks.</p>
<h3 id="Port"><a href="#Port" class="headerlink" title="Port"></a>Port</h3><p>A single domain name may host multiple websites, distinguished by their ports. A “port” is an integer that tells the server which specific website the visitor wants to access. The default port for HTTP is 80, and if omitted, the server will return the website on port 80.<br>The port follows the domain name, separated by a colon, like <code>www.example.com:80</code>.</p>
<h3 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h3><p>The path represents the resource’s location on the website. For example, <code>/path/index.html</code> points to the <code>index.html</code> file in the <code>/path</code> subdirectory of the website.<br>In the early days of the internet, paths represented actual physical locations. Now, servers can simulate these locations, so paths are often virtual.<br>Paths may include only directories without filenames (e.g., <code>/foo/</code>), and the trailing slash can even be omitted. In such cases, servers typically default to the <code>index.html</code> file in that directory (equivalent to requesting <code>/foo/index.html</code>), but this depends on server settings.</p>
<h3 id="Query-Parameters"><a href="#Query-Parameters" class="headerlink" title="Query Parameters"></a>Query Parameters</h3><p>Query parameters provide additional information to the server. They appear after the path, separated by a question mark (<code>?</code>). In our example, it’s <code>?key1=value1&amp;key2=value2</code>.<br>Query parameters can be single or multiple. Each parameter is a key-value pair, with the key and value connected by an equals sign (<code>=</code>). For example, <code>key1=value1</code> is a key-value pair where <code>key1</code> is the key and <code>value1</code> is the value.<br>Multiple parameters are separated by ampersands (<code>&amp;</code>), like <code>key1=value1&amp;key2=value2</code>.</p>
<h3 id="Anchor"><a href="#Anchor" class="headerlink" title="Anchor"></a>Anchor</h3><p>An anchor (or fragment identifier) is a location marker within a web page. It’s denoted by a hash symbol (<code>#</code>) followed by the anchor name, placed at the end of the URL (e.g., <code>#anchor</code>). After loading the page, the browser automatically scrolls to the anchor’s location.<br>Anchor names are typically defined by the <code>id</code> attribute of HTML elements, which we’ll cover in the “Element Attributes” chapter.</p>
<h2 id="URL-Characters"><a href="#URL-Characters" class="headerlink" title="URL Characters"></a>URL Characters</h2><p>URLs can only use the following characters:</p>
<ul>
<li>26 English letters (uppercase and lowercase)</li>
<li>10 Arabic numerals</li>
<li>Hyphen (<code>-</code>)</li>
<li>Period (<code>.</code>)</li>
<li>Underscore (<code>_</code>)</li>
</ul>
<p>Additionally, 18 characters are reserved for specific uses in URLs. For example, the question mark (<code>?</code>) can only appear at the beginning of query parameters. If these reserved characters need to be used elsewhere in a URL, they must be escaped.<br>URL character escaping is done by prepending a percent sign (<code>%</code>) to the character’s hexadecimal ASCII code. Here are the 18 reserved characters and their escaped forms:</p>
<ul>
<li><code>!</code>：%21</li>
<li><code>#</code>：%23</li>
<li><code>$</code>：%24</li>
<li><code>&amp;</code>：%26</li>
<li><code>&#39;</code>：%27</li>
<li><code>(</code>：%28</li>
<li><code>)</code>：%29</li>
<li><code>*</code>：%2A</li>
<li><code>+</code>：%2B</li>
<li><code>,</code>：%2C</li>
<li><code>/</code>：%2F</li>
<li><code>:</code>：%3A</li>
<li><code>;</code>：%3B</li>
<li><code>=</code>：%3D</li>
<li><code>?</code>：%3F</li>
<li><code>@</code>：%40</li>
<li><code>[</code>：%5B</li>
<li><code>]</code>：%5D</li>
</ul>
<p>For example, if a webpage’s URL is <code>foo?bar.html</code> (containing a question mark), it should be written as <code>foo%3Fbar.html</code>.<br>While legal URL characters can also be escaped, it’s not recommended. For instance, the letter ‘a’ could be written as <code>%61</code>, but it’s unnecessary.<br>Note that a space is escaped as <code>%20</code>. This is crucial for filenames containing spaces.</p>
<p>Characters that are neither legal URL characters nor reserved characters (such as Chinese characters) theoretically don’t need manual escaping and can be written directly in URLs. For example, <code>www.example.com/中国.html</code>. Browsers will automatically escape these characters when sending the request to the server. The escaping method uses the hexadecimal UTF-8 encoding of these characters. Each two digits are treated as a group, and each group is prefixed with a percent sign (<code>%</code>). </p>
<p>For instance, the UTF-8 hexadecimal encoding for the Chinese character <code>中</code> is <code>e4b8ad</code>. Grouping every two characters and adding percent signs results in <code>%e4%b8%ad</code>. This means that wherever the character <code>中</code> appears in a URL, it should be written as <code>%e4%b8%ad</code>. Therefore, to access the URL <code>www.example.com/中国.html</code>, you would need to write it as:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www.example.com/%e4%b8%ad%e5%9b%bd.html</span><br></pre></td></tr></table></figure><br>In this example, <code>中</code> is escaped as <code>%e4%b8%ad,</code> and <code>国</code> is escaped as <code>%e5%9b%b</code>.</p>
<h2 id="Absolute-vs-Relative-URLs"><a href="#Absolute-vs-Relative-URLs" class="headerlink" title="Absolute vs Relative URLs"></a>Absolute vs Relative URLs</h2><p>URLs come in two types: absolute and relative.<br>Absolute URLs contain complete information to locate a resource, including protocol, host, path, etc. All previous examples were absolute URLs.<br>Relative URLs don’t include full location information and must be combined with the current page’s location to determine the resource’s location. For example, if the current page is <code>https://www.example.com/path/index.html</code> and it contains a resource with URL <code>a.html</code>, this is a relative URL. The browser assumes <code>a.html</code> is in the same subdirectory as the current page, resulting in the absolute URL <code>https://www.example.com/path/a.html</code>.<br>Relative URLs starting with a slash (<code>/</code>) indicate the website’s root directory. Otherwise, they’re calculated from the current directory. For instance, <code>/foo/bar.html</code> refers to the <code>foo</code> subdirectory in the root, while <code>foo/bar.html</code> refers to the <code>foo</code> subdirectory in the current directory.<br>URLs can also use two special shortcuts:<br><code>.</code> : current directory (e.g., <code>./a.html</code> for <code>a.html</code> in the current directory)<br><code>..</code> : parent directory (e.g., <code>../a.html</code> for <code>a.html</code> in the parent directory)<br>These shortcuts can be chained, like <code>../../</code> to indicate two directories up.<br>Absolute URLs can also use these shortcuts, e.g., <code>www.example.com/./index.html</code> is equivalent to <code>www.example.com/index.html</code>. In this case, the dot (<code>.</code>) represents the current directory of the root directory, which is essentially the root directory itself.</p>
<h2 id="lt-base-gt"><a href="#lt-base-gt" class="headerlink" title="&lt;base&gt;"></a><code>&lt;base&gt;</code></h2><p>The <code>&lt;base&gt;</code> tag specifies the base URL for all relative URLs within a web page. Only one <code>&lt;base&gt;</code> tag can be used per page, and it must be placed inside the <code>&lt;head&gt;</code> section. It’s a self-closing tag, meaning it doesn’t have a closing tag. Here’s an example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com/files/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>href</code> attribute of the <code>&lt;base&gt;</code> tag provides the base URL for calculations, while the <code>target</code> attribute specifies how links should be opened (see the “Links” chapter for more details). With the base URL set to <code>https://www.example.com/files/</code>, a relative URL like <code>foo.html</code> would be converted to the absolute URL <code>https://www.example.com/files/foo.html</code>.<br>Note that the <code>&lt;base&gt;</code> tag must have at least one of the <code>href</code> or <code>target</code> attributes:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;http://foo.com/app/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Once set, the <code>&lt;base&gt;</code> tag affects the entire web page. To change the behavior of a specific link, you must use an absolute URL instead of a relative one. Pay special attention to anchor links, as they will be calculated relative to the <code>&lt;base&gt;</code> URL rather than the current page’s.</p>
<p>Link to original article:<br><a href="https://wangdoc.com/html/url">https://wangdoc.com/html/url</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Understanding Text Encoding and Character Representation in HTML</title>
    <url>/2024/06/16/html-encode/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>A webpage contains a large amount of text, and the browser needs to know the encoding method of this text in order to display it correctly.<br>Typically, when a server sends an HTML file to the browser, it specifies the webpage’s encoding method through the HTTP header.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Content-Type: text/html; charset=UTF-8</span><br></pre></td></tr></table></figure><br>In the example above, the <code>Content-Type</code> field in the HTTP header first indicates that the data being sent by the server is of type <code>text/html</code> (i.e., an HTML page), and then specifies that the text encoding is <code>UTF-8</code>.<br>The webpage itself can also declare its encoding internally using the <code>&lt;meta&gt;</code> tag:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="Numeric-Representation-of-Characters"><a href="#Numeric-Representation-of-Characters" class="headerlink" title="Numeric Representation of Characters"></a>Numeric Representation of Characters</h2><p>Webpages can use different encoding methods, but UTF-8 is the most commonly used. UTF-8 is a way of encoding the Unicode character set, which is designed to include all characters in the world, currently encompassing over 100,000 characters.<br>Each character has a Unicode number, known as a code point. If you know the code point, you can determine the corresponding character. For example, the code point for the letter “a” is <code>97</code> in decimal (<code>61</code> in hexadecimal), and the code point for the Chinese character “中” is <code>20013</code> in decimal (<code>4e2d</code> in hexadecimal).</p>
<p>However, not all Unicode characters can be directly displayed in HTML for the following reasons:</p>
<ol>
<li>Not all Unicode characters are printable; some have no visible form, like the newline character with a code point of <code>10</code> in decimal (<code>A</code> in hexadecimal).</li>
<li>The less-than (<code>&lt;</code>) and greater-than (<code>&gt;</code>) signs are used to define HTML tags. When these symbols are needed elsewhere, they must be prevented from being interpreted as tags.</li>
<li>Due to the vast number of Unicode characters, it’s impossible to create an input method that allows direct input of all these characters. In other words, no keyboard can input every symbol.</li>
<li>Webpages cannot mix multiple encodings. If you use UTF-8 encoding and want to insert characters from another encoding, it can be very challenging.</li>
</ol>
<p>To solve these issues, HTML allows characters to be represented by their Unicode code points, which the browser automatically converts into the corresponding characters.</p>
<p>The syntax for representing characters by their code points is <code>&amp;#N;</code> (decimal, where <code>N</code> is the code point) or <code>&amp;#xN;</code> (hexadecimal, where <code>N</code> is the code point). For example, the character “a” can be written as <code>&amp;#97;</code> (decimal) or <code>&amp;#x61;</code> (hexadecimal), and the character “中” can be written as <code>&amp;#20013;</code> (decimal) or <code>&amp;#x4e2d;</code> (hexadecimal). The browser will automatically convert them.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Equivalent to --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;#104;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#108;</span><span class="symbol">&amp;#108;</span><span class="symbol">&amp;#111;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Equivalent to --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;#x68;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#x6c;</span><span class="symbol">&amp;#x6c;</span><span class="symbol">&amp;#x6f;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In the example above, characters can be represented directly or using their decimal or hexadecimal code points.</p>
<p>Note that HTML tags themselves cannot be represented by code points, as the browser will treat them as text content rather than tags. For instance, writing <code>&lt;p&gt;</code> as <code>&lt;&amp;#112;&gt;</code> or <code>&amp;#60;&amp;#112;&amp;#62;</code> will cause the browser to display <code>&lt;p&gt;</code> as text instead of recognizing it as a tag.</p>
<h2 id="Entity-Representation-of-Characters"><a href="#Entity-Representation-of-Characters" class="headerlink" title="Entity Representation of Characters"></a>Entity Representation of Characters</h2><p>The numeric representation of characters can be inconvenient because it requires knowing each character’s code point, which can be difficult to remember. To simplify input, HTML allows certain special characters to be represented by easy-to-remember names, known as entities.<br>Entities are written as <code>&amp;name;</code>, where <code>name</code> is the character’s name. Here are some special characters and their corresponding entities:</p>
<ul>
<li><code>&lt;</code>：<code>&amp;lt;</code></li>
<li><code>&gt;</code>：<code>&amp;gt;</code></li>
<li><code>&quot;</code>：<code>&amp;quot;</code></li>
<li><code>&#39;</code>：<code>&amp;apos;</code></li>
<li><code>&amp;</code>：<code>&amp;amp;</code></li>
<li><code>©</code>：<code>&amp;copy;</code></li>
<li><code>#</code>：<code>&amp;num;</code></li>
<li><code>§</code>：<code>&amp;sect;</code></li>
<li><code>¥</code>：<code>&amp;yen;</code></li>
<li><code>$</code>：<code>&amp;dollar;</code></li>
<li><code>£</code>：<code>&amp;pound;</code></li>
<li><code>¢</code>：<code>&amp;cent;</code></li>
<li><code>%</code>：<code>&amp;percnt;</code></li>
<li><code>*</code>：<code>$ast;</code></li>
<li><code>@</code>：<code>&amp;commat;</code></li>
<li><code>^</code>：<code>&amp;Hat;</code></li>
<li><code>±</code>：<code>&amp;plusmn;</code></li>
<li>(space)：<code>&amp;nbsp;</code></li>
</ul>
<p>Note that the last special character is a space, which also has a corresponding entity representation.</p>
<p>Both the numeric and entity representations allow characters that cannot be directly input to be displayed on the webpage, thereby “escaping” the limitations of the browser. This is why the process is referred to as “escaping characters” in English.</p>
<p>Link to original article:<br><a href="https://wangdoc.com/html/encode">https://wangdoc.com/html/encode</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Semantic Tags</title>
    <url>/2024/06/17/html-semantic-tags/</url>
    <content><![CDATA[<p>HTML tags are designed to be semantic, meaning they convey the purpose and structure of the content they encapsulate. When using HTML, it’s crucial to choose tags that accurately represent the meaning of your content. This practice of semantic HTML naturally results in well-structured web pages that are easier for developers to read, write, and maintain. It also helps computers better process and understand web content.  </p>
<h2 id="The-Importance-of-Semantic-HTML"><a href="#The-Importance-of-Semantic-HTML" class="headerlink" title="The Importance of Semantic HTML"></a>The Importance of Semantic HTML</h2><p>One of the key functions of HTML tags is to declare the nature of webpage elements. This allows users to understand the significance of each element just by looking at the tags, and to grasp the overall structure of the page by reading the HTML source code. This principle is known as the semantic approach to HTML.<br>Here’s an example of a typical semantic structure for a webpage:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span>Page Header<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Article Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Article content<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span>Page Footer<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Just by looking at this code, you can see that the page is divided into three main sections: a header, main content area, and footer.<br>When creating an HTML webpage, the first step should be to establish this semantic structure as the skeleton of your page.</p>
<h2 id="Commonly-Used-Semantic-Tags"><a href="#Commonly-Used-Semantic-Tags" class="headerlink" title="Commonly Used Semantic Tags"></a>Commonly Used Semantic Tags</h2><h3 id="lt-header-gt"><a href="#lt-header-gt" class="headerlink" title="&lt;header&gt;"></a><code>&lt;header&gt;</code></h3><p>The <code>&lt;header&gt;</code> tag is versatile and can be used in multiple contexts. It can represent the header of the entire webpage or the header of a specific article or section.<br>When used as the webpage header, it’s often referred to as the “page header” and typically contains site navigation and search functionality:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Company Name<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/home&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/about&quot;</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/contact&quot;</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/search&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;q&quot;</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure><br>When used within an article, it can contain the article title, author information, and other metadata:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Article Title<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>By John Doe, published January 1, 2010<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Note that while a page can have multiple <code>&lt;header&gt;</code> elements in different contexts, each specific context should only have one. Additionally, a <code>&lt;header&gt;</code> should not contain another <code>&lt;header&gt;</code> or a <code>&lt;footer&gt;</code>.  </p>
<h3 id="lt-footer-gt"><a href="#lt-footer-gt" class="headerlink" title="&lt;footer&gt;"></a><code>&lt;footer&gt;</code></h3><p>The <code>&lt;footer&gt;</code> tag represents the footer of a webpage, article, or section. When used for the entire webpage, it’s called the “page footer” and typically contains copyright information or other relevant details:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>© 2024 XYZ Company<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><br>It can also be used within articles:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Article Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>© All rights reserved<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Like <code>&lt;header&gt;</code>, <code>&lt;footer&gt;</code> cannot be nested within another <code>&lt;footer&gt;</code> or contain a <code>&lt;header&gt;</code>.</p>
<h3 id="lt-main-gt"><a href="#lt-main-gt" class="headerlink" title="&lt;main&gt;"></a><code>&lt;main&gt;</code></h3><p>The <code>&lt;main&gt;</code> tag represents the primary content of the page. There should only be one <code>&lt;main&gt;</code> element per page:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span>Page Header<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span>Main Content<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aside</span>&gt;</span>Sidebar<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span>Page Footer<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><br><code>&lt;main&gt;</code> is a top-level tag and should not be placed within <code>&lt;header&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;aside&gt;</code>, <code>&lt;nav&gt;</code>, or similar tags. Functional elements like search bars should not be included in <code>&lt;main&gt;</code> unless the current page is specifically a search page.</p>
<h3 id="lt-article-gt"><a href="#lt-article-gt" class="headerlink" title="&lt;article&gt;"></a><code>&lt;article&gt;</code></h3><p>The <code>&lt;article&gt;</code> tag represents a self-contained piece of content that would make sense on its own, even if the rest of the page didn’t exist. It’s typically used for blog posts, news articles, or forum posts:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Article Title<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Article content goes here...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><br>A webpage can contain multiple <code>&lt;article&gt;</code> elements.</p>
<h3 id="lt-aside-gt"><a href="#lt-aside-gt" class="headerlink" title="&lt;aside&gt;"></a><code>&lt;aside&gt;</code></h3><p>The <code>&lt;aside&gt;</code> tag is used for content that is tangentially related to the main content of the webpage or article. At the page level, it’s often used for sidebars (though it doesn’t necessarily have to be positioned on the side of the page). Within an article, it can be used for supplementary information, comments, or footnotes:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span>Main Content<span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aside</span>&gt;</span>Sidebar Content<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Example of an article-level aside:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>First paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This paragraph is a key point of the article.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="lt-section-gt"><a href="#lt-section-gt" class="headerlink" title="&lt;section&gt;"></a><code>&lt;section&gt;</code></h3><p>The <code>&lt;section&gt;</code> tag represents a thematically distinct part of a document, typically used to divide an article into chapters or major sections:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Article Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Chapter 1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Chapter 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><br><code>&lt;section&gt;</code> elements are typically used in groups; a page shouldn’t have just one <code>&lt;section&gt;</code>. They’re also well-suited for slide presentations, where each <code>&lt;section&gt;</code> represents a slide.</p>
<p>Generally, each <code>&lt;section&gt;</code> should have a heading (<code>h1</code>-<code>h6</code>). Multiple <code>&lt;section&gt;</code> elements can be placed within an <code>&lt;article&gt;</code>, and a <code>&lt;section&gt;</code> might contain multiple <code>&lt;article&gt;</code> elements, depending on the context and meaning in the current page.</p>
<h3 id="lt-nav-gt"><a href="#lt-nav-gt" class="headerlink" title="&lt;nav&gt;"></a><code>&lt;nav&gt;</code></h3><p>The <code>&lt;nav&gt;</code> tag is used for major navigation blocks on the page:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;item-a&quot;</span>&gt;</span>Product A<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;item-b&quot;</span>&gt;</span>Product B<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Product C<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Typically, <code>&lt;nav&gt;</code> is placed within <code>&lt;header&gt;</code> rather than <code>&lt;footer&gt;</code>. A page can have multiple <code>&lt;nav&gt;</code> elements, such as one for site navigation and another for in-page navigation.</p>
<h3 id="lt-h1-gt-to-lt-h6-gt"><a href="#lt-h1-gt-to-lt-h6-gt" class="headerlink" title="&lt;h1&gt; to &lt;h6&gt;"></a><code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code></h3><p>HTML provides six tags for representing article headings, organized into six levels based on their hierarchy:</p>
<ol>
<li><code>&lt;h1&gt;</code>: Heading 1 (highest level) </li>
<li><code>&lt;h2&gt;</code>: Heading 2 </li>
<li><code>&lt;h3&gt;</code>: Heading 3 </li>
<li><code>&lt;h4&gt;</code>: Heading 4 </li>
<li><code>&lt;h5&gt;</code>: Heading 5 </li>
<li><code>&lt;h6&gt;</code>: Heading 6 (lowest level)</li>
</ol>
<p><code>&lt;h1&gt;</code> represents the highest-level heading, while <code>&lt;h6&gt;</code> is the lowest. Each subsequent heading level serves as a subheading to the one above it. For example, an <code>&lt;h1&gt;</code> can be followed by multiple <code>&lt;h2&gt;</code> headings, and each <code>&lt;h2&gt;</code> can have multiple <code>&lt;h3&gt;</code> headings beneath.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Introduction to JavaScript<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Overview<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Basic Concepts<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Webpages<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Links<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Main Uses<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The code above clearly outlines the structure of the article through its section titles. The detailed content can be written under these section titles.</p>
<p>Headings should not skip levels (e.g., from <code>h1</code> to <code>h3</code>) as this disrupts the document’s structure. Browsers typically display headings in bold, with decreasing font sizes from <code>h1</code> to <code>h6</code>.</p>
<h3 id="lt-hgroup-gt"><a href="#lt-hgroup-gt" class="headerlink" title="&lt;hgroup&gt;"></a><code>&lt;hgroup&gt;</code></h3><p>The <code>&lt;hgroup&gt;</code> tag is used to group multiple levels of headings, such as when you have a main title with one or more subtitles:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Main Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Subtitle 1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Subtitle 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Note that <code>&lt;hgroup&gt;</code> should only contain <code>&lt;h1&gt;</code>-<code>&lt;h6&gt;</code> elements, not other types of content.</p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Text</title>
    <url>/2024/06/18/html-text/</url>
    <content><![CDATA[<p>Historically, web pages were mainly used for displaying text, so HTML includes a variety of text formatting tags.</p>
<h2 id="lt-div-gt"><a href="#lt-div-gt" class="headerlink" title="&lt;div&gt;"></a><code>&lt;div&gt;</code></h2><p>The <code>&lt;div&gt;</code> tag is a generic container that represents a division or section in a document. It has no semantic meaning, so it’s often used as a block-level element when no other suitable tag is available.<br>Its most common use is to provide CSS hooks for styling purposes. In the past, it was common to see deeply nested <code>&lt;div&gt;</code> elements for layout:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;article&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Article Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>However, this approach can be cumbersome due to the lack of semantics. HTML5 introduced semantic elements to improve this:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Article Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br></pre></td></tr></table></figure><br>While <code>&lt;div&gt;</code> is a non-semantic block-level element, it can be used to group images and text, like in a warning section:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;warning.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Warning&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Be careful<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Use <code>&lt;div&gt;</code> when you need to group elements for styling, but prefer semantic tags (like <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;aside&gt;</code>, <code>&lt;nav&gt;</code>, etc.) whenever possible for better readability and structure.</p>
<h2 id="lt-p-gt"><a href="#lt-p-gt" class="headerlink" title="&lt;p&gt;"></a><code>&lt;p&gt;</code></h2><p>The <code>&lt;p&gt;</code> tag is a block-level element that represents a paragraph. It can enclose any content meant to be displayed as a paragraph, including text, images, or form elements.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This code creates a simple paragraph.</p>
<h2 id="lt-span-gt"><a href="#lt-span-gt" class="headerlink" title="&lt;span&gt;"></a><code>&lt;span&gt;</code></h2><p>The <code>&lt;span&gt;</code> tag is an inline element with no semantic meaning, meaning it does not cause line breaks. It’s commonly used as a hook for CSS styling. You can use <code>&lt;span&gt;</code> to apply styles to specific inline content.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a <span class="tag">&lt;<span class="name">span</span>&gt;</span>important<span class="tag">&lt;/<span class="name">span</span>&gt;</span> sentence.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this code, the <code>&lt;span&gt;</code> tag is used to emphasize the word “important” within the sentence.</p>
<h2 id="lt-br-gt"><a href="#lt-br-gt" class="headerlink" title="&lt;br&gt;"></a><code>&lt;br&gt;</code></h2><p>The <code>&lt;br&gt;</code> tag creates a line break on a webpage. It is a self-closing tag and does not have a closing counterpart.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">hello<span class="tag">&lt;<span class="name">br</span>&gt;</span>world</span><br></pre></td></tr></table></figure><br>In this code, the browser renders “hello” and “world” on separate lines.<br>The <code>&lt;br&gt;</code> tag is useful for breaking lines in poems and addresses:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  To see a world in a grain of sand,<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  And a heaven in a wild fllower,<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  Hold infinity in the palm of your hand,<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  And eternity in an hour.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Without the <code>&lt;br&gt;</code> tags, this text would appear on a single line.<br>However, for controlling spacing between block-level elements, such as paragraphs, it is better to use CSS rather than multiple <code>&lt;br&gt;</code> tags:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>the first paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>the second paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this example, using <code>&lt;br&gt;</code> to create space between paragraphs is not ideal. Instead, CSS should be used to manage the spacing.</p>
<p>The <code>&lt;wbr&gt;</code> tag, similar to <code>&lt;br&gt;</code>, indicates optional line break points. If the line width is sufficient, no break occurs; if the width is not enough, a break happens at the <code>&lt;wbr&gt;</code> point. This is particularly useful for long words or URLs to prevent improper line breaks:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  Fernstraßen<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>bau<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>privat<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>finanzierungs<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>gesetz</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This code shows a long German word, and the <code>&lt;wbr&gt;</code> tags suggest where line breaks can occur if necessary.</p>
<h2 id="lt-hr-gt"><a href="#lt-hr-gt" class="headerlink" title="&lt;hr&gt;"></a><code>&lt;hr&gt;</code></h2><p>The <code>&lt;hr&gt;</code> tag is used to separate two different topics within an article, and it renders as a horizontal line in browsers. This tag is self-closing and does not require a closing tag.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>First topic<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Second topic<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In the example above, a horizontal line appears between the two paragraphs.<br>This tag is considered somewhat outdated. It’s recommended to use <code>&lt;section&gt;</code> to divide topics and employ CSS if you want to achieve a horizontal line effect.</p>
<h2 id="lt-pre-gt"><a href="#lt-pre-gt" class="headerlink" title="&lt;pre&gt;"></a><code>&lt;pre&gt;</code></h2><p>The <code>&lt;pre&gt;</code> tag is a block-level element used to preserve formatting, meaning browsers keep the original line breaks and spaces within the tag. By default, the content is displayed in a monospaced font.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>hello</span><br><span class="line"></span><br><span class="line">   world<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this example, line breaks and multiple spaces are preserved by the <code>&lt;pre&gt;</code> tag, and the browser displays them exactly as written.<br>Note that HTML tags inside <code>&lt;pre&gt;</code> still function. The <code>&lt;pre&gt;</code> tag retains spaces and line breaks but does not preserve HTML tags.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this case, the content within <code>&lt;pre&gt;</code> will be displayed with bold text.</p>
<h2 id="lt-strong-gt-lt-b-gt"><a href="#lt-strong-gt-lt-b-gt" class="headerlink" title="&lt;strong&gt;, &lt;b&gt;"></a><code>&lt;strong&gt;</code>, <code>&lt;b&gt;</code></h2><p>The <code>&lt;strong&gt;</code> element is an inline element that indicates its content is of great importance and should be highlighted. Browsers display this content in bold.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The meeting time is <span class="tag">&lt;<span class="name">strong</span>&gt;</span>2:00 PM<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;b&gt;</code> element, while similar to <code>&lt;strong&gt;</code>, also indicates that its content needs to be emphasized and is displayed in bold by browsers. However, <code>&lt;b&gt;</code> is a stylistic element without semantic meaning, a remnant of older practices. It is a shorthand for “Boldface.”<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The meeting time is <span class="tag">&lt;<span class="name">b</span>&gt;</span>2:00 PM<span class="tag">&lt;/<span class="name">b</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Due to its lack of semantic value and the principle of separating content from style, it’s recommended to use the <code>&lt;strong&gt;</code> tag instead.</p>
<h2 id="lt-em-gt-lt-i-gt"><a href="#lt-em-gt-lt-i-gt" class="headerlink" title="&lt;em&gt;, &lt;i&gt;"></a><code>&lt;em&gt;</code>, <code>&lt;i&gt;</code></h2><p>The <code>&lt;em&gt;</code> tag is an inline element used to emphasize text. Browsers typically display the content within <code>&lt;em&gt;</code> in italics.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>We have <span class="tag">&lt;<span class="name">em</span>&gt;</span>already<span class="tag">&lt;/<span class="name">em</span>&gt;</span> discussed this matter.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>While browsers usually render <code>&lt;em&gt;</code> text in italics, this is not always guaranteed. It’s a good practice to use CSS to explicitly define the styling for this tag.<br>The <code>&lt;i&gt;</code> tag is similar to <code>&lt;em&gt;</code>, also used to indicate text with a different style, typically rendered in italics. It stands for “Italic.”<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I wonder, is this <span class="tag">&lt;<span class="name">i</span>&gt;</span>really<span class="tag">&lt;/<span class="name">i</span>&gt;</span> true?<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;i&gt;</code> tag is more of a presentational element and lacks strong semantic meaning. It’s generally recommended to use <code>&lt;em&gt;</code> for emphasis instead.</p>
<h2 id="lt-sub-gt-lt-sup-gt-lt-var-gt"><a href="#lt-sub-gt-lt-sup-gt-lt-var-gt" class="headerlink" title="&lt;sub&gt;, &lt;sup&gt;, &lt;var&gt;"></a><code>&lt;sub&gt;</code>, <code>&lt;sup&gt;</code>, <code>&lt;var&gt;</code></h2><p>The <code>&lt;sub&gt;</code> tag turns content into subscript, while the <code>&lt;sup&gt;</code> tag turns content into superscript. Both are inline elements, commonly used in mathematical formulas, chemical formulas, and so on.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Water is represented as H<span class="tag">&lt;<span class="name">sub</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>O.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;var&gt;</code> tag denotes a variable in code or mathematical formulas.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The Pythagorean theorem is expressed as</span><br><span class="line">  <span class="tag">&lt;<span class="name">var</span>&gt;</span>a<span class="tag">&lt;/<span class="name">var</span>&gt;</span><span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span> + <span class="tag">&lt;<span class="name">var</span>&gt;</span>b<span class="tag">&lt;/<span class="name">var</span>&gt;</span><span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span> = <span class="tag">&lt;<span class="name">var</span>&gt;</span>c<span class="tag">&lt;/<span class="name">var</span>&gt;</span><span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line">.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="lt-u-gt-lt-s-gt"><a href="#lt-u-gt-lt-s-gt" class="headerlink" title="&lt;u&gt;, &lt;s&gt;"></a><code>&lt;u&gt;</code>, <code>&lt;s&gt;</code></h2><p>The <code>&lt;u&gt;</code> tag is an inline element used to provide a note or indicate a potential issue, primarily for marking spelling errors. By default, browsers render the content with an underline.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>One common misspelling is writing <span class="tag">&lt;<span class="name">em</span>&gt;</span>government<span class="tag">&lt;/<span class="name">em</span>&gt;</span> as <span class="tag">&lt;<span class="name">u</span>&gt;</span>goverment<span class="tag">&lt;/<span class="name">u</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In the example above, <code>&lt;u&gt;</code> underlines “goverment” to signal a spelling error.<br>Note that since links also default to underlined text, you should use <code>&lt;u&gt;</code> cautiously to avoid confusing users into thinking the text is clickable. If necessary, consider using CSS to modify the default style of <code>&lt;u&gt;</code>.<br>The <code>&lt;s&gt;</code> tag is an inline element that adds a strikethrough to the content.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Today&#x27;s special: <span class="tag">&lt;<span class="name">s</span>&gt;</span>Salmon<span class="tag">&lt;/<span class="name">s</span>&gt;</span> (Sold out)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this example, “Salmon” will be displayed with a strikethrough.</p>
<h2 id="lt-blockquote-gt-lt-cite-gt-lt-q-gt"><a href="#lt-blockquote-gt-lt-cite-gt-lt-q-gt" class="headerlink" title="&lt;blockquote&gt;, &lt;cite&gt;, &lt;q&gt;"></a><code>&lt;blockquote&gt;</code>, <code>&lt;cite&gt;</code>, <code>&lt;q&gt;</code></h2><p>The <code>&lt;blockquote&gt;</code> tag is a block-level element used to indicate a quotation from someone else. Browsers typically display it with styling that sets it apart from normal text.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">cite</span>=<span class="string">&quot;https://quote.example.com&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Genius is 1% inspiration and 99% perspiration.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;blockquote&gt;</code> tag includes a <code>cite</code> attribute, which specifies the source of the quotation. This URL does not appear on the webpage itself.<br>The <code>&lt;cite&gt;</code> tag is used to reference the source of a quotation or the author’s name. Browsers typically display content inside <code>&lt;cite&gt;</code> in italics.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">cite</span>=<span class="string">&quot;https://quote.example.com&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Genius is 1% inspiration and 99% perspiration.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cite</span>&gt;</span>-- Thomas Edison<span class="tag">&lt;/<span class="name">cite</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;cite&gt;</code> tag does not need to be used with <code>&lt;blockquote&gt;</code>. It can also be used on its own to refer to sources mentioned in the text.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>For more information, see <span class="tag">&lt;<span class="name">cite</span>&gt;</span>Wikipedia<span class="tag">&lt;/<span class="name">cite</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;q&gt;</code> tag is an inline element that also represents a quotation. Unlike <code>&lt;blockquote&gt;</code>, it does not create a line break.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  A famous line from Shakespeare&#x27;s Hamlet is:</span><br><span class="line">  <span class="tag">&lt;<span class="name">q</span> <span class="attr">cite</span>=<span class="string">&quot;https://quote.example.com&quot;</span>&gt;</span>To be or not to be, that is the question.<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this example, the quotation appears on the same line as the surrounding text.<br>Similar to <code>&lt;blockquote&gt;</code>, the <code>&lt;q&gt;</code> tag also has a <code>cite</code> attribute for specifying the source of the quotation. By default, browsers display <code>&lt;q&gt;</code> content in italics and automatically add quotation marks. Therefore, be cautious when quoting text in languages that use different quotation marks.</p>
<h2 id="lt-code-gt"><a href="#lt-code-gt" class="headerlink" title="&lt;code&gt;"></a><code>&lt;code&gt;</code></h2><p>The <code>&lt;code&gt;</code> tag is an inline element used to display computer code. By default, browsers render the content inside <code>&lt;code&gt;</code> using a monospaced font.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>alert()<span class="tag">&lt;/<span class="name">code</span>&gt;</span>function displays a popup alert box on a webpage.</span><br></pre></td></tr></table></figure><br>To represent multiple lines of code, you should place the <code>&lt;code&gt;</code> tag inside a <code>&lt;pre&gt;</code> tag. The <code>&lt;code&gt;</code> tag itself only handles single-line code snippets.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span></span><br><span class="line">  let a = 1;</span><br><span class="line">  console.log(a);</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="lt-kbd-gt-lt-samp-gt"><a href="#lt-kbd-gt-lt-samp-gt" class="headerlink" title="&lt;kbd&gt;, &lt;samp&gt;"></a><code>&lt;kbd&gt;</code>, <code>&lt;samp&gt;</code></h2><p>The <code>&lt;kbd&gt;</code> tag is an inline element originally intended to represent user keyboard input, but it now also includes other types of input, such as voice commands. Browsers display the content inside <code>&lt;kbd&gt;</code> using a monospaced font.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>On Windows, you can press <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Ctrl<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> + <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Shift<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> + <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Del<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> to restart.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;kbd&gt;</code> tag can be nested, which helps in styling multiple key combinations:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>On Windows, you can press </span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Ctrl<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> + <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Shift<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> + <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Del<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> to restart.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>The <code>&lt;samp&gt;</code> tag is an inline element used to represent sample output from a computer program. By default, browsers display content inside <code>&lt;samp&gt;</code> with a monospaced font.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>If you use an undefined variable, the browser will throw an error:</span><br><span class="line"><span class="tag">&lt;<span class="name">samp</span>&gt;</span>Uncaught ReferenceError: foo is not defined<span class="tag">&lt;/<span class="name">samp</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="lt-mark-gt"><a href="#lt-mark-gt" class="headerlink" title="&lt;mark&gt;"></a><code>&lt;mark&gt;</code></h2><p>The <code>&lt;mark&gt;</code> tag is an inline element used to highlight text. In Chrome, the default display is a bright yellow background for the highlighted content.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>After discussion, we decided that the <span class="tag">&lt;<span class="name">mark</span>&gt;</span>games will be held next Wednesday<span class="tag">&lt;/<span class="name">mark</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;mark&gt;</code> tag is also useful for highlighting important sentences within quoted content, such as in <code>&lt;q&gt;</code> or <code>&lt;blockquote&gt;</code> elements:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">cite</span>=<span class="string">&quot;https://quote.example.com&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Genius is 1% <span class="tag">&lt;<span class="name">mark</span>&gt;</span>inspiration<span class="tag">&lt;/<span class="name">mark</span>&gt;</span> and 99% <span class="tag">&lt;<span class="name">mark</span>&gt;</span>perspiration<span class="tag">&lt;/<span class="name">mark</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Besides highlighting interesting text, <code>&lt;mark&gt;</code> can be used to highlight matching keywords in search results.<br>Note that the <code>&lt;mark&gt;</code> tag should not be used solely for visual highlighting, as browser handling may vary. For consistent highlighting, it is better to use CSS styles.</p>
<h2 id="lt-small-gt"><a href="#lt-small-gt" class="headerlink" title="&lt;small&gt;"></a><code>&lt;small&gt;</code></h2><p>The <code>&lt;small&gt;</code> tag is an inline element that displays its content in a smaller font size by default, without needing additional CSS styles. It is often used for supplementary information like copyright or legal notices.</p>
<p>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Main content of the article.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">small</span>&gt;</span>Content licensed under Creative Commons.<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="lt-time-gt-lt-data-gt"><a href="#lt-time-gt-lt-data-gt" class="headerlink" title="&lt;time&gt;, &lt;data&gt;"></a><code>&lt;time&gt;</code>, <code>&lt;data&gt;</code></h2><p>The <code>&lt;time&gt;</code> tag is an inline element that provides a machine-readable format for dates and times.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The sports meet is scheduled to take place on <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">&quot;2015-06-10&quot;</span>&gt;</span>next Wednesday<span class="tag">&lt;/<span class="name">time</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this example, <code>&lt;time&gt;</code> specifies the exact date for “next Wednesday.” This makes it easier for search engines to index or for other processes to handle.<br>The <code>datetime</code> attribute of the <code>&lt;time&gt;</code> tag is used to specify a machine-readable date, and it can have various formats:</p>
<ul>
<li>Year only: <code>2011</code></li>
<li>Year and month: <code>2011-11</code></li>
<li>Year, month, and day: <code>2011-11-18</code></li>
<li>Month and day only: <code>11-18</code></li>
<li>Week of the year: <code>2011-W47</code></li>
<li>Time only: <code>14:54</code>, <code>14:54:39</code>, <code>14:54:39.929</code></li>
<li>Date and time: <code>2011-11-18T14:54:39.929</code></li>
</ul>
<p>For instance:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The concert starts at <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">&quot;20:00&quot;</span>&gt;</span>8 PM<span class="tag">&lt;/<span class="name">time</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>The <code>&lt;data&gt;</code> tag is similar to <code>&lt;time&gt;</code>, providing machine-readable content but for non-time-related information.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The first place in the marathon is <span class="tag">&lt;<span class="name">data</span> <span class="attr">value</span>=<span class="string">&quot;39&quot;</span>&gt;</span>John Doe<span class="tag">&lt;/<span class="name">data</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Here, the machine-readable data for the runner’s position is stored in the <code>value</code> attribute of the <code>&lt;data&gt;</code> tag.</p>
<h2 id="lt-address-gt"><a href="#lt-address-gt" class="headerlink" title="&lt;address&gt;"></a><code>&lt;address&gt;</code></h2><p>The <code>&lt;address&gt;</code> tag is a block-level element used to specify contact information for a person or organization.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Author&#x27;s contact details:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:foo@example.com&quot;</span>&gt;</span>foo@example.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tel:+555-34762301&quot;</span>&gt;</span>+555-34762301<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Here are some important points to keep in mind when using the <code>&lt;address&gt;</code> tag:</p>
<ol>
<li>Use <code>&lt;address&gt;</code> only for contact information, not for addresses mentioned in the text (e.g., a previous address before a move).</li>
<li>The content of the <code>&lt;address&gt;</code> tag should not include non-contact information, such as publication dates.</li>
<li><code>&lt;address&gt;</code> cannot be nested and should not contain heading tags (<code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code>) or other structural elements like <code>&lt;article&gt;</code>, <code>&lt;aside&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;nav&gt;</code>, <code>&lt;header&gt;</code>, or <code>&lt;footer&gt;</code>.</li>
<li>Typically, the <code>&lt;address&gt;</code> tag is placed inside a <code>&lt;footer&gt;</code>. Here’s an example:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">    For questions related to this article, contact <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:zhangsan@example.com&quot;</span>&gt;</span>Zhang San McClure<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="lt-abbr-gt"><a href="#lt-abbr-gt" class="headerlink" title="&lt;abbr&gt;"></a><code>&lt;abbr&gt;</code></h2><p>The <code>&lt;abbr&gt;</code> tag is an inline element used to indicate that the content is an abbreviation. The <code>title</code> attribute provides the full form or description of the abbreviation. When you hover over the element, the value of the <code>title</code> attribute is displayed as a tooltip.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;HyperText Markup Language&quot;</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Note that some browsers may underline the abbreviation with a dot.</p>
<h2 id="lt-ins-gt-lt-del-gt"><a href="#lt-ins-gt-lt-del-gt" class="headerlink" title="&lt;ins&gt;, &lt;del&gt;"></a><code>&lt;ins&gt;</code>, <code>&lt;del&gt;</code></h2><p>The <code>&lt;ins&gt;</code> tag is an inline element used to indicate content that has been added to a document. Similarly, the <code>&lt;del&gt;</code> tag denotes content that has been removed. These tags are commonly used to show edits to a document.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>The meeting was scheduled for May 8.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>The meeting is now scheduled for May 9.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br></pre></td></tr></table></figure><br>By default, browsers render the content of the <code>&lt;del&gt;</code> tag with a strikethrough, while the <code>&lt;ins&gt;</code> tag content is underlined.<br>Both tags support the following attributes:</p>
<ul>
<li><code>cite</code>: Provides a URL that explains the reason for the edit.</li>
<li><code>datetime</code>: Specifies when the edit took place.</li>
</ul>
<p>Example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ins</span> <span class="attr">cite</span>=<span class="string">&quot;./why.html&quot;</span> <span class="attr">datetime</span>=<span class="string">&quot;2018-05&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>The project is now ending two weeks earlier than originally planned.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="lt-dfn-gt"><a href="#lt-dfn-gt" class="headerlink" title="&lt;dfn&gt;"></a><code>&lt;dfn&gt;</code></h2><p>The <code>&lt;dfn&gt;</code> element is an inline element used to mark a term that is being defined. The term’s definition should be included in the surrounding context.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A global network of interconnected computers using the TCP/IP protocol is called the <span class="tag">&lt;<span class="name">dfn</span>&gt;</span>Internet<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>For convenience in scripting, you can include the term’s definition in the <code>&lt;dfn&gt;</code> tag’s <code>title</code> attribute.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A global network of interconnected computers using the TCP/IP protocol is called the </span><br><span class="line">  <span class="tag">&lt;<span class="name">dfn</span> <span class="attr">title</span>=<span class="string">&quot;Global network of interconnected computers&quot;</span>&gt;</span>Internet<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span>.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the <code>title</code> attribute causes the definition to appear as a tooltip when the mouse hovers over the term.</p>
<p>Sometimes a term itself is an abbreviation. In such cases, <code>&lt;dfn&gt;</code> and <code>&lt;abbr&gt;</code> can be used together.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  The full form of <span class="tag">&lt;<span class="name">dfn</span>&gt;</span><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;acquired immune deficiency syndrome&quot;</span>&gt;</span>AIDS<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span><span class="tag">&lt;/<span class="name">dfn</span>&gt;</span> is Acquired Immune Deficiency Syndrome.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="lt-ruby-gt"><a href="#lt-ruby-gt" class="headerlink" title="&lt;ruby&gt;"></a><code>&lt;ruby&gt;</code></h2><p>The <code>&lt;ruby&gt;</code> tag is used to add phonetic annotations to text, primarily for East Asian languages like Chinese and Japanese. It typically displays these annotations in a smaller font above the main text.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br><span class="line">汉<span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>han<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line">字<span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>zi<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In the rendered output, this code shows the Chinese characters with the pinyin annotations “han zi” above them.<br>The <code>&lt;ruby&gt;</code> tag is an inline element and a container. To use phonetic annotations, you must place both the text and the annotations within this tag.<br>Inside <code>&lt;ruby&gt;</code>, there are several related tags:</p>
<ol>
<li><p><code>&lt;rp&gt;</code>: The <code>&lt;rp&gt;</code> tag provides a fallback for browsers that do not support phonetic annotations. For these browsers, it displays the annotations in parentheses.For example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br><span class="line">汉<span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>han<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line">字<span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>zi<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In browsers that do not support annotations, this renders as <code>汉(han)字(zi)</code>. For supporting browsers, the parentheses are not displayed.</p>
</li>
<li><p><code>&lt;rt&gt;</code>: The <code>&lt;rt&gt;</code> tag contains the phonetic annotations.</p>
</li>
<li><p><code>&lt;rb&gt;</code>: The <code>&lt;rb&gt;</code> tag is used to separate text units and corresponds one-to-one with <code>&lt;rt&gt;</code> tags.For example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rb</span>&gt;</span>汉<span class="tag">&lt;/<span class="name">rb</span>&gt;</span><span class="tag">&lt;<span class="name">rb</span>&gt;</span>字<span class="tag">&lt;/<span class="name">rb</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rt</span>&gt;</span>han<span class="tag">&lt;/<span class="name">rt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rt</span>&gt;</span>zi<span class="tag">&lt;/<span class="name">rt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, each Chinese character is wrapped in <code>&lt;rb&gt;</code> tags to match the <code>&lt;rt&gt;</code> annotations. </p>
</li>
<li><p><code>&lt;rbc&gt;</code><strong> and </strong><code>&lt;rtc&gt;</code>: The <code>&lt;rbc&gt;</code> tag groups a set of text units, usually containing multiple <code>&lt;rb&gt;</code> elements. The <code>&lt;rtc&gt;</code> tag groups corresponding phonetic annotations. For example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ruby</span> <span class="attr">style</span>=<span class="string">&quot;ruby-position: under;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rbc</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rb</span>&gt;</span>汉<span class="tag">&lt;/<span class="name">rb</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>han<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rb</span>&gt;</span>字<span class="tag">&lt;/<span class="name">rb</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>zi<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rbc</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rtc</span> <span class="attr">style</span>=<span class="string">&quot;ruby-position: over;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>Chinese<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rtc</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, there are two sets of annotations for the Chinese characters: pinyin and English. One set is placed in <code>&lt;rbc&gt;</code> and the other in <code>&lt;rtc&gt;</code>, with styles specifying that pinyin appears below the text and English above it.Note that Chrome does not currently support these tags either.</p>
</li>
</ol>
<h2 id="lt-bdo-gt-lt-bdi-gt"><a href="#lt-bdo-gt-lt-bdi-gt" class="headerlink" title="&lt;bdo&gt;, &lt;bdi&gt;"></a><code>&lt;bdo&gt;</code>, <code>&lt;bdi&gt;</code></h2><p>Most text is read left to right, but some languages, like Arabic and Hebrew, are read right to left. The <code>&lt;bdo&gt;</code> tag is an inline element that overrides the text direction for specific content.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>To be or not to be, <span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">&quot;rtl&quot;</span>&gt;</span>noitseuq eht si taht<span class="tag">&lt;/<span class="name">bdo</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In the above code, the text inside <code>&lt;bdo&gt;</code> will be rendered in the opposite direction, resulting in “To be, or not to be, that is the question”.<br>The <code>dir</code> attribute of <code>&lt;bdo&gt;</code> specifies the text direction, with <code>ltr</code> for left-to-right and <code>rtl</code> for right-to-left.<br>The <code>&lt;bdi&gt;</code> tag is used for text with an unknown direction, such as user input. It tells the browser to determine the text direction on its own.<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">bdi</span>&gt;</span>To be, or not to be, that is the question.<span class="tag">&lt;/<span class="name">bdi</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Link to original article:<br><a href="https://wangdoc.com/html/text">https://wangdoc.com/html/text</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Lists</title>
    <url>/2024/06/19/html-lists/</url>
    <content><![CDATA[<p>Lists are collections of organized items, primarily divided into two types: ordered and unordered.<br>Ordered lists feature numbered items, displaying a clear sequence, like this:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">1. Item A</span><br><span class="line">2. Item B</span><br><span class="line">3. Item C</span><br></pre></td></tr></table></figure><br>Unordered lists, on the other hand, use bullet points instead of numbers:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">• Item A</span><br><span class="line">• Item B</span><br><span class="line">• Item C</span><br></pre></td></tr></table></figure></p>
<h2 id="lt-ol-gt"><a href="#lt-ol-gt" class="headerlink" title="&lt;ol&gt;"></a><code>&lt;ol&gt;</code></h2><p>The <code>&lt;ol&gt;</code> tag creates an ordered list container. It automatically generates numbers for each list item. This tag is ideal for content where the order matters, such as rankings.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item A<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span> </span><br></pre></td></tr></table></figure><br>This code will number the items A, B, and C as 1, 2, and 3 respectively.</p>
<p>You can nest <code>&lt;ol&gt;</code> or <code>&lt;ul&gt;</code> tags within an <code>&lt;ol&gt;</code> to create multi-level lists:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item A<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B </span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B1<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B2<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B3<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span> </span><br></pre></td></tr></table></figure><br>This nested list will render as:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">1. Item A</span><br><span class="line">2. Item B</span><br><span class="line">  1. Item B1</span><br><span class="line">  2. Item B2</span><br><span class="line">  3. Item B3</span><br><span class="line">3.Item C</span><br></pre></td></tr></table></figure><br>The <code>&lt;ol&gt;</code> tag has several useful attributes:</p>
<ol>
<li><p><strong>reversed</strong>: Creates a reverse-order list.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">reversed</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item A<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This will number the items as 3, 2, 1.</p>
</li>
<li><p><strong>start</strong>: Sets the starting number for the list.</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">start</span>=<span class="string">&quot;5&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item A<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This will number the items as 5, 6, 7.</p>
<ol>
<li><strong>type</strong>: Specifies the numbering style. Options include:</li>
</ol>
<ul>
<li><code>a</code>: lowercase letters</li>
<li><code>A</code>: uppercase letters</li>
<li><code>i</code>: lowercase Roman numerals</li>
<li><code>I</code>: uppercase Roman numerals</li>
<li><code>1</code>: integers (default)</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item A<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This will label the items as a, b, c.</p>
<p>Note: Even when using letters, the <code>start</code> attribute still uses integers:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span> <span class="attr">start</span>=<span class="string">&quot;3&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item A<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This will start the list at ‘c’.</p>
<h2 id="lt-ul-gt"><a href="#lt-ul-gt" class="headerlink" title="&lt;ul&gt;"></a><code>&lt;ul&gt;</code></h2><p>The <code>&lt;ul&gt;</code> tag creates an unordered list container, using bullet points for each item. It’s best for lists where order doesn’t matter.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item A<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item B<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This renders as a bulleted list.</p>
<p>Like <code>&lt;ol&gt;</code>, you can nest <code>&lt;ul&gt;</code> or <code>&lt;ol&gt;</code> tags within <code>&lt;ul&gt;</code> for multi-level lists.</p>
<h2 id="lt-li-gt"><a href="#lt-li-gt" class="headerlink" title="&lt;li&gt;"></a><code>&lt;li&gt;</code></h2><p>The <code>&lt;li&gt;</code> tag represents list items within <code>&lt;ol&gt;</code> or <code>&lt;ul&gt;</code> containers.</p>
<p>In ordered lists, <code>&lt;li&gt;</code> has a <code>value</code> attribute to set the item’s number:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item A<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>Item B<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Item C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><br>This will number the items as 1, 4, 5.</p>
<h2 id="Definition-Lists-lt-dl-gt-lt-dt-gt-lt-dd-gt"><a href="#Definition-Lists-lt-dl-gt-lt-dt-gt-lt-dd-gt" class="headerlink" title="Definition Lists: &lt;dl&gt;, &lt;dt&gt;, &lt;dd&gt;"></a>Definition Lists: <code>&lt;dl&gt;</code>, <code>&lt;dt&gt;</code>, <code>&lt;dd&gt;</code></h2><p>The <code>&lt;dl&gt;</code> tag is a block-level element used to create a description list. It consists of term-definition pairs, where <code>&lt;dt&gt;</code> defines the term (description term) and <code>&lt;dd&gt;</code> provides the definition (description detail). Description lists are commonly used for glossaries or vocabularies.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>CPU<span class="tag">&lt;/<span class="name">dt</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Central Processing Unit<span class="tag">&lt;/<span class="name">dd</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Memory<span class="tag">&lt;/<span class="name">dt</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>RAM<span class="tag">&lt;/<span class="name">dd</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Hard Disk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Storage device<span class="tag">&lt;/<span class="name">dd</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Both <code>&lt;dt&gt;</code> and <code>&lt;dd&gt;</code> are block-level elements. By default, <code>&lt;dd&gt;</code> elements are indented beneath their corresponding <code>&lt;dt&gt;</code> elements. The default rendering of the above code would look like this:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">CPU</span><br><span class="line">  Central Processing Unit</span><br><span class="line"></span><br><span class="line">Memory</span><br><span class="line">  RAM</span><br><span class="line"></span><br><span class="line">Hard Disk</span><br><span class="line">  Storage device</span><br></pre></td></tr></table></figure><br>It’s perfectly valid to have multiple terms (<code>&lt;dt&gt;</code>) sharing a single definition (<code>&lt;dd&gt;</code>), or multiple definitions (<code>&lt;dd&gt;</code>) for a single term (<code>&lt;dt&gt;</code>).<br>For example:<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>A<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>B<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>C<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>D<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>E<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>F<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><br>In this structure, terms <code>A</code> and <code>B</code> share the common definition <code>C</code>, while term <code>D</code> has two definitions, <code>E</code> and <code>F</code>.</p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML &lt;a&gt; Tag</title>
    <url>/2024/06/21/html-a-tag/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Links (hyperlinks) are fundamental to the internet. They enable users to navigate from one webpage to another, connecting all resources online.</p>
<p>The <code>&lt;a&gt;</code> tag represents a hyperlink. It allows users to link to other pages, text, images, files, or even specific sections within the same page. In essence, any resource on the web can be accessed via an <code>&lt;a&gt;</code> tag.</p>
<p>Here’s an example of a typical link:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://wikipedia.org/&quot;</span>&gt;</span>Wikipedia<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, we define a hyperlink. The browser displays the text “Wikipedia” with an underline by default, indicating it’s a clickable link. When users click on it, the browser navigates to the URL specified in the <code>href</code> attribute.</p>
<p>The <code>&lt;a&gt;</code> tag can contain not only text but also other elements such as paragraphs, images, or multi-media.</p>
<p>For example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com/&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.example.com/foo.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Example Image&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, the <code>&lt;a&gt;</code> tag contains an image. Clicking on the image will navigate the user to the specified URL.</p>
<h2 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h2><p>The <code>&lt;a&gt;</code> tag has the following attributes:</p>
<h3 id="href"><a href="#href" class="headerlink" title="href"></a>href</h3><p>The <code>href</code> attribute specifies the URL or anchor point that the link points to. It can be a full URL or an anchor. For example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#demo&quot;</span>&gt;</span>Example<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, the <code>href</code> value is <code>#</code> followed by the anchor name. Clicking the link will scroll the browser to the <code>demo</code> anchor on the current page.</p>
<h3 id="hreflang"><a href="#hreflang" class="headerlink" title="hreflang"></a>hreflang</h3><p>The <code>hreflang</code> attribute indicates the language of the linked page. It is a hint for search engines and has no functional impact on the link itself.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com&quot;</span> <span class="attr">hreflang</span>=<span class="string">&quot;en&quot;</span>&gt;</span>Example Website<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the <code>hreflang</code> attribute suggests that the linked page is in English. If a resource has versions in multiple languages, <code>hreflang</code> can be set to <code>x-default</code> to indicate the default version.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://example.com&quot;</span> <span class="attr">hreflang</span>=<span class="string">&quot;x-default&quot;</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://example.com/de&quot;</span> <span class="attr">hreflang</span>=<span class="string">&quot;de&quot;</span>&gt;</span>German<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, <code>hreflang=&quot;x-default&quot;</code> denotes that this link is the default version. The language codes used in <code>hreflang</code> are similar to those in the <code>lang</code> attribute, which can be referenced in the “Attributes” chapter of the documentation.</p>
<h3 id="title"><a href="#title" class="headerlink" title="title"></a>title</h3><p>The <code>title</code> attribute provides additional information about a link. When a user hovers their mouse over the link, the browser displays the value of this attribute as a tooltip.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>Example<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above, hovering over the link will show a tooltip with the text “hello.”</p>
<h3 id="target"><a href="#target" class="headerlink" title="target"></a>target</h3><p>The <code>target</code> attribute specifies how the linked document should be displayed. It determines whether the link opens in the same window, a new window, or within an <code>&lt;iframe&gt;</code>.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://foo.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;test&quot;</span>&gt;</span>foo<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://bar.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;test&quot;</span>&gt;</span>bar<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above, both links open in a window named “test.” If the “test” window does not exist, the browser will create it and load the link. For instance, clicking the “foo” link opens <code>foo.com</code> in the “test” window. Clicking the “bar” link will then open <code>bar.com</code> in the same window, replacing the content of <code>foo.com</code>.</p>
<p>The <code>target</code> attribute can also use one of the following keywords:</p>
<ul>
<li><code>_self</code>: Opens in the same window (default).</li>
<li><code>_blank</code>: Opens in a new window.</li>
<li><code>_parent</code>: Opens in the parent frame. If there is no parent frame, it behaves like <code>_self</code>.</li>
<li><code>_top</code>: Opens in the topmost window. If the current window is already the topmost window, it behaves like <code>_self</code>.</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Example Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, clicking the link will open <code>example.com</code> in a new window, which will have no specific name.</p>
<p><strong>Note:</strong> When using the <code>target</code> attribute, it is advisable to use it in conjunction with <code>rel=&quot;noreferrer&quot;</code> to mitigate security risks.</p>
<h3 id="rel"><a href="#rel" class="headerlink" title="rel"></a>rel</h3><p>The <code>rel</code> attribute describes the relationship between the linked resource and the current document.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;help.html&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;help&quot;</span>&gt;</span>Help<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above, the <code>rel</code> attribute indicates that the link is to a help document for the current page.</p>
<p>Common values for the <code>rel</code> attribute include:</p>
<ul>
<li><code>alternate</code>: An alternative version of the current document, such as a translation.</li>
<li><code>author</code>: A link to the author of the document.</li>
<li><code>bookmark</code>: A permanent address used as a bookmark.</li>
<li><code>external</code>: A reference to an external document.</li>
<li><code>help</code>: A link to help information.</li>
<li><code>license</code>: A link to the license for the document.</li>
<li><code>next</code>: The next document in a series.</li>
<li><code>nofollow</code>: Instructs search engines to ignore the link, often used to prevent search engine manipulation.</li>
<li><code>noreferrer</code>: Prevents the browser from sending the current URL as the <code>Referer</code> header when the link is clicked, thus hiding the source of the click.</li>
<li><code>noopener</code>: Prevents the linked document from accessing the original window via JavaScript’s <code>window.opener</code> property, enhancing security.</li>
<li><code>prev</code>: The previous document in a series.</li>
<li><code>search</code>: A search link for the document.</li>
<li><code>tag</code>: A link to tags related to the document.</li>
</ul>
<h3 id="referrerpolicy"><a href="#referrerpolicy" class="headerlink" title="referrerpolicy"></a>referrerpolicy</h3><p>The <code>referrerpolicy</code> attribute controls how the <code>Referer</code> header is handled when a link is clicked. It accepts the following values:</p>
<ul>
<li><code>no-referrer</code>: Never send the <code>Referer</code> header.</li>
<li><code>no-referrer-when-downgrade</code>: Send the <code>Referer</code> header only if the destination is secure (HTTPS).</li>
<li><code>origin</code>: Send only the origin (protocol + domain) as the <code>Referer</code>.</li>
<li><code>origin-when-cross-origin</code>: Send the origin as the <code>Referer</code> for cross-origin requests.</li>
<li><code>unsafe-url</code>: Always send the full URL as the <code>Referer</code>.</li>
<li><code>same-origin</code>: Send the <code>Referer</code> header only for same-origin requests.</li>
<li><code>strict-origin</code>: Send only the origin as the <code>Referer</code> for secure requests.</li>
<li><code>strict-origin-when-cross-origin</code>: Send the origin as the <code>Referer</code> for secure cross-origin requests.</li>
</ul>
<p>For detailed explanations of these values, refer to HTTP documentation.</p>
<h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><p>The <code>ping</code> attribute specifies a URL that will receive a POST request when the user clicks on the link. This is commonly used for tracking user behavior.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://localhost:3000/other&quot;</span> <span class="attr">ping</span>=<span class="string">&quot;http://localhost:3000/log&quot;</span>&gt;</span></span><br><span class="line">  Go to Other Page</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, clicking the link will not only navigate to <code>http://localhost:3000/other</code> but also send a POST request to <code>http://localhost:3000/log</code>. The server will then know that the link was clicked. </p>
<p>The request headers include <code>ping-from</code> (the page where the click occurred) and <code>ping-to</code> (the page pointed to by the <code>href</code> attribute):</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">headers: &#123;</span><br><span class="line">  &#x27;ping-from&#x27;: &#x27;http://localhost:3000/&#x27;,</span><br><span class="line">  &#x27;ping-to&#x27;: &#x27;http://localhost:3000/other&#x27;,</span><br><span class="line">  &#x27;content-type&#x27;: &#x27;text/ping&#x27;</span><br><span class="line">  // ...other headers</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Note that the <code>ping</code> attribute only works with links and is ineffective for other interactions like button clicks or form submissions. Additionally, Firefox does not support this attribute, and it cannot send custom data.</p>
<h3 id="type"><a href="#type" class="headerlink" title="type"></a>type</h3><p>The <code>type</code> attribute specifies the MIME type of the linked URL, such as whether it’s a webpage, image, or file. This attribute is purely informational and does not affect functionality.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;smile.jpg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/jpeg&quot;</span>&gt;</span>Example Image<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, the <code>type</code> attribute indicates that the link points to an image file.</p>
<h3 id="download"><a href="#download" class="headerlink" title="download"></a>download</h3><p>The <code>download</code> attribute specifies that a link is intended for downloading a file rather than navigating to another URL.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;demo.txt&quot;</span> <span class="attr">download</span>&gt;</span>Download<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>When you click the above link, a download dialog will appear.</p>
<p>Note that the <code>download</code> attribute only works if the link is to a resource on the same origin as the website. This means the link must be from the same domain as the page.</p>
<p>If a value is specified for the <code>download</code> attribute, that value will be used as the name of the downloaded file.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;foo.exe&quot;</span> <span class="attr">download</span>=<span class="string">&quot;bar.exe&quot;</span>&gt;</span>Click to download<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the above code, the original file is named <code>foo.exe</code>. When clicked, the download dialog will prompt with the file name <code>bar.exe</code>.</p>
<p>Keep in mind that if the server’s HTTP response headers include a <code>Content-Disposition</code> field with a file name different from the <code>download</code> attribute, the <code>Content-Disposition</code> field will take precedence, and the download will use that file name.</p>
<p>Additionally, the <code>download</code> attribute can be used with data URLs (e.g., those starting with <code>data:</code>). In this case, the <code>download</code> attribute specifies the name of the file for download.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;data:,Hello%2C%20World!&quot;</span>&gt;</span>Click<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The link above opens a virtual page displaying “Hello, World!”.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;data:,Hello%2C%20World!&quot;</span> <span class="attr">download</span>=<span class="string">&quot;hello.txt&quot;</span>&gt;</span>Click<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>When this link is clicked, it will download a file named <code>hello.txt</code> with the content “Hello, World!”.</p>
<h2 id="Email-Links"><a href="#Email-Links" class="headerlink" title="Email Links"></a>Email Links</h2><p>Links can also point to an email address using the <code>mailto</code> protocol. When users click on such a link, their default email client will open, allowing them to send an email to the specified address.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:contact@example.com&quot;</span>&gt;</span>Contact Us<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the link directs to an email address. Clicking on it will open your email client with a new message addressed to <code>contact@example.com</code>.</p>
<p>The <code>mailto</code> protocol also supports additional email fields:</p>
<ul>
<li><code>subject</code>: Email subject</li>
<li><code>cc</code>: Cc (carbon copy) recipients</li>
<li><code>bcc</code>: Bcc (blind carbon copy) recipients</li>
<li><code>body</code>: Email content</li>
</ul>
<p>You can include these fields as query parameters appended to the email address:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:foo@bar.com?cc=test@test.com&amp;subject=The%20subject&amp;body=The%20body&quot;</span>&gt;</span>Send Email<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, the email link includes not only the recipient’s address but also <code>cc</code>, <code>subject</code>, and <code>body</code> fields. Note that values must be URL-encoded (e.g., spaces become <code>%20</code>).</p>
<p>It’s also possible to create an email link without specifying an address, allowing users to enter the recipient’s email address manually. This is often used for sharing a webpage via email:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:&quot;</span>&gt;</span>Tell a Friend<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Phone-Links"><a href="#Phone-Links" class="headerlink" title="Phone Links"></a>Phone Links</h2><p>For mobile users, you can use the <code>tel</code> protocol to create phone links. Clicking on such a link will prompt the phone to dial the specified number.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tel:13312345678&quot;</span>&gt;</span>13312345678<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, clicking the link on a mobile device will open the dialer with the number pre-filled, ready to make a call.</p>
<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/a">https://wangdoc.com/html/a</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Image</title>
    <url>/2024/06/20/html-image/</url>
    <content><![CDATA[<p>Images are a crucial part of the internet, adding richness and variety to web pages. This chapter will cover how to insert images into a webpage.</p>
<h2 id="lt-img-gt"><a href="#lt-img-gt" class="headerlink" title="&lt;img&gt;"></a><code>&lt;img&gt;</code></h2><p>The <code>&lt;img&gt;</code> tag is used to insert images and is a self-contained tag with no closing counterpart.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;foo.jpg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The above code inserts an image <code>foo.jpg</code> into the webpage. The <code>src</code> attribute specifies the image’s URL, which in this case is a relative URL, indicating that the image is in the same directory as the webpage.</p>
<p>By default, <code>&lt;img&gt;</code> is an inline element, meaning it aligns with the surrounding text.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;foo.jpg&quot;</span>&gt;</span>World<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the text and image are displayed on the same line.</p>
<p>Images are shown at their original size by default. If an image is large and on the same line as text, it will increase the line height and align the bottom of the image with the bottom of the text.</p>
<p>The <code>&lt;img&gt;</code> tag can be nested inside an <code>&lt;a&gt;</code> tag to make the image a clickable link.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;example.html&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;foo.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, the image functions as a link and clicking it will navigate to <code>example.html</code>.</p>
<ol>
<li><strong>alt attribute</strong></li>
</ol>
<p>The <code>alt</code> attribute provides a text description for the image. If the image fails to load (due to errors or user settings), the text will be displayed instead.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;foo.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Example Image&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, if the image fails to load, the browser will display “Example Image” in its place.</p>
<ol>
<li><strong>width and height attributes</strong></li>
</ol>
<p>The image is inserted at its original size by default. The <code>width</code> and <code>height</code> attributes can be used to specify the image’s dimensions in pixels or percentages.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;foo.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, <code>width</code> sets the image’s width to 400 pixels, and <code>height</code> sets the height to 300 pixels.</p>
<p>Setting these attributes reserves space for the image, regardless of whether it loads successfully. However, it’s usually better to control image size with CSS.</p>
<p>If only one of these attributes is set, the browser will automatically adjust the other dimension to maintain the image’s aspect ratio. For example, if an image is 800x800 pixels and <code>width</code> is set to 200, the browser will set <code>height</code> to 200.</p>
<ol>
<li><strong>srcset and sizes</strong></li>
</ol>
<p>See the section on “Responsive Images” below for details.</p>
<ol>
<li><strong>referrerpolicy</strong></li>
</ol>
<p>The default behavior of the <code>&lt;img&gt;</code> tag is to include a Referer header in the HTTP request. The <code>referrerpolicy</code> attribute controls this behavior.</p>
<ol>
<li><strong>crossorigin</strong></li>
</ol>
<p>If an image is hosted on a different domain, loading it may require cross-origin authentication. The <code>crossorigin</code> attribute tells the browser whether to use cross-origin requests, which are not used by default.</p>
<p>When enabled, the HTTP request will include an <code>Origin</code> field specifying the request’s domain. The <code>crossorigin</code> attribute can be set to two values:</p>
<ul>
<li><code>anonymous</code>: Cross-origin requests will not include user credentials (such as cookies).</li>
<li><code>use-credentials</code>: Cross-origin requests will include user credentials.</li>
</ul>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;foo.jpg&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Omitting the value is equivalent to <code>anonymous</code>:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;foo.jpg&quot;</span> <span class="attr">crossorigin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol>
<li><strong>loading</strong></li>
</ol>
<p>By default, browsers start loading images as soon as they encounter the <code>&lt;img&gt;</code> tag. This can waste bandwidth for images that are not immediately visible on long pages. The <code>loading</code> attribute changes this behavior, enabling lazy loading, where images are only loaded when they are about to enter the viewport.</p>
<p>The <code>loading</code> attribute can have the following values:</p>
<ul>
<li><code>auto</code>: The default browser behavior, equivalent to not using <code>loading</code>.</li>
<li><code>lazy</code>: Enables lazy loading.</li>
<li><code>eager</code>: Loads the image immediately, regardless of its position on the page.</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image.png&quot;</span> <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;…&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>To avoid layout shifts caused by lazy loading, it’s best to specify the image’s width and height.</p>
<h2 id="lt-figure-gt-lt-figcaption-gt"><a href="#lt-figure-gt-lt-figcaption-gt" class="headerlink" title="&lt;figure&gt;, &lt;figcaption&gt;"></a><code>&lt;figure&gt;</code>, <code>&lt;figcaption&gt;</code></h2><p>The <code>&lt;figure&gt;</code> tag acts as a container for images and related content. Its optional child element, <code>&lt;figcaption&gt;</code>, provides a textual description of the image, often used for captions and can appear multiple times.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://example.com/foo.jpg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>Example Image<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Besides images, <code>&lt;figure&gt;</code> can also enclose other types of content, such as quotes, code snippets, or poetry. It serves as a semantic container for grouping main content with its supplementary information.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>JavaScript Code Example<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>const foo = &#x27;hello&#x27;;<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Responsive-Images"><a href="#Responsive-Images" class="headerlink" title="Responsive Images"></a>Responsive Images</h2><p>When a website looks good across devices of various sizes, it’s known as “responsive design.” The images used in responsive design are called “responsive images.”</p>
<p>There are several solutions for responsive images, including JavaScript and CSS, but the best approach in terms of semantics is using HTML, which is natively supported by browsers.</p>
<h3 id="The-Problem"><a href="#The-Problem" class="headerlink" title="The Problem"></a>The Problem</h3><p>The <code>&lt;img&gt;</code> tag is used to insert images into a webpage, and by default, it inserts the same image for all situations:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;foo.jpg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This means the image <code>foo.jpg</code> will be displayed on both desktop and mobile devices.</p>
<p>While this approach is simple, it has three main drawbacks:</p>
<ol>
<li><strong>File Size</strong>: Desktop displays require larger images with higher file sizes, while mobile screens need smaller images, which can save bandwidth and speed up page loading.</li>
<li><strong>Pixel Density</strong>: Desktop monitors usually have a standard pixel density, whereas mobile screens often have higher pixel densities (Retina displays), which combine multiple pixels into one. This can cause images to appear blurry on mobile devices if they are not high enough resolution.</li>
<li><strong>Visual Detail</strong>: Desktop monitors have more screen space and can show more detail, whereas mobile screens are smaller and may need to emphasize key details while minimizing unnecessary elements.</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/22047870/1725265027072-3b4887e2-2c57-4ae4-aa26-b93bd42d19d9.jpeg" alt=""></p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/22047870/1725265050135-8714dfe6-ee07-4b2d-adac-1b566579315b.jpeg" alt=""></p>
<p>In the two images above, the phone image at the bottom, which has been cropped, highlights the main focus more effectively and has a noticeably better visual impact.</p>
<h3 id="srcset-Attribute"><a href="#srcset-Attribute" class="headerlink" title="srcset Attribute"></a><code>srcset</code> Attribute</h3><p>To address these issues, HTML provides a comprehensive solution through the <code>srcset</code> attribute. This attribute allows the <code>&lt;img&gt;</code> tag to specify multiple image sources for different pixel densities. The value of <code>srcset</code> is a comma-separated list of image URLs, each followed by a space and a descriptor indicating the pixel density. Here’s an example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">srcset</span>=<span class="string">&quot;foo-320w.jpg,</span></span></span><br><span class="line"><span class="string"><span class="tag">             foo-480w.jpg 1.5x,</span></span></span><br><span class="line"><span class="string"><span class="tag">             foo-640w.jpg 2x&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">src</span>=<span class="string">&quot;foo-640w.jpg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>srcset</code> attribute lists three image URLs to accommodate three different pixel densities. The pixel density descriptor is in the format of a multiplier followed by ‘x’. For instance, <code>1x</code> represents the standard pixel density and can be omitted. The browser will choose the appropriate image based on the device’s pixel density.</p>
<p>If none of the images specified in <code>srcset</code> are suitable, the browser will default to the image specified in the <code>src</code> attribute.</p>
<h3 id="sizes-Attribute"><a href="#sizes-Attribute" class="headerlink" title="sizes Attribute"></a><code>sizes</code> Attribute</h3><p>The <code>srcset</code> attribute alone only addresses pixel density. To handle different screen sizes and ensure images are displayed at the correct size, you need to use it in conjunction with the <code>sizes</code> attribute.</p>
<p>First, list all available images using the <code>srcset</code> attribute:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">srcset</span>=<span class="string">&quot;foo-160.jpg 160w,</span></span></span><br><span class="line"><span class="string"><span class="tag">             foo-320.jpg 320w,</span></span></span><br><span class="line"><span class="string"><span class="tag">             foo-640.jpg 640w,</span></span></span><br><span class="line"><span class="string"><span class="tag">             foo-1280.jpg 1280w&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">src</span>=<span class="string">&quot;foo-1280.jpg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>srcset</code> provides four images, each with a width descriptor indicating the image’s original width in pixels.</p>
<p>Next, use the <code>sizes</code> attribute to define the display width of images for different screen sizes. The value of <code>sizes</code> is a comma-separated list of media query expressions and corresponding display widths:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">srcset</span>=<span class="string">&quot;foo-160.jpg 160w,</span></span></span><br><span class="line"><span class="string"><span class="tag">             foo-320.jpg 320w,</span></span></span><br><span class="line"><span class="string"><span class="tag">             foo-640.jpg 640w,</span></span></span><br><span class="line"><span class="string"><span class="tag">             foo-1280.jpg 1280w&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">sizes</span>=<span class="string">&quot;(max-width: 440px) 100vw,</span></span></span><br><span class="line"><span class="string"><span class="tag">            (max-width: 900px) 33vw,</span></span></span><br><span class="line"><span class="string"><span class="tag">            254px&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">src</span>=<span class="string">&quot;foo-1280.jpg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, the <code>sizes</code> attribute specifies three screen conditions and their corresponding image display widths:</p>
<ul>
<li>For screens up to 440px wide, the image width is 100% of the viewport width.</li>
<li>For screens between 441px and 900px wide, the image width is 33% of the viewport width.</li>
<li>For screens wider than 900px, the image width is 254px.</li>
</ul>
<p>Finally, the browser determines the appropriate image size based on the device’s width from the <code>sizes</code> attribute and selects the closest matching image from the <code>srcset</code> list.</p>
<p>Assuming the device’s screen width is 480px, the browser determines from the <code>sizes</code> attribute that the image should be displayed at 33% of the viewport width, which is 160px. Since the <code>srcset</code> attribute includes an image that is exactly 160px wide, the browser will load <code>foo-160.jpg</code>.</p>
<p>If <code>sizes</code> is omitted, the browser will select the image closest to the display width from <code>srcset</code>. When using <code>sizes</code>, it must be used together with <code>srcset</code>, as <code>sizes</code> alone is ineffective.</p>
<h2 id="lt-picture-gt"><a href="#lt-picture-gt" class="headerlink" title="&lt;picture&gt;"></a><code>&lt;picture&gt;</code></h2><h3 id="Responsive-Design"><a href="#Responsive-Design" class="headerlink" title="Responsive Design"></a>Responsive Design</h3><p>The <code>srcset</code> and <code>sizes</code> attributes of the <code>&lt;img&gt;</code> tag handle pixel density and screen size adaptation, respectively. To manage different pixel densities and screen sizes simultaneously, use the <code>&lt;picture&gt;</code> tag.</p>
<p>The <code>&lt;picture&gt;</code> tag acts as a container that uses <code>&lt;source&gt;</code> and <code>&lt;img&gt;</code> elements to specify different images for various scenarios.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">media</span>=<span class="string">&quot;(max-width: 500px)&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;cat-vertical.jpg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">media</span>=<span class="string">&quot;(min-width: 501px)&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;cat-horizontal.jpg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;cat.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;cat&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, the <code>&lt;picture&gt;</code> tag contains two <code>&lt;source&gt;</code> elements and one <code>&lt;img&gt;</code> element. The <code>&lt;source&gt;</code> elements use the <code>media</code> attribute for media queries and the <code>srcset</code> attribute to specify the image files. The <code>sizes</code> attribute could also be used here, but it’s redundant because of the <code>media</code> attribute.</p>
<p>Browsers evaluate the <code>&lt;source&gt;</code> elements in the order they appear, checking if the media query conditions are met. If a condition is satisfied, the browser loads the image specified in the <code>srcset</code> attribute and ignores the subsequent <code>&lt;source&gt;</code> and <code>&lt;img&gt;</code> elements.</p>
<p>The <code>&lt;img&gt;</code> tag serves as the default image, used when none of the <code>&lt;source&gt;</code> elements match or if the browser doesn’t support the <code>&lt;picture&gt;</code> tag.</p>
<p>In the example above, if the device width is 500px or less, it loads the portrait image; otherwise, it loads the landscape image.</p>
<p>Here’s an example that adapts for both screen size and pixel density:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">&quot;homepage-person@desktop.png,</span></span></span><br><span class="line"><span class="string"><span class="tag">                  homepage-person@desktop-2x.png 2x&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">media</span>=<span class="string">&quot;(min-width: 990px)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">&quot;homepage-person@tablet.png,</span></span></span><br><span class="line"><span class="string"><span class="tag">                  homepage-person@tablet-2x.png 2x&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">media</span>=<span class="string">&quot;(min-width: 750px)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">srcset</span>=<span class="string">&quot;homepage-person@mobile.png,</span></span></span><br><span class="line"><span class="string"><span class="tag">               homepage-person@mobile-2x.png 2x&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">alt</span>=<span class="string">&quot;Shopify Merchant, Corrine Anestopoulos&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, the <code>media</code> attribute of the <code>&lt;source&gt;</code> tags sets conditions for screen size adaptation, while the <code>srcset</code> attribute provides image URLs for different pixel densities.</p>
<h3 id="Image-Format-Selection"><a href="#Image-Format-Selection" class="headerlink" title="Image Format Selection"></a>Image Format Selection</h3><p>In addition to responsive images, the <code>&lt;picture&gt;</code> tag can be used to select different image formats. For example, if the browser supports WebP format, it will load the WebP image; otherwise, it will load the PNG image.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">type</span>=<span class="string">&quot;image/svg+xml&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;logo.xml&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">type</span>=<span class="string">&quot;image/webp&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;logo.webp&quot;</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;ACME Corp&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, the <code>type</code> attribute of the <code>&lt;source&gt;</code> elements specifies the MIME type of the image, and <code>srcset</code> provides the corresponding image URLs. Browsers check the <code>&lt;source&gt;</code> elements in order, loading the image if it supports the specified format and ignoring subsequent <code>&lt;source&gt;</code> elements. In this example, images are loaded in the following priority: SVG, WebP, and PNG.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="https://cloudfour.com/thinks/responsive-images-101-definitions/">Responsive Images 101</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images">Responsive Images - MDN</a></li>
<li><a href="https://web.dev/native-lazy-loading">Native Lazy-Loading for the Web</a></li>
</ul>
<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/image">https://wangdoc.com/html/image</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>The &lt;script&gt; and &lt;noscript&gt; Tags</title>
    <url>/2024/06/23/html-script-and-noscript/</url>
    <content><![CDATA[<p>The <code>&lt;script&gt;</code> tag is used to embed scripts, typically JavaScript, into a web page. The <code>&lt;noscript&gt;</code> tag specifies content to be displayed when a browser doesn’t support scripting or has it disabled.</p>
<h2 id="Using-lt-script-gt"><a href="#Using-lt-script-gt" class="headerlink" title="Using &lt;script&gt;"></a>Using <code>&lt;script&gt;</code></h2><p>The <code>&lt;script&gt;</code> tag is primarily used to load JavaScript code:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code will execute immediately when embedded in a webpage.</p>
<p><strong>Loading External Scripts:</strong></p>
<p>You can also use <code>&lt;script&gt;</code> to load external script files by providing the URL in the <code>src</code> attribute:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;javascript.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This will load and execute the <code>javascript.js</code> file.</p>
<p><strong>Script Type:</strong></p>
<p>The <code>type</code> attribute specifies the script type. For JavaScript, it’s optional as it’s the default:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;javascript.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>For ES6 modules, use:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>For browsers that don’t support ES6 modules, you can use the <code>nomodule</code> attribute as a fallback:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span> <span class="attr">src</span>=<span class="string">&quot;main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">nomodule</span> <span class="attr">src</span>=<span class="string">&quot;fallback.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Other Important Attributes:</p>
<ul>
<li><code>async</code>: Specifies that the script should be executed asynchronously.</li>
<li><code>defer</code>: Indicates that the script should be executed after the page has finished parsing.</li>
<li><code>crossorigin</code>: Configures the script to be loaded using CORS.</li>
<li><code>integrity</code>: Provides a hash of the script to prevent tampering.</li>
<li><code>nonce</code>: A cryptographic nonce used in Content Security Policy.</li>
<li><code>referrerpolicy</code>: Specifies how to handle the <code>Referer</code> HTTP header.</li>
</ul>
<h2 id="Using-lt-noscript-gt"><a href="#Using-lt-noscript-gt" class="headerlink" title="Using &lt;noscript&gt;"></a>Using <code>&lt;noscript&gt;</code></h2><p>The <code>&lt;noscript&gt;</code> tag is used to provide alternative content when JavaScript is not available or disabled:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">  Your browser cannot execute JavaScript. The page may not display correctly.</span><br><span class="line"><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This content will only be shown if the browser can’t execute JavaScript. Users might disable JavaScript to save bandwidth, extend battery life on mobile devices, or protect their privacy by preventing tracking.</p>
<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/script">https://wangdoc.com/html/script</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Multimedia</title>
    <url>/2024/06/24/html-multimedia/</url>
    <content><![CDATA[<p>Webpages can include not only images but also videos and audio. </p>
<h2 id="lt-video-gt"><a href="#lt-video-gt" class="headerlink" title="&lt;video&gt;"></a><code>&lt;video&gt;</code></h2><p>The <code>&lt;video&gt;</code> tag is a block-level element used for embedding video. If the browser supports the video format, it displays a player; otherwise, it shows the content inside the <code>&lt;video&gt;</code> tag.</p>
<p>Here’s an example code snippet:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;example.mp4&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Your browser does not support HTML5 video. Please download the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;example.mp4&quot;</span>&gt;</span>video file<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, if the browser does not support the video format, it will display the text inside the <code>&lt;video&gt;</code> tag.</p>
<p>The <code>&lt;video&gt;</code> tag has several attributes:</p>
<ul>
<li><code>src</code>: URL of the video file.</li>
<li><code>controls</code>: Displays the player controls. This is a boolean attribute, so simply including it will enable the controls. If you prefer a custom player, omit this attribute.</li>
<li><code>width</code>: Width of the video player in pixels.</li>
<li><code>height</code>: Height of the video player in pixels.</li>
<li><code>autoplay</code>: Whether the video should play automatically. This is a boolean attribute.</li>
<li><code>loop</code>: Whether the video should loop. This is a boolean attribute.</li>
<li><code>muted</code>: Whether the video is muted by default. This is a boolean attribute.</li>
<li><code>poster</code>: URL of the image to show as a placeholder before the video starts.</li>
<li><code>preload</code>: Determines how the video should be buffered before playing. Values are <code>none</code> (no buffering), <code>metadata</code> (only metadata), or <code>auto</code> (buffer the entire file).</li>
<li><code>playsinline</code>: Prevents iPhone’s Safari browser from automatically playing the video fullscreen. This is a boolean attribute.</li>
<li><code>crossorigin</code>: Specifies whether to use cross-origin loading. Values are <code>anonymous</code> (no credentials) or <code>use-credentials</code> (send credentials).</li>
</ul>
<p>Here’s an example with attributes:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">muted</span></span></span><br><span class="line"><span class="tag">       <span class="attr">poster</span>=<span class="string">&quot;poster.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This sets a video player with a size of 400x400 pixels, autoplay, loop, and mute enabled, with a placeholder image. This is typical for background videos on a homepage.</p>
<p>HTML standards don’t specify which video formats browsers must support, so it’s up to browser vendors. To ensure compatibility, you can use the <code>&lt;source&gt;</code> tag to specify multiple formats:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;example.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;example.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Your browser does not support HTML5 video. Please download the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;example.mp4&quot;</span>&gt;</span>video file<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, the <code>type</code> attribute of the <code>&lt;source&gt;</code> tag specifies the video MIME type. The browser will try to load the first format it supports. If neither format is supported, it will show the fallback message.</p>
<h2 id="lt-audio-gt"><a href="#lt-audio-gt" class="headerlink" title="&lt;audio&gt;"></a><code>&lt;audio&gt;</code></h2><p>The <code>&lt;audio&gt;</code> tag is a block-level element used to embed audio content. Its usage is similar to the <code>&lt;video&gt;</code> tag.</p>
<p>Here’s an example of how to use the <code>&lt;audio&gt;</code> tag:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;foo.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mp3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;foo.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Your browser does not support HTML5 audio. Please download the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;foo.mp3&quot;</span>&gt;</span>audio file<span class="tag">&lt;/<span class="name">a</span>&gt;</span> directly.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>&lt;audio&gt;</code> tag includes <code>&lt;source&gt;</code> elements specifying two audio formats: MP3 and Ogg. The browser will use the first format it supports; if neither is supported, it will provide a download link.</p>
<p>The attributes of the <code>&lt;audio&gt;</code> tag are similar to those of the <code>&lt;video&gt;</code> tag, as described previously:</p>
<ul>
<li><code>autoplay</code>: Whether the audio should play automatically. This is a boolean attribute.</li>
<li><code>controls</code>: Whether to display the playback controls. If not set, the browser will not show any controls, which is typically used for background audio.</li>
<li><code>crossorigin</code>: Whether to use cross-origin requests.</li>
<li><code>loop</code>: Whether the audio should loop continuously. This is a boolean attribute.</li>
<li><code>muted</code>: Whether the audio should be muted by default. This is a boolean attribute.</li>
<li><code>preload</code>: How the audio file should be buffered.</li>
<li><code>src</code>: The URL of the audio file.</li>
</ul>
<h2 id="lt-track-gt"><a href="#lt-track-gt" class="headerlink" title="&lt;track&gt;"></a><code>&lt;track&gt;</code></h2><p>The <code>&lt;track&gt;</code> tag is used to specify subtitles for videos in the WebVTT format (.vtt files) and is placed inside the <code>&lt;video&gt;</code> tag. It is a self-closing tag without an end tag.</p>
<p>Here’s an example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">src</span>=<span class="string">&quot;sample.mp4&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">track</span> <span class="attr">label</span>=<span class="string">&quot;English&quot;</span> <span class="attr">kind</span>=<span class="string">&quot;subtitles&quot;</span> <span class="attr">src</span>=<span class="string">&quot;subtitles_en.vtt&quot;</span> <span class="attr">srclang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">track</span> <span class="attr">label</span>=<span class="string">&quot;Chinese&quot;</span> <span class="attr">kind</span>=<span class="string">&quot;subtitles&quot;</span> <span class="attr">src</span>=<span class="string">&quot;subtitles_cn.vtt&quot;</span> <span class="attr">srclang</span>=<span class="string">&quot;cn&quot;</span> <span class="attr">default</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the video includes English and Chinese subtitles.</p>
<p>The <code>&lt;track&gt;</code> tag has the following attributes:</p>
<ul>
<li><code>label</code>: The name of the subtitles displayed in the player for user selection.</li>
<li><code>kind</code>: The type of track. The default value is <code>subtitles</code>, which translates foreign text (e.g., providing Chinese subtitles for an English video). Another common value is <code>captions</code>, which provides a textual description of the audio, often in the same language as the video (e.g., English captions for an English video).</li>
<li><code>src</code>: The URL of the VTT subtitle file.</li>
<li><code>srclang</code>: The language of the subtitles, which must be a valid language code.</li>
<li><code>default</code>: Whether this track should be enabled by default. This is a boolean attribute.</li>
</ul>
<h2 id="lt-source-gt"><a href="#lt-source-gt" class="headerlink" title="&lt;source&gt;"></a><code>&lt;source&gt;</code></h2><p>The <code>&lt;source&gt;</code> tag is used within <code>&lt;picture&gt;</code>, <code>&lt;video&gt;</code>, and <code>&lt;audio&gt;</code> elements to specify external resources. It is a self-closing tag, meaning it does not have an end tag.</p>
<p>Its attributes include:</p>
<ul>
<li><code>type</code>: Specifies the MIME type of the external resource.</li>
<li><code>src</code>: Defines the source file for <code>&lt;video&gt;</code> and <code>&lt;audio&gt;</code>.</li>
<li><code>srcset</code>: Lists image files to be loaded under different conditions for <code>&lt;picture&gt;</code>.</li>
<li><code>media</code>: Specifies media query expressions for <code>&lt;picture&gt;</code>.</li>
<li><code>sizes</code>: Indicates the display sizes for different devices in <code>&lt;picture&gt;</code>, and must be used with <code>srcset</code>.</li>
</ul>
<h2 id="lt-embed-gt"><a href="#lt-embed-gt" class="headerlink" title="&lt;embed&gt;"></a><code>&lt;embed&gt;</code></h2><p>The <code>&lt;embed&gt;</code> tag is used to embed external content controlled by browser plugins. Since default plugins vary between browsers, not all users may access this content. Use it with caution.</p>
<p>Here is an example of embedding a video player:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">src</span>=<span class="string">&quot;/media/examples/flower.mp4&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">width</span>=<span class="string">&quot;250&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>If the browser lacks an MP4 plugin, the video will not play. The <code>&lt;embed&gt;</code> tag has the following attributes:</p>
<ul>
<li><code>height</code>: Display height in pixels (percentages not allowed).</li>
<li><code>width</code>: Display width in pixels (percentages not allowed).</li>
<li><code>src</code>: URL of the embedded resource.</li>
<li><code>type</code>: MIME type of the embedded resource.</li>
</ul>
<p>The browser uses the <code>type</code> attribute to determine the MIME type and activate the appropriate plugin.</p>
<p>Here’s an example of using QuickTime to play MOV files:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">type</span>=<span class="string">&quot;video/quicktime&quot;</span> <span class="attr">src</span>=<span class="string">&quot;movie.mov&quot;</span> <span class="attr">width</span>=<span class="string">&quot;640&quot;</span> <span class="attr">height</span>=<span class="string">&quot;480&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>And an example for Flash:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;whoosh.swf&quot;</span> <span class="attr">quality</span>=<span class="string">&quot;medium&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">bgcolor</span>=<span class="string">&quot;#ffffff&quot;</span> <span class="attr">width</span>=<span class="string">&quot;550&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">name</span>=<span class="string">&quot;whoosh&quot;</span> <span class="attr">align</span>=<span class="string">&quot;middle&quot;</span> <span class="attr">allowScriptAccess</span>=<span class="string">&quot;sameDomain&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">allowFullScreen</span>=<span class="string">&quot;false&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/x-shockwave-flash&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">pluginspage</span>=<span class="string">&quot;http://www.macromedia.com/go/getflashplayer&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>If Flash is not installed, users will be prompted to visit the URL in the <code>pluginspage</code> attribute.</p>
<h2 id="lt-object-gt-lt-param-gt"><a href="#lt-object-gt-lt-param-gt" class="headerlink" title="&lt;object&gt;, &lt;param&gt;"></a><code>&lt;object&gt;</code>, <code>&lt;param&gt;</code></h2><p>The <code>&lt;object&gt;</code> tag, similar to <code>&lt;embed&gt;</code>, inserts external resources for browser plugins to handle. It is a standardized alternative, recommended for its consistency and fewer legacy issues.</p>
<p>Here’s an example of embedding a PDF file:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">type</span>=<span class="string">&quot;application/pdf&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">data</span>=<span class="string">&quot;/media/examples/In-CC0.pdf&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">&quot;250&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>If the browser has a PDF plugin, it will display the PDF within the page.</p>
<p>The <code>&lt;object&gt;</code> tag includes:</p>
<ul>
<li><code>data</code>: URL of the embedded resource.</li>
<li><code>form</code>: ID of a related form in the current page (if any).</li>
<li><code>height</code>: Display height in pixels (percentages not allowed).</li>
<li><code>width</code>: Display width in pixels (percentages not allowed).</li>
<li><code>type</code>: MIME type of the resource.</li>
<li><code>typemustmatch</code>: Boolean attribute indicating if <code>data</code> and <code>type</code> must match.</li>
</ul>
<p>Here’s an example for Flash content:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">&quot;movie.swf&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">&quot;application/x-shockwave-flash&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The <code>&lt;object&gt;</code> tag can also contain <code>&lt;param&gt;</code> tags to specify parameters needed by the plugin:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">&quot;movie.swf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/x-shockwave-flash&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;foo&quot;</span> <span class="attr">value</span>=<span class="string">&quot;bar&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/multimedia">https://wangdoc.com/html/multimedia</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Table</title>
    <url>/2024/06/26/html-table/</url>
    <content><![CDATA[<p>A Table displays data in rows and columns. </p>
<h2 id="lt-table-gt-lt-caption-gt"><a href="#lt-table-gt-lt-caption-gt" class="headerlink" title="&lt;table&gt;, &lt;caption&gt;"></a><code>&lt;table&gt;</code>, <code>&lt;caption&gt;</code></h2><p>The <code>&lt;table&gt;</code> tag is a block-level container that must enclose all the table content.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  ... ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The <code>&lt;caption&gt;</code>, which is always the first child element of <code>&lt;table&gt;</code>, provides the table’s title. This element is optional.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Example Table<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="lt-thead-gt-lt-tbody-gt-and-lt-tfoot-gt"><a href="#lt-thead-gt-lt-tbody-gt-and-lt-tfoot-gt" class="headerlink" title="&lt;thead&gt;, &lt;tbody&gt;, and &lt;tfoot&gt;"></a><code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>, and <code>&lt;tfoot&gt;</code></h2><p>The <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>, and <code>&lt;tfoot&gt;</code> elements are block-level container elements that are direct children of <code>&lt;table&gt;</code>, representing the table’s header, body, and footer, respectively.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span>... ...<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>... ...<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span>... ...<span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>These three elements are optional. If <code>&lt;thead&gt;</code> is used, <code>&lt;tbody&gt;</code> and <code>&lt;tfoot&gt;</code> must follow it. If <code>&lt;tbody&gt;</code> is used, <code>&lt;tfoot&gt;</code> must follow <code>&lt;tbody&gt;</code>.</p>
<p>For large tables, you can use multiple <code>&lt;tbody&gt;</code> elements to represent different sections of the table.</p>
<h2 id="lt-colgroup-gt-and-lt-col-gt"><a href="#lt-colgroup-gt-and-lt-col-gt" class="headerlink" title="&lt;colgroup&gt; and &lt;col&gt;"></a><code>&lt;colgroup&gt;</code> and <code>&lt;col&gt;</code></h2><p>The <code>&lt;colgroup&gt;</code> element is a child of the <code>&lt;table&gt;</code> tag and is used to group a set of column definitions. The <code>&lt;col&gt;</code> element, which is a child of <code>&lt;colgroup&gt;</code>, defines a single column in the table.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the table is defined with three columns.</p>
<p>The <code>&lt;col&gt;</code> element is a self-closing tag and does not have a closing counterpart. It is also an empty element, meaning it has no child elements. Its main purpose is to declare the table structure and apply styles.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">class</span>=<span class="string">&quot;c1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">class</span>=<span class="string">&quot;c2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">class</span>=<span class="string">&quot;c3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above, the <code>&lt;colgroup&gt;</code> defines three columns, each with its own class. CSS can be used to style each column based on its class, affecting the entire table.</p>
<p>The <code>&lt;col&gt;</code> element has a <code>span</code> attribute, which defaults to 1. If set to a value greater than 1, it indicates that the column spans multiple columns.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">span</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the table header defines three columns, but the second column spans across two columns in the actual table data.</p>
<h2 id="lt-tr-gt"><a href="#lt-tr-gt" class="headerlink" title="&lt;tr&gt;"></a><code>&lt;tr&gt;</code></h2><p>The <code>&lt;tr&gt;</code> tag represents a table row. If the table includes <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>, or <code>&lt;tfoot&gt;</code>, the <code>&lt;tr&gt;</code> elements are placed within these sections. Otherwise, they are placed directly within the <code>&lt;table&gt;</code> element.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The code above shows a table with three rows.</p>
<h2 id="lt-th-gt-and-lt-td-gt"><a href="#lt-th-gt-and-lt-td-gt" class="headerlink" title="&lt;th&gt; and &lt;td&gt;"></a><code>&lt;th&gt;</code> and <code>&lt;td&gt;</code></h2><p>The <code>&lt;th&gt;</code> and <code>&lt;td&gt;</code> tags define cells in a table. <code>&lt;th&gt;</code> is used for header cells, while <code>&lt;td&gt;</code> is used for data cells.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Student ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>001<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>John Doe<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>002<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Jane Smith<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above, the table has three rows. The first row is the header row, so it uses <code>&lt;th&gt;</code>. The second and third rows are data rows, so they use <code>&lt;td&gt;</code>.</p>
<p><strong>(1) colspan and rowspan Attributes</strong></p>
<p>Cells may span multiple rows or columns, which is set using the <code>colspan</code> and <code>rowspan</code> attributes. <code>colspan</code> specifies the number of columns a cell spans, while <code>rowspan</code> specifies the number of rows. Their default value is 1.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>B<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>A<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>B<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>C<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the example above, the first cell in the first row spans two columns.</p>
<p><strong>(2) headers Attribute</strong></p>
<p>For large tables, it might be unclear which headers correspond to which cells. The <code>headers</code> attribute can help by linking cells to their headers.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">id</span>=<span class="string">&quot;no&quot;</span>&gt;</span>Student ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">id</span>=<span class="string">&quot;names&quot;</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">headers</span>=<span class="string">&quot;no&quot;</span>&gt;</span>001<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">headers</span>=<span class="string">&quot;names&quot;</span>&gt;</span>John Doe<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">headers</span>=<span class="string">&quot;no&quot;</span>&gt;</span>002<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">headers</span>=<span class="string">&quot;names&quot;</span>&gt;</span>Jane Smith<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the <code>&lt;th&gt;</code> elements have <code>id</code> attributes, and the <code>headers</code> attribute of the <code>&lt;td&gt;</code> elements refers to these <code>id</code> values, indicating which headers they correspond to.</p>
<p>The <code>headers</code> attribute value matches the <code>id</code> of <code>&lt;th&gt;</code> elements. It can also be a space-separated list of <code>id</code> values if a cell corresponds to multiple headers.</p>
<p><strong>(3) scope Attribute</strong></p>
<p>The <code>scope</code> attribute is used only with <code>&lt;th&gt;</code> tags, not <code>&lt;td&gt;</code>, to indicate whether the <code>&lt;th&gt;</code> cell is a row or column header.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span>Student ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>John Doe<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Male<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>Jane Smith<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>002<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Female<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the header cells in the first row have <code>scope=&quot;col&quot;</code> because they are column headers. The first cell in the second and third rows has <code>scope=&quot;row&quot;</code> as it is a row header.</p>
<p>The <code>scope</code> attribute can have the following values:</p>
<ul>
<li><code>row</code>: The header applies to all cells in the row.</li>
<li><code>col</code>: The header applies to all cells in the column.</li>
<li><code>rowgroup</code>: The header applies to a group of rows, used with <code>rowspan</code>.</li>
<li><code>colgroup</code>: The header applies to a group of columns, used with <code>colspan</code>.</li>
<li><code>auto</code>: Default value, where the browser decides.</li>
</ul>
<p>Here’s an example using <code>colgroup</code> and <code>rowgroup</code>:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span>Poster Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span>Color<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;3&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;colgroup&quot;</span>&gt;</span>Size<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">&quot;3&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;rowgroup&quot;</span>&gt;</span>Zodiac<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>Full color<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>Black and white<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>Sepia<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>A5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the header “Size” with <code>scope=&quot;colgroup&quot;</code> spans multiple columns (3 columns), and the row header “Zodiac” with <code>scope=&quot;rowgroup&quot;</code> spans multiple rows (3 rows).</p>
<p>The rendered result looks like this:</p>
<table>

  <thead>

    <tr>

      <th scope="col">Poster Name</th>

      <th scope="col">Color</th>

      <th colspan="3" scope="colgroup">Size</th>

    </tr>

  </thead>

  <tbody>

    <tr>

      <th rowspan="3" scope="rowgroup">Zodiac</th>

      <th scope="row">Full color</th>

      <td>A2</td>

      <td>A3</td>

      <td>A4</td>

    </tr>

    <tr>

      <th scope="row">Black and white</th>

      <td>A1</td>

      <td>A2</td>

      <td>A3</td>

    </tr>

    <tr>

      <th scope="row">Sepia</th>

      <td>A3</td>

      <td>A4</td>

      <td>A5</td>

    </tr>

  </tbody>

</table>



<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/table">https://wangdoc.com/html/table</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML &lt;link&gt; Tag</title>
    <url>/2024/06/22/html-link-tag/</url>
    <content><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>The <code>&lt;link&gt;</code> tag is primarily used to connect the current webpage with related external resources and is usually placed inside the <code>&lt;head&gt;</code> element. Its most common use is to load CSS stylesheets.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;theme.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The code above loads the stylesheet <code>theme.css</code> for the webpage.</p>
<p>In addition to the default stylesheet, a webpage can also load alternate stylesheets that are not applied by default but can be manually switched by the user.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;default.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Default Style&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;fancy.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;alternate stylesheet&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Fancy&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;basic.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;alternate stylesheet&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Basic&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, <code>default.css</code> is the default stylesheet and is applied automatically. <code>fancy.css</code> and <code>basic.css</code> are alternate stylesheets (<code>rel=&quot;alternate stylesheet&quot;</code>) and are not applied by default. The <code>title</code> attribute is essential here as it lists these stylesheets in the browser menu, allowing users to switch between them.</p>
<p>The <code>&lt;link&gt;</code> tag can also be used to load a website’s favicon.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>For mobile access, different resolutions of the icon file are often required.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon-precomposed&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;114x114&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon114.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;apple-touch-icon-precomposed&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;72x72&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon72.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The above code specifies icons of 114 pixels and 72 pixels for iPhone devices.</p>
<p>Additionally, <code>&lt;link&gt;</code> can provide related document links, such as the RSS Feed address.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/atom+xml&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/blog/news/atom&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="href-Attribute"><a href="#href-Attribute" class="headerlink" title="href Attribute"></a>href Attribute</h2><p>The <code>href</code> attribute specifies the resource linked by the <code>&lt;link&gt;</code> tag.</p>
<h2 id="rel-Attribute"><a href="#rel-Attribute" class="headerlink" title="rel Attribute"></a>rel Attribute</h2><p>The <code>rel</code> attribute defines the relationship between the current document and an external resource. It is a required attribute for the <code>&lt;link&gt;</code> tag and serves to describe the resource linked by the <code>href</code> attribute. Here are some common values:</p>
<ul>
<li><strong>alternate</strong>: A different version of the document, such as a print version.</li>
<li><strong>author</strong>: A link to the document’s author.</li>
<li><strong>dns-prefetch</strong>: Requests the browser to perform DNS lookup for a specified URL in advance.</li>
<li><strong>help</strong>: A link to a help document.</li>
<li><strong>icon</strong>: Specifies the document’s icon file.</li>
<li><strong>license</strong>: A link to the license information.</li>
<li><strong>next</strong>: The link to the next document in a series.</li>
<li><strong>pingback</strong>: The URL to receive pingback requests.</li>
<li><strong>preconnect</strong>: Requests the browser to establish an HTTP connection to the given server early.</li>
<li><strong>prefetch</strong>: Suggests the browser download and cache the specified resource for future use. This has lower priority and may not be downloaded.</li>
<li><strong>preload</strong>: Directs the browser to download and cache a resource for immediate future use, with higher priority.</li>
<li><strong>prerender</strong>: Instructs the browser to pre-render the specified link, making it load instantly when accessed.</li>
<li><strong>prev</strong>: The link to the previous document in a series.</li>
<li><strong>search</strong>: A link to search functionality for the current page.</li>
<li><strong>stylesheet</strong>: Specifies a stylesheet to load.</li>
</ul>
<p>Here are some examples:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Author information --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;author&quot;</span> <span class="attr">href</span>=<span class="string">&quot;humans.txt&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- License information --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;license&quot;</span> <span class="attr">href</span>=<span class="string">&quot;copyright.html&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Alternative language version --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://es.example.com/&quot;</span> <span class="attr">hreflang</span>=<span class="string">&quot;es&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Contact information --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;me&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://google.com/profiles/someone&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;me&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mailto:name@example.com&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;me&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sms:+15035550125&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Archives --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;archives&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/archives/&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Index --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;index&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/article/&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Navigation --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;first&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/article/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;last&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/article/?page=42&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;prev&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/article/?page=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;next&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/article/?page=3&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="hreflang-Attribute"><a href="#hreflang-Attribute" class="headerlink" title="hreflang Attribute"></a>hreflang Attribute</h2><p>The <code>hreflang</code> attribute specifies the language of the resource linked by <code>href</code>, often used for alternate language versions of the current page.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://example.com/de&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">hreflang</span>=<span class="string">&quot;de&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>hreflang</code> indicates that the linked page is in German. When multiple language versions are available, <code>hreflang</code> can be set to <code>x-default</code> to specify the default version.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://example.com&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">hreflang</span>=<span class="string">&quot;x-default&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://example.com/de&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;alternate&quot;</span> <span class="attr">hreflang</span>=<span class="string">&quot;de&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, <code>x-default</code> signifies the default page.</p>
<h2 id="Preloading-Resources"><a href="#Preloading-Resources" class="headerlink" title="Preloading Resources"></a>Preloading Resources</h2><p>In some cases, you need the browser to preload resources—essentially, caching them in advance so that they are immediately available when needed, rather than having to be downloaded from the web. The preload directive accomplishes this.</p>
<p>There are five main types of preloading:</p>
<h3 id="lt-link-rel-quot-preload-quot-gt"><a href="#lt-link-rel-quot-preload-quot-gt" class="headerlink" title="&lt;link rel=&quot;preload&quot;&gt;"></a><code>&lt;link rel=&quot;preload&quot;&gt;</code></h3><p>This instructs the browser to download and cache resources (like scripts or stylesheets) as soon as possible. It’s high-priority, so the browser will definitely follow this directive. The resource is downloaded and cached, but not executed or applied until needed.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">href</span>=<span class="string">&quot;image.png&quot;</span> <span class="attr">as</span>=<span class="string">&quot;image&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>rel=&quot;preload&quot;</code> not only has high priority but also allows specifying the type of resource being preloaded and using <code>onload</code> event callbacks. The <code>as</code> attribute indicates the type of the resource for proper handling.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">as</span>=<span class="string">&quot;style&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">href</span>=<span class="string">&quot;main.js&quot;</span> <span class="attr">as</span>=<span class="string">&quot;script&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, the browser is instructed to download and cache <code>style.css</code> and <code>main.js</code> in advance.</p>
<p><code>**as**</code><strong> Attribute</strong></p>
<p>The <code>as</code> attribute specifies the type of resource and can take values like:</p>
<ul>
<li>“script”</li>
<li>“style”</li>
<li>“image”</li>
<li>“media”</li>
<li>“document”</li>
</ul>
<p>If <code>as</code> is not specified or has an unrecognized value, the browser will download the resource with lower priority.</p>
<p><code>**type**</code><strong> Attribute</strong>  </p>
<p>Sometimes, specifying the MIME type with the <code>type</code> attribute is necessary:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sintel-short.mp4&quot;</span> <span class="attr">as</span>=<span class="string">&quot;video&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This preloads a video file and indicates it is MP4 encoded.</p>
<p>Fonts Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">href</span>=<span class="string">&quot;font.woff2&quot;</span> <span class="attr">as</span>=<span class="string">&quot;font&quot;</span> <span class="attr">type</span>=<span class="string">&quot;font/woff2&quot;</span> <span class="attr">crossorigin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This preloads a font file with proper MIME type.</p>
<p>To make preloaded resources execute immediately, use:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">as</span>=<span class="string">&quot;style&quot;</span> <span class="attr">href</span>=<span class="string">&quot;async_style.css&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;this.rel=&#x27;stylesheet&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code ensures that the stylesheet is applied as soon as it’s downloaded.</p>
<h3 id="lt-link-rel-quot-prefetch-quot-gt"><a href="#lt-link-rel-quot-prefetch-quot-gt" class="headerlink" title="&lt;link rel=&quot;prefetch&quot;&gt;"></a><code>&lt;link rel=&quot;prefetch&quot;&gt;</code></h3><p>Used for resources likely needed for future pages. It has lower priority and might not always be executed.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;prefetch&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com/&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="lt-link-rel-quot-preconnect-quot-gt"><a href="#lt-link-rel-quot-preconnect-quot-gt" class="headerlink" title="&lt;link rel=&quot;preconnect&quot;&gt;"></a><code>&lt;link rel=&quot;preconnect&quot;&gt;</code></h3><p>Establishes a TCP connection with a domain in advance.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preconnect&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com/&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="lt-link-rel-quot-dns-prefetch-quot-gt"><a href="#lt-link-rel-quot-dns-prefetch-quot-gt" class="headerlink" title="&lt;link rel=&quot;dns-prefetch&quot;&gt;"></a><code>&lt;link rel=&quot;dns-prefetch&quot;&gt;</code></h3><p>Performs DNS resolution for a domain early.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;dns-prefetch&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//example.com/&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="lt-link-rel-quot-prerender-quot-gt"><a href="#lt-link-rel-quot-prerender-quot-gt" class="headerlink" title="&lt;link rel=&quot;prerender&quot;&gt;"></a><code>&lt;link rel=&quot;prerender&quot;&gt;</code></h3><p>Loads and renders a page in advance. It’s useful if you anticipate the user will visit that page soon.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;prerender&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="media-Attribute"><a href="#media-Attribute" class="headerlink" title="media Attribute"></a>media Attribute</h2><p>The <code>media</code> attribute specifies the conditions under which an external resource is applied.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;print.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">media</span>=<span class="string">&quot;print&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;mobile.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">media</span>=<span class="string">&quot;screen and (max-width: 600px)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, <code>print.css</code> is loaded when printing, and <code>mobile.css</code> is loaded when the device width is 600 pixels or less.</p>
<p>Here’s another example using the <code>media</code> attribute for conditional loading:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">as</span>=<span class="string">&quot;image&quot;</span> <span class="attr">href</span>=<span class="string">&quot;map.png&quot;</span> <span class="attr">media</span>=<span class="string">&quot;(max-width: 600px)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">as</span>=<span class="string">&quot;script&quot;</span> <span class="attr">href</span>=<span class="string">&quot;map.js&quot;</span> <span class="attr">media</span>=<span class="string">&quot;(min-width: 601px)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this case, <code>map.png</code> is preloaded if the screen width is 600 pixels or less, while <code>map.js</code> is preloaded if the screen width is 601 pixels or more.</p>
<h2 id="Other-Attributes"><a href="#Other-Attributes" class="headerlink" title="Other Attributes"></a>Other Attributes</h2><p>Here are some additional attributes for the <code>&lt;link&gt;</code> tag:</p>
<ul>
<li><code>crossorigin</code>: Specifies cross-origin settings for loading external resources.</li>
<li><code>href</code>: URL of the external resource.</li>
<li><code>referrerpolicy</code>: Defines how the Referer header is handled when loading the resource.</li>
<li><code>as</code>: For <code>rel=&quot;preload&quot;</code> or <code>rel=&quot;prefetch&quot;</code>, specifies the type of external resource.</li>
<li><code>type</code>: MIME type of the external resource, used with <code>rel=&quot;preload&quot;</code> or <code>rel=&quot;prefetch&quot;</code>.</li>
<li><code>title</code>: Identifies the stylesheet name when loading stylesheets.</li>
<li><code>sizes</code>: Declares the sizes of icon files, such as for Apple devices.</li>
</ul>
<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/link">https://wangdoc.com/html/link</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Form</title>
    <url>/2024/06/27/html-form/</url>
    <content><![CDATA[<p>A form is a way for users to input information and interact with a webpage. In most cases, the information submitted by users is sent to the server. For example, a website’s search bar is a type of form.</p>
<p>A form consists of one or more elements, such as text fields, buttons, radio buttons, or checkboxes. These elements are known as controls.</p>
<h2 id="lt-form-gt"><a href="#lt-form-gt" class="headerlink" title="&lt;form&gt;"></a><code>&lt;form&gt;</code></h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>The <code>&lt;form&gt;</code> tag is used to define a form, which acts as a container for all the form elements.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Various form controls --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The code above represents the basic structure of a form.</p>
<p>Here’s a common example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://example.com/api&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;POST-name&quot;</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;POST-name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the form includes three controls: a <code>&lt;label&gt;</code> tag, a text input field, and a submit button. The text input field has a <code>name</code> attribute set to “user,” which means the browser will send a key-value pair to the server with the key “user” and the value being what the user entered.</p>
<p>When the user types a username, such as “foobar,” into the text field and clicks the submit button, the browser will send a POST request to <code>https://example.com/api</code> with the data <code>user=foobar</code>.</p>
<p>The <code>&lt;form&gt;</code> element has the following attributes:</p>
<ul>
<li><code>accept-charset</code>: Specifies the character encodings accepted by the server, separated by spaces. By default, it matches the encoding of the webpage.</li>
<li><code>action</code>: The URL where the form data will be sent.</li>
<li><code>autocomplete</code>: Determines if the browser can automatically fill in missing values for a control. Possible values are <code>off</code> (do not autofill) and <code>on</code> (autofill).</li>
<li><code>method</code>: The HTTP method used to submit the data. Possible values are <code>post</code> (send form data as the HTTP request body), <code>get</code> (send form data as part of the URL query string), and <code>dialog</code> (used within a <code>&lt;dialog&gt;</code> element).</li>
<li><code>enctype</code>: Specifies the MIME type for the data being sent when the <code>method</code> attribute is <code>post</code>. Possible values include <code>application/x-www-form-urlencoded</code> (default), <code>multipart/form-data</code> (for file uploads), and <code>text/plain</code>.</li>
<li><code>name</code>: The name of the form, which should be unique within the page. Note that if a control does not have a <code>name</code> attribute, its value will not be sent as a key-value pair to the server.</li>
<li><code>novalidate</code>: A boolean attribute that indicates whether the form should bypass validation when submitted.</li>
<li><code>target</code>: Specifies where to display the response from the server. Possible values include <code>_self</code> (current window), <code>_blank</code> (new window), <code>_parent</code> (parent frame), <code>_top</code> (topmost frame), or the <code>name</code> attribute of an <code>&lt;iframe&gt;</code> (display the response in that <code>&lt;iframe&gt;</code>).</li>
</ul>
<h3 id="enctype-Attribute"><a href="#enctype-Attribute" class="headerlink" title="enctype Attribute"></a><code>enctype</code> Attribute</h3><p>The <code>enctype</code> attribute of the <code>&lt;form&gt;</code> tag specifies the MIME type of the data sent to the server when using the POST method. This attribute can have the following values:</p>
<ol>
<li><code>application/x-www-form-urlencoded</code>This is the default encoding type. It encodes form data as key-value pairs where both the key (control name) and value are URL-encoded. Spaces are replaced with <code>+</code>, non-alphanumeric characters are replaced with <code>%HH</code> (where <code>HH</code> is the hexadecimal value), and newlines are represented as CR LF. Key-value pairs are separated by <code>=</code> and each pair is separated by <code>&amp;</code>.</li>
<li><code>multipart/form-data</code>This encoding type is mainly used for file uploads. When uploading large files, the data is split into multiple parts. Each part has its own HTTP headers, including <code>Content-Disposition</code> with a value of <code>form-data</code> and a <code>name</code> attribute representing the control name.</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Content-Disposition: form-data; name=&quot;mycontrol&quot;</span><br></pre></td></tr></table></figure>
<p>Here is an example of a file upload form:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://example.com/api&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit-name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  File: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;files&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Upload&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Clear&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, if the user enters “Larry” as the username and selects a file named <code>file1.txt</code>, the browser sends the data as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Content-Type: multipart/form-data; boundary=--AaB03x</span><br><span class="line"></span><br><span class="line">--AaB03x</span><br><span class="line">Content-Disposition: form-data; name=&quot;submit-name&quot;</span><br><span class="line"></span><br><span class="line">Larry</span><br><span class="line">--AaB03x</span><br><span class="line">Content-Disposition: form-data; name=&quot;files&quot;; filename=&quot;file1.txt&quot;</span><br><span class="line">Content-Type: text/plain</span><br><span class="line"></span><br><span class="line">... contents of file1.txt ...</span><br><span class="line">--AaB03x--</span><br></pre></td></tr></table></figure>
<p>The browser splits the form data into multiple parts. The <code>Content-Type</code> header specifies the <code>multipart/form-data</code> format and the boundary <code>--AaB03x</code> which separates the data chunks. Each chunk starts with a <code>Content-Disposition</code> header indicating the control name (<code>submit-name</code> or <code>files</code>) and, for file uploads, includes the filename and content type. The data following these headers is the actual value of the control, with file data included as well.</p>
<h2 id="lt-fieldset-gt-lt-legend-gt"><a href="#lt-fieldset-gt-lt-legend-gt" class="headerlink" title="&lt;fieldset&gt;, &lt;legend&gt;"></a><code>&lt;fieldset&gt;</code>, <code>&lt;legend&gt;</code></h2><p>The <code>&lt;fieldset&gt;</code> element is a block-level container used to group related form controls together.</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Age: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Gender: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the above code, the two input fields are grouped within a box.</p>
<p>Attributes of <code>&lt;fieldset&gt;</code> include:</p>
<ul>
<li><code>disabled</code>: A boolean attribute that, when set, makes all controls within the <code>&lt;fieldset&gt;</code> disabled and appear grayed out.</li>
<li><code>form</code>: Associates the <code>&lt;fieldset&gt;</code> with a <code>&lt;form&gt;</code> element by specifying the <code>&lt;form&gt;</code>‘s <code>id</code>.</li>
<li><code>name</code>: Sets the name of the control group.</li>
</ul>
<p>The <code>&lt;legend&gt;</code> element is used to provide a title for the <code>&lt;fieldset&gt;</code>. It is usually the first element inside the <code>&lt;fieldset&gt;</code> and appears as a label at the top of the box.</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">legend</span>&gt;</span>Student Information<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Age: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Gender: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the title “Student Information” is displayed at the top of the <code>&lt;fieldset&gt;</code> box.</p>
<h2 id="lt-label-gt"><a href="#lt-label-gt" class="headerlink" title="&lt;label&gt;"></a><code>&lt;label&gt;</code></h2><p>The <code>&lt;label&gt;</code> element is an inline element that provides a description for form controls, helping users understand their purpose.</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user&quot;</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here, the text “Username:” is associated with the input field. </p>
<p>The <code>&lt;label&gt;</code> element enhances accessibility, especially for small controls like checkboxes and radio buttons, by allowing users to click the label to select the associated control. The <code>for</code> attribute links the label to the corresponding control by its <code>id</code>. </p>
<p>You can also nest controls within a <code>&lt;label&gt;</code>, eliminating the need for the <code>for</code> attribute.</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Username:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Attributes of <code>&lt;label&gt;</code>:</p>
<ul>
<li><code>for</code>: Specifies the <code>id</code> of the associated control.</li>
<li><code>form</code>: Associates the label with a form element by specifying the form’s <code>id</code>. If this attribute is not set, the label must be inside a <code>&lt;form&gt;</code> element.</li>
</ul>
<p>A single control can have multiple associated <code>&lt;label&gt;</code> elements:</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span>Username:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;required&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this case, the input field has two labels associated with it.</p>
<h2 id="lt-input-gt"><a href="#lt-input-gt" class="headerlink" title="&lt;input&gt;"></a><code>&lt;input&gt;</code></h2><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>The <code>&lt;input&gt;</code> tag is an inline element used to receive user input. It is a self-closing tag and does not require a closing tag.</p>
<p>It comes in various types, depending on the value of the <code>type</code> attribute. The default type is <code>text</code>, which creates a single-line input field.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Equivalent to --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The code above generates a single-line text input field where users can enter text.</p>
<p>The <code>&lt;input&gt;</code> tag has many attributes, some of which are specific to certain types and will be discussed in the “Types” section. Here are some common attributes applicable to all types:</p>
<ul>
<li><strong>autofocus</strong>: A boolean attribute that, when set, makes the input field automatically receive focus when the page loads.</li>
<li><strong>disabled</strong>: A boolean attribute that disables the control. When enabled, the control appears grayed out and is viewable but not interactive.</li>
<li><strong>form</strong>: Associates the input with a form by specifying the form’s <code>id</code>. When this attribute is set, the control can be placed anywhere on the page; otherwise, it must be inside a <code>&lt;form&gt;</code>.</li>
<li><strong>list</strong>: Associates the input with a <code>&lt;datalist&gt;</code> by specifying the <code>id</code> of the datalist. This provides a predefined list of options for the input.</li>
<li><strong>name</strong>: The name of the control, used as the key in key-value pairs when submitting data to the server. Only controls with a <code>name</code> attribute are submitted.</li>
<li><strong>readonly</strong>: A boolean attribute that makes the input field read-only. Users can see but not modify the content.</li>
<li><strong>required</strong>: A boolean attribute that makes the input field mandatory.</li>
<li><strong>type</strong>: Defines the type of the input control. Detailed types are covered in the “Types” section.</li>
<li><strong>value</strong>: Specifies the initial value of the input field.</li>
</ul>
<h3 id="Types"><a href="#Types" class="headerlink" title="Types"></a>Types</h3><p>The <code>type</code> attribute determines the form of the <code>&lt;input&gt;</code> element. It can take various values, including:</p>
<p><strong>1) text</strong></p>
<p><code>type=&quot;text&quot;</code> creates a standard text input field for single-line text. Line breaks are automatically removed if entered by the user.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">required</span></span></span><br><span class="line"><span class="tag">       <span class="attr">minlength</span>=<span class="string">&quot;4&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;8&quot;</span> <span class="attr">size</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This text input field has several additional attributes:</p>
<ul>
<li><strong>maxlength</strong>: The maximum number of characters allowed. It should be a non-negative integer.</li>
<li><strong>minlength</strong>: The minimum number of characters required. It must be a non-negative integer and less than <code>maxlength</code>.</li>
<li><strong>pattern</strong>: A regular expression that the input must match. For example, to require 4 to 8 English letters, use <code>pattern=&quot;[a-z]&#123;4,8&#125;&quot;</code>. If the input does not match, the browser will display a warning and prevent form submission.</li>
<li><strong>placeholder</strong>: A sample value displayed in the input field when it is empty. It disappears once the user starts typing.</li>
<li><strong>readonly</strong>: A boolean attribute that makes the input field read-only, allowing only viewing but not editing.</li>
<li><strong>size</strong>: Specifies the visible width of the input field in characters. It is a positive integer, defaulting to 20. Characters beyond this width require horizontal scrolling to view.</li>
<li><strong>spellcheck</strong>: Determines whether spell checking is enabled for the input field. Possible values are <code>true</code> or <code>false</code>.</li>
</ul>
<p><strong>2) Search</strong></p>
<p>The <code>type=&quot;search&quot;</code> creates a text input field specifically for search queries, similar to <code>type=&quot;text&quot;</code>. Some browsers display a clear button inside the input field that allows users to quickly erase all input.</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mySearch&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter search term...&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Search&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<p><strong>3) Button</strong></p>
<p>The <code>type=&quot;button&quot;</code> creates a button with no default behavior. It typically requires JavaScript to define the action for the button click.</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Click&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>It’s generally recommended to use the <code>&lt;button&gt;</code> element instead, as it is semantically clearer and supports more complex content, such as images.</p>
<hr>
<p><strong>4) Submit</strong></p>
<p>The <code>type=&quot;submit&quot;</code> creates a button that submits the form to the server.</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>If the <code>value</code> attribute is not specified, the default text “Submit” is displayed.</p>
<p>This type supports the following attributes to override form settings:</p>
<ul>
<li><code>formaction</code>: URL to submit the form data.</li>
<li><code>formenctype</code>: Encoding type of the form data.</li>
<li><code>formmethod</code>: HTTP method for submission (GET or POST).</li>
<li><code>formnovalidate</code>: Boolean value to skip form validation.</li>
<li><code>formtarget</code>: Specifies where to display the response from the server.</li>
</ul>
<hr>
<p><strong>5) Image</strong></p>
<p>The <code>type=&quot;image&quot;</code> uses an image as a submit button, behaving like <code>type=&quot;submit&quot;</code>.</p>
<p>Example:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Login&quot;</span> <span class="attr">src</span>=<span class="string">&quot;login-button.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The image acts as a clickable button to submit the form.</p>
<p>Attributes include:</p>
<ul>
<li><code>alt</code>: Alternative text if the image fails to load.</li>
<li><code>src</code>: URL of the image.</li>
<li><code>height</code>: Image display height in pixels.</li>
<li><code>width</code>: Image display width in pixels.</li>
<li><code>formaction</code>: URL to submit the form data.</li>
<li><code>formenctype</code>: Encoding type of the form data.</li>
<li><code>formmethod</code>: HTTP method for submission (GET or POST).</li>
<li><code>formnovalidate</code>: Boolean value to skip form validation.</li>
<li><code>formtarget</code>: Specifies where to display the response from the server.</li>
</ul>
<p>Clicking the image button submits additional parameters <code>x</code> and <code>y</code>, indicating the mouse click position relative to the image. If the image button has a <code>name</code> attribute, the coordinates are prefixed with this name (e.g., <code>position.x=52&amp;position.y=55</code>). This feature is often used for map interactions.</p>
<p><strong>6) Reset</strong></p>
<p><code>type=&quot;reset&quot;</code> creates a reset button. When clicked, it resets all form controls to their initial values.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Reset&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>If the <code>value</code> attribute is not set, the browser displays a default label, typically “Reset.”</p>
<p>This control is rarely used as it resets all entered values, which might not be desirable. It’s often better to avoid it.</p>
<p><strong>7) Checkbox</strong></p>
<p><code>type=&quot;checkbox&quot;</code> creates a checkbox that allows users to select or deselect an option.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;agreement&quot;</span> <span class="attr">name</span>=<span class="string">&quot;agreement&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;agreement&quot;</span>&gt;</span>Agree<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The above code displays a clickable checkbox before the text. Clicking it selects or deselects the option. The <code>checked</code> attribute makes the checkbox selected by default.</p>
<p>By default, the <code>value</code> attribute is “on.” For the example above, selecting the checkbox submits <code>agreement=on</code>, while deselection results in no submission for that item.</p>
<p>Checkboxes related to each other can be grouped within a <code>&lt;fieldset&gt;</code>.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">legend</span>&gt;</span>Your Interests<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;coding&quot;</span> <span class="attr">name</span>=<span class="string">&quot;interest&quot;</span> <span class="attr">value</span>=<span class="string">&quot;coding&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;coding&quot;</span>&gt;</span>Coding<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;music&quot;</span> <span class="attr">name</span>=<span class="string">&quot;interest&quot;</span> <span class="attr">value</span>=<span class="string">&quot;music&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;music&quot;</span>&gt;</span>Music<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>If both checkboxes are selected, the submission includes <code>interest=coding&amp;interest=music</code>.</p>
<p><strong>8) Radio</strong></p>
<p><code>type=&quot;radio&quot;</code> creates a radio button, where only one option in a group can be selected at a time.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">legend</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span>Male<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;female&quot;</span>&gt;</span>Female<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, only one gender can be selected. Ensure all radio buttons in a group share the same <code>name</code> attribute. The selected value is submitted to the server.</p>
<p>Relevant attributes:</p>
<ul>
<li><code>checked</code>: Boolean attribute indicating if the option is selected by default.</li>
<li><code>value</code>: The value sent to the server when selected, defaulting to “on.”</li>
</ul>
<p><strong>9) Email</strong></p>
<p><code>type=&quot;email&quot;</code> creates an input field that only accepts valid email addresses. The browser automatically validates the format before submission.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;.+@foobar.com&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code generates a required field that only accepts emails ending in <code>foobar.com</code>.</p>
<p>The <code>multiple</code> Boolean attribute allows multiple comma-separated email addresses.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;emailAddress&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">multiple</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>When both <code>multiple</code> and <code>required</code> are set, zero emails are allowed, making the field optional.</p>
<p>Relevant attributes:</p>
<ul>
<li><code>maxlength</code>: Maximum number of characters allowed.</li>
<li><code>minlength</code>: Minimum number of characters required.</li>
<li><code>multiple</code>: Allows multiple comma-separated emails.</li>
<li><code>pattern</code>: Regex pattern that input must match.</li>
<li><code>placeholder</code>: Placeholder text when the input is empty.</li>
<li><code>readonly</code>: Boolean attribute indicating if the field is read-only.</li>
<li><code>size</code>: Display length of the input field in characters.</li>
<li><code>spellcheck</code>: Enables spellcheck, with possible values <code>true</code> or <code>false</code>.</li>
</ul>
<p>The <code>type=&quot;email&quot;</code> field can also use the <code>&lt;datalist&gt;</code> tag to offer suggestions.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">size</span>=<span class="string">&quot;40&quot;</span> <span class="attr">list</span>=<span class="string">&quot;defaultEmails&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;defaultEmails&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;jbond007@mi6.defence.gov.uk&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;jbourne@unknown.net&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;nfury@shield.org&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;tony@starkindustries.com&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;hulk@grrrrrrrr.arg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>When the input field is focused, a dropdown list with five suggestions appears for user reference.</p>
<p><strong>10) Password</strong></p>
<p>The <code>type=&quot;password&quot;</code> creates a password input field where the user’s input is obscured, typically displayed as asterisks (<code>*</code>) or dots (<code>·</code>). </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pass&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">minlength</span>=<span class="string">&quot;8&quot;</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Browsers may handle this input type differently, often showing the entered characters for a brief moment before obscuring them. Any newline (<code>U+000A</code>) or carriage return (<code>U+000D</code>) characters entered are automatically removed by the browser.</p>
<p>Attributes for this type include:</p>
<ul>
<li><code>maxlength</code>: Maximum number of characters allowed.</li>
<li><code>minlength</code>: Minimum number of characters required.</li>
<li><code>pattern</code>: Regular expression the input must match.</li>
<li><code>placeholder</code>: Text displayed when the input is empty.</li>
<li><code>readonly</code>: Boolean attribute indicating if the field is read-only.</li>
<li><code>size</code>: Non-negative integer representing the display length in characters.</li>
<li><code>autocomplete</code>: Determines if autocomplete is allowed (<code>on</code>, <code>off</code>, <code>current-password</code>, <code>new-password</code>).</li>
<li><code>inputmode</code>: Specifies the type of data allowed: <code>none</code>(no system input method), <code>text</code>(standard text input), <code>decimal</code>(numbers including decimals), <code>numeric</code>(digits 0-9).</li>
</ul>
<p><strong>11) File</strong></p>
<p>The <code>type=&quot;file&quot;</code> creates a file input field that allows users to select one or more files, commonly used for file uploads.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">name</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;image/png, image/jpeg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Attributes for this type include:</p>
<ul>
<li><code>accept</code>: Specifies the file types allowed, using MIME types or file extensions.</li>
<li><code>capture</code>: Determines the source for capturing image or video data (<code>user</code> or <code>environment</code>).</li>
<li><code>multiple</code>: Boolean attribute indicating if multiple files can be selected.</li>
</ul>
<p><strong>12) Hidden</strong></p>
<p>The <code>type=&quot;hidden&quot;</code> creates a control not visible on the page, used to pass hidden information to the server. For example, to prevent CSRF attacks, unique hidden identifiers can be generated for each form.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;prodId&quot;</span> <span class="attr">name</span>=<span class="string">&quot;prodId&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xm234jq&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This control is invisible to users but submits its value with the form.</p>
<p><strong>13) Number</strong></p>
<p>The <code>type=&quot;number&quot;</code> creates a numeric input field, allowing only numbers. A spinner with up and down arrows is typically provided for incrementing or decrementing the value.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tentacles&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tentacles&quot;</span> <span class="attr">min</span>=<span class="string">&quot;10&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This type supports both integers and decimal values, with optional step increments.</p>
<p>Attributes include:</p>
<ul>
<li><code>max</code>: Maximum value allowed.</li>
<li><code>min</code>: Minimum value allowed.</li>
<li><code>placeholder</code>: Example value shown when the input is empty.</li>
<li><code>readonly</code>: Boolean attribute indicating if the field is read-only.</li>
<li><code>step</code>: Increment step for the value; defaults to 1.</li>
</ul>
<p><strong>14) Range</strong></p>
<p>The <code>type=&quot;range&quot;</code> creates a slider for selecting a value within a specified range. This is often used for volume controls or similar settings.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span> <span class="attr">name</span>=<span class="string">&quot;volume&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">max</span>=<span class="string">&quot;11&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Attributes include:</p>
<ul>
<li><code>max</code>: Maximum value allowed, default is 100.</li>
<li><code>min</code>: Minimum value allowed, default is 0.</li>
<li><code>step</code>: Increment step, default is 1.</li>
<li><code>value</code>: Initial value of the slider.</li>
</ul>
<p>With the <code>&lt;datalist&gt;</code> tag, you can add labels or ticks to the range slider.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">list</span>=<span class="string">&quot;tickmarks&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;tickmarks&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">label</span>=<span class="string">&quot;0%&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;30&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span> <span class="attr">label</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;60&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;70&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;80&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;90&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span> <span class="attr">label</span>=<span class="string">&quot;100%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This setup creates a slider with tick marks and labels at specified intervals. Note that horizontal sliders are the default; vertical sliders require CSS adjustments.</p>
<p><strong>14) Url</strong></p>
<p>The <code>type=&quot;url&quot;</code> input field only accepts URLs. Before form submission, the browser automatically checks if the URL format is correct; otherwise, it won’t be submitted.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">id</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">placeholder</span>=<span class="string">&quot;https://example.com&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">pattern</span>=<span class="string">&quot;https://.*&quot;</span> <span class="attr">size</span>=<span class="string">&quot;30&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the <code>pattern</code> attribute specifies that the URL must use the HTTPS protocol.</p>
<p>Note that URLs without a protocol are invalid. For instance, <code>foo.com</code> is invalid, while <code>http://foo.com</code> is valid.</p>
<p>The type also supports the following attributes:</p>
<ul>
<li><code>maxlength</code>: Maximum number of characters allowed.</li>
<li><code>minlength</code>: Minimum number of characters required.</li>
<li><code>pattern</code>: Regular expression that the input must match.</li>
<li><code>placeholder</code>: Example text displayed when the input is empty.</li>
<li><code>readonly</code>: Boolean attribute indicating if the field is read-only.</li>
<li><code>size</code>: Number of characters that the input field should display.</li>
<li><code>spellcheck</code>: Indicates if spell check is enabled (<code>true</code> or <code>false</code>).</li>
</ul>
<p>The <code>type=&quot;url&quot;</code> can be used with the <code>&lt;datalist&gt;</code> element to create a dropdown list for users to choose from. As users type, the list will narrow to show matching options.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;myURL&quot;</span> <span class="attr">name</span>=<span class="string">&quot;myURL&quot;</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">list</span>=<span class="string">&quot;defaultURLs&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;defaultURLs&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;https://developer.mozilla.org/&quot;</span> <span class="attr">label</span>=<span class="string">&quot;MDN Web Docs&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;http://www.google.com/&quot;</span> <span class="attr">label</span>=<span class="string">&quot;Google&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;http://www.microsoft.com/&quot;</span> <span class="attr">label</span>=<span class="string">&quot;Microsoft&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;https://www.mozilla.org/&quot;</span> <span class="attr">label</span>=<span class="string">&quot;Mozilla&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;http://w3.org/&quot;</span> <span class="attr">label</span>=<span class="string">&quot;W3C&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>label</code> attribute of <code>&lt;option&gt;</code> specifies the text shown next to the URL in the dropdown list.</p>
<p><strong>16) tel</strong></p>
<p>The <code>type=&quot;tel&quot;</code> input field is used for entering phone numbers. Since phone number formats vary globally, browsers don’t apply default validation, so custom validation is often needed.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;tel&quot;</span> <span class="attr">id</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">pattern</span>=<span class="string">&quot;[0-9]&#123;3&#125;-[0-9]&#123;3&#125;-[0-9]&#123;4&#125;&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>Format: 123-456-7890<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The code above defines an input field for a 10-digit phone number.</p>
<p>Attributes for this type include:</p>
<ul>
<li><code>maxlength</code>: Maximum number of characters allowed.</li>
<li><code>minlength</code>: Minimum number of characters required.</li>
<li><code>pattern</code>: A regular expression that the input must match.</li>
<li><code>placeholder</code>: Example text displayed when the input is empty.</li>
<li><code>readonly</code>: A boolean attribute indicating if the field is read-only.</li>
<li><code>size</code>: Number of characters the input field should display.</li>
</ul>
<p><strong>17) color</strong></p>
<p>The <code>type=&quot;color&quot;</code> input allows users to select a color, with values in the <code>#rrggbb</code> format.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> <span class="attr">id</span>=<span class="string">&quot;background&quot;</span> <span class="attr">name</span>=<span class="string">&quot;background&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">value</span>=<span class="string">&quot;#e66465&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In Chrome, this code displays a color box with the color #e66465. Clicking the box opens a color picker for selecting a different color.</p>
<p>If no <code>value</code> attribute is specified, the default color is #000000 (black).</p>
<p><strong>18) Date</strong></p>
<p>The <code>type=&quot;date&quot;</code> input allows users to select a date in the format <code>YYYY-MM-DD</code>, but does not include time (hours, minutes, or seconds). </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span> <span class="attr">name</span>=<span class="string">&quot;start&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">value</span>=<span class="string">&quot;2018-07-22&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">min</span>=<span class="string">&quot;2018-01-01&quot;</span> <span class="attr">max</span>=<span class="string">&quot;2018-12-31&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code displays a date input box with a default date of July 22, 2018. Clicking the input box will open a date picker for selecting a different date.</p>
<p><strong>Attributes:</strong></p>
<ul>
<li><code>max</code>: The latest allowed date in the format <code>YYYY-MM-DD</code>.</li>
<li><code>min</code>: The earliest allowed date in the format <code>YYYY-MM-DD</code>.</li>
<li><code>step</code>: The interval for selectable dates, in days.</li>
</ul>
<p><strong>19) Time</strong></p>
<p>The <code>type=&quot;time&quot;</code> input allows users to input a time in the 24-hour format. The format is <code>hh:mm</code>, and if seconds are included, it’s <code>hh:mm:ss</code>.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;time&quot;</span> <span class="attr">id</span>=<span class="string">&quot;appt&quot;</span> <span class="attr">name</span>=<span class="string">&quot;appt&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">min</span>=<span class="string">&quot;09:00&quot;</span> <span class="attr">max</span>=<span class="string">&quot;18:00&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>Business hours: 9 AM to 6 PM<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code creates a time input box where users can select a time between 9:00 and 18:00. </p>
<p><strong>Attributes:</strong></p>
<ul>
<li><code>max</code>: The latest allowed time.</li>
<li><code>min</code>: The earliest allowed time.</li>
<li><code>readonly</code>: A boolean attribute that prevents users from editing the time.</li>
<li><code>step</code>: The interval for selectable times, in seconds.</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;appt&quot;</span> <span class="attr">type</span>=<span class="string">&quot;time&quot;</span> <span class="attr">name</span>=<span class="string">&quot;appt&quot;</span> <span class="attr">step</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the time picker increments by 2 seconds.</p>
<p><strong>20) Month</strong></p>
<p>The <code>type=&quot;month&quot;</code> input allows users to select a year and month in the format <code>YYYY-MM</code>.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;month&quot;</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span> <span class="attr">name</span>=<span class="string">&quot;start&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">min</span>=<span class="string">&quot;2018-03&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2018-05&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code creates an input box for selecting a month and year, with the default value set to May 2018.</p>
<p><strong>Attributes:</strong></p>
<ul>
<li><code>max</code>: The latest allowed month in the format <code>YYYY-MM</code>.</li>
<li><code>min</code>: The earliest allowed month in the format <code>YYYY-MM</code>.</li>
<li><code>readonly</code>: A boolean attribute that prevents users from editing the month.</li>
<li><code>step</code>: The interval for selectable months.</li>
</ul>
<p><strong>21) Week</strong></p>
<p>The <code>type=&quot;week&quot;</code> input allows users to select a week of the year in the format <code>YYYY-Www</code>. For example, <code>2018-W18</code> represents the 18th week of 2018.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;week&quot;</span> <span class="attr">name</span>=<span class="string">&quot;week&quot;</span> <span class="attr">id</span>=<span class="string">&quot;camp-week&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">min</span>=<span class="string">&quot;2018-W18&quot;</span> <span class="attr">max</span>=<span class="string">&quot;2018-W26&quot;</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code creates an input box for selecting a week within the specified range.</p>
<p><strong>Attributes:</strong></p>
<ul>
<li><code>max</code>: The latest allowed week in the format <code>YYYY-Www</code>.</li>
<li><code>min</code>: The earliest allowed week in the format <code>YYYY-Www</code>.</li>
<li><code>readonly</code>: A boolean attribute that prevents users from editing the week.</li>
<li><code>step</code>: The interval for selectable weeks.</li>
</ul>
<p><strong>22) datetime-local</strong></p>
<p>The <code>type=&quot;datetime-local&quot;</code> input allows users to enter both date and time in the format <code>YYYY-MM-DDThh:mm</code>. Note that seconds are not supported.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;datetime-local&quot;</span> <span class="attr">id</span>=<span class="string">&quot;meeting-time&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">name</span>=<span class="string">&quot;meeting-time&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2018-06-12T19:30&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">min</span>=<span class="string">&quot;2018-06-07T00:00&quot;</span> <span class="attr">max</span>=<span class="string">&quot;2018-06-14T00:00&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code creates an input box for selecting both a date and a time, with the default set to June 12, 2018, 19:30.</p>
<p><strong>Attributes:</strong></p>
<ul>
<li><code>max</code>: The latest allowed date and time in the format YYYY-MM-DDThh:mm.</li>
<li><code>min</code>: The earliest allowed date and time in the format YYYY-MM-DDThh:mm.</li>
<li><code>step</code>: The interval for selectable times, in seconds. The default is 60 seconds.</li>
</ul>
<h2 id="lt-button-gt"><a href="#lt-button-gt" class="headerlink" title="&lt;button&gt;"></a><code>&lt;button&gt;</code></h2><p>The <code>&lt;button&gt;</code> element creates a clickable button with no default behavior. Its function is typically defined using the <code>type</code> attribute or scripts.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>Click<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The code above produces a button with the text “Click.”</p>
<p>The <code>&lt;button&gt;</code> element can contain both text and images, forming an image button.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">name</span>=<span class="string">&quot;search&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;search.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Search&quot;</span>&gt;</span>Search</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Here are the attributes for <code>&lt;button&gt;</code>:</p>
<ul>
<li><code>autofocus</code>: Boolean attribute that sets focus to the button when the page loads. Only one element can have this attribute per page.</li>
<li><code>disabled</code>: Boolean attribute that disables the button, making it gray and unclickable.</li>
<li><code>name</code>: The button’s name, used with the <code>value</code> attribute to submit data in the format <code>name=value</code> with the form.</li>
<li><code>value</code>: The button’s value, used with the <code>name</code> attribute to submit data in the format <code>name=value</code> with the form.</li>
<li><code>type</code>: The button’s type. Possible values are <code>submit</code> (sends form data to the server), <code>reset</code> (resets all form controls to their initial values), and <code>button</code> (no default behavior; action specified by script).</li>
<li><code>form</code>: Associates the button with a <code>&lt;form&gt;</code> element by its <code>id</code>. If omitted, the button is linked to the nearest parent form.</li>
<li><code>formaction</code>: URL where the form data is submitted, overriding the <code>action</code> attribute of the <code>&lt;form&gt;</code> element.</li>
<li><code>formenctype</code>: Encoding type for form data submission, overriding the <code>enctype</code> attribute of the <code>&lt;form&gt;</code> element. Possible values: <code>application/x-www-form-urlencoded</code> (default), <code>multipart/form-data</code> (for file uploads), <code>text/plain</code>.</li>
<li><code>formmethod</code>: HTTP method for form data submission, overriding the <code>method</code> attribute of the <code>&lt;form&gt;</code> element. Possible values: <code>post</code> or <code>get</code>.</li>
<li><code>formnovalidate</code>: Boolean attribute that disables local validation when submitting the form, overriding the <code>novalidate</code> attribute of the <code>&lt;form&gt;</code> element.</li>
<li><code>formtarget</code>: Specifies where to display the response from the server, overriding the <code>target</code> attribute of the <code>&lt;form&gt;</code> element. Possible values: <code>_self</code> (current window), <code>_blank</code> (new window), <code>_parent</code> (parent window), <code>_top</code> (topmost window).</li>
</ul>
<h2 id="lt-select-gt"><a href="#lt-select-gt" class="headerlink" title="&lt;select&gt;"></a><code>&lt;select&gt;</code></h2><p>The <code>&lt;select&gt;</code> tag is used to create a dropdown menu.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;pet-select&quot;</span>&gt;</span>Pet:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;pet-select&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pet-select&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>--Please select an option--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;dog&quot;</span>&gt;</span>Dog<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;cat&quot;</span>&gt;</span>Cat<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;others&quot;</span>&gt;</span>Others<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the above code, the <code>&lt;select&gt;</code> tag creates a dropdown menu with the placeholder text “—Please select an option—“ and a dropdown arrow on the right. Clicking the arrow reveals three options for the user to choose from.</p>
<p>Each option is represented by the <code>&lt;option&gt;</code> tag, and the <code>value</code> attribute of the selected option is sent to the server. The <code>selected</code> attribute can be used to set a default option.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;choice&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;first&quot;</span>&gt;</span>First Value<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;second&quot;</span> <span class="attr">selected</span>&gt;</span>Second Value<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;third&quot;</span>&gt;</span>Third Value<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this code, “Second Value” is the default selected option when the page loads.</p>
<p>The <code>&lt;select&gt;</code> element has the following attributes:</p>
<ul>
<li><code>autofocus</code>: Boolean attribute indicating whether the control should automatically receive focus when the page loads.</li>
<li><code>disabled</code>: Boolean attribute indicating whether the control is disabled.</li>
<li><code>form</code>: Associates the select element with a form using its <code>id</code>.</li>
<li><code>multiple</code>: Boolean attribute indicating if multiple options can be selected. If enabled, most browsers display a scrollable list box, and users can select multiple options by holding down the Shift or Ctrl key.</li>
<li><code>name</code>: Name of the control.</li>
<li><code>required</code>: Boolean attribute indicating whether the control is required.</li>
<li><code>size</code>: Specifies the number of visible options when <code>multiple</code> is set. Additional options will require scrolling.</li>
</ul>
<h2 id="lt-option-gt-lt-optgroup-gt"><a href="#lt-option-gt-lt-optgroup-gt" class="headerlink" title="&lt;option&gt;, &lt;optgroup&gt;"></a><code>&lt;option&gt;</code>, <code>&lt;optgroup&gt;</code></h2><p>The <code>&lt;option&gt;</code> tag, used within <code>&lt;select&gt;</code>, <code>&lt;optgroup&gt;</code>, and <code>&lt;datalist&gt;</code>, represents an individual menu item.</p>
<p>Attributes of <code>&lt;option&gt;</code> include:</p>
<ul>
<li><code>disabled</code>: Boolean attribute indicating whether the option is disabled.</li>
<li><code>label</code>: Provides a label for the option. If omitted, it defaults to the option’s text content.</li>
<li><code>selected</code>: Boolean attribute indicating whether the option is selected by default.</li>
<li><code>value</code>: The value submitted to the server when the option is selected. If omitted, it defaults to the option’s text content.</li>
</ul>
<p>The <code>&lt;optgroup&gt;</code> tag is used to group related options within a <code>&lt;select&gt;</code> element:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Pets:</span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;pets&quot;</span> <span class="attr">multiple</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;Four-legged pets&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;dog&quot;</span>&gt;</span>Dog<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;cat&quot;</span>&gt;</span>Cat<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;Birds&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;parrot&quot;</span>&gt;</span>Parrot<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;thrush&quot;</span>&gt;</span>Thrush<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the <code>&lt;select&gt;</code> dropdown uses <code>&lt;optgroup&gt;</code> to organize options into two categories, each with its own label. </p>
<p>Its attribute are as follows:</p>
<ul>
<li><code>disabled</code>: A boolean setting that determines whether the group is disabled. When enabled, all menu items in the group are unselectable.</li>
<li><code>label</code>: The title for the menu item group.</li>
</ul>
<h2 id="lt-datalist-gt"><a href="#lt-datalist-gt" class="headerlink" title="&lt;datalist&gt;"></a><code>&lt;datalist&gt;</code></h2><p>The <code>&lt;datalist&gt;</code> element is a container used to provide a list of options for an associated input element, typically for generating input suggestions. It uses <code>&lt;option&gt;</code> elements to define each menu item.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;ice-cream-choice&quot;</span>&gt;</span>Ice Cream:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">list</span>=<span class="string">&quot;ice-cream-flavors&quot;</span> <span class="attr">id</span>=<span class="string">&quot;ice-cream-choice&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ice-cream-choice&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;ice-cream-flavors&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Chocolate&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Coconut&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Mint&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Strawberry&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Vanilla&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the code above, the <code>&lt;input&gt;</code> element creates a text input box where users can enter text. The <code>list</code> attribute of <code>&lt;input&gt;</code> specifies the <code>id</code> of the associated <code>&lt;datalist&gt;</code>. The <code>&lt;datalist&gt;</code> provides suggestions as a dropdown menu when the user interacts with the input box. It also auto-filters the options based on the user’s input; for example, typing “Van” will display only “Vanilla.”</p>
<p>Note that <code>&lt;option&gt;</code> elements do not require closing tags in this context.</p>
<p>The <code>&lt;option&gt;</code> tag can also include a <code>label</code> attribute for additional description. In Chrome, this label appears below the value in smaller text.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;ide&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Brackets&quot;</span> <span class="attr">label</span>=<span class="string">&quot;by Adobe&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Coda&quot;</span> <span class="attr">label</span>=<span class="string">&quot;by Panic&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, Chrome displays “Brackets” with “by Adobe” in smaller text below it in the dropdown list.</p>
<h2 id="lt-textarea-gt"><a href="#lt-textarea-gt" class="headerlink" title="&lt;textarea&gt;"></a><code>&lt;textarea&gt;</code></h2><p>The <code>&lt;textarea&gt;</code> element is a block-level element used to create a multi-line text input area.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;story&quot;</span> <span class="attr">name</span>=<span class="string">&quot;story&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;5&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;33&quot;</span>&gt;</span></span><br><span class="line">This is a long story.</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This code creates a text area that is 5 rows high and 33 columns wide.</p>
<p>Attributes for <code>&lt;textarea&gt;</code> include:</p>
<ul>
<li><code>autofocus</code>: Boolean attribute that determines if the element should automatically gain focus.</li>
<li><code>cols</code>: Width of the text area in characters (default is 20).</li>
<li><code>dir</code>: Text direction, can be “ltr” (left-to-right), “rtl” (right-to-left), or “auto” (determined by browser).</li>
<li><code>disabled</code>: Boolean attribute that disables the element.</li>
<li><code>form</code>: Associates the text area with a specific form by <code>id</code>.</li>
<li><code>maxlength</code>: Maximum number of characters allowed (unlimited if not specified).</li>
<li><code>minlength</code>: Minimum number of characters required.</li>
<li><code>name</code>: Name of the text area.</li>
<li><code>placeholder</code>: Placeholder text shown when the text area is empty.</li>
<li><code>readonly</code>: Boolean attribute that makes the text area read-only.</li>
<li><code>required</code>: Boolean attribute that makes the text area required.</li>
<li><code>rows</code>: Height of the text area in rows.</li>
<li><code>spellcheck</code>: Enables or disables browser spell checking (true, default, or false).</li>
<li><code>wrap</code>: Determines text wrapping behavior—<code>hard</code> (insert line breaks), <code>soft</code> (wraps but no line breaks), or <code>off</code> (no wrapping).</li>
</ul>
<h2 id="lt-output-gt"><a href="#lt-output-gt" class="headerlink" title="&lt;output&gt;"></a><code>&lt;output&gt;</code></h2><p>The <code>&lt;output&gt;</code> tag is an inline element used to display the result of a user action.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;a&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>&gt;</span> +</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;b&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>&gt;</span> =</span><br><span class="line"><span class="tag">&lt;<span class="name">output</span> <span class="attr">name</span>=<span class="string">&quot;result&quot;</span>&gt;</span>20<span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Attributes:</p>
<ul>
<li><code>for</code>: Associates with the id of the control, representing the result of that control’s operation.</li>
<li><code>form</code>: Associates with the id of a form.</li>
<li><code>name</code>: Name of the control.</li>
</ul>
<h2 id="lt-progress-gt"><a href="#lt-progress-gt" class="headerlink" title="&lt;progress&gt;"></a><code>&lt;progress&gt;</code></h2><p>The <code>&lt;progress&gt;</code> tag is an inline element that represents the completion progress of a task, typically displayed as a progress bar.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">value</span>=<span class="string">&quot;70&quot;</span>&gt;</span> 70% <span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Attributes:</p>
<ul>
<li><code>max</code>: The maximum value of the progress bar, must be a positive number. Default is 1.</li>
<li><code>value</code>: The current value of the progress bar. Must be between 0 and the <code>max</code> value. If <code>max</code> is omitted, this value should be between 0 and 1. If omitted, the progress bar will appear as indeterminate.</li>
</ul>
<h2 id="lt-meter-gt"><a href="#lt-meter-gt" class="headerlink" title="&lt;meter&gt;"></a><code>&lt;meter&gt;</code></h2><p>The <code>&lt;meter&gt;</code> tag is an inline element used to display a value within a known range, suitable for showing progress, disk usage, battery level, etc. It is generally displayed as a non-scrolling gauge.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The oven&#x27;s current temperature is <span class="tag">&lt;<span class="name">meter</span> <span class="attr">min</span>=<span class="string">&quot;200&quot;</span> <span class="attr">max</span>=<span class="string">&quot;500&quot;</span> <span class="attr">value</span>=<span class="string">&quot;350&quot;</span>&gt;</span> 350 degrees<span class="tag">&lt;/<span class="name">meter</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The code above displays a gauge where the left end represents 200, the right end represents 500, and the current position is at 350.</p>
<p>Note that the child elements of the <code>&lt;meter&gt;</code> tag are typically not displayed. They only appear if the browser does not support the <code>&lt;meter&gt;</code> element.</p>
<p>Attributes:</p>
<ul>
<li><code>min</code>: The lower bound of the range, must be less than <code>max</code>. Defaults to 0 if omitted.</li>
<li><code>max</code>: The upper bound of the range, must be greater than <code>min</code>. Defaults to 1 if omitted.</li>
<li><code>value</code>: The current value, must be between <code>min</code> and <code>max</code>. Defaults to 0 if omitted.</li>
<li><code>low</code>: The threshold for the “low” range, must be greater than <code>min</code> and less than <code>high</code> and <code>max</code>. Defaults to <code>min</code> if omitted.</li>
<li><code>high</code>: The threshold for the “high” range, must be less than <code>max</code> and greater than <code>low</code> and <code>min</code>. Defaults to <code>max</code> if omitted.</li>
<li><code>optimum</code>: The optimal value, must be between <code>min</code> and <code>max</code>. It indicates the best range when used with <code>low</code> and <code>high</code>. Defaults to the midpoint between <code>min</code> and <code>max</code> if omitted.</li>
<li><code>form</code>: Associates with the id of a form.</li>
</ul>
<p>In Chrome, the meter bar is color-coded: green for good, yellow for average, and red for poor conditions.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meter</span> <span class="attr">id</span>=<span class="string">&quot;fuel&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fuel&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">low</span>=<span class="string">&quot;33&quot;</span> <span class="attr">high</span>=<span class="string">&quot;66&quot;</span> <span class="attr">optimum</span>=<span class="string">&quot;80&quot;</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">    at 50/100</span><br><span class="line"><span class="tag">&lt;/<span class="name">meter</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the meter is divided into three segments: 0–32, 33–65, and 66–100. Since <code>optimum</code> is 80, the ranges are color-coded as follows: less than 33 is red, between 33 and 65 is yellow, and greater than 65 is green.</p>
<h2 id="Reference-Links"><a href="#Reference-Links" class="headerlink" title="Reference Links"></a>Reference Links</h2><ul>
<li><a href="https://webkit.org/blog/7099/html-interactive-form-validation/"><font style="color:rgb(73, 73, 73);">HTML Interactive Form Validation</font></a><font style="color:rgb(73, 73, 73);">, by Chris Dumez</font></li>
</ul>
<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/form">https://wangdoc.com/html/form</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Elements</title>
    <url>/2024/06/28/html-elements/</url>
    <content><![CDATA[<p>This chapter introduces some recently adopted standard tags.</p>
<h2 id="lt-dialog-gt"><a href="#lt-dialog-gt" class="headerlink" title="&lt;dialog&gt;"></a><code>&lt;dialog&gt;</code></h2><h3 id="Basic-Usage"><a href="#Basic-Usage" class="headerlink" title="Basic Usage"></a>Basic Usage</h3><p>The <code>&lt;dialog&gt;</code> tag represents a dialog box that can be closed.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dialog</span>&gt;</span></span><br><span class="line">  Hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The above code shows a simple dialog box.</p>
<p>By default, the dialog is hidden and does not display on the webpage. To make the dialog visible, you must add the <code>open</code> attribute.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dialog</span> <span class="attr">open</span>&gt;</span></span><br><span class="line">  Hello world</span><br><span class="line"><span class="tag">&lt;/<span class="name">dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The above code will display a box on the webpage with the content “Hello world.”</p>
<p>Inside a <code>&lt;dialog&gt;</code> element, you can place other HTML elements.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dialog</span> <span class="attr">open</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;dialog&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;foo&quot;</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the dialog contains an input field and a submit button.</p>
<p>Note that in the example above, setting the form’s <code>method</code> attribute to “dialog” means that when the submit button is clicked, the dialog will disappear. However, the form will not be submitted to the server; instead, the browser will set the form element’s <code>returnValue</code> property to the value attribute of the Submit button (in this case, “foo”).</p>
<h3 id="JavaScript-API"><a href="#JavaScript-API" class="headerlink" title="JavaScript API"></a>JavaScript API</h3><p>The <code>&lt;dialog&gt;</code> element provides a JavaScript API with two methods: <code>Dialog.showModal()</code> and <code>Dialog.close()</code>, used to open and close the dialog.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> modal = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;dialog&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display the dialog, equivalent to adding the open attribute</span></span><br><span class="line">modal.<span class="title function_">showModal</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close the dialog, equivalent to removing the open attribute</span></span><br><span class="line">modal.<span class="title function_">close</span>();</span><br></pre></td></tr></table></figure>
<p>You can provide a close button that triggers the <code>Dialog.close()</code> method to close the dialog.</p>
<p>The <code>Dialog.close()</code> method can accept a string parameter to pass information. The <code>returnValue</code> property of the <code>&lt;dialog&gt;</code> interface can read this string. Otherwise, <code>returnValue</code> defaults to the value attribute of the submit button.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">modal.<span class="title function_">close</span>(<span class="string">&#x27;Accepted&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(modal.<span class="property">returnValue</span>); <span class="comment">// &quot;Accepted&quot;</span></span><br></pre></td></tr></table></figure>
<p>When <code>Dialog.showModal()</code> is called, a transparent overlay appears to prevent user interaction with content outside the dialog. CSS provides the <code>::backdrop</code> pseudo-class to style this overlay, allowing you to make it visible.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">dialog &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.6rem</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1em</span> black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dialog<span class="selector-pseudo">::backdrop</span> &#123;</span><br><span class="line">  <span class="comment">/* Make the backdrop a semi-transparent black */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The code above styles the <code>&lt;dialog&gt;</code> element and changes the dialog’s overlay to a semi-transparent gray.</p>
<p>The <code>&lt;dialog&gt;</code> element also has a <code>Dialog.show()</code> method that opens the dialog without the overlay, allowing users to interact with the content outside the dialog.</p>
<h3 id="Events"><a href="#Events" class="headerlink" title="Events"></a>Events</h3><p>The <code>&lt;dialog&gt;</code> element has two events that can be listened to:</p>
<ul>
<li><code>close</code>: Triggered when the dialog is closed.</li>
<li><code>cancel</code>: Triggered when the dialog is closed by pressing the Esc key.</li>
</ul>
<p>To close the dialog when the user clicks the overlay, you can use the following code:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">modal.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (event.<span class="property">target</span> === modal) &#123;</span><br><span class="line">    modal.<span class="title function_">close</span>(<span class="string">&#x27;cancelled&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="lt-details-gt-and-lt-summary-gt"><a href="#lt-details-gt-and-lt-summary-gt" class="headerlink" title="&lt;details&gt; and &lt;summary&gt;"></a><code>&lt;details&gt;</code> and <code>&lt;summary&gt;</code></h2><h3 id="Basic-Usage-1"><a href="#Basic-Usage-1" class="headerlink" title="Basic Usage"></a>Basic Usage</h3><p>The <code>&lt;details&gt;</code> tag is used to create a collapsible section, which the browser will display in a collapsed state. By default, the content inside the <code>&lt;details&gt;</code> tag will be collapsed, showing only a summary with a triangle indicator.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">  This is some explanatory text.</span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In the browser, the above code will show as:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">▶ Details</span><br></pre></td></tr></table></figure>
<p>Clicking on “Details” will expand the text to show:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">▼ Details</span><br><span class="line">This is some explanatory text.</span><br></pre></td></tr></table></figure>
<p>Clicking again will collapse the text.</p>
<p>The <code>open</code> attribute on the <code>&lt;details&gt;</code> tag allows you to open it by default:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span> <span class="attr">open</span>&gt;</span></span><br><span class="line">  This is some explanatory text.</span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>In this case, the section will be expanded when the page loads.</p>
<p>The <code>&lt;summary&gt;</code> tag is used to customize the title of the collapsible content:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span>This is the title<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  This is some explanatory text.</span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This will display as:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">▶ This is the title</span><br></pre></td></tr></table></figure>
<p>Clicking on the title will expand the section to show:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">▼ This is the title</span><br><span class="line">This is some explanatory text.</span><br></pre></td></tr></table></figure>
<p>You can use CSS to change the default arrow using <code>summary::-webkit-details-marker</code>:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">summary</span>::-webkit-details-marker &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://example.com/foo.svg</span>);</span><br><span class="line">  <span class="attribute">color</span>: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Alternatively, you can hide the default arrow and use a different indicator:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">summary</span>::-webkit-details-marker &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">summary</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;\2714&quot;</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#696f7c</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="JavaScript-API-1"><a href="#JavaScript-API-1" class="headerlink" title="JavaScript API"></a>JavaScript API</h3><p>You can check if a <code>&lt;details&gt;</code> element is open or closed using the <code>open</code> property:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> details = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;details&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (details.<span class="property">open</span>) &#123;</span><br><span class="line">  <span class="comment">// Expanded state</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">// Collapsed state</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The <code>toggle</code> event is fired whenever the <code>&lt;details&gt;</code> element is opened or closed:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">details.<span class="title function_">addEventListener</span>(<span class="string">&#x27;toggle&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (details.<span class="property">open</span>) &#123;</span><br><span class="line">    <span class="comment">// Expanded state</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// Collapsed state</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="Reference-Links"><a href="#Reference-Links" class="headerlink" title="Reference Links"></a>Reference Links</h2><ul>
<li><a href="https://keithjgrant.com/posts/2018/meet-the-new-dialog-element/"><font style="color:rgb(73, 73, 73);">Meet the New Dialog Element</font></a><font style="color:rgb(73, 73, 73);">, Keith J. Grant</font></li>
<li><a href="https://blog.logrocket.com/the-dialog-element-the-way-to-create-tomorrows-modal-windows-f1d4ab14380b"><font style="color:rgb(73, 73, 73);">The dialog element: The way to create tomorrow’s modal windows</font></a><font style="color:rgb(73, 73, 73);">, Abhishek Jakhar</font></li>
<li><a href="https://css-tricks.com/quick-reminder-that-details-summary-is-the-easiest-way-ever-to-make-an-accordion/"><font style="color:rgb(73, 73, 73);">Details/Summary is the Easiest Way Ever to Make an Accordion</font></a><font style="color:rgb(73, 73, 73);">, Chris Coyier</font></li>
</ul>
<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/elements">https://wangdoc.com/html/elements</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML iframe</title>
    <url>/2024/06/25/html-iframe/</url>
    <content><![CDATA[<p>The <code>&lt;iframe&gt;</code> tag is used to embed other web pages within the current webpage.</p>
<h2 id="Basic-Usage"><a href="#Basic-Usage" class="headerlink" title="Basic Usage"></a>Basic Usage</h2><p>The <code>&lt;iframe&gt;</code> tag creates a specified area to display another web page. It acts as a container element. If the browser does not support <code>&lt;iframe&gt;</code>, it will show the nested content.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.example.com&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">allowfullscreen</span> <span class="attr">sandbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com&quot;</span>&gt;</span>Click to open embedded page<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The code above embeds <code>https://www.example.com</code> within the current webpage, with a width of 100% and a height of 500 pixels. If the browser does not support <code>&lt;iframe&gt;</code>, a link will be displayed instead.</p>
<p>Most browsers support <code>&lt;iframe&gt;</code>, so nested elements can be omitted if desired.</p>
<p><strong>Attributes of </strong><code>&lt;iframe&gt;</code><strong>:</strong></p>
<ul>
<li><code>allowfullscreen</code>: Allows the embedded page to be viewed in fullscreen mode. Requires fullscreen API support; see relevant JavaScript tutorials.</li>
<li><code>frameborder</code>: Defines whether to display a border. Set to 0 for no border (default is 1). It’s better to use CSS for styling instead of this attribute.</li>
<li><code>src</code>: The URL of the page to be embedded.</li>
<li><code>width</code>: The width of the display area.</li>
<li><code>height</code>: The height of the display area.</li>
<li><code>sandbox</code>: Specifies permissions for the embedded page (see below).</li>
<li><code>importance</code>: Sets the loading priority of the embedded page. Options include <code>high</code> (high priority), <code>low</code> (low priority), and <code>auto</code> (browser decides).</li>
<li><code>name</code>: The name of the embedded window, used with the <code>target</code> attributes of <code>&lt;a&gt;</code>, <code>&lt;form&gt;</code>, and <code>&lt;base&gt;</code>.</li>
<li><code>referrerpolicy</code>: Configures the <code>Referer</code> header in HTTP requests to the embedded page. See the documentation for the <code>&lt;a&gt;</code> tag for more details.</li>
</ul>
<h2 id="sandbox-Attribute"><a href="#sandbox-Attribute" class="headerlink" title="sandbox Attribute"></a><code>sandbox</code> Attribute</h2><p>The <code>sandbox</code> attribute provides a way to impose restrictions on an embedded web page within an <code>&lt;iframe&gt;</code>, essentially creating a security “sandbox” to control what the embedded content is allowed to do.</p>
<p><strong>Basic Usage:</strong><br>By default, an embedded page has full permissions, including executing scripts, submitting forms, and opening new windows. To mitigate security risks, especially if the embedded page comes from a different site, the <code>sandbox</code> attribute can be used to set specific restrictions.</p>
<p>The <code>sandbox</code> attribute can be used as a boolean attribute, meaning it enables all restrictions by default:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.example.com&quot;</span> <span class="attr">sandbox</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>Customizing Permissions:</strong><br>You can also specify particular permissions with the <code>sandbox</code> attribute, enabling only certain actions:</p>
<ul>
<li><code>allow-forms</code>: Allows form submission.</li>
<li><code>allow-modals</code>: Permits modal dialogs, such as <code>window.alert()</code>.</li>
<li><code>allow-popups</code>: Enables the use of <code>window.open()</code> to create popups.</li>
<li><code>allow-popups-to-escape-sandbox</code>: Allows popups to bypass sandbox restrictions.</li>
<li><code>allow-orientation-lock</code>: Permits scripts to lock the screen orientation (landscape or portrait).</li>
<li><code>allow-pointer-lock</code>: Allows the use of Pointer Lock API to lock the mouse movement.</li>
<li><code>allow-presentation</code>: Enables the use of Presentation API.</li>
<li><code>allow-same-origin</code>: Allows the embedded content to be treated as coming from the same origin, bypassing cross-origin restrictions.</li>
<li><code>allow-scripts</code>: Permits script execution (but does not allow popups).</li>
<li><code>allow-storage-access-by-user-activation</code>: When combined with <code>allow-same-origin</code>, allows access to the parent window’s cookies via the Storage Access API after user activation.</li>
<li><code>allow-top-navigation</code>: Allows navigation of the top-level window.</li>
<li><code>allow-top-navigation-by-user-activation</code>: Allows navigation of the top-level window only if activated by the user.</li>
<li><code>allow-downloads-without-user-activation</code>: Allows downloads to start without user activation.</li>
</ul>
<hr>
<p><strong>Important Note:</strong><br>Avoid setting both <code>allow-scripts</code> and <code>allow-same-origin</code> together, as this would allow the embedded content to potentially modify or remove the <code>sandbox</code> attribute itself, compromising the sandbox’s security.</p>
<h2 id="loading-Attribute"><a href="#loading-Attribute" class="headerlink" title="loading Attribute"></a><code>loading</code> Attribute</h2><p>The <code>loading</code> attribute controls when an <code>&lt;iframe&gt;</code> should load its content, which can help save bandwidth by deferring loading until necessary.</p>
<p><strong>Attribute Values:</strong></p>
<ul>
<li><code>auto</code>: The default behavior, equivalent to not using the <code>loading</code> attribute.</li>
<li><code>lazy</code>: Loads the <code>&lt;iframe&gt;</code> only when it scrolls into view.</li>
<li><code>eager</code>: Loads the <code>&lt;iframe&gt;</code> immediately, regardless of its position on the page.</li>
</ul>
<p>Example for lazy loading:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://example.com&quot;</span> <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<p><strong>Important Note:</strong><br>The <code>loading</code> attribute has no effect if the <code>&lt;iframe&gt;</code> is hidden. Chrome considers an <code>&lt;iframe&gt;</code> hidden if any of the following conditions are met:</p>
<ul>
<li>Width and height are 4 pixels or less.</li>
<li>Style is set to <code>display: none</code> or <code>visibility: hidden</code>.</li>
<li>Positioned off-screen with negative X or Y coordinates.</li>
</ul>
<p>Link to original article:</p>
<p><a href="https://wangdoc.com/html/iframe">https://wangdoc.com/html/iframe</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Instant Tutorial</title>
    <url>/2024/06/29/html-instant-tutorial/</url>
    <content><![CDATA[<p>HTML is the foundation of web development.</p>
<p>This tutorial provides a comprehensive introduction to HTML, serving both as an entry-level guide for beginners and a reference manual for looking up syntax.</p>
<p>Table of Content</p>
<p><a href="https://www.linjiangxiong.com/2024/06/13/html-introduction/">Introduction to HTML</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/14/html-url-introduction/">Introduction to HTML URL</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/15/html-element-attributes/">HTML Element Attributes</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/16/html-encode/">Understanding Text Encoding and Character Representation in HTML</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/17/html-semantic-tags/">HTML Semantic Tags</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/18/html-text/">HTML Text</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/19/html-lists/">HTML List</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/20/html-image/">HTML Image</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/21/html-a-tag/">HTML <code>&lt;a&gt;</code> Tag</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/22/html-link-tag/">HTML <code>&lt;link</code>&gt; Tag</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/23/html-script-and-noscript/">The <code>&lt;script&gt;</code> and <code>&lt;noscript&gt;</code> Tags</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/24/html-multimedia/">HTML Multimedia</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/25/html-iframe/">HTML iframe</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/26/html-table/">HTML Table</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/27/html-form/">HTML Form</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/28/html-elements/">HTML Elements</a></p>
<p><a href="https://www.linjiangxiong.com/2024/06/30/html-editors/">HTML Editors</a></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML Editors</title>
    <url>/2024/06/30/html-editors/</url>
    <content><![CDATA[<h2 id="Recommended-HTML-Editors"><a href="#Recommended-HTML-Editors" class="headerlink" title="Recommended HTML Editors"></a>Recommended HTML Editors</h2><p>For editing HTML, using a professional HTML editor can be very helpful. Here are a few commonly recommended editors:</p>
<ul>
<li><strong>VS Code</strong>: <a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></li>
<li><strong>Sublime Text</strong>: <a href="http://www.sublimetext.com/">http://www.sublimetext.com/</a></li>
</ul>
<p>You can download the software from their official websites and follow the installation instructions.</p>
<p>Next, we’ll demonstrate how to use VS Code to create an HTML file.</p>
<h2 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h2><p>Visual Studio Code (VS Code) is a code editor developed by Microsoft. It is open-source and supports Windows, Linux, and macOS. The editor includes built-in extension management features.</p>
<p><strong>Step 1: Create an HTML file</strong></p>
<p>After installing VS Code, select “File (F) -&gt; New File (N)”. Enter the following code into the new file:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML Instant Tutorial - Johnson Lin (www.linjiangxiong.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Introduction to HTML<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/image/2024/06/2024063001.png" alt=""></p>
<p><strong>Step 2: Save the File as an HTML Document</strong></p>
<p>Next, select “File (F) -&gt; Save As (A)” and name the file <code>test.html</code>. You can use either the <code>.htm</code> or <code>.html</code> extension when saving HTML files; there’s no difference between them, so it’s best to use <code>.html</code> for consistency.</p>
<p><img src="/image/2024/06/2024063002.png" alt=""></p>
<p>Save the file in an easily memorable folder, such as <code>html-study</code>.</p>
<p><strong>Step 3: Open the HTML File in a Browser</strong></p>
<p>Open the file with default browser or another browser of your choice. The output in your browser should look something like this:</p>
<p><img src="/image/2024/06/2024063003.png" alt=""></p>
<p><strong>P.S.</strong> You can install the Live Preview extension in VS Code to view your code in real-time.</p>
<p>To install the Live Preview extension in Visual Studio Code, follow these steps:</p>
<ol>
<li><strong>Open VS Code</strong>: Launch Visual Studio Code on your computer.</li>
<li><strong>Go to Extensions</strong>: Click on the Extensions view icon in the Activity Bar on the side of the window or press <code>Ctrl+Shift+X</code> (<code>Cmd+Shift+X</code> on macOS).</li>
<li><strong>Search for Live Preview</strong>: In the Extensions search bar, type “Live Preview”.</li>
<li><strong>Install the Extension</strong>: Find the Live Preview extension by Microsoft in the search results and click the Install button.</li>
</ol>
<p><img src="/image/2024/06/2024063004.png" alt=""></p>
<ol>
<li><strong>Open a File</strong>: After installation, open an HTML file or any file that you want to preview.</li>
<li><strong>Start Live Preview</strong>: Click on the “Show Preview” button in the status bar at the top-right corner of the window or right-click in the editor window and select the “Show Preview” option.</li>
</ol>
<p>This will allow you to see live updates of your code as you edit it.</p>
<p><img src="/image/2024/06/2024063005.png" alt=""></p>
<p>Of course, you should now see a live preview of your file in a new browser tab, which will automatically update as you make changes in VS Code.</p>
<p><img src="/image/2024/06/2024063006.png" alt=""></p>
]]></content>
      <categories>
        <category>HTML Tutorial</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>What is JSON? A Beginner&#39;s Guide to Understanding This Essential Data Format</title>
    <url>/2024/06/06/json-intro/</url>
    <content><![CDATA[<p>If you’ve spent any time around web development or data science, you’ve likely heard the term “JSON” thrown around. But what exactly is JSON, and why is it so important in today’s digital world? In this blog post, we’ll break down what JSON is, how it works, and why it’s such a valuable tool for developers and data enthusiasts alike.</p>
<h2 id="What-is-JSON"><a href="#What-is-JSON" class="headerlink" title="What is JSON?"></a>What is JSON?</h2><p>JSON stands for <strong>JavaScript Object Notation</strong>. Despite its name, JSON isn’t exclusive to JavaScript; it’s a language-independent, lightweight data-interchange format that’s easy for humans to read and write, and easy for machines to parse and generate. JSON has become a standard format for data exchange, especially in web applications.</p>
<h2 id="The-Structure-of-JSON"><a href="#The-Structure-of-JSON" class="headerlink" title="The Structure of JSON"></a>The Structure of JSON</h2><p>At its core, JSON is a way to represent data as text. It uses a simple structure based on key-value pairs, which makes it both intuitive and versatile. Here’s an example of what a basic JSON object looks like:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Johnson Lin&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;isStudent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;courses&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;Math&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Science&quot;</span><span class="punctuation">,</span> <span class="string">&quot;History&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;street&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1523 Main St&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Anytown&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CA&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;zip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;12345&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>In this example:</p>
<ul>
<li><strong>Key-value pairs</strong>: Each key is a string (e.g., <code>&quot;name&quot;</code>, <code>&quot;age&quot;</code>, <code>&quot;isStudent&quot;</code>), and each value can be a string, number, boolean, array, or even another JSON object.</li>
<li><strong>Arrays</strong>: JSON supports arrays, which are ordered lists of values. In the example, <code>&quot;courses&quot;</code> is an array of strings.</li>
<li><strong>Nested objects</strong>: JSON objects can contain other JSON objects. The <code>&quot;address&quot;</code> key holds an object with its own key-value pairs.</li>
</ul>
<h2 id="Why-JSON-is-So-Popular"><a href="#Why-JSON-is-So-Popular" class="headerlink" title="Why JSON is So Popular"></a>Why JSON is So Popular</h2><ol>
<li><strong>Simplicity and Readability</strong>: JSON’s straightforward syntax makes it easy to write and understand, even for those new to programming.</li>
<li><strong>Language Independence</strong>: Although JSON originated from JavaScript, it’s supported by virtually all programming languages, including Python, Ruby, Java, and C#. This makes JSON an excellent choice for data interchange between systems written in different languages.</li>
<li><strong>Wide Adoption</strong>: JSON is widely used in web APIs (Application Programming Interfaces) because it’s lightweight and easy to parse. Many modern web services, like those from Google, Facebook, and Twitter, rely on JSON to transmit data.</li>
</ol>
<h2 id="Common-Use-Cases-for-JSON"><a href="#Common-Use-Cases-for-JSON" class="headerlink" title="Common Use Cases for JSON"></a>Common Use Cases for JSON</h2><ul>
<li><strong>Web APIs</strong>: JSON is the go-to format for APIs because of its simplicity and compatibility with web technologies.</li>
<li><strong>Configuration Files</strong>: Many software applications use JSON to store configuration settings because it’s easy to read and modify.</li>
<li><strong>Data Storage</strong>: While not a replacement for databases, JSON is often used to store small amounts of data, especially in NoSQL databases like MongoDB, which stores data in JSON-like documents.</li>
</ul>
<h2 id="Working-with-JSON"><a href="#Working-with-JSON" class="headerlink" title="Working with JSON"></a>Working with JSON</h2><p>To work with JSON, you’ll need to know how to create, parse, and manipulate JSON data. Here’s a quick overview of how you might do this in JavaScript:</p>
<ul>
<li><strong>Creating JSON</strong>: You can create JSON directly in your code as shown in the example above.</li>
<li><p><strong>Parsing JSON</strong>: If you receive JSON data as a string (e.g., from an API), you can parse it into a JavaScript object using <code>JSON.parse()</code>:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> jsonString = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;Johnson Lin&quot;,&quot;age&quot;:28&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> jsonObject = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonString);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Stringifying JSON</strong>: Conversely, if you have a JavaScript object that you want to send as JSON, you can convert it to a JSON string using <code>JSON.stringify()</code>:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> jsonObject = &#123; <span class="attr">name</span>: <span class="string">&quot;Johnson Lin&quot;</span>, <span class="attr">age</span>: <span class="number">28</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(jsonObject);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>JSON is an essential tool in modern web development and data exchange. Its simplicity, readability, and broad support across different programming languages make it a preferred format for transmitting data between clients and servers. Whether you’re developing a web application, configuring software, or handling data in various systems, understanding JSON will undoubtedly prove to be a valuable skill.</p>
<p>If you’re new to JSON, I encourage you to play around with creating and parsing JSON objects. The more you work with it, the more you’ll appreciate its utility and flexibility. Happy coding!</p>
]]></content>
      <categories>
        <category>JSON Tutorial</category>
      </categories>
      <tags>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON vs. XML: Which Data Format Should You Use?</title>
    <url>/2024/06/08/json-vs-xml/</url>
    <content><![CDATA[<p>When it comes to data interchange formats, two names often come up: JSON and XML. Both are widely used, but they serve different purposes and have distinct advantages and disadvantages. In this blog post, we’ll compare JSON and XML, helping you understand which format might be better suited for your needs.</p>
<h2 id="What-Are-JSON-and-XML"><a href="#What-Are-JSON-and-XML" class="headerlink" title="What Are JSON and XML?"></a>What Are JSON and XML?</h2><ul>
<li><strong>JSON (JavaScript Object Notation)</strong>: A lightweight, text-based data format that’s easy for humans to read and write, and easy for machines to parse and generate. JSON has become the standard format for data exchange, especially in web applications.</li>
<li><strong>XML (eXtensible Markup Language)</strong>: A flexible, structured document format that can represent complex data structures. XML has been around longer than JSON and is often used in situations where data needs to be represented in a hierarchical, readable format.</li>
</ul>
<h2 id="Structure-and-Syntax"><a href="#Structure-and-Syntax" class="headerlink" title="Structure and Syntax"></a>Structure and Syntax</h2><ul>
<li><strong>JSON</strong>:</li>
</ul>
<p>Example:<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Johnson Lin&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;isStudent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>Uses key-value pairs for data representation.</li>
<li>More compact and easier to read.</li>
<li>Syntax is similar to JavaScript objects, making it intuitive for developers.<ul>
<li><strong>XML</strong>:</li>
</ul>
</li>
</ul>
<p>Example:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Johnson Lin<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">age</span>&gt;</span>28<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">isStudent</span>&gt;</span>false<span class="tag">&lt;/<span class="name">isStudent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>Uses a tree structure with nested elements.</li>
<li>Can include attributes in tags to store additional information.</li>
<li>More verbose due to the use of opening and closing tags.</li>
</ul>
<h2 id="Readability"><a href="#Readability" class="headerlink" title="Readability"></a>Readability</h2><ul>
<li><strong>JSON</strong> is generally more readable for humans, especially for those familiar with programming. Its clean and minimalistic structure makes it easier to spot errors and understand the data.</li>
<li><strong>XML</strong>, while still human-readable, can become cluttered with nested elements and attributes, especially in more complex documents. This verbosity can make XML harder to read and maintain.</li>
</ul>
<h2 id="Flexibility"><a href="#Flexibility" class="headerlink" title="Flexibility"></a>Flexibility</h2><ul>
<li><strong>JSON</strong> is best suited for data that can be represented as key-value pairs. It’s ideal for situations where simplicity and ease of use are priorities.</li>
<li><strong>XML</strong> offers more flexibility in representing complex data structures. It supports attributes, mixed content (elements that contain both text and child elements), and can be used to define custom tags, making it a better choice for documents that require a more detailed and hierarchical structure.</li>
</ul>
<h2 id="Data-Types"><a href="#Data-Types" class="headerlink" title="Data Types"></a>Data Types</h2><ul>
<li><strong>JSON</strong> has a limited set of data types: strings, numbers, arrays, objects, booleans, and null. This simplicity is part of JSON’s appeal, but it can be limiting in some cases.</li>
<li><strong>XML</strong> doesn’t have built-in data types. Everything in XML is treated as a string, so you’ll need to use additional tools or schemas (like XSD) to enforce data types.</li>
</ul>
<h2 id="Parsing-and-Performance"><a href="#Parsing-and-Performance" class="headerlink" title="Parsing and Performance"></a>Parsing and Performance</h2><ul>
<li><strong>JSON</strong> is typically faster to parse and generate. Many modern programming languages have built-in support for JSON, which means parsing JSON data can be done with minimal code and high efficiency.</li>
<li><strong>XML</strong> parsing is more resource-intensive due to its complexity and the need to handle namespaces, attributes, and nested elements. While XML parsers are powerful, they require more computational overhead compared to JSON parsers.</li>
</ul>
<h2 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h2><ul>
<li><strong>JSON</strong>:<ul>
<li><strong>APIs</strong>: JSON has become the de facto standard for web APIs due to its simplicity and efficiency.</li>
<li><strong>Configuration Files</strong>: Many applications use JSON for configuration because it’s easy to read and modify.</li>
<li><strong>Data Storage</strong>: JSON is widely used in NoSQL databases like MongoDB.</li>
</ul>
</li>
<li><strong>XML</strong>:<ul>
<li><strong>Document Representation</strong>: XML is ideal for representing documents where the order and structure of elements are important, such as in legal or scientific documents.</li>
<li><strong>SOAP Web Services</strong>: XML is still commonly used in SOAP (Simple Object Access Protocol) for enterprise-level web services.</li>
<li><strong>Data Exchange</strong>: XML is often used in industries like finance and healthcare, where complex data structures and schemas are required.</li>
</ul>
</li>
</ul>
<h2 id="Conclusion-JSON-or-XML"><a href="#Conclusion-JSON-or-XML" class="headerlink" title="Conclusion: JSON or XML?"></a>Conclusion: JSON or XML?</h2><ul>
<li><strong>Choose JSON</strong> if you need a simple, fast, and efficient way to exchange data between systems, particularly in web development. Its readability and ease of use make it a great choice for most applications.</li>
<li><strong>Choose XML</strong> if you’re working with complex documents or need to represent detailed hierarchical data structures. XML’s flexibility and power make it suitable for applications where data integrity and structure are critical.</li>
</ul>
<p>In the end, the choice between JSON and XML depends on the specific needs of your project. For most modern web applications, JSON is the preferred format. However, XML remains relevant in scenarios where its capabilities are essential. Understanding the strengths and weaknesses of both formats will help you make the best decision for your data interchange needs.</p>
]]></content>
      <categories>
        <category>JSON Tutorial</category>
      </categories>
      <tags>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>Understanding JSON Syntax: A Quick Guide for Beginners</title>
    <url>/2024/06/07/json-syntax/</url>
    <content><![CDATA[<p>If you’re new to web development or data exchange, you’ve probably encountered the term “JSON” and wondered what it means and how it works. JSON, or JavaScript Object Notation, is a lightweight data-interchange format that’s easy for both humans and machines to read and write. In this blog post, we’ll dive into the basics of JSON syntax, helping you understand how to structure and interpret JSON data.</p>
<h2 id="What-is-JSON-Syntax"><a href="#What-is-JSON-Syntax" class="headerlink" title="What is JSON Syntax?"></a>What is JSON Syntax?</h2><p>JSON syntax is the set of rules that define how data is structured in JSON format. It’s designed to be simple and easy to understand, making it a popular choice for exchanging data between web servers and clients. JSON syntax closely resembles the syntax for creating objects in JavaScript, but it can be used independently of JavaScript in virtually any programming language.</p>
<h2 id="Key-Elements-of-JSON-Syntax"><a href="#Key-Elements-of-JSON-Syntax" class="headerlink" title="Key Elements of JSON Syntax"></a>Key Elements of JSON Syntax</h2><ol>
<li><p><strong>Data is in Key-Value Pairs</strong>:</p>
<ul>
<li>In JSON, data is represented as key-value pairs. A key is a string (enclosed in double quotes), followed by a colon, and then the value.</li>
<li><p><strong>Example</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Alice&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">25</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>In this example, <code>&quot;name&quot;</code> and <code>&quot;age&quot;</code> are keys, and <code>&quot;Alice&quot;</code> and <code>25</code> are their corresponding values.</p>
</li>
</ul>
</li>
<li><p><strong>JSON Objects</strong>:</p>
<ul>
<li>JSON objects are collections of key-value pairs, enclosed in curly braces <code>&#123;&#125;</code>. Each key-value pair within an object is separated by a comma.</li>
<li><p><strong>Example</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;firstName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Johnson&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;lastName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Lin&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">28</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>This example represents an object with three properties: <code>firstName</code>, <code>lastName</code>, and <code>age</code>.</p>
</li>
</ul>
</li>
<li><p><strong>JSON Arrays</strong>:</p>
<ul>
<li>JSON arrays are ordered lists of values, enclosed in square brackets <code>[]</code>. The values in an array can be strings, numbers, objects, arrays, or booleans, and they are separated by commas.</li>
<li><p><strong>Example</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;employees&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;Alice&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;Bob&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;Charlie&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Here, <code>&quot;employees&quot;</code> is a key with an array of values: <code>&quot;Alice&quot;</code>, <code>&quot;Bob&quot;</code>, and <code>&quot;Charlie&quot;</code>.</p>
</li>
</ul>
</li>
<li><p><strong>Values Can Be Objects or Arrays</strong>:</p>
<ul>
<li>JSON allows values to be objects or arrays, enabling you to create nested structures.</li>
<li><p><strong>Example</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Alice&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;street&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123 Main St&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Springfield&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hobbies&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;reading&quot;</span><span class="punctuation">,</span> <span class="string">&quot;cycling&quot;</span><span class="punctuation">,</span> <span class="string">&quot;hiking&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>In this example, the <code>&quot;address&quot;</code> key holds another object, while the <code>&quot;hobbies&quot;</code> key holds an array of strings.</p>
</li>
</ul>
</li>
<li><p><strong>Values Can Be Strings, Numbers, Booleans, or Null</strong>:</p>
<ul>
<li>JSON supports multiple data types:<ul>
<li><strong>String</strong>: A sequence of characters, enclosed in double quotes (e.g., <code>&quot;Hello, World!&quot;</code>).</li>
<li><strong>Number</strong>: A numeric value, such as <code>42</code> or <code>3.14</code>.</li>
<li><strong>Boolean</strong>: A value of either <code>true</code> or <code>false</code>.</li>
<li><strong>Null</strong>: A null value, representing the absence of a value.</li>
</ul>
</li>
<li><p><strong>Example</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Introduction to JSON&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;isPublished&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;publisher&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Here, <code>&quot;title&quot;</code> is a string, <code>&quot;pages&quot;</code> is a number, <code>&quot;isPublished&quot;</code> is a boolean, and <code>&quot;publisher&quot;</code> is null.</p>
</li>
</ul>
</li>
</ol>
<h2 id="JSON-Syntax-Rules"><a href="#JSON-Syntax-Rules" class="headerlink" title="JSON Syntax Rules"></a>JSON Syntax Rules</h2><ul>
<li><strong>Keys and Strings</strong>: Must be enclosed in double quotes. Single quotes are not allowed in JSON.</li>
<li><strong>Commas</strong>: Used to separate key-value pairs in an object and elements in an array. However, the last pair or element should not have a trailing comma.</li>
<li><strong>Whitespace</strong>: JSON ignores spaces, tabs, and line breaks, making it flexible in terms of formatting. This allows developers to format JSON data for readability.</li>
</ul>
<h2 id="Common-Mistakes-in-JSON-Syntax"><a href="#Common-Mistakes-in-JSON-Syntax" class="headerlink" title="Common Mistakes in JSON Syntax"></a>Common Mistakes in JSON Syntax</h2><ol>
<li><strong>Using Single Quotes for Strings</strong>:<ul>
<li>Incorrect: <code>&#123; &#39;name&#39;: &#39;Alice&#39; &#125;</code></li>
<li>Correct: <code>&#123; &quot;name&quot;: &quot;Alice&quot; &#125;</code></li>
</ul>
</li>
<li><strong>Trailing Commas</strong>:<ul>
<li>Incorrect: <code>&#123; &quot;name&quot;: &quot;Alice&quot;, &#125;</code></li>
<li>Correct: <code>&#123; &quot;name&quot;: &quot;Alice&quot; &#125;</code></li>
</ul>
</li>
<li><strong>Missing Quotation Marks Around Keys</strong>:<ul>
<li>Incorrect: <code>&#123; name: &quot;Alice&quot; &#125;</code></li>
<li>Correct: <code>&#123; &quot;name&quot;: &quot;Alice&quot; &#125;</code></li>
</ul>
</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Understanding JSON syntax is crucial for anyone working in web development or data exchange. By mastering the basic elements of JSON, including key-value pairs, objects, arrays, and the various data types, you’ll be well-equipped to create and manipulate JSON data. Whether you’re working on APIs, configuring applications, or handling data storage, JSON is an indispensable tool that you’ll use repeatedly in your coding journey.<br>With this guide, you should have a solid foundation in JSON syntax, enabling you to write and debug JSON with confidence. Happy coding!</p>
]]></content>
      <categories>
        <category>JSON Tutorial</category>
      </categories>
      <tags>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Use JSON.parse() in JavaScript: A Complete Guide</title>
    <url>/2024/06/09/json-parse/</url>
    <content><![CDATA[<p>When working with web development, especially in JavaScript, you’ll often encounter JSON (JavaScript Object Notation). JSON is a lightweight data interchange format that’s easy for both humans and machines to read and write. One common task is converting JSON data into a JavaScript object, and this is where the <code>JSON.parse()</code> method comes in.</p>
<h2 id="What-is-JSON-parse"><a href="#What-is-JSON-parse" class="headerlink" title="What is JSON.parse()?"></a>What is <code>JSON.parse()</code>?</h2><p><code>JSON.parse()</code> is a method in JavaScript that parses a JSON string, constructing the JavaScript value or object described by the string. It is commonly used to take data received from a web server, usually in JSON format, and convert it into a usable JavaScript object.</p>
<h2 id="Basic-Syntax"><a href="#Basic-Syntax" class="headerlink" title="Basic Syntax"></a>Basic Syntax</h2><p>The basic syntax of <code>JSON.parse()</code> is:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(text);</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>text</strong>: A string that contains JSON data.</li>
<li><strong>obj</strong>: The resulting JavaScript object.</li>
</ul>
<h2 id="Example-1-Parsing-a-Simple-JSON-String"><a href="#Example-1-Parsing-a-Simple-JSON-String" class="headerlink" title="Example 1: Parsing a Simple JSON String"></a>Example 1: Parsing a Simple JSON String</h2><p>Consider the following JSON string:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> jsonString = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;John&quot;, &quot;age&quot;:30, &quot;city&quot;:&quot;New York&quot;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonString);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">name</span>); <span class="comment">// Output: John</span></span><br></pre></td></tr></table></figure><br>In this example:</p>
<ul>
<li>The JSON string represents an object with three properties: <code>name</code>, <code>age</code>, and <code>city</code>.</li>
<li><code>JSON.parse()</code> converts this string into a JavaScript object that can be accessed with <code>user.name</code>, <code>user.age</code>, etc.</li>
</ul>
<h2 id="Example-2-Parsing-Nested-JSON"><a href="#Example-2-Parsing-Nested-JSON" class="headerlink" title="Example 2: Parsing Nested JSON"></a>Example 2: Parsing Nested JSON</h2><p>JSON can also represent complex structures, like nested objects or arrays:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> jsonString = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;John&quot;, &quot;age&quot;:30, &quot;address&quot;:&#123;&quot;city&quot;:&quot;New York&quot;,&quot;zipcode&quot;:&quot;10001&quot;&#125;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonString);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">address</span>.<span class="property">city</span>); <span class="comment">// Output: New York</span></span><br></pre></td></tr></table></figure><br>Here, the <code>address</code> property is an object itself, and <code>JSON.parse()</code> handles the nested structure, allowing you to access <code>user.address.city</code> directly.</p>
<h2 id="Handling-Errors-with-JSON-parse"><a href="#Handling-Errors-with-JSON-parse" class="headerlink" title="Handling Errors with JSON.parse()"></a>Handling Errors with <code>JSON.parse()</code></h2><p>If the JSON string is not valid, <code>JSON.parse()</code> will throw a <code>SyntaxError</code>. For example:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30,&#125;&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">message</span>); <span class="comment">// Output: Expected double-quoted property name in JSON at position 27</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>To prevent your code from crashing due to invalid JSON, always wrap <code>JSON.parse()</code> in a <code>try...catch</code> block when dealing with dynamic content.</p>
<h2 id="Example-3-Using-a-Reviver-Function"><a href="#Example-3-Using-a-Reviver-Function" class="headerlink" title="Example 3: Using a Reviver Function"></a>Example 3: Using a Reviver Function</h2><p><code>JSON.parse()</code> also accepts a second argument, known as a reviver function. This function can modify the result before it’s returned:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> jsonString = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;John&quot;, &quot;birthdate&quot;:&quot;1990-01-01T00:00:00Z&quot;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> user = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonString, <span class="function">(<span class="params">key, value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (key === <span class="string">&quot;birthdate&quot;</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Date</span>(value);</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">birthdate</span>.<span class="title function_">getFullYear</span>()); <span class="comment">// Output: 1990</span></span><br></pre></td></tr></table></figure><br>In this example, the reviver function converts the <code>birthdate</code> string into a JavaScript <code>Date</code> object.</p>
<h2 id="When-to-Use-JSON-parse"><a href="#When-to-Use-JSON-parse" class="headerlink" title="When to Use JSON.parse()"></a>When to Use <code>JSON.parse()</code></h2><ul>
<li><strong>Fetching Data from APIs</strong>: When you receive data from a web API, it is often in JSON format. Use <code>JSON.parse()</code> to convert it into a JavaScript object.</li>
<li><strong>Local Storage</strong>: Data stored in <code>localStorage</code> is saved as a string. To retrieve it as an object, use <code>JSON.parse()</code>.</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p><code>JSON.parse()</code> is a powerful and essential tool in JavaScript for converting JSON strings into usable objects. Whether you’re handling simple data or complex, nested structures, understanding how to use <code>JSON.parse()</code> effectively will greatly enhance your ability to work with data in your applications. Always remember to handle errors properly, especially when working with dynamic data sources.<br>Mastering <code>JSON.parse()</code> ensures you can efficiently and safely manipulate JSON data, making it a crucial skill for any web developer.</p>
]]></content>
      <categories>
        <category>JSON Tutorial</category>
      </categories>
      <tags>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Use JSON.stringify() in JavaScript: A Comprehensive Guide</title>
    <url>/2024/06/10/json-stringify/</url>
    <content><![CDATA[<p>When working with JavaScript, particularly in web development, you’ll often need to send data to a server, store it in local storage, or convert it into a format that’s easy to transmit or save. This is where the <code>JSON.stringify()</code> method comes into play. It’s an essential tool for any developer dealing with JSON (JavaScript Object Notation).</p>
<h2 id="What-is-JSON-stringify"><a href="#What-is-JSON-stringify" class="headerlink" title="What is JSON.stringify()?"></a>What is <code>JSON.stringify()</code>?</h2><p><code>JSON.stringify()</code> is a method in JavaScript that converts a JavaScript object or value to a JSON string. This string can then be transmitted over the web or stored for later use. The method is often used in conjunction with APIs, local storage, and data serialization.</p>
<h2 id="Basic-Syntax"><a href="#Basic-Syntax" class="headerlink" title="Basic Syntax"></a>Basic Syntax</h2><p>The basic syntax of <code>JSON.stringify()</code> is:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(value);</span><br></pre></td></tr></table></figure></p>
<ul>
<li><strong>value</strong>: The JavaScript value, typically an object or array, that you want to convert to a JSON string.</li>
<li><strong>jsonString</strong>: The resulting JSON string.</li>
</ul>
<h2 id="Example-1-Converting-a-Simple-Object-to-JSON"><a href="#Example-1-Converting-a-Simple-Object-to-JSON" class="headerlink" title="Example 1: Converting a Simple Object to JSON"></a>Example 1: Converting a Simple Object to JSON</h2><p>Let’s start with a simple example:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;New York&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonString); <span class="comment">// Output: &#123;&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:30,&quot;city&quot;:&quot;New York&quot;&#125;</span></span><br></pre></td></tr></table></figure><br>In this example:</p>
<ul>
<li>The <code>user</code> object is converted into a JSON string.</li>
<li>The resulting string can be sent to a server or stored in <code>localStorage</code>.</li>
</ul>
<h2 id="Example-2-Converting-Arrays-to-JSON"><a href="#Example-2-Converting-Arrays-to-JSON" class="headerlink" title="Example 2: Converting Arrays to JSON"></a>Example 2: Converting Arrays to JSON</h2><p><code>JSON.stringify()</code> can also handle arrays:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> fruits = [<span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Orange&quot;</span>];</span><br><span class="line"><span class="keyword">let</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(fruits);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonString); <span class="comment">// Output: [&quot;Apple&quot;,&quot;Banana&quot;,&quot;Orange&quot;]</span></span><br></pre></td></tr></table></figure><br>Here, the array of fruits is converted into a JSON string that can be easily transmitted or stored.</p>
<h2 id="Handling-Nested-Objects"><a href="#Handling-Nested-Objects" class="headerlink" title="Handling Nested Objects"></a>Handling Nested Objects</h2><p><code>JSON.stringify()</code> works seamlessly with nested objects:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="attr">address</span>: &#123;</span><br><span class="line">        <span class="attr">city</span>: <span class="string">&quot;New York&quot;</span>,</span><br><span class="line">        <span class="attr">zipcode</span>: <span class="string">&quot;10001&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonString); </span><br><span class="line"><span class="comment">// Output: &#123;&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:30,&quot;address&quot;:&#123;&quot;city&quot;:&quot;New York&quot;,&quot;zipcode&quot;:&quot;10001&quot;&#125;&#125;</span></span><br></pre></td></tr></table></figure><br>The entire object, including the nested <code>address</code> object, is converted into a JSON string.</p>
<h2 id="Example-3-Formatting-JSON-with-space"><a href="#Example-3-Formatting-JSON-with-space" class="headerlink" title="Example 3: Formatting JSON with space"></a>Example 3: Formatting JSON with <code>space</code></h2><p><code>JSON.stringify()</code> has an optional third parameter called <code>space</code> that controls spacing in the resulting JSON string, making it more readable:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;New York&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user, <span class="literal">null</span>, <span class="number">4</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonString);</span><br></pre></td></tr></table></figure><br>The output will be:<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New York&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br>Using the <code>space</code> parameter with a value of <code>4</code> adds indentation, making the JSON string more readable.</p>
<h2 id="Example-4-Using-a-Replacer-Function"><a href="#Example-4-Using-a-Replacer-Function" class="headerlink" title="Example 4: Using a Replacer Function"></a>Example 4: Using a Replacer Function</h2><p><code>JSON.stringify()</code> also allows for a second optional parameter known as a replacer function. This function can be used to modify the values being stringified:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> user = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&quot;New York&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user, <span class="function">(<span class="params">key, value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (key === <span class="string">&quot;city&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">undefined</span>; <span class="comment">// Omits the city property</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonString); <span class="comment">// Output: &#123;&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:30&#125;</span></span><br></pre></td></tr></table></figure><br>In this example, the <code>city</code> property is omitted from the resulting JSON string.</p>
<h2 id="Common-Use-Cases-for-JSON-stringify"><a href="#Common-Use-Cases-for-JSON-stringify" class="headerlink" title="Common Use Cases for JSON.stringify()"></a>Common Use Cases for <code>JSON.stringify()</code></h2><ul>
<li><strong>Sending Data to a Server</strong>: When sending data via HTTP POST, you’ll often need to send it as a JSON string.</li>
<li><strong>Storing Data in Local Storage</strong>: Since <code>localStorage</code> only stores strings, use <code>JSON.stringify()</code> to store objects.</li>
<li><strong>Logging and Debugging</strong>: Convert objects to JSON strings for easy logging and debugging.</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Understanding how to use <code>JSON.stringify()</code> is crucial for any JavaScript developer. Whether you’re sending data to a server, storing it locally, or simply converting objects for logging, <code>JSON.stringify()</code> offers a powerful and flexible way to handle JSON data. By mastering this method, you’ll be better equipped to work with JSON and make your applications more efficient and reliable.</p>
]]></content>
      <categories>
        <category>JSON Tutorial</category>
      </categories>
      <tags>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON Object</title>
    <url>/2024/06/11/json-object/</url>
    <content><![CDATA[<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>Example:<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Johnson&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span> <span class="attr">&quot;site&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br>JSON objects are written using curly braces {…}. They can contain multiple key/value pairs.</p>
<p>Keys must be strings, while values can be any valid JSON data type (string, number, object, array, boolean, or null). Keys and values are separated by colons (:), and each key/value pair is separated by commas (,).</p>
<h2 id="Accessing-Object-Values"><a href="#Accessing-Object-Values" class="headerlink" title="Accessing Object Values"></a>Accessing Object Values</h2><p>You can use dot (<code>.</code>) notation to access object values:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Johnson&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">28</span>, <span class="string">&quot;site&quot;</span>: <span class="literal">null</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> x = teacher.<span class="property">name</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// Output: Johnson</span></span><br></pre></td></tr></table></figure><br>Alternatively, you can use square brackets (<code>[]</code>):<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Johnson&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">28</span>, <span class="string">&quot;site&quot;</span>: <span class="literal">null</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> x = teacher[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// Output: Johnson</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Looping-Through-Objects"><a href="#Looping-Through-Objects" class="headerlink" title="Looping Through Objects"></a>Looping Through Objects</h2><p>Use a for…in loop to iterate over object properties:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Johnson&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">28</span>, <span class="string">&quot;site&quot;</span>: <span class="literal">null</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">in</span> teacher) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// name</span></span><br><span class="line"><span class="comment">// age</span></span><br><span class="line"><span class="comment">// site</span></span><br></pre></td></tr></table></figure><br>To access property values while looping, use square brackets:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Johnson&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">28</span>, <span class="string">&quot;site&quot;</span>: <span class="literal">null</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">in</span> teacher) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(teacher[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// Johnson</span></span><br><span class="line"><span class="comment">// 28</span></span><br><span class="line"><span class="comment">// null</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Nested-JSON-Objects"><a href="#Nested-JSON-Objects" class="headerlink" title="Nested JSON Objects"></a>Nested JSON Objects</h2><p>JSON objects can contain other JSON objects:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Johnson&quot;</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>: <span class="number">28</span>,</span><br><span class="line">    <span class="string">&quot;site&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;site1&quot;</span>: <span class="string">&quot;www.linjiangxiong.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;site2&quot;</span>: <span class="string">&quot;m.linjiangxiong.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;site3&quot;</span>: <span class="string">&quot;blog.linjiangxiong.com&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>Access nested objects using dot notation or square brackets:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = teacher.<span class="property">site</span>.<span class="property">site1</span>;</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="keyword">var</span> x = teacher.<span class="property">site</span>[<span class="string">&quot;site1&quot;</span>];</span><br></pre></td></tr></table></figure><br>Executing <code>console.log(x);</code> will output <code>www.linjiangxiong.com</code>.</p>
<h2 id="Modifying-Values"><a href="#Modifying-Values" class="headerlink" title="Modifying Values"></a>Modifying Values</h2><p>Use dot notation or square brackets to modify JSON object values:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">teacher.<span class="property">site</span>.<span class="property">site1</span> = <span class="string">&quot;https://www.linjiangxiong.com/&quot;</span>;</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line">teacher.<span class="property">site</span>[<span class="string">&quot;site1&quot;</span>] = <span class="string">&quot;https://www.linjiangxiong.com/&quot;</span>;</span><br></pre></td></tr></table></figure></p>
<h2 id="Deleting-Object-Properties"><a href="#Deleting-Object-Properties" class="headerlink" title="Deleting Object Properties"></a>Deleting Object Properties</h2><p>Use the <code>delete</code> keyword to remove JSON object properties:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> teacher.<span class="property">site</span>.<span class="property">site1</span>;</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="keyword">delete</span> teacher.<span class="property">site</span>[<span class="string">&quot;site1&quot;</span>];</span><br></pre></td></tr></table></figure><br>For example, perform the following code.<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> teacher = &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Johnson&quot;</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>: <span class="number">28</span>,</span><br><span class="line">    <span class="string">&quot;site&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;site1&quot;</span>: <span class="string">&quot;www.linjiangxiong.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;site2&quot;</span>: <span class="string">&quot;m.linjiangxiong.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;site3&quot;</span>: <span class="string">&quot;blog.linjiangxiong.com&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> teacher.<span class="property">site</span>.<span class="property">site1</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(teacher);</span><br></pre></td></tr></table></figure><br>The output will be:<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Johnson&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;site&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;site2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;m.linjiangxiong.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;site3&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blog.linjiangxiong.com&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>JSON Tutorial</category>
      </categories>
      <tags>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON Array</title>
    <url>/2024/06/12/json-array/</url>
    <content><![CDATA[<p>JSON (JavaScript Object Notation) is a lightweight data-interchange format that’s easy to read and write for humans and easy to parse and generate for machines. One of the key components of JSON is the <strong>JSON Array</strong>.</p>
<h2 id="What-is-a-JSON-Array"><a href="#What-is-a-JSON-Array" class="headerlink" title="What is a JSON Array?"></a>What is a JSON Array?</h2><p>A JSON array is an ordered collection of values. These values can be of any data type: strings, numbers, objects, arrays, booleans, or even null. The array is enclosed in square brackets (<code>[ ]</code>), and each value is separated by a comma.<br><strong>Example of a JSON Array:</strong><br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="string">&quot;apple&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;banana&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;cherry&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><br>This example is a simple JSON array containing three string elements. The values are ordered, meaning the first item in the array is <code>&quot;apple&quot;</code>, the second is <code>&quot;banana&quot;</code>, and the third is <code>&quot;cherry&quot;</code>.</p>
<h2 id="Nested-Arrays"><a href="#Nested-Arrays" class="headerlink" title="Nested Arrays"></a>Nested Arrays</h2><p>JSON arrays can also contain other arrays, allowing you to create complex data structures.<br><strong>Example of a Nested JSON Array:</strong><br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">[</span><span class="string">&quot;John&quot;</span><span class="punctuation">,</span> <span class="number">30</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">[</span><span class="string">&quot;Jane&quot;</span><span class="punctuation">,</span> <span class="number">25</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">[</span><span class="string">&quot;Doe&quot;</span><span class="punctuation">,</span> <span class="number">22</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><br>Here, each element in the outer array is itself an array containing a name and an age.</p>
<h2 id="JSON-Arrays-with-Objects"><a href="#JSON-Arrays-with-Objects" class="headerlink" title="JSON Arrays with Objects"></a>JSON Arrays with Objects</h2><p>One of the most common uses of JSON arrays is to store a list of objects. This is particularly useful when dealing with collections of similar items, like user data, products, or any other grouped data.<br><strong>Example of a JSON Array with Objects:</strong><br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New York&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Jane&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Los Angeles&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><br>In this example, the array contains two objects, each representing a person with their respective name, age, and city attributes.</p>
<h2 id="Why-Use-JSON-Arrays"><a href="#Why-Use-JSON-Arrays" class="headerlink" title="Why Use JSON Arrays?"></a>Why Use JSON Arrays?</h2><p>JSON arrays are useful because they:</p>
<ul>
<li><strong>Group related:</strong> Easily organize and structure data.</li>
<li><strong>Support complex data structures:</strong> Allow nesting of arrays and objects.</li>
<li><strong>Interoperability:</strong> Widely supported by programming languages and web APIs.</li>
</ul>
<h2 id="Working-with-JSON-Arrays-in-Code"><a href="#Working-with-JSON-Arrays-in-Code" class="headerlink" title="Working with JSON Arrays in Code"></a>Working with JSON Arrays in Code</h2><p>Depending on the programming language, there are various ways to create, manipulate, and access JSON arrays.<br><strong>Example in JavaScript:</strong><br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> jsonArray = [</span><br><span class="line">  &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;John&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">30</span> &#125;,</span><br><span class="line">  &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Jane&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">25</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonArray[<span class="number">0</span>].<span class="property">name</span>); <span class="comment">// Output: John</span></span><br></pre></td></tr></table></figure><br>This snippet creates a JSON array in JavaScript and accesses the <code>name</code> property of the first object.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Understanding JSON arrays is crucial for anyone working with APIs, web development, or data interchange formats. They are powerful tools for organizing and managing data in a structured way.<br>Whether you’re a beginner or looking to deepen your understanding of JSON, mastering arrays will enhance your ability to work with JSON effectively. Happy coding!</p>
]]></content>
      <categories>
        <category>JSON Tutorial</category>
      </categories>
      <tags>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>Why You Should Learn Data Structures and Algorithms</title>
    <url>/2024/01/01/why-you-should-learn-data-structures-and-algorithms/</url>
    <content><![CDATA[<p>Do you think that data structures and algorithms, similar to operating systems and computer networks, are disconnected from practical application? Some argue these concepts are primarily useful for interviews and not essential in day-to-day coding.<br>However, I disagree. In today’s digital era, understanding data structures and algorithms is crucial, regardless of whether you’re a seasoned developer or new to coding. These foundational concepts not only enhance your problem-solving abilities but also greatly elevate your career prospects.<br>In this article, I’ll delve into why learning data structures and algorithms is indispensable.</p>
<h2 id="Boosting-Career-Opportunities"><a href="#Boosting-Career-Opportunities" class="headerlink" title="Boosting Career Opportunities"></a>Boosting Career Opportunities</h2><p>Technical interviews for software engineering and related roles often heavily emphasize data structures and algorithms. Many large companies, like Microsoft, Google, Amazon, and Facebook, often conduct algorithm-focused interviews where candidates are asked to write code on the spot.<br>Why do these companies prioritize algorithms? In university recruiting, candidates often lack practical project experience, so companies assess their fundamental knowledge. In general recruiting, stronger companies emphasize solid knowledge of data structures and algorithms over immediate skills, prioritizing long-term potential.<br>Employers leverage these questions to evaluate a candidate’s problem-solving skills, critical thinking ability, and grasp of core computer science concepts. They prioritize candidates capable of designing efficient systems and enhancing performance. Proficiency in data structures and algorithms is in high demand across tech giants and startups alike. Mastery of these principles unlocks lucrative opportunities in software engineering, data science, cybersecurity, and other sought-after fields, offering a significant advantage in the hiring process.</p>
<h2 id="Enhancing-Problem-Solving-Skills"><a href="#Enhancing-Problem-Solving-Skills" class="headerlink" title="Enhancing Problem-Solving Skills"></a>Enhancing Problem-Solving Skills</h2><p>As a business development engineer, your daily tasks may involve performing CRUD operations on databases. Typically, you’ll rely on pre-built interfaces and class libraries to handle most business logic, minimizing the need for custom implementations of data structures and algorithms. However, a solid grasp of these foundational principles is essential. Understanding the underlying principles of libraries and being able to analyze time and space complexity are key to leveraging these tools effectively.<br>Decisions such as choosing between <code>ArrayList</code> and <code>LinkedList</code> for storing business data or evaluating code performance and resource consumption after function calls rely on your knowledge of data structures and algorithms. Frameworks and middleware like Spring, RPC frameworks, and Redis incorporate fundamental designs in their architecture. For instance, Redis utilizes specific data structures like ordered sets implemented with skip lists rather than binary trees for efficiency.<br>Having this knowledge not only enhances your ability to use these tools but also simplifies troubleshooting and optimization efforts. For example, when calculating the 99% response time of a business interface in real-time, understanding the “heap” data structure enables efficient solutions using two heaps, significantly improving performance over naive methods like sorting.<br>In summary, while directly implementing data structures and algorithms may not be common in business development, their understanding remains crucial. It facilitates effective use of existing tools, improves troubleshooting capabilities, and ensures optimal performance in practical scenarios.</p>
<h2 id="Staying-Relevant-in-a-Dynamic-Industry"><a href="#Staying-Relevant-in-a-Dynamic-Industry" class="headerlink" title="Staying Relevant in a Dynamic Industry"></a>Staying Relevant in a Dynamic Industry</h2><p>Technology evolves rapidly, yet the enduring principles of data structures and algorithms serve as the backbone of modern computing, remaining relevant across programming languages and frameworks. Continuous learning in these areas ensures you remain competitive and adaptable in an ever-changing tech landscape.<br>What defines good code in software development? Is it readability, robustness, scalability? The answer varies, but performance stands as a crucial criterion. However, writing high-performance code is challenging without a solid grasp of time and space complexities.<br>You might argue: “I work in a small company with few users and minimal data—performance isn’t critical.” But do you aim to repeat the same tasks for a decade? Many programmers hit a career plateau as they age. Why? Some neglect non-functional aspects, opting for quick solutions without foresight or improvement plans.<br>I’ve interviewed veterans with extensive resumes—projects full of repetitive logic, showing minimal growth over a decade. A decade’s experience shouldn’t resemble a year’s worth. How does one avoid becoming obsolete?<br>In mature companies or tech giants dealing with millions—or billions—of users and terabytes or petabytes of data, performance is always paramount. A simple choice between ArrayList or LinkedList can lead to a thousandfold performance gap. Here, mastering data structures and algorithms becomes indispensable.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Learning data structures and algorithms isn’t just about coding—it’s about mastering the tools that drive innovation and problem-solving in the digital age. Whether you’re aiming to advance your career or dive deeper into software development, investing in these foundational skills is the ultimate pathway to success.</p>
]]></content>
      <categories>
        <category>Data Structures and Algorithms</category>
      </categories>
      <tags>
        <tag>Data Structures and Algorithms</tag>
      </tags>
  </entry>
  <entry>
    <title>Big O Notation for Time and Space Complexity</title>
    <url>/2024/01/02/big-o-notation-for-time-and-space-complexity/</url>
    <content><![CDATA[<p>We all know that data structures and algorithms address the concepts of speed and efficiency—how to make code run faster and use storage space more efficiently. Therefore, the execution efficiency of algorithms is a crucial consideration. How do we measure the efficiency of the algorithmic code we write? This brings us to today’s topic: analyzing time and space complexity.</p>
<h2 id="Why-is-complexity-analysis-needed"><a href="#Why-is-complexity-analysis-needed" class="headerlink" title="Why is complexity analysis needed?"></a>Why is complexity analysis needed?</h2><p>You might be wondering why I need to analyze time and space complexity when I can simply run the code once and gather statistics and monitoring data on algorithm execution time and memory usage. Can’t this real-time data provide a more accurate assessment? While evaluating algorithm efficiency through actual runs is valid, this approach is often referred to in data structure and algorithm books as post hoc analysis. However, it does come with significant limitations.</p>
<ol>
<li><strong>The test results heavily rely on the testing environment.</strong></li>
</ol>
<p>Test results can vary significantly depending on the test environment, particularly due to differences in hardware. For instance, running the same piece of code on an Intel Core i9 processor versus an Intel Core i3 processor will naturally result in faster execution on the i9. Similarly, if code ‘A’ runs faster than code ‘B’ on this machine initially, switching to another machine could yield completely opposite results.</p>
<ol>
<li><strong>The test results are greatly influenced by the size of the data.</strong></li>
</ol>
<p>Consider a sorting algorithm as an example: the order of the data significantly affects the execution time of the sorting process. In cases where the data is already sorted, the algorithm requires minimal operations, resulting in very short execution times. Furthermore, when the test data size is too small, the algorithm’s performance may not accurately reflect its capabilities. For instance, with small datasets, insertion sort could potentially outperform quicksort.</p>
<p>Therefore, we need a method to roughly estimate the execution efficiency of an algorithm without relying on specific test data. Complexity analysis is fundamental to efficient algorithm design and implementation in software development. It plays a crucial role in evaluating and predicting the performance characteristics of algorithms and data structures. By thoroughly understanding complexity, developers can make informed decisions to optimize both time and space efficiency in their code.</p>
<p>In the domain of algorithms:</p>
<ul>
<li><strong>Time Complexity</strong>: This metric assesses how an algorithm’s execution time scales with the size of its input. Algorithms with lower time complexity generally perform better on larger datasets, crucial for applications requiring fast processing speeds or handling extensive computations.</li>
<li><strong>Space Complexity</strong>: This dimension measures the amount of memory an algorithm requires relative to its input size. Algorithms with lower space complexity are advantageous in memory-constrained environments, such as mobile devices or embedded systems.</li>
</ul>
<h2 id="Big-O-notation"><a href="#Big-O-notation" class="headerlink" title="Big O notation"></a>Big O notation</h2><p>The execution efficiency of an algorithm can be understood as the time it takes for the algorithm’s code to run. However, how can one estimate the execution time of a piece of code without actually running it? </p>
<p>Let’s consider a straightforward example: a simple piece of code that calculates the sum of integers from <code>1</code> to <code>n</code>. I will guide you through the process of estimating the execution time of this code.<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= n; ++i) &#123;</span><br><span class="line">        s = s + i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>From the perspective of the CPU, each line of this code performs a similar sequence of operations: reading data, performing arithmetic, and writing data. While the number of CPU executions and the time taken for each line vary, for the sake of estimation, we assume each line takes the same amount of time, referred to as <em>unit_time</em>. Based on this assumption, what is the total execution time of this code? </p>
<p>The 2nd and 3rd lines each require 1 <em>unit_time</em> of execution time, while the 4th and 5th lines iterate$n$times, requiring $( 2n \cdot \text{unit_time} )$ of execution time. Therefore, the total execution time of this code is $( (2n+2) \cdot \text{unit_time} )$. It can be seen that the execution time$T(n)$of all code is directly proportional to the number of executions per line. </p>
<p>Continuing with this analytical approach, let’s now reconsider another piece of code.<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= n; ++i) &#123;</span><br><span class="line">        j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (; j &lt;= n; ++j) &#123;</span><br><span class="line">            s = s +  i * j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>We still assume each statement takes <em>unit_time</em> to execute. Now, what is the total execution time$\ T(n) $for this code?</p>
<p>The 2nd, 3rd, and 4th lines each require 1 <em>unit_time</em>. The 5th and 6th lines iterate$n$times, requiring $( 2n \cdot \text{unit_time} )$. The 7th and 8th lines iterate$n^2$times, thus requiring $( 2n^2 \cdot \text{unit_time} )$. Therefore, the total execution time$T(n)$for the entire code segment is $( (2n^2 + 2n + 3) \cdot \text{unit_time} )$.</p>
<p>While the exact value of <em>unit_time</em> remains unknown, analyzing the execution times of these code segments reveals a crucial rule: the total execution time$T(n)$correlates directly with the number of executions$f(n)$of each line of code.</p>
<p>This observation can be encapsulated into a formula, setting the stage for the introduction of Big O notation!</p>
<p>$T(n)=O(f(n))$</p>
<p>Here,$T(n)$represents the time complexity of code execution, where$n$denotes the size of the input data, and$f(n)$signifies the total number of times each line of code is executed. In Big O notation, denoted by O,$T(n)$is proportional to$f(n)$. </p>
<p>For instance,$T(n) = O(2n+2)$in the first example, and$T(n) = O(2n^2+2n+3)$in the second. Big O notation expresses the growth rate of execution time as data size increases, known as asymptotic time complexity. </p>
<p>In practical terms, this notation doesn’t precisely indicate actual execution time but rather how it scales with input size, such as when$n$is large, say 1,000,000 or 10,000,000. In the formula, lower-order terms, constants, and coefficients do not affect the growth trend and can be ignored, focusing only on the dominant term. </p>
<p>Therefore, for the two code segments mentioned earlier, their time complexity in Big O notation would be:$T(n) = O(n)$and$T(n) = O(n^2)$.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>In conclusion, complexity analysis is not merely an academic exercise but a fundamental practice that underpins effective software engineering. By leveraging insights into time and space complexities, developers empower themselves to craft solutions that meet performance expectations, enhance user experience, and optimize resource consumption. Embracing complexity analysis is essential for anyone striving to build reliable, efficient software systems in today’s dynamic technological landscape.</p>
]]></content>
      <categories>
        <category>Data Structures and Algorithms</category>
      </categories>
      <tags>
        <tag>Data Structures and Algorithms</tag>
      </tags>
  </entry>
  <entry>
    <title>Analyzing Time Complexity of Algorithms Using Big O Notation</title>
    <url>/2024/01/03/analyzing-time-complexity-of-algorithms-using-big-o-notation/</url>
    <content><![CDATA[<p>In the previous article “<a href="/2024/01/02/big-o-notation-for-time-and-space-complexity">Big O Notation for Time and Space Complexity</a>,” we introduced the origin and notation of Big O time complexity. Now let’s explore how to analyze the time complexity of a piece of code.</p>
<p>Understanding how to analyze the time complexity of a piece of code using Big O notation is a crucial skill for any software developer or computer scientist. Big O notation provides a way to describe the performance of an algorithm in terms of the amount of time it takes to execute or the amount of memory it uses (though we’re focusing on time complexity here). Here’s a step-by-step guide on how to analyze the time complexity of a piece of code using Big O.</p>
<h2 id="Identify-the-Nested-Loops"><a href="#Identify-the-Nested-Loops" class="headerlink" title="Identify the Nested Loops"></a>Identify the Nested Loops</h2><p>Start by looking at the code and identifying any loops, especially nested loops. Loops are often the primary contributors to the time complexity of an algorithm. Note the number of loops and how they are nested.</p>
<h2 id="Count-the-Operations-Inside-the-Loops"><a href="#Count-the-Operations-Inside-the-Loops" class="headerlink" title="Count the Operations Inside the Loops"></a>Count the Operations Inside the Loops</h2><p>For each loop, determine the number of operations that are performed within the loop body. Operations can include arithmetic operations, comparisons, assignments, etc. In Big O notation, we often focus on the “most significant” term, meaning the term that grows the fastest as the input size increases.</p>
<h2 id="Determine-the-Growth-Rate"><a href="#Determine-the-Growth-Rate" class="headerlink" title="Determine the Growth Rate"></a>Determine the Growth Rate</h2><p>Based on the number of loops and the operations within them, determine the growth rate of the algorithm. The growth rate describes how the time required to execute the algorithm increases as the input size increases. Common growth rates include$O(1)$(constant time),$O(log n)$(logarithmic time),$O(n)$(linear time),$O(n^2)$(quadratic time), and$O(n!)$(factorial time).</p>
<ul>
<li>$O(1)$: The time required to execute the algorithm is constant regardless of the input size.</li>
<li>$O(log n)$: The time required to execute the algorithm grows logarithmically with the input size.</li>
<li>$O(n)$: The time required to execute the algorithm grows linearly with the input size.</li>
<li>$O(n^2)$: The time required to execute the algorithm grows quadratically with the input size.</li>
<li>$O(n!)$: The time required to execute the algorithm grows factorially with the input size, which is extremely slow for large inputs.</li>
</ul>
<h2 id="Ignore-Constants-and-Lower-Order-Terms"><a href="#Ignore-Constants-and-Lower-Order-Terms" class="headerlink" title="Ignore Constants and Lower-Order Terms"></a>Ignore Constants and Lower-Order Terms</h2><p>When analyzing time complexity, it’s common to ignore constants and lower-order terms. For example, if an algorithm’s time complexity is$O(5n^2 + 3n + 100)$, we would simplify it to$O(n^2)$because the$n^2$term grows faster than the$n$term or the constant term as$n$increases.</p>
<h2 id="Sharing-Three-Highly-Practical-Methods"><a href="#Sharing-Three-Highly-Practical-Methods" class="headerlink" title="Sharing Three Highly Practical Methods"></a>Sharing Three Highly Practical Methods</h2><ol>
<li><strong>Only focus on the segment of code with the highest number of loop executions.</strong></li>
</ol>
<p>We focus exclusively on the segment of code with the maximum number of loop executions. Big O notation describes a complexity trend. Typically, we ignore constants, lower-order terms, and coefficients in the formula, concentrating solely on the highest-order term. Therefore, when analyzing the time complexity of an algorithm, we concentrate on the segment with the maximum number of loop executions. The magnitude of this segment’s execution count, represented by$n$, dictates the overall time complexity of the analyzed code. </p>
<p>To clarify this concept further, I’ll use the previous article’s example as an illustration.<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= n; ++i) &#123;</span><br><span class="line">        s = s + i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>The 2nd and 3rd lines of code execute in constant time, regardless of the size of$n$, and thus do not impact the overall complexity. The 4th and 5th lines, however, are executed most frequently and require focused analysis. As previously noted, these lines are executed$n$times, leading to an overall time complexity of$O(n)$.</p>
<ol>
<li><strong>Addition rule: The overall complexity is determined by the segment of code with the highest order of magnitude.</strong></li>
</ol>
<p>Taking the following code snippet as an example, let’s analyze the time complexity of the given function <code>sum(int n)</code> step by step.<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> total_1 = <span class="number">0</span>, total_2 = <span class="number">0</span>, total_3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">500</span>; i++) &#123;</span><br><span class="line">        total_1 += i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        total_2 += i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            total_3 += i + j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total_1 + total_2 + total_3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ol>
<li><p><strong>First </strong><code>for</code><strong> loop (total_1):</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">500</span>; i++) &#123;</span><br><span class="line">    total_1 += i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>This loop iterates 500 times, regardless of the value of <code>n</code>.</li>
<li>Time complexity:$O(1)$(constant time). Even though the loop iterates 500 times, it’s a fixed number of iterations and does not depend on <code>n</code>.</li>
</ul>
</li>
<li><p><strong>Second </strong><code>for</code><strong> loop (total_2):</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    total_2 += i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>This loop iterates <code>n</code> times.</li>
<li>Time complexity:$O(n)$. The number of iterations depends linearly on the value of <code>n</code>.</li>
</ul>
</li>
<li><p><strong>Nested </strong><code>for</code><strong> loops (total_3):</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">        total_3 += i + j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>The outer loop runs <code>n</code> times.</li>
<li>The inner loop runs <code>n</code> times for each iteration of the outer loop.</li>
<li>Therefore, the total number of iterations for the inner loop is$n \times n = n^2$.</li>
<li>Time complexity:$O(n^2)$. The time taken grows quadratically with respect to <code>n</code>.</li>
</ul>
</li>
<li><strong>Combined Time Complexity:</strong></li>
</ol>
<p>To find the overall time complexity of the function <code>sum(int n)</code>, we sum up the complexities of each part:</p>
<ul>
<li>$O(1)$(from <code>total_1</code>)</li>
<li>$O(n)$(from <code>total_2</code>)</li>
<li>$O(n^2)$(from <code>total_3</code>)</li>
</ul>
<p>The dominant term here is$O(n^2)$, because it grows faster than both$O(n)$and$O(1)$. Thus, the overall time complexity of the function <code>sum(int n)</code> is$O(n^2)$. This quadratic complexity is primarily determined by the nested loops that calculate <code>total_3</code>.</p>
<p>From the above analysis, we can infer that the overall time complexity is equal to the complexity of the segment with the highest order. We can abstract this rule into a formula:<br>if<br>$T1(n) = O(f(n))$,<br>$T2(n) = O(g(n))$;<br>then$T(n) = T1(n) + T2(n) = max(O(f(n)), O(g(n))) = O(max(f(n), g(n)))$.</p>
<ol>
<li><strong>Multiplication rule: The complexity of nested code equals the product of the complexities of the outer and inner layers of code.</strong></li>
</ol>
<p>Again, we abstract this rule into a formula:</p>
<p>if<br>$T1(n)=O(f(n))$，<br>$T2(n)=O(g(n))$；<br>then<br>$T(n)=T1(n)<em>T2(n)=O(f(n))</em>O(g(n))=O(f(n)*g(n))$</p>
<p>In other words,</p>
<p>if$T1(n) = O(n)$,$T2(n) = O(n^2)$, then$T1(n) * T2(n) = O(n^3)$.</p>
<p>Taking the following code snippet as an example, let’s analyze the time complexity of function <code>sum1(int n)</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum2</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        total += i;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sum1</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        total += sum2(i);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>To analyze the time complexity of the function <code>sum1(int n)</code>, let’s break down each function individually and then combine them to determine the overall complexity.</p>
<ol>
<li><p><strong>Analysis of </strong><code>**sum2(int n)**</code><strong>:</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum2</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        total += i;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Loop Iterations</strong>: The <code>for</code> loop runs from <code>i = 1</code> to <code>i &lt; n</code>, iterating <code>n-1</code> times.</li>
<li><strong>Operations Inside Loop</strong>: Inside the loop, <code>total += i</code> executes once per iteration.</li>
</ul>
</li>
</ol>
<p>The time complexity of <code>sum2(int n)</code> is$O(n)$, because the loop runs <code>n-1</code> times, which is linear in terms of <code>n</code>.</p>
<ol>
<li><p><strong>Analysis of </strong><code>**sum1(int n)**</code><strong>:</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum1</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        total += <span class="built_in">sum2</span>(i);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Loop Iterations</strong>: The <code>for</code> loop in <code>sum1(int n)</code> also runs from <code>i = 1</code> to <code>i &lt; n</code>, iterating <code>n-1</code> times.</li>
<li><strong>Operations Inside Loop</strong>: Inside the loop, <code>sum2(i)</code> is called.</li>
</ul>
</li>
</ol>
<p>For each iteration of the loop in <code>sum1(int n)</code>, <code>sum2(i)</code> is called. If <code>sum2(i)</code> is just a simple operation, the time complexity of lines 4 to 6 is$T1(n) = O(n)$. However, <code>sum2(i)</code> itself is not a simple operation; its time complexity is$T2(n) = O(n)$. According to the multiplication rule, the overall time complexity of the <code>sum1(int n)</code> function is$T(n) = T1(n) <em> T2(n) = O(n </em> n) = O(n^2)$.</p>
<p>You don’t have to deliberately memorize these three complexity analysis techniques. In fact, the key to mastering complexity analysis lies in familiarity. Just expose yourself to more examples and regularly practice analysis.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>By following these steps, you can analyze the time complexity of a variety of algorithms and gain a better understanding of their performance characteristics.</p>
]]></content>
      <categories>
        <category>Data Structures and Algorithms</category>
      </categories>
      <tags>
        <tag>Data Structures and Algorithms</tag>
      </tags>
  </entry>
  <entry>
    <title>Analyzing Redis Source Code: Simple Dynamic Strings (SDS) – An Efficient and Flexible String Implementation</title>
    <url>/2024/09/10/analyzing-redis-source-code-sds/</url>
    <content><![CDATA[<h2 id="Redis’s-Requirements-for-Strings"><a href="#Redis’s-Requirements-for-Strings" class="headerlink" title="Redis’s Requirements for Strings"></a>Redis’s Requirements for Strings</h2><p>Strings are an essential data type in app development, frequently used to store a variety of information such as user profiles, product descriptions, and system messages. In Redis, a popular in-memory data store, both the keys and often the values in key-value pairs are represented as strings. This makes strings one of the foundational data types in Redis, contributing to its flexibility and simplicity when handling data. </p>
<p>For instance, when saving user data such as name, gender, and city, you can use a simple Redis command like:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET user:id:100 &#123;&quot;name&quot;: &quot;John&quot;, &quot;gender&quot;: &quot;M&quot;, &quot;city&quot;: &quot;New York&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>This example stores a stringified JSON object as the value, with a key that identifies the user.</p>
<p>Strings are also crucial for communication in Redis. The commands exchanged between Redis instances and clients, as well as much of the internal data, are transmitted as strings. Given the widespread use of strings in Redis, the way strings are implemented plays a critical role in system performance and efficiency. To optimize this, the implementation should satisfy the following three key requirements:</p>
<h3 id="1-Support-for-a-Wide-Range-of-Efficient-String-Operations"><a href="#1-Support-for-a-Wide-Range-of-Efficient-String-Operations" class="headerlink" title="1. Support for a Wide Range of Efficient String Operations"></a>1. <strong>Support for a Wide Range of Efficient String Operations</strong></h3><p>String operations like appending, copying, comparing, and retrieving the length of a string are extremely common in app development. In Redis, strings are implemented in such a way that these operations are highly efficient. For example, appending data to a string can be done using the <code>APPEND</code> command:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">APPEND user:name &quot;Doe&quot;</span><br></pre></td></tr></table></figure>
<p>This adds “Doe” to the existing string value stored at the <code>user:name</code> key. Similar commands exist for other operations like comparing (<code>STRLEN</code>) or copying strings. Efficient handling of these operations ensures that Redis remains performant, even as the volume of data grows.</p>
<h3 id="2-Ability-to-Handle-Arbitrary-Binary-Data"><a href="#2-Ability-to-Handle-Arbitrary-Binary-Data" class="headerlink" title="2. Ability to Handle Arbitrary Binary Data"></a>2. <strong>Ability to Handle Arbitrary Binary Data</strong></h3><p>Strings in Redis are not limited to human-readable text. They can also store binary data such as images, audio files, or other types of raw data. This flexibility is crucial in modern app development, where applications frequently need to handle multimedia or complex data formats. Redis strings can store up to 512MB of binary data, allowing developers to use them for a variety of tasks beyond simple text storage.</p>
<p>For example, storing an image file in Redis might involve converting the image to binary and saving it as a string:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET image:profile:100 &lt;binary_data&gt;</span><br></pre></td></tr></table></figure>
<p>Redis doesn’t distinguish between text and binary data at the storage level, so it treats everything as a string, making the system both simple and flexible.</p>
<h3 id="3-Minimizing-Memory-Overhead"><a href="#3-Minimizing-Memory-Overhead" class="headerlink" title="3. Minimizing Memory Overhead"></a>3. <strong>Minimizing Memory Overhead</strong></h3><p>Since Redis is often used in scenarios where speed and memory efficiency are critical, minimizing memory overhead for string storage is essential. Redis uses an optimized memory representation for strings. Short strings (typically 39 bytes or less) are stored in a highly efficient structure known as <strong>SDS</strong> (Simple Dynamic Strings), which reduces the overhead associated with managing string data.</p>
<p>Redis takes several measures to optimize memory usage:</p>
<ul>
<li><strong>SDS Structure:</strong> SDS supports dynamic resizing, allowing it to efficiently manage memory when strings are appended or modified without needing to frequently reallocate memory.</li>
<li><strong>Lazy Reallocation:</strong> Redis avoids unnecessary memory allocation by resizing strings in chunks, reducing the cost of frequent modifications.</li>
<li><strong>Compact Storage for Small Strings:</strong> Small strings are packed together, reducing fragmentation and overall memory consumption.</li>
</ul>
<h2 id="Why-doesn’t-Redis-Use-char"><a href="#Why-doesn’t-Redis-Use-char" class="headerlink" title="Why doesn’t Redis Use char*?"></a>Why doesn’t Redis Use <code>char*</code>?</h2><p>If you’ve developed programs in C, you’re probably familiar with using <code>char*</code> arrays to implement strings. The C standard library (<code>string.h</code>) provides various string operations like <code>strcmp</code> for comparison, <code>strlen</code> for length, and <code>strcat</code> for appending, which simplifies these tasks for developers. However, why doesn’t Redis use <code>char*</code>? To answer this question, we first need to understand the structure of <code>char*</code> string arrays. Let’s delve into that analysis.</p>
<h3 id="The-Design-of-char-Struct"><a href="#The-Design-of-char-Struct" class="headerlink" title="The Design of char* Struct"></a>The Design of <code>char*</code> Struct</h3><p>The <code>char*</code> array is a simple structure consisting of a contiguous block of memory where each character of the string is stored sequentially. For example, the <code>char*</code> array structure for the string “johnson” is shown below. </p>
<p><img src="/image/redis-src/24091001.png" alt=""></p>
<p>The last character in this array is <code>&#39;\0&#39;</code>. This character is crucial because it marks the end of the string. In C, <code>char*</code> pointers refer to the start of the array, and functions in the standard library use <code>&#39;\0&#39;</code> to determine where the string ends. For instance, the <code>strlen</code> function calculates the length of a string by counting characters until it encounters <code>&#39;\0&#39;</code>. The execution flow of <code>strlen</code> is illustrated below.</p>
<p><img src="/image/redis-src/24091002.png" alt=""></p>
<p>Let’s look at how the <code>&#39;\0&#39;</code> termination character affects string length with a code example. I’ve created two string variables, <code>a</code> and <code>b</code>, with values <code>&quot;john\0son&quot;</code> and <code>&quot;johnson\0&quot;</code>, respectively. Using the <code>strlen</code> function to compute their lengths, the results are 4 and 7. </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *a = <span class="string">&quot;john\0son&quot;</span>;</span><br><span class="line">    <span class="type">char</span> *b = <span class="string">&quot;johnson\0&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lu\n&quot;</span>, <span class="built_in">strlen</span>(a));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lu\n&quot;</span>, <span class="built_in">strlen</span>(b));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This is because the <code>&#39;\0&#39;</code> in <code>a</code> comes after “john”, so <code>strlen</code> counts only the first 4 characters. For <code>b</code>, the <code>&#39;\0&#39;</code> is after “johnson”, so <code>strlen</code> counts all 7 characters. This shows that <code>char*</code> strings, which use <code>&#39;\0&#39;</code> to indicate the end, can be problematic if the data itself contains <code>&#39;\0&#39;</code>, as it leads to truncation. This limitation makes it unsuitable for storing arbitrary binary data, which is what Redis needs to handle.</p>
<h3 id="The-Complexity-of-String-Operations"><a href="#The-Complexity-of-String-Operations" class="headerlink" title="The Complexity of String Operations"></a>The Complexity of String Operations</h3><p>Aside from design issues related to <code>char*</code> character arrays, using <code>&#39;\0&#39;</code> as the string terminator allows functions to determine where the string ends. However, it also has a downside: it increases the complexity of string operations. Take the <code>strlen</code> function as an example. This function needs to traverse each character in the array to determine the string’s length, resulting in a time complexity of O(N).</p>
<p>Another commonly used operation is the string concatenation function, <code>strcat</code>. The <code>strcat</code> function appends a source string (<code>src</code>) to the end of a destination string. Here’s how the <code>strcat</code> function works:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * strcat - Concatenates two strings</span></span><br><span class="line"><span class="comment"> * @dest: Destination string to which the source string will be appended</span></span><br><span class="line"><span class="comment"> * @src: Source string that will be appended to the destination string</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This function concatenates the source string `src` to the end of the destination string `dest`.</span></span><br><span class="line"><span class="comment"> * It first finds the end of the destination string `dest` (the first null character),</span></span><br><span class="line"><span class="comment"> * then copies each character from the source string `src` into the destination string `dest`</span></span><br><span class="line"><span class="comment"> * until the null character of the source string `src` is reached. Finally, it returns the original pointer to the destination string.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Returns: Pointer to the destination string after concatenation</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">strcat</span><span class="params">(<span class="type">char</span> *dest, <span class="type">const</span> <span class="type">char</span> *src)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="comment">// Temporarily store the pointer to the destination string</span></span><br><span class="line">        <span class="type">char</span> *tmp = dest;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Find the end of the destination string</span></span><br><span class="line">        <span class="keyword">while</span> (*dest)</span><br><span class="line">                dest++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Copy each character from the source string to the destination string until the null character</span></span><br><span class="line">        <span class="keyword">while</span> ((*dest++ = *src++) != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">                ;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Return the original pointer to the destination string</span></span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>From the code, we can see that both <code>strcat</code> and <code>strlen</code> functions have high complexity. They both require traversing the strings to find their end. For <code>strcat</code>, there’s an additional traversal needed to append the source string to the destination. Furthermore, <code>strcat</code> must ensure that there is enough space in the destination string to accommodate the new content; otherwise, the append operation will fail.</p>
<p>This means developers need to manage the space for the destination string carefully when using <code>strcat</code>, often requiring dynamic allocation which adds to the programming complexity. Increased complexity in these operations affects the efficiency of string manipulation, which does not align with Redis’s need for efficient string handling.</p>
<p>Considering the shortcomings of using <code>char*</code> for string implementation in C, we now need to explore alternative ways to handle strings. Therefore, next, let’s delve into how Redis approaches the design considerations for string implementation.</p>
<h2 id="Design-Philosophy-of-SDS"><a href="#Design-Philosophy-of-SDS" class="headerlink" title="Design Philosophy of SDS"></a>Design Philosophy of SDS</h2><p>Since Redis is developed in C, it leverages character arrays to store data for compatibility with C standard library functions. However, unlike C’s basic character arrays, Redis introduces a specially designed data structure called SDS (Simple Dynamic Strings). Let’s take a closer look at it.</p>
<h3 id="SDS-Structure-Design"><a href="#SDS-Structure-Design" class="headerlink" title="SDS Structure Design"></a>SDS Structure Design</h3><p>The SDS structure includes a character array <code>buf[]</code> for storing actual data. Additionally, it contains three pieces of metadata: </p>
<ul>
<li><code>len</code> (the length of the data in the array), </li>
<li><code>alloc</code> (the allocated space for the array), </li>
<li>and <code>flags</code> (the type of SDS). </li>
</ul>
<p>Redis defines various data types for <code>len</code> and <code>alloc</code> to represent different SDS types, which I will explain in detail later. The diagram below illustrates the SDS structure for reference.</p>
<p><img src="/image/redis-src/24091003.png" alt=""></p>
<p>If you’ve looked into the Redis source code, you may have noticed that Redis uses <code>typedef</code> to create an alias <code>sds</code> for <code>char*</code>. </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> *sds;</span><br></pre></td></tr></table></figure>
<p>This is because, fundamentally, SDS is a character array with added metadata. In Redis, <code>sds</code> is used whenever character arrays are needed.</p>
<p>When creating a new string, Redis calls the SDS creation function <code>sdsnewlen</code>. This function allocates a new <code>sds</code> variable (essentially a <code>char*</code>), initializes an SDS structure, and assigns the <code>buf[]</code> array in the SDS structure to the <code>sds</code> variable. Finally, <code>sdsnewlen</code> copies the desired string into the <code>sds</code> variable. The code below illustrates the logic of the <code>sdsnewlen</code> function.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Create a new sds string with the content specified by the &#x27;init&#x27; pointer</span></span><br><span class="line"><span class="comment"> * and &#x27;initlen&#x27;.</span></span><br><span class="line"><span class="comment"> * If NULL is used for &#x27;init&#x27; the string is initialized with zero bytes.</span></span><br><span class="line"><span class="comment"> * If SDS_NOINIT is used, the buffer is left uninitialized;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The string is always null-termined (all the sds strings are, always) so</span></span><br><span class="line"><span class="comment"> * even if you create an sds string with:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * mystring = sdsnewlen(&quot;abc&quot;,3);</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can print the string with printf() as there is an implicit \0 at the</span></span><br><span class="line"><span class="comment"> * end of the string. However the string is binary safe and can contain</span></span><br><span class="line"><span class="comment"> * \0 characters in the middle, as the length is stored in the sds header. */</span></span><br><span class="line">sds _sdsnewlen(<span class="type">const</span> <span class="type">void</span> *init, <span class="type">size_t</span> initlen, <span class="type">int</span> trymalloc) &#123;</span><br><span class="line">    <span class="type">void</span> *sh;</span><br><span class="line">    sds s;</span><br><span class="line">    <span class="type">char</span> type = sdsReqType(initlen);</span><br><span class="line">    <span class="comment">/* Empty strings are usually created in order to append. Use type 8</span></span><br><span class="line"><span class="comment">     * since type 5 is not good at this. */</span></span><br><span class="line">    <span class="keyword">if</span> (type == SDS_TYPE_5 &amp;&amp; initlen == <span class="number">0</span>) type = SDS_TYPE_8;</span><br><span class="line">    <span class="type">int</span> hdrlen = sdsHdrSize(type);</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> *fp; <span class="comment">/* flags pointer. */</span></span><br><span class="line">    <span class="type">size_t</span> usable;</span><br><span class="line"></span><br><span class="line">    assert(initlen + hdrlen + <span class="number">1</span> &gt; initlen); <span class="comment">/* Catch size_t overflow */</span></span><br><span class="line">    sh = trymalloc?</span><br><span class="line">        s_trymalloc_usable(hdrlen+initlen+<span class="number">1</span>, &amp;usable) :</span><br><span class="line">        s_malloc_usable(hdrlen+initlen+<span class="number">1</span>, &amp;usable);</span><br><span class="line">    <span class="keyword">if</span> (sh == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (init==SDS_NOINIT)</span><br><span class="line">        init = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!init)</span><br><span class="line">        <span class="built_in">memset</span>(sh, <span class="number">0</span>, hdrlen+initlen+<span class="number">1</span>);</span><br><span class="line">    s = (<span class="type">char</span>*)sh+hdrlen;</span><br><span class="line">    fp = ((<span class="type">unsigned</span> <span class="type">char</span>*)s)<span class="number">-1</span>;</span><br><span class="line">    usable = usable-hdrlen<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (usable &gt; sdsTypeMaxSize(type))</span><br><span class="line">        usable = sdsTypeMaxSize(type);</span><br><span class="line">    <span class="keyword">switch</span>(type) &#123;</span><br><span class="line">        <span class="keyword">case</span> SDS_TYPE_5: &#123;</span><br><span class="line">            *fp = type | (initlen &lt;&lt; SDS_TYPE_BITS);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> SDS_TYPE_8: &#123;</span><br><span class="line">            SDS_HDR_VAR(<span class="number">8</span>,s);</span><br><span class="line">            sh-&gt;len = initlen;</span><br><span class="line">            sh-&gt;alloc = usable;</span><br><span class="line">            *fp = type;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> SDS_TYPE_16: &#123;</span><br><span class="line">            SDS_HDR_VAR(<span class="number">16</span>,s);</span><br><span class="line">            sh-&gt;len = initlen;</span><br><span class="line">            sh-&gt;alloc = usable;</span><br><span class="line">            *fp = type;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> SDS_TYPE_32: &#123;</span><br><span class="line">            SDS_HDR_VAR(<span class="number">32</span>,s);</span><br><span class="line">            sh-&gt;len = initlen;</span><br><span class="line">            sh-&gt;alloc = usable;</span><br><span class="line">            *fp = type;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> SDS_TYPE_64: &#123;</span><br><span class="line">            SDS_HDR_VAR(<span class="number">64</span>,s);</span><br><span class="line">            sh-&gt;len = initlen;</span><br><span class="line">            sh-&gt;alloc = usable;</span><br><span class="line">            *fp = type;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (initlen &amp;&amp; init)</span><br><span class="line">        <span class="built_in">memcpy</span>(s, init, initlen);</span><br><span class="line">    s[initlen] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>With an understanding of the SDS structure, let’s now explore how SDS improves operation efficiency compared to traditional C strings.</p>
<h3 id="SDS-Operation-Efficiency"><a href="#SDS-Operation-Efficiency" class="headerlink" title="SDS Operation Efficiency"></a>SDS Operation Efficiency</h3><p>The SDS structure tracks both the used and allocated space for the character array, which provides greater efficiency compared to traditional C strings. For example, consider the string append operation. In Redis, the function for appending strings is <code>sdscatlen</code> in the <code>sds.c</code> file. This function takes three parameters: the target string <code>s</code>, the source string <code>t</code>, and the length <code>len</code> to append. Here’s the relevant source code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Append the specified binary-safe string pointed by &#x27;t&#x27; of &#x27;len&#x27; bytes to the</span></span><br><span class="line"><span class="comment"> * end of the specified sds string &#x27;s&#x27;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * After the call, the passed sds string is no longer valid and all the</span></span><br><span class="line"><span class="comment"> * references must be substituted with the new pointer returned by the call. */</span></span><br><span class="line">sds <span class="title function_">sdscatlen</span><span class="params">(sds s, <span class="type">const</span> <span class="type">void</span> *t, <span class="type">size_t</span> len)</span> &#123;</span><br><span class="line">    <span class="type">size_t</span> curlen = sdslen(s);</span><br><span class="line"></span><br><span class="line">    s = sdsMakeRoomFor(s,len);</span><br><span class="line">    <span class="keyword">if</span> (s == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">memcpy</span>(s+curlen, t, len);</span><br><span class="line">    sdssetlen(s, curlen+len);</span><br><span class="line">    s[curlen+len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>By analyzing the source code of this function, we can see that the implementation of <code>sdscatlen</code> is quite straightforward and consists of three main steps:</p>
<ol>
<li>First, it retrieves the current length of the destination string and calls <code>sdsMakeRoomFor</code> to check if additional space is needed based on the current length and the length of the data to append. This step ensures there is enough space to accommodate the new data.</li>
<li>Once sufficient space is confirmed, the function appends the specified length of data from the source string to the destination string.</li>
<li>Finally, it updates the length of the destination string.</li>
</ol>
<p>I’ve included a diagram illustrating the execution process of <code>sdscatlen</code> for clarity. Compared to string operations in C, SDS avoids the need for traversing the string by keeping track of the used length and allocated space, which reduces operational overhead. This design approach makes operations like creation, appending, copying, and comparison more efficient and is worth emulating.</p>
<p><img src="/image/redis-src/24091004.png" alt=""></p>
<p>Additionally, SDS encapsulates space checking and resizing for the target string in the <code>sdsMakeRoomFor</code> function. This function is called directly for operations that involve changing the string’s space, such as appending or copying. </p>
<p>This design prevents developers from forgetting to resize the target string, which could otherwise lead to failed operations. For instance, when using the <code>strcpy(char *dest, const char *src)</code> function, if <code>src</code> is longer than <code>dest</code> and we don’t check for this, it could result in a buffer overflow. Thus, this encapsulation approach is a valuable design principle to adopt.</p>
<p>Now, besides using metadata to track string length and the encapsulation approach, what other excellent design and implementation aspects does SDS offer? This is related to the memory efficiency needs I mentioned earlier about Redis.</p>
<p>Let’s delve into how SDS employs programming techniques to optimize memory usage.</p>
<h3 id="Programming-Techniques-for-Compact-String-Structures"><a href="#Programming-Techniques-for-Compact-String-Structures" class="headerlink" title="Programming Techniques for Compact String Structures"></a>Programming Techniques for Compact String Structures</h3><p>Earlier, I mentioned that the SDS structure includes a metadata field called <code>flags</code>, which indicates the SDS type. In fact, SDS defines five types: <code>sdshdr5</code>, <code>sdshdr8</code>, <code>sdshdr16</code>, <code>sdshdr32</code>, and <code>sdshdr64</code>. The key difference among these types lies in the data types used for the <code>len</code> (current length) and <code>alloc</code> (allocated space) fields in their data structures.</p>
<p>Since Redis no longer uses the <code>sdshdr5</code> type, we’ll focus on the remaining four types. For example, here’s the definition of <code>sdshdr8</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">attribute__</span> ((__<span class="title">packed__</span>)) <span class="title">sdshdr8</span> &#123;</span></span><br><span class="line">    <span class="type">uint8_t</span> len; <span class="comment">/* used */</span></span><br><span class="line">    <span class="type">uint8_t</span> alloc; <span class="comment">/* excluding the header and null terminator */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> flags; <span class="comment">/* 3 lsb of type, 5 unused bits */</span></span><br><span class="line">    <span class="type">char</span> buf[];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>We can see that for <code>sdshdr8</code>, both the current length (<code>len</code>) and allocated space (<code>alloc</code>) use <code>uint8_t</code>, an 8-bit unsigned integer that occupies 1 byte. This means that with <code>sdshdr8</code>, the maximum length of the character array, including the null terminator, is 256 bytes (2^8). </p>
<p>For <code>sdshdr16</code>, <code>sdshdr32</code>, and <code>sdshdr64</code>, the <code>len</code> and <code>alloc</code> fields are <code>uint16_t</code>, <code>uint32_t</code>, and <code>uint64_t</code> respectively, allowing for character arrays up to 65,536 bytes, 4,294,967,296 bytes, and 18,446,744,073,709,551,616 bytes. Thus, the metadata for these types consumes 2, 4, and 8 bytes of memory respectively.</p>
<p>The reason for these different structures is to efficiently handle strings of varying sizes and save memory. If all structures used <code>uint64_t</code> for <code>len</code> and <code>alloc</code>, even small strings would waste memory. For example, with a 10-byte string, a <code>uint64_t</code> header would consume 16 bytes, which is inefficient. </p>
<p>Additionally, Redis uses compiler optimizations to further reduce memory usage. For the <code>sdshdr8</code> structure, it uses the <code>__attribute__((__packed__))</code> directive to prevent the compiler from aligning the structure to 8-byte boundaries. This packed attribute ensures that memory is allocated more compactly, avoiding the default 8-byte alignment that would waste space even if a variable is smaller than 8 bytes.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">attribute__</span> ((__<span class="title">packed__</span>)) <span class="title">sdshdr8</span></span></span><br></pre></td></tr></table></figure>
<p>To help you understand, let me give you an example. Suppose I define a structure <code>s1</code> with two member variables: one of type <code>char</code> and the other of type <code>int</code>, like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">s1</span> &#123;</span></span><br><span class="line">        <span class="type">char</span> a;</span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">    &#125; ts1;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lu\n&quot;</span>, <span class="keyword">sizeof</span>(ts1));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Although <code>char</code> takes up 1 byte and <code>int</code> takes up 4 bytes, if you run this code, you’ll notice that the total size printed is 8 bytes. This is because, by default, the compiler allocates 8 bytes to the <code>s1</code> structure, leaving 3 bytes unused due to padding.</p>
<p>To optimize memory usage, Redis takes a very efficient approach. It uses the <code>__attribute__((__packed__))</code> attribute to define structures, ensuring the compiler only allocates exactly the amount of memory needed for the structure’s fields.</p>
<p>For example, if I define another structure <code>s2</code> with the same <code>char</code> and <code>int</code> fields, but use the <code>__attribute__((__packed__))</code> attribute, the code would look like this:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> __<span class="title">attribute__</span>((<span class="title">packed</span>)) <span class="title">s2</span> &#123;</span></span><br><span class="line">        <span class="type">char</span> a;</span><br><span class="line">        <span class="type">int</span> b;</span><br><span class="line">    &#125; ts2;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lu\n&quot;</span>, <span class="keyword">sizeof</span>(ts2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>When you run this code, the printed result is 5 bytes, indicating that the compiler has packed the structure more tightly, using only 5 bytes of memory.</p>
<p>In summary, if you’re developing a program and want to minimize the memory footprint of your data structures, you can use the <code>__attribute__((__packed__))</code> technique to achieve this.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>In this lesson, I introduced you to the design and implementation of strings in Redis. It’s important to understand that string implementations need to prioritize efficiency, support storing any type of binary data, and minimize memory usage. Redis’ approach to string design is definitely something worth studying and applying.</p>
<p>There are three key points you should focus on:</p>
<ol>
<li>The limitations of using <code>char*</code> to implement strings in C. Since <code>char*</code> relies on the <code>\0</code> character to indicate the end of a string, operations often require scanning the entire string, which isn’t efficient. Moreover, it can’t fully represent data that contains <code>\0</code>, which doesn’t meet Redis’ needs.</li>
<li>The design principles and implementation of strings in Redis. Redis introduces a specialized data structure called SDS (Simple Dynamic String), which builds on character arrays by adding metadata like the length of the string and the size of the allocated space. This allows operations like appending, copying, and comparing strings to be done by directly reading the metadata, improving efficiency. SDS also doesn’t use the <code>\0</code> character to mark the end of the string, treating it as binary data, which allows for storing things like images.</li>
<li>SDS uses different types to represent strings of varying sizes and employs the <code>__attribute__((__packed__))</code> technique to achieve a compact memory layout, helping to save memory.</li>
</ol>
<p>While strings may seem simple, today’s lesson shows that implementing them involves thoughtful design. The differences and similarities between C’s <code>char*</code> strings and Redis’ SDS are often asked about in Redis interviews, so I hope you’ll master these distinctions through this lesson.</p>
]]></content>
      <categories>
        <category>Redis Source Code Analysis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis APPEND 命令</title>
    <url>/2023/05/31/redis-cmd-strings-append/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">APPEND key value</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p>假设附加的值很小，并且已经存在的值是任何大小，摊销后的时间复杂度是O(1)，因为Redis使用的动态字符串库会在每次重新分配时将可用空间增加一倍。</p>
<p>如果追加的值比较小，而当前已经存在的值大小任意，那么摊销后的时间复杂度是 $O(1)$，因为 Redis 使用的动态字符串库会在每次重新分配时将可用空间增加一倍。</p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>如果 <code>key</code> 已经存在并且它的值的数据类型是字符串，<code>APPEND</code> 命令会将 <code>value</code> 追加到该 <code>key</code> 原来的值的末尾。如果 <code>key</code> 不存在， <code>APPEND</code> 就简单地将给定 <code>key</code> 设为 <code>value</code> ，就像执行 <code>SET key value</code> 一样。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，表示追加操作后，<code>key</code> 对应值的字符串长度。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>以下例子示范了如何使用 <code>APPEND</code> 命令在 Redis 中追加字符串。</p>
<p>首先，检查 <code>foo</code> 键是否存在，由于返回 0，说明不存在。</p>
<p>然后，执行 <code>APPEND foo &quot;Rain&quot;</code>，向 <code>foo</code> 键追加字符串 <code>&quot;Rain&quot;</code>。<code>APPEND</code> 命令返回追加后的字符串总长度，这里是 4。</p>
<p>接着，再次执行 <code>APPEND foo &quot; rain&quot;</code>，向同一个键追加字符串 <code>&quot; rain&quot;</code>。这次 <code>APPEND</code> 命令返回 9，即追加后的总长度是 9。</p>
<p>最后，使用 <code>GET</code> 命令获取 <code>foo</code> 键的值，返回 <code>&quot;Rain rain&quot;</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS foo</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; APPEND foo <span class="string">&quot;Rain&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">redis&gt; APPEND foo <span class="string">&quot; rain&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line">redis&gt; GET foo</span><br><span class="line"><span class="string">&quot;Rain rain&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>以下示例演示了如果试图使用 <code>APPEND</code> 命令操作一个 <code>list</code> 类型的值，会出现什么结果。</p>
<p>在示例中，我们首先使用 <code>LPUSH</code> 命令向 <code>listkey</code> 键的左侧追加元素 <code>&quot;Rain&quot;</code>，结果返回列表的新长度 1。</p>
<p>然后，使用 <code>LRANGE</code> 查看 <code>listkey</code> 的前 6 个元素，得到 <code>[&quot;Rain&quot;]</code>。</p>
<p>接着，使用 <code>TYPE</code> 命令查看 <code>listkey</code> 所存储值的数据类型，这里是 <code>list</code> 类型。</p>
<p>最后，试图使用 <code>APPEND</code> 命令向 <code>listkey</code> 追加字符串，但是收到 WRONGTYPE 错误，这是因为 <code>APPEND</code> 命令仅适用于值为字符串类型的键，而 <code>listkey</code> 的值是 <code>list</code> 类型。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LPUSH listkey <span class="string">&quot;Rain&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; LRANGE listkey 0 5</span><br><span class="line">1) <span class="string">&quot;Rain&quot;</span></span><br><span class="line">redis&gt; TYPE listkey</span><br><span class="line">list</span><br><span class="line">redis&gt;  APPEND listkey <span class="string">&quot; rain&quot;</span></span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Analyzing Redis Source Code: The Structure and Design of Hash Tables, Chained Hashing, and Incremental Rehashing</title>
    <url>/2024/09/11/analyzing-redis-source-code-hash/</url>
    <content><![CDATA[<blockquote>
<p>Redis offers a classic implementation of hash tables. To handle hash collisions, Redis employs chained hashing, which links data with the same hash value in a list rather than expanding the table. This ensures that all data remains accessible within the hash table. To minimize the performance impact of rehashing, Redis uses a incremental rehashing strategy, which distributes the workload of rehashing over time to reduce system overhead.</p>
</blockquote>
<p>In this article, I’ll guide you through the core design principles and implementation details of Redis hash tables. By understanding how Redis manages hash collisions and optimizes rehashing, you’ll gain the tools to implement high-performance hash tables when handling large datasets in practical applications.</p>
<h2 id="How-does-Redis-Implement-Chained-Hashing"><a href="#How-does-Redis-Implement-Chained-Hashing" class="headerlink" title="How does Redis Implement Chained Hashing?"></a>How does Redis Implement Chained Hashing?</h2><p>Before we dive into Redis’ implementation of chained hashing, it’s essential to first understand the structure of Redis hash tables and the cause of hash collisions as data volume increases. This context will help clarify how chained hashing effectively addresses these collisions.</p>
<h3 id="What-is-a-Hash-Collision"><a href="#What-is-a-Hash-Collision" class="headerlink" title="What is a Hash Collision?"></a>What is a Hash Collision?</h3><p>At its core, a hash table is an array where each element represents a hash bucket. The first element is bucket 0, the second is bucket 1, and so on. When a key-value pair is inserted, the key is processed by a hash function, and the result is taken modulo the number of elements in the array. This gives the index (or bucket) where the key-value pair will be stored.<br>For example, as shown in the diagram below, after hashing key1, it maps to bucket 1. Similarly, key3 and key16 map to buckets 7 and 4, respectively.</p>
<p><img src="/image/redis-src/2024091101.png" alt=""></p>
<p>From the diagram, we see that there are 16 keys to store, but the hash table only has 8 available slots. This leads to a situation where multiple keys are assigned to the same bucket, resulting in a hash collision.</p>
<p>In practical use, it’s often difficult to predict exactly how much data will need to be stored in a hash table. Creating an oversized hash table upfront can lead to wasted space if the data volume remains low. For this reason, hash tables are typically initialized with a smaller size, with the expectation that the number of keys (keyspace) will eventually outgrow the initial table size.</p>
<p>This mismatch between keyspace and hash table size inevitably causes different keys to be mapped to the same bucket by the hash function, resulting in hash collisions. If each bucket can only store a single key-value pair, this limits the hash table’s ability to manage large datasets effectively. For example, if both key3 and key100 are mapped to bucket 5, and bucket 5 can only hold one key, one of the keys would fail to be stored in the hash table.</p>
<p><img src="/image/redis-src/2024091102.png" alt=""></p>
<p>To resolve hash collisions, two common solutions are used:</p>
<ol>
<li><strong>Chaining</strong>, which I’ll introduce next, allows multiple keys to be stored in the same bucket by linking them in a list. However, it’s important to ensure that chains don’t become too long, as this can degrade the hash table’s performance.</li>
<li><strong>Rehashing</strong>, which redistributes the keys when the chain length exceeds a certain threshold. Rehashing can be costly, but Redis mitigates this with incremental rehashing, which spreads the rehashing process over time.</li>
</ol>
<p>Let’s now explore how chained hashing is designed and implemented to handle hash collisions.</p>
<h3 id="How-is-Chained-Hashing-Designed-and-Implemented"><a href="#How-is-Chained-Hashing-Designed-and-Implemented" class="headerlink" title="How is Chained Hashing Designed and Implemented?"></a>How is Chained Hashing Designed and Implemented?</h3><p>Chained hashing is a technique where keys mapped to the same bucket in a hash table are linked together using a linked list. Let’s explore how Redis implements chained hashing and why it’s effective in resolving hash collisions.</p>
<p>First, we need to understand how the hash table is implemented in Redis. The source code related to Redis’s hash table can be found in two main files: <code>dict.h</code> and <code>dict.c</code>. The <code>dict.h</code> file defines the structure of the hash table, hash entries, and various operation functions, while <code>dict.c</code> contains the actual implementation of these operations.</p>
<p>In <code>dict.h</code>, the hash table is defined as a two-dimensional array (<code>dictEntry **table</code>), where each element is a pointer to a hash entry (<code>dictEntry</code>). The following code snippet shows how the hash table is defined in <code>dict.h</code>.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* This is our hash table structure. Every dictionary has two of this as we</span></span><br><span class="line"><span class="comment"> * implement incremental rehashing, for the old to the new table. */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">dictht</span> &#123;</span></span><br><span class="line">    dictEntry **table;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> size;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> sizemask;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> used;</span><br><span class="line">&#125; dictht;</span><br></pre></td></tr></table></figure>
<p>To implement chained hashing, Redis’s <code>dictEntry</code> structure is designed to include a pointer not only to the key and value but also to the next hash entry. This is what creates the linked list for handling collisions. As shown in the code, the <code>dictEntry</code> structure includes a pointer, <code>*next</code>, which points to another <code>dictEntry</code> structure—this is how Redis implements chained hashing.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">dictEntry</span> &#123;</span></span><br><span class="line">    <span class="type">void</span> *key;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">        <span class="type">void</span> *val;</span><br><span class="line">        <span class="type">uint64_t</span> u64;</span><br><span class="line">        <span class="type">int64_t</span> s64;</span><br><span class="line">        <span class="type">double</span> d;</span><br><span class="line">    &#125; v;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dictEntry</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; dictEntry;</span><br></pre></td></tr></table></figure>
<p>In addition to the <code>next</code> pointer for chaining, there’s another interesting detail worth noting. The value in the key-value pair is defined by a union, <code>v</code>, in the <code>dictEntry</code> structure. This union includes a pointer to the actual value (<code>*val</code>), as well as fields for storing an unsigned 64-bit integer, a signed 64-bit integer, or a <code>double</code> value.</p>
<p>The reason I’m pointing this out is that this design choice is a clever memory-saving technique. When the value is an integer or a double, which are 64-bit types, there’s no need for an additional pointer to store the value. Instead, the value can be stored directly within the key-value structure, reducing the need for extra memory.</p>
<p>At this point, you should have a solid understanding of how Redis implements chained hashing. But you might still be wondering how this helps resolve hash collisions. </p>
<p>Let me explain using an example: both <code>key3</code> and <code>key100</code> are mapped to bucket 5 in the hash table. With chained hashing, bucket 5 doesn’t just store <code>key3</code> or <code>key100</code>—instead, it uses a linked list to connect <code>key3</code> and <code>key100</code>, as shown in the diagram below. As more keys are mapped to bucket 5, they are all linked together in a list, thus managing the collisions.</p>
<p><img src="/image/redis-src/2024091103.png" alt=""></p>
<p>When we want to search for <code>key100</code>, we start by computing its hash value and finding that it maps to bucket 5. We then traverse the linked list in bucket 5, comparing each key until we find <code>key100</code>. This is how chained hashing allows us to resolve collisions and locate the desired entry.</p>
<p>However, there is a drawback to chained hashing. As the linked list in a single bucket grows longer, the time it takes to search for a key in that bucket increases, which can degrade the overall performance of the hash table.</p>
<p>So, is there a way to minimize the performance impact? Yes! That brings us to the next topic: the design and implementation of <em>rehashing</em>.</p>
<h2 id="How-does-Redis-Implement-Rehashing"><a href="#How-does-Redis-Implement-Rehashing" class="headerlink" title="How does Redis Implement Rehashing?"></a>How does Redis Implement Rehashing?</h2><p>Rehashing in Redis essentially refers to expanding the size of the hash table. The basic approach Redis takes to implement rehashing is as follows:</p>
<ol>
<li><strong>Redis uses two hash tables alternately during rehashing</strong>. As I mentioned earlier, Redis defines the hash table using the <code>dictht</code> structure in <code>dict.h</code>. However, when actually using the hash table, Redis also defines a <code>dict</code> structure in the same file. This structure contains an array (<code>ht[2]</code>) with two hash tables: <code>ht[0]</code> and <code>ht[1]</code>. The <code>dict</code> structure is defined in the code as follows:</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">dict</span> &#123;</span></span><br><span class="line">    dictType *type;</span><br><span class="line">    <span class="type">void</span> *privdata;</span><br><span class="line">    dictht ht[<span class="number">2</span>];</span><br><span class="line">    <span class="type">long</span> rehashidx; <span class="comment">/* rehashing not in progress if rehashidx == -1 */</span></span><br><span class="line">    <span class="type">int16_t</span> pauserehash; <span class="comment">/* If &gt;0 rehashing is paused (&lt;0 indicates coding error) */</span></span><br><span class="line">&#125; dict;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>During normal operation, all key-value pairs are written to</strong> <code>ht[0]</code>.</li>
<li><strong>When rehashing occurs</strong>, key-value pairs are gradually migrated from <code>ht[0]</code> to <code>ht[1]</code>.</li>
<li><strong>After migration is complete</strong>, the memory space of <code>ht[0]</code> is released, and the address of <code>ht[1]</code> is assigned to <code>ht[0]</code>. Then, the size of <code>ht[1]</code> is reset to zero. At this point, Redis resumes normal operations, with <code>ht[0]</code> handling requests and <code>ht[1]</code> reserved for the next rehash.</li>
</ol>
<p>To help you understand this alternating process between <code>ht[0]</code> and <code>ht[1]</code>, I’ve included a diagram below.</p>
<p><img src="/image/redis-src/2024091104.png" alt=""></p>
<p>Now that you have a basic understanding of how Redis alternates between two hash tables to implement rehashing, let’s discuss some important questions that need to be addressed during rehashing. I believe there are three key issues to consider:</p>
<ol>
<li><strong>When should rehashing be triggered?</strong></li>
<li><strong>How much should the hash table be expanded?</strong></li>
<li><strong>How should rehashing be carried out?</strong></li>
</ol>
<p>Next, I’ll walk you through the code implementation for each of these questions, so you can clearly see how Redis handles these aspects of rehashing.</p>
<h3 id="When-Should-Rehashing-Be-Triggered"><a href="#When-Should-Rehashing-Be-Triggered" class="headerlink" title="When Should Rehashing Be Triggered?"></a>When Should Rehashing Be Triggered?</h3><p>To determine when rehashing is needed, Redis uses the function <code>_dictExpandIfNeeded</code>. Let’s first look at the conditions within this function that trigger resizing, and then explore where this function is called in the Redis codebase.</p>
<p>There are three conditions defined in the <code>_dictExpandIfNeeded</code> function that can trigger expansion:</p>
<ol>
<li><strong>Condition 1</strong>: The size of <code>ht[0]</code> is zero.</li>
<li><strong>Condition 2</strong>: The number of elements in <code>ht[0]</code> exceeds its current size, and the hash table can be resized.</li>
<li><strong>Condition 3</strong>: The number of elements in <code>ht[0]</code> is a multiple of the table size, defined by <code>dict_force_resize_ratio</code> (which defaults to 5).</li>
</ol>
<p>Here’s a snippet of the code defining these conditions in the <code>_dictExpandIfNeeded</code> function:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Expand the hash table if needed */</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> _dictExpandIfNeeded(dict *d)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* Incremental rehashing already in progress. Return. */</span></span><br><span class="line">    <span class="keyword">if</span> (dictIsRehashing(d)) <span class="keyword">return</span> DICT_OK;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If the hash table is empty expand it to the initial size. */</span></span><br><span class="line">    <span class="keyword">if</span> (d-&gt;ht[<span class="number">0</span>].size == <span class="number">0</span>) <span class="keyword">return</span> dictExpand(d, DICT_HT_INITIAL_SIZE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If we reached the 1:1 ratio, and we are allowed to resize the hash</span></span><br><span class="line"><span class="comment">     * table (global setting) or we should avoid it but the ratio between</span></span><br><span class="line"><span class="comment">     * elements/buckets is over the &quot;safe&quot; threshold, we resize doubling</span></span><br><span class="line"><span class="comment">     * the number of buckets. */</span></span><br><span class="line">    <span class="keyword">if</span> (!dictTypeExpandAllowed(d))</span><br><span class="line">        <span class="keyword">return</span> DICT_OK;</span><br><span class="line">    <span class="keyword">if</span> ((dict_can_resize == DICT_RESIZE_ENABLE &amp;&amp;</span><br><span class="line">         d-&gt;ht[<span class="number">0</span>].used &gt;= d-&gt;ht[<span class="number">0</span>].size) ||</span><br><span class="line">        (dict_can_resize != DICT_RESIZE_FORBID &amp;&amp;</span><br><span class="line">         d-&gt;ht[<span class="number">0</span>].used / d-&gt;ht[<span class="number">0</span>].size &gt; dict_force_resize_ratio))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> dictExpand(d, d-&gt;ht[<span class="number">0</span>].used + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> DICT_OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>For the first condition, if the hash table is empty, Redis simply sets the table to its initial size, which is part of initialization, not rehashing. </p>
<p>Conditions two and three, however, correspond to rehashing scenarios. In both cases, Redis compares the number of elements in the hash table (<code>d-&gt;ht[0].used</code>) with the table’s current size (<code>d-&gt;ht[0].size</code>). This ratio is known as the <strong>load factor</strong>. Redis triggers rehashing when the load factor is either equal to or greater than 1, or greater than 5.</p>
<p>When the load factor exceeds 5, it indicates that the hash table is severely overloaded and needs to be resized immediately. If the load factor is 1 or greater, Redis checks the value of the variable <code>dict_can_resize</code> to determine if resizing is currently allowed.</p>
<p>You may wonder, what exactly is the <code>dict_can_resize</code> variable? This variable is controlled by two functions: <code>dictEnableResize</code> and <code>dictDisableResize</code>, which enable and disable hash table resizing, respectively:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">dictEnableResize</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    dict_can_resize = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">dictDisableResize</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    dict_can_resize = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>These functions are wrapped within <code>updateDictResizePolicy</code>. This function enables or disables rehashing based on whether Redis is currently running an RDB snapshot or AOF rewrite process. If neither process is running, rehashing is allowed:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">updateDictResizePolicy</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (server.rdb_child_pid == <span class="number">-1</span> &amp;&amp; server.aof_child_pid == <span class="number">-1</span>)</span><br><span class="line">        dictEnableResize();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        dictDisableResize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now that we understand the conditions for triggering rehashing in <code>_dictExpandIfNeeded</code>, let’s look at where this function is called in Redis. By examining the <code>dict.c</code> file, we can see that <code>_dictExpandIfNeeded</code> is invoked by the <code>_dictKeyIndex</code> function, which is itself called by <code>dictAddRaw</code>. The <code>dictAddRaw</code> function is then called by three key functions:</p>
<ol>
<li><code>dictAdd</code>: Adds a key-value pair to the hash table.</li>
<li><code>dictReplace</code>: Adds a key-value pair or replaces an existing one.</li>
<li><code>dictAddOrFind</code>: Calls <code>dictAddRaw</code> directly.</li>
</ol>
<p>Thus, every time Redis adds or modifies a key-value pair, it checks whether rehashing is necessary. The following diagram illustrates the call relationships leading to <code>_dictExpandIfNeeded</code>.</p>
<p><img src="/image/redis-src/2024091105.png" alt=""></p>
<p>In summary, the key functions responsible for triggering rehashing in Redis are <code>_dictExpandIfNeeded</code> and <code>updateDictResizePolicy</code>. The former checks the load factor and whether resizing is allowed, while the latter enables or disables resizing based on RDB and AOF processes.</p>
<p>Next, we’ll explore the second major question in rehashing: <strong>how much should Redis expand the hash table?</strong></p>
<h3 id="How-Much-Should-the-Hash-Table-Be-Expanded"><a href="#How-Much-Should-the-Hash-Table-Be-Expanded" class="headerlink" title="How Much Should the Hash Table Be Expanded?"></a>How Much Should the Hash Table Be Expanded?</h3><p>In Redis, when resizing the hash table space due to rehashing, it calls the <code>**dictExpand**</code> function. This function takes two parameters: the hash table to be resized (<code>**dict *d**</code>) and the target size (<code>**unsigned long size**</code>). The prototype of the <code>**dictExpand**</code> function is shown below:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">dictExpand</span><span class="params">(dict *d, <span class="type">unsigned</span> <span class="type">long</span> size)</span>;</span><br></pre></td></tr></table></figure>
<p>To determine whether resizing is needed for a hash table, we use the <code>**_dictExpandIfNeeded**</code> function. Once resizing is deemed necessary, Redis expands the hash table during rehashing by doubling its current size (<code>**size * 2**</code>) if the current table’s used space is <code>**size**</code>, as illustrated in the following code snippet:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">dictExpand(d, d-&gt;ht[<span class="number">0</span>].used + <span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<p>The actual resizing process in the <code>**dictExpand**</code> function is managed by the <code>**_dictNextPower**</code> function. This function continuously doubles the hash table’s initial size (<code>**DICT_HT_INITIAL_SIZE**</code>) until it reaches the target size, as shown in the code snippet below:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Our hash table capability is a power of two */</span></span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">long</span> _dictNextPower(<span class="type">unsigned</span> <span class="type">long</span> size)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> i = DICT_HT_INITIAL_SIZE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (size &gt;= LONG_MAX) <span class="keyword">return</span> LONG_MAX + <span class="number">1LU</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= size)</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        i *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now, let’s delve into Redis’s approach to addressing the third issue: how to execute rehashing. Essentially, this involves Redis implementing a incremental rehashing design.</p>
<h3 id="How-is-Incremental-Rehashing-Implemented"><a href="#How-is-Incremental-Rehashing-Implemented" class="headerlink" title="How is Incremental Rehashing Implemented?"></a>How is Incremental Rehashing Implemented?</h3><p>First, let’s clarify why we need incremental rehashing in the first place. When a hash table undergoes rehashing, the hash table space expands, and keys that were mapped to certain positions may now need to be relocated to new ones. This means many keys must be copied from their old positions to new ones. During this key copying process, Redis’s main thread is unable to handle other requests, causing the rehashing process to block the main thread and lead to performance overhead.</p>
<p>To mitigate this overhead, Redis introduced the concept of incremental rehashing.</p>
<p>In simple terms, incremental rehashing means Redis doesn’t copy all the keys from the current hash table to the new one in a single operation. Instead, it copies them in batches, with each operation only transferring keys from one bucket at a time. This limits the duration of each copying operation, thereby reducing its impact on the main thread.</p>
<p>So, how is incremental rehashing implemented in the code? There are two key functions involved: <code>dictRehash</code> and <code>_dictRehashStep</code>.</p>
<p>Let’s start with the <code>dictRehash</code> function, which performs the actual key copying. It takes two input parameters: the global hash table (which consists of the <code>dict</code> structure holding <code>ht[0]</code> and <code>ht[1]</code>) and the number of buckets to be rehashed.</p>
<p>The logic of the <code>dictRehash</code> function is divided into two parts:</p>
<ol>
<li>First, it runs a loop, copying the keys in each bucket according to the specified number of buckets <code>n</code>. Of course, if all the data in <code>ht[0]</code> has already been transferred, the copying loop stops.</li>
<li>Second, after copying <code>n</code> buckets, the function checks whether all the data in <code>ht[0]</code> has been migrated. If so, the space for <code>ht[0]</code> is released. Since Redis always references <code>ht[0]</code> when handling requests, once the rehashing process is complete and the data is fully in <code>ht[1]</code>, Redis assigns <code>ht[1]</code> to <code>ht[0]</code>, ensuring that other parts of the code can continue functioning as expected. After this, the size of <code>ht[1]</code> is reset to zero in preparation for the next rehash. At the same time, the global hash table’s <code>rehashidx</code> variable is set to -1, indicating that the rehash process has finished (I’ll explain the purpose of the <code>rehashidx</code> variable shortly).</li>
</ol>
<p>Here’s a diagram that illustrates the primary steps of the <code>dictRehash</code> function. </p>
<p><img src="/image/redis-src/2024091106.png" alt=""></p>
<p>You can also check the code snippet below to better understand its logic.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Performs N steps of incremental rehashing. Returns 1 if there are still</span></span><br><span class="line"><span class="comment"> * keys to move from the old to the new hash table, otherwise 0 is returned.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Note that a rehashing step consists in moving a bucket (that may have more</span></span><br><span class="line"><span class="comment"> * than one key as we use chaining) from the old to the new hash table, however</span></span><br><span class="line"><span class="comment"> * since part of the hash table may be composed of empty spaces, it is not</span></span><br><span class="line"><span class="comment"> * guaranteed that this function will rehash even a single bucket, since it</span></span><br><span class="line"><span class="comment"> * will visit at max N*10 empty buckets in total, otherwise the amount of</span></span><br><span class="line"><span class="comment"> * work it does would be unbound and the function may block for a long time. */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">dictRehash</span><span class="params">(dict *d, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> empty_visits = n*<span class="number">10</span>; <span class="comment">/* Max number of empty buckets to visit. */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> s0 = d-&gt;ht[<span class="number">0</span>].size;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> s1 = d-&gt;ht[<span class="number">1</span>].size;</span><br><span class="line">    <span class="keyword">if</span> (dict_can_resize == DICT_RESIZE_FORBID || !dictIsRehashing(d)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (dict_can_resize == DICT_RESIZE_AVOID &amp;&amp; </span><br><span class="line">        ((s1 &gt; s0 &amp;&amp; s1 / s0 &lt; dict_force_resize_ratio) ||</span><br><span class="line">         (s1 &lt; s0 &amp;&amp; s0 / s1 &lt; dict_force_resize_ratio)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(n-- &amp;&amp; d-&gt;ht[<span class="number">0</span>].used != <span class="number">0</span>) &#123;</span><br><span class="line">        dictEntry *de, *nextde;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Note that rehashidx can&#x27;t overflow as we are sure there are more</span></span><br><span class="line"><span class="comment">         * elements because ht[0].used != 0 */</span></span><br><span class="line">        assert(d-&gt;ht[<span class="number">0</span>].size &gt; (<span class="type">unsigned</span> <span class="type">long</span>)d-&gt;rehashidx);</span><br><span class="line">        <span class="keyword">while</span>(d-&gt;ht[<span class="number">0</span>].table[d-&gt;rehashidx] == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            d-&gt;rehashidx++;</span><br><span class="line">            <span class="keyword">if</span> (--empty_visits == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        de = d-&gt;ht[<span class="number">0</span>].table[d-&gt;rehashidx];</span><br><span class="line">        <span class="comment">/* Move all the keys in this bucket from the old to the new hash HT */</span></span><br><span class="line">        <span class="keyword">while</span>(de) &#123;</span><br><span class="line">            <span class="type">uint64_t</span> h;</span><br><span class="line"></span><br><span class="line">            nextde = de-&gt;next;</span><br><span class="line">            <span class="comment">/* Get the index in the new hash table */</span></span><br><span class="line">            h = dictHashKey(d, de-&gt;key) &amp; d-&gt;ht[<span class="number">1</span>].sizemask;</span><br><span class="line">            de-&gt;next = d-&gt;ht[<span class="number">1</span>].table[h];</span><br><span class="line">            d-&gt;ht[<span class="number">1</span>].table[h] = de;</span><br><span class="line">            d-&gt;ht[<span class="number">0</span>].used--;</span><br><span class="line">            d-&gt;ht[<span class="number">1</span>].used++;</span><br><span class="line">            de = nextde;</span><br><span class="line">        &#125;</span><br><span class="line">        d-&gt;ht[<span class="number">0</span>].table[d-&gt;rehashidx] = <span class="literal">NULL</span>;</span><br><span class="line">        d-&gt;rehashidx++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Check if we already rehashed the whole table... */</span></span><br><span class="line">    <span class="keyword">if</span> (d-&gt;ht[<span class="number">0</span>].used == <span class="number">0</span>) &#123;</span><br><span class="line">        zfree(d-&gt;ht[<span class="number">0</span>].table);</span><br><span class="line">        d-&gt;ht[<span class="number">0</span>] = d-&gt;ht[<span class="number">1</span>];</span><br><span class="line">        _dictReset(&amp;d-&gt;ht[<span class="number">1</span>]);</span><br><span class="line">        d-&gt;rehashidx = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* More to rehash... */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now that we’ve covered the core functionality of the <code>dictRehash</code> function, let’s explore how incremental rehashing works by migrating data at the bucket level. This is where the <code>rehashidx</code> variable in the global hash table structure comes into play.</p>
<p>The <code>rehashidx</code> variable indicates which bucket is currently being migrated. For instance, when <code>rehashidx</code> is 0, the first bucket in <code>ht[0]</code> is being migrated; when it’s 1, the second bucket is being migrated, and so on.</p>
<p>The main loop in the <code>dictRehash</code> function checks whether the bucket pointed to by <code>rehashidx</code> is empty. If it is, <code>rehashidx</code> is incremented, and the next bucket is examined.</p>
<p>But is it possible for multiple consecutive buckets to be empty? Yes, it is. In such cases, incremental rehashing doesn’t just keep incrementing <code>rehashidx</code> indefinitely. The reason is that during rehashing, the Redis main thread is unable to handle other requests. Therefore, Redis introduces a variable called <code>empty_visits</code> to track how many empty buckets have been checked. After a certain number of empty buckets have been examined, the current round of rehashing stops, allowing Redis to process external requests and avoid performance degradation. You can see this logic in the code snippet below.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(d-&gt;ht[<span class="number">0</span>].table[d-&gt;rehashidx] == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    d-&gt;rehashidx++;</span><br><span class="line">    <span class="keyword">if</span> (--empty_visits == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>If the bucket that <code>rehashidx</code> points to contains data for migration, Redis will take each hash entry from that bucket, recalculate its new position in <code>ht[1]</code> based on the size of <code>ht[1]</code>, and insert the hash entry into the appropriate bucket in <code>ht[1]</code>. Each time a hash entry is migrated, the <code>used</code> variables in <code>ht[0]</code> and <code>ht[1]</code> (which track how many entries each table holds) are updated—<code>used</code> in <code>ht[0]</code> decreases by one, while <code>used</code> in <code>ht[1]</code> increases by one. Once all data in the current bucket is migrated, <code>rehashidx</code> is incremented, and the process continues with the next bucket. The code snippet below illustrates this migration process.</p>
<p>By now, we’ve covered the complete logic of the <code>dictRehash</code> function. We know that <code>dictRehash</code> migrates hash entries on a bucket-by-bucket basis, with the number of buckets processed being determined by the loop count parameter <code>n</code>. Whenever Redis performs a rehash operation, it eventually calls the <code>dictRehash</code> function.</p>
<p>Next, let’s look at the second key function involved in incremental rehashing: <code>_dictRehashStep</code>, which performs rehashing one bucket at a time. According to Redis’s source code, there are five functions that call <code>_dictRehashStep</code>, which in turn calls <code>dictRehash</code> to carry out the rehashing process. These functions are: <code>dictAddRaw</code>, <code>dictGenericDelete</code>, <code>dictFind</code>, <code>dictGetRandomKey</code>, and <code>dictGetSomeKeys</code>.</p>
<p>The functions <code>dictAddRaw</code> and <code>dictGenericDelete</code> are used to add and delete key-value pairs in Redis, while the other three functions are for querying. The diagram below shows the relationships between these functions.</p>
<p><img src="/image/redis-src/2024091107.png" alt=""></p>
<p>It’s important to note that regardless of whether you’re adding, deleting, or querying, when these five functions call <code>_dictRehashStep</code>, the loop count parameter <code>n</code> passed to <code>dictRehash</code> is always set to 1, as shown in the following code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> _dictRehashStep(dict *d) &#123;</span><br><span class="line">    <span class="comment">// Passes 1 as the loop count parameter to `dictRehash`, meaning that after migrating one bucket, normal operations resume</span></span><br><span class="line">    <span class="keyword">if</span> (d-&gt;iterators == <span class="number">0</span>) dictRehash(d, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This means that after migrating a single bucket, the hash table is free to handle regular add, delete, or query operations. This is how incremental rehashing is implemented at the code level.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Creating a high-performance hash table is not only a priority for Redis but also a crucial goal in the development of many computer systems. To build an efficient hash table, two key issues need to be addressed: hash collisions and the overhead of rehashing.</p>
<p>In this article, we explored the structure of Redis’s hash table, the implementation of chained hashing, and the design and implementation of incremental rehashing. Redis’s hash table structure is unique—each hash entry contains a pointer, enabling chained hashing. Additionally, Redis uses a global hash table that contains two hash tables, a design that facilitates data migration from one table to another during rehashing.</p>
<p>The incremental rehashing mechanism in Redis is a general method for hash table expansion and is worth studying. Its core idea is to migrate only a limited number of buckets at a time, preventing performance issues that arise from migrating all buckets in one go. Once you understand the concept and implementation of incremental rehashing, you can apply it to your own hash table designs.</p>
]]></content>
      <categories>
        <category>Redis Source Code Analysis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis DECR 命令</title>
    <url>/2023/06/01/redis-cmd-strings-decr/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DECR key</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$</p>
<p><strong>ACL 类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>将存储在 <code>key</code> 的数字值减 1。如果 <code>key</code> 不存在，则先将 <code>key</code> 的值初始化为 0，然后再执行 <code>DECR</code> 操作。如果 <code>key</code> 包含一个错误类型的值或包含一个不能表示为整数的字符串，则返回错误。这个操作仅限于 64 位有符号的整数。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，表示执行 <code>DECR</code> 操作后，<code>key</code> 对应的值。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>以下示例演示了当对一个不存在的键执行 <code>DECR</code> 操作时，Redis 会先为该键创建一个初始值为 0 的值，然后再执行减一操作。</p>
<ol>
<li>使用 <code>EXISTS</code> 命令检查 <code>foo</code> 键是否存在，返回 0，表示键不存在。</li>
<li>然后使用 <code>DECR</code> 命令对 <code>foo</code> 键执行减一操作。由于键不存在，<code>DECR</code> 命令会先为 <code>foo</code> 键创建一个值，并将其设置为 0，然后再对其执行减一操作，使值变为 -1。<code>DECR</code> 返回 -1。</li>
<li>接着使用 <code>GET</code> 命令获取 <code>foo</code> 的值，返回 <code>&quot;-1&quot;</code>。</li>
<li>再次使用 <code>DECR</code> 命令对 <code>foo</code> 执行减一操作，使其值变为 -2。<code>DECR</code> 返回 -2。</li>
<li>至此，<code>foo</code> 键的值变为 -2。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS foo</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; DECR foo</span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br><span class="line">redis&gt; GET foo</span><br><span class="line"><span class="string">&quot;-1&quot;</span></span><br><span class="line">redis&gt; DECR foo</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>以下示例演示了Redis 的 <code>DECR</code> 命令要求键的值必须是整数，才能正确执行减一操作。如果键的值是字符串，则会返回错误。</p>
<ol>
<li>首先使用 <code>SET</code> 命令将 <code>name</code> 键的值设置为字符串 <code>&quot;johnson&quot;</code>。<code>SET</code> 命令返回 OK，表示设置成功。</li>
<li>然后使用 <code>GET</code> 命令获取 <code>name</code> 键的值，返回 <code>&quot;johnson&quot;</code>。</li>
<li>接着试图使用 <code>DECR</code> 命令对 <code>name</code> 键执行减一操作。由于 <code>name</code> 键的值是不能表示为整数的字符串，所以 <code>DECR</code> 命令返回 <code>(error) ERR value is not an integer or out of range</code> 错误，表示该值不是整数，无法执行减一操作。</li>
<li>因为 <code>DECR</code> 命令要求键的值必须是整数，才能对其执行减一操作。而 <code>name</code> 键的值是字符串 <code>&quot;johnson&quot;</code>，所以无法使用 <code>DECR</code> 命令减一，从而导致错误。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET name johnson</span><br><span class="line">OK</span><br><span class="line">redis&gt; GET name</span><br><span class="line"><span class="string">&quot;johnson&quot;</span></span><br><span class="line">redis&gt; DECR name</span><br><span class="line">(error) ERR value is not an <span class="built_in">integer</span> or out of range</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>以下示例演示了对 Redis 中最小 64 位有符号整数值进行减一操作会导致整数溢出，从而返回错误，操作失败。</p>
<ol>
<li>首先使用 <code>SET</code> 命令将 <code>foo</code> 键的值设置为整数 -9223372036854775807，这是 64 位带符号整数能表示的次最小值。<code>SET</code> 命令返回 OK，表示设置成功。</li>
<li>然后使用 <code>DECR</code> 命令对 <code>foo</code> 键执行减一操作。返回 -9223372036854775808，这是 64 位带符号整数的最小值。</li>
<li>接着再次使用 <code>DECR</code> 命令试图对 <code>foo</code> 键执行减一操作。但是，由于键的值已经是最小的 64 位有符号整数，再减一会导致整数溢出，所以 <code>DECR</code> 命令返回 <code>(error) ERR increment or decrement would overflow</code> 错误，表示 <code>DECR</code> 操作会导致整数溢出。</li>
<li>由于整数的范围限制，对 64 位有符号整数最小值进行减一操作会导致溢出，所以 Redis 返回错误，拒绝执行该操作。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET foo -9223372036854775807</span><br><span class="line">OK</span><br><span class="line">redis&gt; DECR foo</span><br><span class="line">(<span class="built_in">integer</span>) -9223372036854775808</span><br><span class="line">redis&gt; DECR foo</span><br><span class="line">(error) ERR increment or decrement would overflow</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>64 位有符号整数的数值范围：[-9223372036854775808, 9223372036854775807]</p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis DECRBY 命令</title>
    <url>/2023/06/02/redis-cmd-strings-decrby/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DECRBY key decrement</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$</p>
<p><strong>ACL 类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>将存储在 <code>key</code> 的数字值减去 <code>decrement</code>。如果 <code>key</code> 不存在，则先将 <code>key</code> 的值初始化为 0，然后再执行 <code>DECRBY</code> 操作。如果 <code>key</code> 包含一个错误类型的值或包含一个不能表示为整数的字符串，则返回错误。这个操作仅限于 64 位有符号的整数。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，表示执行 <code>DECRBY</code> 操作后，<code>key</code> 对应的值。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>对已存在且其值类型为整数的 key 进行 <code>DECRBY</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET cnt 1000</span><br><span class="line">OK</span><br><span class="line">redis&gt; DECRBY cnt 1</span><br><span class="line">(<span class="built_in">integer</span>) 999</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>对不存在的 key 进行 <code>DECRBY</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS cnt</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; DECRBY cnt 1</span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br><span class="line">redis&gt; GET cnt</span><br><span class="line"><span class="string">&quot;-1&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>对已存在、但值类型为列表的 key 进行 <code>DECRBY</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LPUSH user_list johnsonlin</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; TYPE user_list</span><br><span class="line">list</span><br><span class="line">redis&gt; LRANGE user_list 0 10</span><br><span class="line">1) <span class="string">&quot;johnsonlin&quot;</span></span><br><span class="line">redis&gt; DECRBY user_list 10</span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-4"><a href="#示例-4" class="headerlink" title="示例 4"></a>示例 4</h2><p>对已存在且其值为 $-2^{63}$（即 64 位有符号整数的最小值 -9223372036854775808）的 key 进行 <code>DECRBY</code> 操作，导致整数溢出错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET bigint_min <span class="string">&quot;-9223372036854775808&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; DECRBY bigint_min 1</span><br><span class="line">(error) ERR increment or decrement would overflow</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>64 位有符号整数的数值范围：[-9223372036854775808, 9223372036854775807]</p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis GET 命令</title>
    <url>/2023/05/31/redis-cmd-strings-get/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET key</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$</p>
<p><strong>ACL 类别</strong></p>
<p><strong><code>@read</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>返回 key 的值，如果 key 不存在时，返回 nil。 如果存储在 key 的值不是字符串类型，则返回一个错误，因为 <code>GET</code> 命令只处理字符串值。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>在此示例中，我们演示了使用 <code>GET</code> 命令获取 <code>foo</code> 键在存在与不存在两种情况下的值。</p>
<p>首先，我们使用 <code>EXISTS</code> 命令检查 <code>foo</code> 键是否存在，返回 0，表示不存在。</p>
<p>然后，我们试图通过 <code>GET</code> 命令获取 <code>foo</code> 的值，由于键不存在，返回 <code>nil</code>。</p>
<p>接着，我们使用 <code>SET</code> 命令给 <code>foo</code> 键设置字符串值 <code>&quot;Rain&quot;</code>。<code>SET</code> 命令返回 OK，表示设置成功。</p>
<p>最后，再次使用 <code>GET</code> 命令获取 <code>foo</code> 的值，这次返回 <code>&quot;Rain&quot;</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS foo</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; GET foo</span><br><span class="line">(nil)</span><br><span class="line">redis&gt; SET foo <span class="string">&quot;Rain&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GET foo</span><br><span class="line"><span class="string">&quot;Rain&quot;</span></span><br><span class="line">redis&gt; </span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>在此示例中，我们演示了使用 <code>GET</code> 命令获取存储值为 <code>list</code> 类型的值时出现的错误。<br>首先，我们使用 <code>LPUSH</code> 命令向 <code>listkey</code> 键的左侧追加元素 <code>&quot;Rain&quot;</code>。<code>LPUSH</code> 返回 1，表示列表现在有 1 个元素。</p>
<p>然后，我们使用 <code>LRANGE</code> 命令查看 <code>listkey</code> 列表的前 6 个元素，得到 <code>[&quot;Rain&quot;]</code>，证明我们成功添加了元素。</p>
<p>接着，检查 <code>listkey</code> 的类型，得到 <code>list</code>，确认是一个列表。</p>
<p>最后，试图使用 <code>GET</code> 命令来读取 <code>listkey</code> 的值，但是得到 WRONGTYPE 错误，因为 <code>GET</code> 命令只能用于字符串键，而 <code>listkey</code> 是一个列表键。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LPUSH listkey <span class="string">&quot;Rain&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; LRANGE listkey 0 5</span><br><span class="line">1) <span class="string">&quot;Rain&quot;</span></span><br><span class="line">redis&gt; TYPE listkey</span><br><span class="line">list</span><br><span class="line">redis&gt; GET listkey</span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis GETDEL 命令</title>
    <url>/2023/06/01/redis-cmd-strings-getdel/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GETDEL key</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 6.2.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$</p>
<p><strong>ACL 类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>获取 <code>key</code> 的值并删除该 <code>key</code>。</p>
<ul>
<li>如果 <code>key</code> 不存在，则返回 <code>nil</code>。</li>
<li>如果存储在 <code>key</code> 的值不是字符串类型，则返回一个错误。</li>
</ul>
<p>该命令与 <code>GET</code> 类似，除了它在成功时会删除键（当且仅当键的值类型是字符串时）。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>返回 <code>key</code> 的值，如果 <code>key</code> 不存在则返回 <code>nil</code>，如果 <code>key</code> 的值类型不是字符串则返回错误。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>在此示例中演示了 Redis 的 <code>GETDEL</code> 命令同时获取值并删除的效果。</p>
<p>在这个示例中：</p>
<ol>
<li>首先使用 <code>SET</code> 命令设置 KEY token 的值为 <code>access_token</code></li>
<li>使用 <code>GET</code> 命令获取 token 的值，返回 <code>access_token</code></li>
<li>使用 <code>GETDEL</code> 命令获取 token 的值，并删除该 KEY，返回 <code>access_token</code></li>
<li>再次使用 <code>GET</code> 命令获取 token 的值，由于该 KEY 已被删除，所以返回 <code>nil</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET token <span class="string">&#x27;access_token&#x27;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GET token</span><br><span class="line"><span class="string">&quot;access_token&quot;</span></span><br><span class="line">redis&gt; GETDEL token</span><br><span class="line"><span class="string">&quot;access_token&quot;</span></span><br><span class="line">redis&gt; GET token</span><br><span class="line">(nil)</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>在此示例中演示了 <code>GETDEL</code> 命令只支持字符串键的限制，对其他类型的键使用会报错。</p>
<p>在这个示例中：</p>
<ol>
<li>首先使用 <code>LPUSH</code> 命令向 list_key 列表键插入 <code>a</code> 值</li>
<li>尝试使用 <code>GETDEL</code> 命令获取 list_key 的值并删除该键</li>
<li>返回 <code>WRONGTYPE Operation against a key holding the wrong kind of value</code> 错误</li>
</ol>
<p>这是因为 <code>GETDEL</code> 命令只支持字符串键，而 list_key 是一个列表键，所以使用 <code>GETDEL</code> 操作 list_key 会报错。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LPUSH list_key a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; GETDEL list_key</span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>以下示例演示了对不存在的键使用 <code>GETDEL</code> 命令，不会报错，会返回 <code>nil</code> 的结果。</p>
<p>在这个示例中：</p>
<ol>
<li>首先使用 <code>EXISTS</code> 命令检查 tokentoken 键是否存在，返回 0 表示该键不存在</li>
<li>尝试使用 <code>GETDEL</code> 命令获取 tokentoken 键的值并删除该键</li>
<li><code>GETDEL</code> 命令返回 <code>nil</code></li>
</ol>
<p>这是因为 <code>GETDEL</code> 操作的键 tokentoken 本不存在，所以没有值可以获取和删除，所以 <code>GETDEL</code> 返回 <code>nil</code>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">redis<span class="operator">&gt;</span> <span class="keyword">EXISTS</span> tokentoken</span><br><span class="line">(<span class="type">integer</span>) <span class="number">0</span></span><br><span class="line">redis<span class="operator">&gt;</span> GETDEL tokentoken</span><br><span class="line">(nil)</span><br><span class="line">redis<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis GETEX 命令</title>
    <url>/2023/06/02/redis-cmd-strings-getex/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GETEX key [EX seconds | PX milliseconds | EXAT unix-time-seconds |</span><br><span class="line">  PXAT unix-time-milliseconds | PERSIST]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 6.2.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$</p>
<p><strong>ACL 类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>获取 <code>key</code> 的值，并可以选择设置其过期时间。<code>GETEX</code> 与 <code>GET</code> 类似，但它是一个带有额外选项的写命令。</p>
<h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><p><code>GETEX</code> 命令支持以下选项来修改它的行为：</p>
<p><code>EX</code> seconds — 设置指定的过期时间，单位是秒。</p>
<p><code>PX</code> milliseconds — 设置指定的过期时间，单位是毫秒。</p>
<p><code>EXAT</code> timestamp-seconds — 设置指定的 Unix 时间，key 将在该时间过期，单位是秒。</p>
<p><code>PXAT</code> timestamp-milliseconds — 设置指定的 Unix 时间，key 将在该时间过期，单位是毫秒。</p>
<p><code>PERSIST</code> — 删除 key 的过期时间，即 key 永不过期。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回 <code>key</code> 的值，如果 <code>key</code> 不存在，则返回 <code>nil</code>。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>对已存在的 key 进行 <code>GETEX</code> 操作：</p>
<ol>
<li>使用 <code>SET</code> 命令设置一个键 <code>username</code> 的值为 <code>&quot;johnson&quot;</code>。此时键没有过期时间，所以 <code>TTL</code> 命令返回 -1。</li>
<li>使用 <code>GETEX</code> 命令获取 <code>username</code> 的值，并设置过期时间为 10 秒。所以 <code>TTL</code> 命令现在返回 9（两次命令间隔了 1 秒）。</li>
<li>键过期后，<code>TTL</code> 命令返回 -2，表示键已过期。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET username <span class="string">&quot;johnson&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GETEX username</span><br><span class="line"><span class="string">&quot;johnson&quot;</span></span><br><span class="line">redis&gt; TTL username</span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br><span class="line">redis&gt; GETEX username EX 10</span><br><span class="line"><span class="string">&quot;johnson&quot;</span></span><br><span class="line">redis&gt; TTL username</span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line">redis&gt; TTL username</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>使用 <code>PX</code> 选项，返回 key 的值，同时将 key 的过期时间设置为 60000 毫秒：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET username <span class="string">&quot;johnson&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GETEX username PX 60000</span><br><span class="line"><span class="string">&quot;johnson&quot;</span></span><br><span class="line">redis&gt; TTL username</span><br><span class="line">(<span class="built_in">integer</span>) 55</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>使用 <code>EXAT</code> 选项，返回 key 的值，同时将 key 的过期时间设置在 <code>2023-06-03 01:00:00</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET username <span class="string">&quot;johnson&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GETEX username EXAT 1685725200</span><br><span class="line"><span class="string">&quot;johnson&quot;</span></span><br><span class="line">redis&gt; TTL username</span><br><span class="line">(<span class="built_in">integer</span>) 15708</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-4"><a href="#示例-4" class="headerlink" title="示例 4"></a>示例 4</h2><p>使用 <code>PXAT</code> 选项，返回 key 的值，同时将 key 的过期时间设置在 <code>2023-06-03 01:00:00</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET username <span class="string">&quot;johnson&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GETEX username PXAT 1685725200000</span><br><span class="line"><span class="string">&quot;johnson&quot;</span></span><br><span class="line">redis&gt; TTL username</span><br><span class="line">(<span class="built_in">integer</span>) 15425</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-5"><a href="#示例-5" class="headerlink" title="示例 5"></a>示例 5</h2><p>使用 <code>PERSIST</code> 选项，返回 key 的值，同时移除 key 的过期时间，即不让该 key 自动过期：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; TTL username</span><br><span class="line">(<span class="built_in">integer</span>) 15336</span><br><span class="line">redis&gt; GETEX username PERSIST</span><br><span class="line"><span class="string">&quot;johnson&quot;</span></span><br><span class="line">redis&gt; TTL username</span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis GETRANGE 命令</title>
    <url>/2023/06/03/redis-cmd-strings-getrange/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GETRANGE key start end</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.4.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(N)$</p>
<p>其中 N 是返回字符串的长度。最终的复杂度由返回的长度决定，但是从已存在的字符串中创建子字符串的成本非常低，对于短字符串可以看作 $O(1)$。</p>
<p><strong>ACL 类别</strong></p>
<p><strong><code>@read</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p>返回存储在 <code>key</code> 中的字符串值的子字符串，由偏移量 <code>start</code> 和 <code>end</code> 确定（两者都是包括在内的）。可以使用负偏移量以提供从字符串末尾开始的偏移量。即 -1 表示最后一个字符，-2 表示倒数第二个，等等。</p>
<p>该函数通过将结果范围限制为字符串的实际长度来处理超出范围的请求。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回 <code>key</code> 中字符串值的子字符串。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>设置 <code>tt</code> 的值为 <code>Rain rain go away</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET tt <span class="string">&quot;Rain rain go away&quot;</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure>
<p>获取 <code>tt</code> 的值：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; GET tt</span><br><span class="line"><span class="string">&quot;Rain rain go away&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>返回 <code>tt</code> 前四个字符组成的子字符串：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; GETRANGE tt 0 3</span><br><span class="line"><span class="string">&quot;Rain&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>返回 <code>tt</code> 末尾七个字符组成的子字符串：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; GETRANGE tt -7 -1</span><br><span class="line"><span class="string">&quot;go away&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis GETSET 命令</title>
    <url>/2023/06/03/redis-cmd-strings-getset/</url>
    <content><![CDATA[<div class="note orange icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>从 Redis 版本 6.2.0 开始，此命令被视为<strong>已弃用</strong> 。</p >
<p>在迁移或编写新代码时，可以将其替换为带有 `GET` 参数的 `SET` 命令。</p>
</div>

<blockquote>
<p>从 Redis 版本 6.2.0 开始，此命令被视为<strong>已弃用</strong>。<br>在迁移或编写新代码时，可以将其替换为带有 <code>GET</code> 参数的 <code>SET</code> 命令。</p>
</blockquote>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GETSET key value</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$</p>
<p><strong>ACL 类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>原子地将 <code>key</code> 设置为 <code>value</code>，并返回存储在 <code>key</code> 中的旧值。当 <code>key</code> 存在但存储的值不是字符串类型时返回错误。成功的 <code>SET</code> 操作会丢弃与键关联的任何过期时间。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回存储在 key 中的旧值。 当 key 没有旧值（即 key 不存在）时，返回 <code>nil</code>。</p>
<p>当 key 存在但存储的值不是字符串类型时，返回错误。</p>
<h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><p><code>GETSET</code> 可以与 <code>INCR</code> 一起使用，用于原子重置计数。例如：进程可能会在每次发生某些事件时针对键 <code>mycounter</code> 调用 <code>INCR</code>，但有时我们需要获取计数器的值并将其自动重置为零。这可以使用 <code>GETSET mycounter &quot;0&quot;</code> 来完成：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; INCR mycounter</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; GETSET mycounter <span class="string">&quot;0&quot;</span></span><br><span class="line"><span class="string">&quot;1&quot;</span></span><br><span class="line">redis&gt; GET mycounter</span><br><span class="line"><span class="string">&quot;0&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>对设有过期时间，且存储值为字符串类型的 key 进行 <code>GETSET</code> 操作：</p>
<p>1）设置键 name 的值为 “John”，并设置过期时间为 600 秒。</p>
<p>2）获取 name 的剩余过期时间，此时是 595 秒。</p>
<p>3）以新值 “Johnson Lin” 替换旧值 “John”，并返回旧值 “John”。</p>
<p>4）因为使用了 <code>GETSET</code> 命令，所以 name 的过期时间被删除，此时 name 没有过期时间，返回 -1。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET name <span class="string">&quot;John&quot;</span> EX 600</span><br><span class="line">OK</span><br><span class="line">redis&gt; TTL name</span><br><span class="line">(<span class="built_in">integer</span>) 595</span><br><span class="line">redis&gt; GETSET name <span class="string">&quot;Johnson Lin&quot;</span></span><br><span class="line"><span class="string">&quot;John&quot;</span></span><br><span class="line">redis&gt; TTL name</span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>对存储值为 <code>list</code> 类型的 key 进行 <code>GETSET</code> 操作，返回 <code>WRONGTYPE Operation against a key holding the wrong kind of value</code> 错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LPUSH list_key <span class="string">&quot;Rain rain&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; TYPE list_key</span><br><span class="line">list</span><br><span class="line">redis&gt; GETSET list_key <span class="string">&quot;Go go&quot;</span></span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>对不存在的 key 进行 <code>GETSET</code> 操作，结果返回 <code>nil</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS foo</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; GETSET foo <span class="string">&quot;Rain&quot;</span></span><br><span class="line">(nil)</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis INCR 命令</title>
    <url>/2023/06/03/redis-cmd-strings-incr/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INCR key</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$</p>
<p><strong>ACL 类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>将存储在键上的数字值增加 1。如果键不存在，在执行操作前先将其设置为 0。如果键包含一个错误类型的值，或者包含一个不能表示为整数的字符串，则返回一个错误。该操作仅限于 64 位有符号的整数。</p>
<p>注意：这是一个字符串操作，因为 Redis 没有专门的整数类型。存储在键中的字符串被解释为以 10 为基数的 64 位带符号整数以执行操作。</p>
<p>Redis 以其整数表示法存储整数，因此对于实际包含整数的字符串值，存储整数的字符串表示法没有开销。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，表示执行 <code>DECR</code> 操作后，<code>key</code> 对应的值。</p>
<h2 id="模式：计数器"><a href="#模式：计数器" class="headerlink" title="模式：计数器"></a>模式：计数器</h2><p>使用 Redis 原子增量操作可以做的最简单的事情就是计数器模式。其思想就是每次操作发生时向 Redis 发送 <code>INCR</code> 命令。例如，在 Web 应用程序中，我们可能想要知道某个用户每天访问了多少页面。</p>
<p>为此，Web 应用程序可以在用户每次浏览页面时，简单地递增一个键——通过将用户 ID 和表示当前日期的字符串连接来创建键名。</p>
<p>这个简单的模式可以以多种方式扩展，如：</p>
<ul>
<li>可以在每次页面浏览时同时使用 <code>INCR</code> 和 <code>EXPIRE</code>，以便在指定的秒数内仅对最近 N 次页面浏览进行计数。</li>
<li>客户端可以使用 <code>GETSET</code> 来原子地获取当前计数器值并将其重置为零。</li>
<li>使用其他原子增量/减量命令如 <code>DECR</code> 或 <code>INCRBY</code>，可以根据用户执行的操作，处理可能增大或减小的值。例如，想象在线游戏中不同用户的分数。</li>
</ul>
<h2 id="模式：速率限制器"><a href="#模式：速率限制器" class="headerlink" title="模式：速率限制器"></a>模式：速率限制器</h2><p>速率限制器模式是一种特殊的计数器，用于限制可以执行操作的速率。此模式的典型实现是限制对公共 API 请求数。</p>
<p>我们使用 <code>INCR</code> 提供了两种实现此模式的方法，其中我们假设要解决的问题是将 API 调用限制在每个 IP 地址每秒最多 10 个请求。</p>
<h3 id="第一种实现"><a href="#第一种实现" class="headerlink" title="第一种实现"></a>第一种实现</h3><p>此模式的简单、直接的实现如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FUNCTION LIMIT_API_CALL(ip)</span><br><span class="line">ts = CURRENT_UNIX_TIME()</span><br><span class="line">keyname = ip+<span class="string">&quot;:&quot;</span>+ts</span><br><span class="line">MULTI</span><br><span class="line">    INCR(keyname)</span><br><span class="line">    EXPIRE(keyname,10)</span><br><span class="line">EXEC</span><br><span class="line">current = RESPONSE_OF_INCR_WITHIN_MULTI</span><br><span class="line">IF current &gt; 10 THEN</span><br><span class="line">    ERROR <span class="string">&quot;too many requests per second&quot;</span></span><br><span class="line">ELSE</span><br><span class="line">    PERFORM_API_CALL()</span><br><span class="line">END</span><br></pre></td></tr></table></figure>
<p>我们为每个 IP 地址和不同的秒数维护一个计数器。这些计数器总是递增的，并且设置了 10 秒的过期时间以便在过期时能被 Redis 自动删除。</p>
<p>请注意使用 <code>MULTI</code> 和 <code>EXEC</code> 以确保在每个 API 调用中同时递增和设置过期时间。</p>
<p>该实现为每个 IP 地址和每个秒数维护一个键，其值是一个简单的计数器。每当客户端对 API 进行调用时，我们将执行以下操作：</p>
<ol>
<li>获取当前 Unix 时间戳以生成键名。</li>
<li>使用 <code>MULTI/EXEC</code> 包装器执行原子 <code>INCR</code>（递增）和 <code>EXPIRE</code>（设置 10 秒过期时间）操作。</li>
<li>检查 <code>INCR</code> 操作的结果。如果大于 10，我们返回错误，否则继续执行 API 调用。</li>
<li>由于我们为键设置了 10 秒的生存时间，所以键在过期后会被 Redis 自动删除。</li>
</ol>
<p>这种方法的主要优点是实现简单，并且由于使用了过期时间，不需要手动重置或删除计数器。Redis 会自动删除已过期的键。</p>
<h3 id="第二种实现"><a href="#第二种实现" class="headerlink" title="第二种实现"></a>第二种实现</h3><p>另一种实现方式是使用单个计数器，但要在没有竞争条件的情况下正确执行，会稍微复杂一些。以下我们将探讨在不同情况下的实现。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FUNCTION LIMIT_API_CALL(ip):</span><br><span class="line">current = GET(ip)</span><br><span class="line">IF current != NULL AND current &gt; 10 THEN</span><br><span class="line">    ERROR <span class="string">&quot;too many requests per second&quot;</span></span><br><span class="line">ELSE</span><br><span class="line">    value = INCR(ip)</span><br><span class="line">    IF value == 1 THEN</span><br><span class="line">        EXPIRE(ip,1)</span><br><span class="line">    END</span><br><span class="line">    PERFORM_API_CALL()</span><br><span class="line">END</span><br></pre></td></tr></table></figure>
<p>该计数器的创建方式是它只能存活一秒，从当前一秒内执行的第一个请求开始。如果在同一秒内有超过 10 个请求，计数器的值将大于 10，否则它将过期并从 0 重新开始。</p>
<p>上述代码中存在竞争条件。如果由于某些原因，客户端执行了 <code>INCR</code> 命令，但没有执行 <code>EXPIRE</code> 命令，那么该键将被泄漏（即永不过期），从而导致当该键存储的 IP 地址累计调用超过 10 次后，就一直返回 <code>too many requests per second</code> 错误，变成了限制每个 IP 地址最多只能调用 10 次，而不是每秒限制调用 10 次。</p>
<p>不过这个问题也很好解决，只需将 <code>EXPIRE</code> 命令和 <code>INCR</code> 命令包装成一个 Lua 脚本，使用 <code>EVAL</code> 命令发送即可（仅从 Redis 2.6 版开始可用）。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">local</span> current</span><br><span class="line">current = redis.call(<span class="string">&quot;incr&quot;</span>,KEYS[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">if</span> current == <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    redis.call(<span class="string">&quot;expire&quot;</span>,KEYS[<span class="number">1</span>],<span class="number">1</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>竞争条件（Race Condition）指多个线程或者进程在读写一个共享数据时结果依赖于它们执行的相对时间的情形。这些线程或进程有可能因为时间上推进的先后原因而出现问题。</p>
</blockquote>
<p>有另一种不使用脚本来解决此问题的方法是使用 Redis 列表而不是计数器。该实现更加复杂，使用了更多的高级功能，但它的优点是可以记录当前正在执行 API 调用的客户端 IP 地址。当然，这个优点对你来说可能有用，也可能没用，取决于你的应用程序的情况。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FUNCTION LIMIT_API_CALL(ip)</span><br><span class="line">current = LLEN(ip)</span><br><span class="line">IF current &gt; 10 THEN</span><br><span class="line">    ERROR <span class="string">&quot;too many requests per second&quot;</span></span><br><span class="line">ELSE</span><br><span class="line">    IF EXISTS(ip) == FALSE</span><br><span class="line">        MULTI</span><br><span class="line">            RPUSH(ip,ip)</span><br><span class="line">            EXPIRE(ip,1)</span><br><span class="line">        EXEC</span><br><span class="line">    ELSE</span><br><span class="line">        RPUSHX(ip,ip)</span><br><span class="line">    END</span><br><span class="line">    PERFORM_API_CALL()</span><br><span class="line">END</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>RPUSHX</code> 命令仅在键已存在时才压入元素。</p>
</blockquote>
<p>请注意，这里同样也存在竞争条件：一个客户端在执行 <code>EXISTS(ip)</code> 命令时返回了 false，但还没来得及执行 <code>MULTI/EXEC</code> 块中代码来创建键时，其他客户端可能先创建了该键。</p>
<p>但这不是一个大问题：一是这种情况比较罕见，二是此竞争只会导致错过了一次 API 调用，即原本是限制每个 IP 地址每秒最多 10 次调用，在这种情况下变成了每个 IP 地址每秒最多 9 次调用。</p>
<p>该实现使用 Redis 列表而不是简单的计数器键。每当客户端调用 API 时，我们将执行以下操作：</p>
<ol>
<li>检查列表的长度。如果大于 10，我们返回错误。</li>
<li>否则，判断键是否存在，如果不存在，我们使用 <code>MULTI/EXEC</code> 创建列表并为其设置 1 秒的过期时间。</li>
<li>如果键已存在，我们只使用 <code>RPUSHX</code> 命令将客户端 IP 地址压入到列表中。<code>RPUSHX</code> 命令仅在键已存在时执行压入操作。</li>
<li>由于我们在首次压入时设置了 1 秒的生存时间，所以该列表将在下一秒过期。该方法的主要优点是它跟踪当前执行 API 调用的所有客户端 IP 地址，这可能对某些应用程序很有用。</li>
</ol>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>以下示例代码演示了 INCR 命令用于对字符串类型的整数值进行增减操作。每次调用  <code>INCR</code>，该键的值会增加 1。</p>
<p>1）使用 <code>SET</code> 命令将 counter 键的值设置为 1000；</p>
<p>2）使用 <code>INCR</code> 命令将 counter 键的值增加 1，现在值为 1001；</p>
<p>3）使用 <code>GET</code> 命令读取 counter 键的值，确认值为 1001。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET counter <span class="string">&quot;1000&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; INCR counter</span><br><span class="line">(<span class="built_in">integer</span>) 1001</span><br><span class="line">redis&gt; GET counter</span><br><span class="line"><span class="string">&quot;1001&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>以下示例演示了Redis 的 <code>INCR</code> 命令要求键的值必须是整数类型，才能正确执行加一操作。如果键的值是不能表示为整数类型，则会返回 <code>ERR value is not an integer or out of range</code> 错误。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET username <span class="string">&quot;Johnson&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; INCR username</span><br><span class="line">(error) ERR value is not an <span class="built_in">integer</span> or out of range</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>以下示例演示了对 Redis 中最大的 64 位有符号整数值进行加一操作，由于加一操作后出现整数溢出，返回 <code>ERR increment or decrement would overflow</code> 错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET max_bigint <span class="string">&quot;9223372036854775807&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; INCR max_bigint</span><br><span class="line">(error) ERR increment or decrement would overflow</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>64 位有符号整数的数值范围：[-9223372036854775808, 9223372036854775807]</p>
</blockquote>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis INCRBYFLOAT 命令</title>
    <url>/2023/06/03/redis-cmd-strings-incrbyfloat/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INCRBYFLOAT key increment</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.6.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>将存储在 key 上的数值（字符串表示）加上浮点数 increment。</p>
<p>如果 key 不存在，那么 <code>INCRBYFLOAT</code> 会先将 key 的值设置为 0，然后再执行加法操作。</p>
<p>key 的值可以是整数或双精度浮点数。increment 也可以是整数或双精度浮点数。</p>
<p>如果发生以下情况之一，将返回一个错误：</p>
<ol>
<li>键包含一个错误类型的值（不是一个字符串）。</li>
<li>当前键的内容或指定的增量不能被解析为双精度浮点数字。</li>
</ol>
<p>如果命令执行成功，相加后的值将被存储为键的新值（取代旧值），并作为字符串返回给调用者。</p>
<p>key 的值和增量参数都可以以指数形式提供，但增量操作之后计算得到的最终值将按照整数部分、（如果需要）后跟小数点和代表小数部分的一定位数数字的格式存储。末尾的零总是被移除。也就是说：</p>
<p>1）原值和增量可以使用指数表示法，也可以不使用；</p>
<p>2）但是计算后的最终值会被存储为一个整数（如果需要），后跟小数点和一定位数的小数部分；</p>
<p>3）如果最终值有末尾的零，这些零会被移除掉。</p>
<p>例如：</p>
<p>原值：1.23e5，增量：4e2，最终值：123400</p>
<p>原值：123000，增量：400，最终值：123400</p>
<p>原值：1.230，增量：0.04，最终值：1.27（去掉了末尾的零）</p>
<p>所以简单来说，就是运算后的值会被“规范化”为一个固定的数字格式进行存储。</p>
<p>不管计算的实际内部精度如何，输出的精度固定为小数点后的 17 位。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回 key 的新值，这个新值是一个双精度浮点数。</p>
<h2 id="实现细节"><a href="#实现细节" class="headerlink" title="实现细节"></a>实现细节</h2><p>该命令总是作为 <code>SET</code> 操作在复制链路和 Append Only File 中传播，所以底层浮点数学实现的差异不会成为不一致的源头。</p>
<p>也就是说：</p>
<p>1）无论原值和增量是否使用了浮点数或指数表示法，这个增量命令最终都是作为 <code>SET</code> 命令进行传播和存储的。</p>
<p>2）因为存储和传播的都是 <code>SET</code> 命令设置的固定值，而不是浮点数值运算的结果，所以即使不同机器上的浮点数学运算结果略有不同（由于计算精度不同等原因），最终存储的值仍然是一致的。</p>
<p>3）如果直接存储和传播浮点数值运算的结果，那么由于计算精度的差异，不同机器得到的结果可能会有细微出入，导致数据不一致。但现在通过 <code>SET</code> 命令设置一个固定的值，就避免了这个问题。</p>
<p>所以这个设计是为了避免因为浮点数运算的实现差异在复制和存储时导致数据不一致，采取设置固定值的方式来规避这个问题。</p>
<p>总之，重点是：不直接存储和传播浮点数运算结果，而是存储和传播 <code>SET</code> 固定值指令，以此来防止由于浮点数运算差异引起的数据不一致。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>对不存在的键 float_a 执行 <code>INCRBYFLOAT</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS float_a</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; INCRBYFLOAT float_a 3.14</span><br><span class="line"><span class="string">&quot;3.14&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>对存储值为整数类型的键执行 <code>INCRBYFLOAT</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET int_a 10</span><br><span class="line">OK</span><br><span class="line">redis&gt; INCRBYFLOAT int_a 0.01</span><br><span class="line"><span class="string">&quot;10.01&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>对存储值为字符串类型，但不能表示为数值的的键执行 <code>INCRBYFLOAT</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET username <span class="string">&quot;Jack&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GET username</span><br><span class="line"><span class="string">&quot;Jack&quot;</span></span><br><span class="line">redis&gt; INCRBYFLOAT username 0.1</span><br><span class="line">(error) ERR value is not a valid <span class="built_in">float</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-4"><a href="#示例-4" class="headerlink" title="示例 4"></a>示例 4</h2><p>存储的数值为指数形式、增量参数也为指数形式，执行 <code>INCRBYFLOAT</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET exp <span class="string">&quot;314159e-5&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GET exp</span><br><span class="line"><span class="string">&quot;314159e-5&quot;</span></span><br><span class="line">redis&gt; INCRBYFLOAT exp <span class="string">&quot;2e-1&quot;</span></span><br><span class="line"><span class="string">&quot;3.34159&quot;</span></span><br><span class="line">redis&gt; GET exp</span><br><span class="line"><span class="string">&quot;3.34159&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-5"><a href="#示例-5" class="headerlink" title="示例 5"></a>示例 5</h2><p>执行 <code>INCRBYFLOAT</code> 操作后，新的值会删除小数点后面多余的 0：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET v 0.100</span><br><span class="line">OK</span><br><span class="line">redis&gt; GET v</span><br><span class="line"><span class="string">&quot;0.100&quot;</span></span><br><span class="line">redis&gt; INCRBYFLOAT v 0.100</span><br><span class="line"><span class="string">&quot;0.2&quot;</span></span><br><span class="line">redis&gt; GET v</span><br><span class="line"><span class="string">&quot;0.2&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis LCS 命令</title>
    <url>/2023/06/03/redis-cmd-strings-lcs/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LCS key1 key2 [LEN] [IDX] [MINMATCHLEN min-match-len] [WITHMATCHLEN]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 7.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(N*M)$</p>
<p>其中 N 和 M 分别是 s1 和 s2 的长度。 </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@read</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p><code>LCS</code> 命令实现了最长的公共子序列算法。请注意，这与最长公共字符串算法不同，因为字符串中的匹配字符不需要是连续的。</p>
<p>例如，”foo” 和 “fao” 之间的 LCS 是 “fo”，因为从左到右扫描这两个字符串，最长的共同字符集是由第一个 “f”，然后是 “o”组成。</p>
<p>LCS 对于评估两个字符串的相似程度非常有用。字符串可以表示很多东西。例如，如果两个字符串是 DNA 序列，LCS 将提供两个 DNA 序列之间的相似性度量。如果字符串表示某些用户编辑的某些文本，则 LCS 可以表示新文本与旧文本相比有何不同，等等。</p>
<p>请注意，此算法的运行时间复杂度为 $O(N×M)$，其中 N 是第一个字符串的长度，M 是第二个字符串的长度。因此，<strong>要么启动一个不同的 Redis 实例来运行这个命令，要么确保针对非常小的字符串运行它。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; MSET key1 ohmytext key2 mynewtext</span><br><span class="line">OK</span><br><span class="line">redis&gt; LCS key1 key2</span><br><span class="line"><span class="string">&quot;mytext&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>有时我们需要的只是匹配的长度：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LCS key1 key2 LEN</span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>但通常更有用的是知道每个字符串中的匹配位置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LCS key1 key2 IDX</span><br><span class="line">1) <span class="string">&quot;matches&quot;</span></span><br><span class="line">2) 1) 1) 1) (<span class="built_in">integer</span>) 4</span><br><span class="line">         2) (<span class="built_in">integer</span>) 7</span><br><span class="line">      2) 1) (<span class="built_in">integer</span>) 5</span><br><span class="line">         2) (<span class="built_in">integer</span>) 8</span><br><span class="line">   2) 1) 1) (<span class="built_in">integer</span>) 2</span><br><span class="line">         2) (<span class="built_in">integer</span>) 3</span><br><span class="line">      2) 1) (<span class="built_in">integer</span>) 0</span><br><span class="line">         2) (<span class="built_in">integer</span>) 1</span><br><span class="line">3) <span class="string">&quot;len&quot;</span></span><br><span class="line">4) (<span class="built_in">integer</span>) 6</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>此算法是从后向前生成匹配项的，因为它的工作方式就是这样，并且按相同顺序生成可以提高效率。上面的数组意味着第一个匹配项（数组的第二个元素）是在第一个字符串的 2-3 位置和第二个字符串的 0-1 位置之间。然后在 4-7 和 5-8 位置之间是另一个匹配项。</p>
<p>通过 <code>MINMATCHLEN</code> 设置最小匹配长度，过滤掉小于此长度的匹配项，如以下示例代码设置了最小匹配长度为 4，所以只会输出长度大于等于 4 的匹配项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LCS key1 key2 IDX MINMATCHLEN 4</span><br><span class="line">1) <span class="string">&quot;matches&quot;</span></span><br><span class="line">2) 1) 1) 1) (<span class="built_in">integer</span>) 4</span><br><span class="line">         2) (<span class="built_in">integer</span>) 7</span><br><span class="line">      2) 1) (<span class="built_in">integer</span>) 5</span><br><span class="line">         2) (<span class="built_in">integer</span>) 8</span><br><span class="line">3) <span class="string">&quot;len&quot;</span></span><br><span class="line">4) (<span class="built_in">integer</span>) 6</span><br></pre></td></tr></table></figure>
<p>通过 <code>WITHMATCHLEN</code> 不但输出匹配项，还输出每个匹配项的具体长度：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LCS key1 key2 IDX MINMATCHLEN 4 WITHMATCHLEN</span><br><span class="line">1) <span class="string">&quot;matches&quot;</span></span><br><span class="line">2) 1) 1) 1) (<span class="built_in">integer</span>) 4</span><br><span class="line">         2) (<span class="built_in">integer</span>) 7</span><br><span class="line">      2) 1) (<span class="built_in">integer</span>) 5</span><br><span class="line">         2) (<span class="built_in">integer</span>) 8</span><br><span class="line">      3) (<span class="built_in">integer</span>) 4</span><br><span class="line">3) <span class="string">&quot;len&quot;</span></span><br><span class="line">4) (<span class="built_in">integer</span>) 6</span><br></pre></td></tr></table></figure>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><ul>
<li>没有修饰符时，返回最长公共字符集的字符串表示。</li>
<li>当使用 <code>LEN</code> 修饰符时，返回最长公共字符集的长度。</li>
<li>当使用 <code>IDX</code> 修饰符时，返回一个数组，包括最长公共字符集的长度以及两个字符串中所有匹配项的范围（每个字符串的起始和结束偏移量）。当同时使用 <code>WITHMATCHLEN</code> 修饰符时，表示每个匹配项的数组还将包含该匹配项的长度。</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis PSETEX 命令</title>
    <url>/2023/06/04/redis-cmd-strings-psetex/</url>
    <content><![CDATA[<blockquote>
<p>从 Redis 2.6.12 版本开始，此命令被视为<strong>已弃用</strong>。<br>在迁移或编写新的代码时，可以将其替换为带有 <code>PX</code> 参数的 <code>SET</code> 命令。</p>
</blockquote>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PSETEX key milliseconds value</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.6.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p><code>PSETEX</code> 的工作方式与 <code>SETEX</code> 完全一样，唯一的区别是过期时间是以毫秒而不是以秒为单位。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>总是返回 <code>&quot;OK&quot;</code></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; PSETEX mykey 1000 <span class="string">&quot;Hello&quot;</span></span><br><span class="line"><span class="string">&quot;OK&quot;</span></span><br><span class="line">redis&gt; PTTL mykey</span><br><span class="line">(<span class="built_in">integer</span>) 1000</span><br><span class="line">redis&gt; GET mykey</span><br><span class="line"><span class="string">&quot;Hello&quot;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis INCRBY 命令</title>
    <url>/2023/06/03/redis-cmd-strings-incrby/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INCRBY key increment</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>将 <code>key</code> 中储存的数字加上指定的增量值。如果键不存在，则在执行操作前将其设置为 0。如果键包含一个错误类型的值或包含一个不能表示为整数的字符串，则返回错误。</p>
<p>该操作仅限于 64 位有符号的整数。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，表示加上指定的增量值之后的 key 值。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>以下例子演示了使用 <code>INCRBY</code> 命令对一个存储整数值的键进行加 2 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET counter <span class="string">&quot;1000&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; INCRBY counter 2</span><br><span class="line">(<span class="built_in">integer</span>) 1002</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>对一个不存在的键进行 <code>INCRBY</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS total</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; INCRBY total 5</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line">redis&gt; GET total</span><br><span class="line"><span class="string">&quot;5&quot;</span></span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>对一个存储值不能表示为整数的字符串的键进行 <code>INCRBY</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; GET username</span><br><span class="line"><span class="string">&quot;Johnson&quot;</span></span><br><span class="line">redis&gt; INCRBY username 20</span><br><span class="line">(error) ERR value is not an <span class="built_in">integer</span> or out of range</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-4"><a href="#示例-4" class="headerlink" title="示例 4"></a>示例 4</h2><p>对一个存储值类型为列表的键进行 <code>INCRBY</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; LPUSH list_key <span class="string">&quot;Johnson&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; TYPE list_key</span><br><span class="line">list</span><br><span class="line">redis&gt; INCRBY list_key 2</span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-5"><a href="#示例-5" class="headerlink" title="示例 5"></a>示例 5</h2><p>对一个存储了 64 位有符号整数最大值的键进行 <code>INCRBY</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; GET max_bigint</span><br><span class="line"><span class="string">&quot;9223372036854775807&quot;</span></span><br><span class="line">redis&gt; INCRBY max_bigint 9</span><br><span class="line">(error) ERR increment or decrement would overflow</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis MSETNX 命令</title>
    <url>/2023/06/04/redis-cmd-strings-msetnx/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MSETNX key value [key value ...]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.1</p>
<p><strong>时间复杂度</strong></p>
<p>$O(N)$</p>
<p>其中 N 是要设置的 key 的数量。 </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p>将给定的键设置为其各自的值。但只要有一个键已经存在，<code>MSETNX</code> 就不会执行任何操作。</p>
<p>由于这种语义，可以使用 <code>MSETNX</code> 来设置代表唯一逻辑对象的不同字段的不同键，以确保设置所有字段或根本不设置任何字段。</p>
<p><code>MSETNX</code> 是原子的，所以所有给定的键都是一次性设置的。也就是说，客户端不可能看到一些键被更新，而另一些键却没有变化。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，具体而言：</p>
<ul>
<li>1 - 如果所有的键都被设置了，则返回 1；</li>
<li>0 - 如果没有设置任何键（至少有一个键已经存在），则返回 0。</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; MSETNX key1 <span class="string">&quot;Hello&quot;</span> key2 <span class="string">&quot;there&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; MSETNX key2 <span class="string">&quot;new&quot;</span> key3 <span class="string">&quot;world&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; MGET key1 key2 key3</span><br><span class="line">1) <span class="string">&quot;Hello&quot;</span></span><br><span class="line">2) <span class="string">&quot;there&quot;</span></span><br><span class="line">3) (nil)</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis MSET 命令</title>
    <url>/2023/06/03/redis-cmd-strings-mset/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MSET key value [key value ...]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.1</p>
<p><strong>时间复杂度</strong></p>
<p>$O(N)$</p>
<p>其中 N 是要设置的 key 的数量。 </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p>将给定的键设置为它们各自的值。<code>MSET</code> 用新的值替换现有的值，就像普通的 <code>SET</code> 一样。如果你不想覆盖现有的值，请参阅 <code>MSETNX</code>。</p>
<p><code>MSET</code> 是原子性的，所以所有给定的键都是一次性设置的。也就是说，客户端不可能看到一些键被更新而另一些键没有变化。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>总是返回 <code>OK</code>，因为 <code>MSET</code> 命令永远不会失败。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; MSET key1 <span class="string">&quot;Hello&quot;</span> key2 <span class="string">&quot;World&quot;</span></span><br><span class="line"><span class="string">&quot;OK&quot;</span></span><br><span class="line">redis&gt; GET key1</span><br><span class="line"><span class="string">&quot;Hello&quot;</span></span><br><span class="line">redis&gt; GET key2</span><br><span class="line"><span class="string">&quot;World&quot;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis SETEX 命令</title>
    <url>/2023/06/04/redis-cmd-strings-setex/</url>
    <content><![CDATA[<blockquote>
<p>从 Redis 2.6.12 版本开始，此命令被标记为<strong>已废弃</strong>。<br>在迁移或编写新的代码时，可以使用带有 <code>EX</code> 参数的 <code>SET</code> 命令替代。</p>
</blockquote>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SETEX key seconds value</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p>设置 key 以保存字符串值，并将 key 设置为在给定的秒数后过期。此命令等效于：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SET key value EX seconds</span><br></pre></td></tr></table></figure>
<p>当秒数无效时，返回错误。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>如果正确执行，则返回 OK。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SETEX tt_key 1000 <span class="string">&quot;JOHNSON&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; TTL tt_key</span><br><span class="line">(<span class="built_in">integer</span>) 1000</span><br><span class="line">redis&gt; GET tt_key</span><br><span class="line"><span class="string">&quot;JOHNSON&quot;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis SET 命令</title>
    <url>/2023/06/04/redis-cmd-strings-set/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SET key value [NX | XX] [GET] [EX seconds | PX milliseconds |</span><br><span class="line">  EXAT unix-time-seconds | PXAT unix-time-milliseconds | KEEPTTL]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p>设置 <code>key</code> 保存字符串类型的 <code>value</code>。如果 <code>key</code> 已经持有一个值，它将被覆盖，不管它是什么类型。在成功的 <code>SET</code> 操作中，任何先前与 <code>key</code> 相关的生存时间都会被丢弃。</p>
<h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><p>SET 命令支持以下选项：</p>
<ul>
<li>EX seconds — 设置指定的过期时间，单位为秒。</li>
<li>PX milliseconds — 设置指定的过期时间，单位是毫秒。</li>
<li>EXAT timestamp-seconds — 设置指定的 Unix 时间，key 将在该时间过期，单位是秒。</li>
<li>PXAT timestamp-milliseconds — 设置指定的 Unix 时间，以毫秒为单位，key 将在该时间过期。</li>
<li>NX — 只有在 key 不存在的情况下才会设置它。</li>
<li>XX — 只设置已经存在的 key。</li>
<li>KEEPTTL — 保留与 key 相关的生存时间。</li>
<li>GET — 返回存储在 key 的旧字符串，如果 key 不存在，则返回 <code>nil</code>。如果存储在键上的值不是字符串，将返回一个错误，并中止 <code>SET</code> 操作。</li>
</ul>
<p><strong>注意：</strong>由于 <code>SET</code> 命令选项可以取代 <code>SETNX</code>、<code>SETEX</code>、<code>PSETEX</code>、<code>GETSET</code>，因此在 Redis 的未来版本中，这些命令有可能被废弃，并最终被删除。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回简单的字符串：如果 <code>SET</code> 被正确执行，则返回 OK。</p>
<p>返回 Null：（nil）如果 <code>SET</code> 操作没有被执行，因为用户指定了 <code>NX</code> 或 <code>XX</code> 选项，但条件没有被满足。</p>
<p>如果命令是用 <code>GET</code> 选项发出的，上述情况不适用。相反，它的返回如下，不管 <code>SET</code> 是否真的被执行：</p>
<p>返回批量字符串：存储在 <code>key</code> 的旧字符串值。</p>
<p>返回 Null：（nil）如果键不存在。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET js <span class="string">&quot;Rain rain&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GET js</span><br><span class="line"><span class="string">&quot;Rain rain&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><blockquote>
<p><strong>注意：</strong>不鼓励使用该模式，推荐使用 Redlock 算法，该算法只是实现起来更复杂一点，但能提供更好的保证和容错性。</p>
</blockquote>
<p>借助 Redis 实现锁系统的一个简单方法是使用 <code>SET resource-name anystring NX EX max-lock-time</code> 命令。</p>
<p>如果上述命令返回 OK，客户端可以获得锁（如果命令返回 Nil，则在一段时间后重试），而移除锁只需使用 <code>DEL</code> 命令。</p>
<p>在过期时间到达后，该锁将被自动释放。</p>
<p>可以通过修改解锁模式来使这个系统更加强大，具体如下：</p>
<ul>
<li>不要设置一个固定的字符串，而是设置一个不可猜测的大的随机字符串，称为 token。</li>
<li>与其用 <code>DEL</code> 释放锁，不如发送一个脚本，只有在值匹配的情况下才删除钥匙。</li>
</ul>
<p>这就避免了客户端在过期后试图释放锁，删除由另一个后来获得锁的客户端创建的密钥。</p>
<p>释放锁的脚本内容类似于以下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> redis.call(<span class="string">&quot;get&quot;</span>,KEYS[1]) == ARGV[1]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">return</span> redis.call(<span class="string">&quot;del&quot;</span>,KEYS[1])</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>该脚本应该用 <code>EVAL ...script... 1 resource-name token-value</code> 来调用。</p>
<h2 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h2><ul>
<li>从 Redis 2.6.12 版本开始：增加了 <code>EX</code>、<code>PX</code>、<code>NX</code> 和 <code>XX</code> 选项。</li>
<li>从 Redis 6.0.0 版本开始：增加了 <code>KEEPTTL</code> 选项。</li>
<li>从 Redis 6.2.0 版本开始：增加了 <code>GET</code>、<code>EXAT</code> 和 <code>PXAT</code> 选项。</li>
<li>从 Redis 7.0.0 版本开始：允许 <code>NX</code> 和 <code>GET</code> 选项一起使用。</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis SETNX 命令</title>
    <url>/2023/06/04/redis-cmd-strings-setnx/</url>
    <content><![CDATA[<blockquote>
<p>从 Redis 2.6.12 版本开始，此命令被标记为<strong>已废弃</strong>。<br>在迁移或编写新的代码时，可以使用带有 <code>NX</code> 参数的 <code>SET</code> 命令替代。</p>
</blockquote>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SETNX key value</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>如果 <code>key</code> 不存在，则将 <code>key</code> 设置为保存字符串值。在这种情况下，它等于 <code>SET</code>。当 <code>key</code> 已经存在时，则不执行任何操作。 </p>
<p><code>SETNX</code> 是 “<strong>SET</strong> if <strong>N</strong>ot e<strong>X</strong>ists” 的缩写。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数：</p>
<ul>
<li>如果 <code>key</code> 被成功设置，则返回 1；</li>
<li>如果 <code>key</code> 没被设置，则返回 0</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SETNX john <span class="string">&quot;JOHNSON&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; SETNX john <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; GET john</span><br><span class="line"><span class="string">&quot;JOHNSON&quot;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis SETRANGE 命令</title>
    <url>/2023/06/04/redis-cmd-strings-setrange/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SETRANGE key offset value</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.2.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p>不包含复制新字符串的时间。通常情况下，这个字符串非常小，所以摊销后的复杂度是 $O(1)$。否则，复杂度是 $O(M)$，M 是字符串参数 <code>value</code> 的长度。</p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p>用字符串参数 <code>value</code> 覆盖存储在 <code>key</code> 上的字符串的一部分，覆盖的位置从偏移量 <code>offset</code> 开始。</p>
<p>例如，存储在键 <code>user</code> 原来的字符串值为 <code>Johnson</code>，现在用字符串 <code>LIN</code> 替换该字符串值从偏移量 4 开始之后的所有字符，覆盖后最终的字符串值为 <code>JohnLIN</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET user <span class="string">&quot;Johnson&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GET user</span><br><span class="line"><span class="string">&quot;Johnson&quot;</span></span><br><span class="line">redis&gt; SETRANGE user 4 <span class="string">&quot;LIN&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">redis&gt; GET user</span><br><span class="line"><span class="string">&quot;JohnLIN&quot;</span></span><br></pre></td></tr></table></figure>
<p>如果偏移量 <code>offset</code> 大于存储在 <code>key</code> 上的字符串的长度，则用零字节（zero-bytes）进行填充该字符串以使偏移量合法。</p>
<p>例如，存储在键 <code>username</code> 上原来的字符串为 <code>JohnLIN</code>，现在通过 <code>SETRANGE</code> 命令，用字符串 <code>LIN</code> 替换该字符串从偏移量 10 开始之后的所有字符，但该字符串的长度只有 7，所以会先使用三个零字节（<code>\x00</code>）填充到该字符串的左侧，使字符串的长度变为 10，然后再用字符串 <code>LIN</code> 替换该字符串值从偏移量 10 开始之后的所有字符：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; GET username</span><br><span class="line"><span class="string">&quot;JohnLIN&quot;</span></span><br><span class="line">redis&gt; SETRANGE username 10 <span class="string">&quot;LIN&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 13</span><br><span class="line">redis&gt; GET username</span><br><span class="line"><span class="string">&quot;JohnLIN\x00\x00\x00LIN&quot;</span></span><br></pre></td></tr></table></figure>
<p>不存在的键则被认为是空字符串，所以这个命令将确保它持有一个足够大的字符串，以便能够在偏移处设置值。如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SETRANGE jk 2 <span class="string">&quot;LIN&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line">redis&gt; GET jk</span><br><span class="line"><span class="string">&quot;\x00\x00LIN&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>我们可以设置的最大偏移量是 $2^{29} -1$（536870911），这是因为 Redis 字符串被限制在 512 兆字节。如果需要设置的偏移量超过这个大小，我们可以使用多个键。</p>
<p><strong>警告：</strong>当设置最后一个可能的字节，并且存储在 key 处的字符串值还没有持有字符串值，或者持有一个小的字符串值，Redis 需要分配所有的中间内存，这可能会阻塞服务器一段时间。在 2010 年的 MacBook Pro 上，设置字节号 536870911（512MB分配）大约需要 300ms，设置字节号 134217728（128MB分配）大约需要 80ms，设置位号 33554432（32MB分配）大约需要 30ms，设置位号 8388608（8MB分配）大约需要 8ms。请注意，一旦完成了第一次分配，以后对同一键的 <code>SETRANGE</code> 的调用将不会有分配的开销。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回修改后的字符串长度。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis SUBSTR 命令</title>
    <url>/2023/06/04/redis-cmd-strings-substr/</url>
    <content><![CDATA[<blockquote>
<p>从 Redis 2.0.0 版本开始，此命令被标记为<strong>已废弃</strong>。<br>在迁移或编写新的代码时，可以使用 <code>GETRANGE</code> 命令替代。</p>
</blockquote>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SUBSTR key start end</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(N)$ </p>
<p>其中 N 是返回字符串的长度。复杂度最终是由返回的长度决定的，但是由于从现有的字符串中创建一个子串的代价是非常低的，对于小的字符串可以认为是 $O(1)$。</p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@read</code></strong>, <strong><code>@string</code></strong>, <strong><code>@slow</code></strong></p>
<p>返回存储在 key 中的字符串值的子串，由偏移量 start 和 end 决定（两者均包括在内）。负的偏移量可以用来提供一个从字符串的末尾开始的偏移量。所以 -1 表示最后一个字符，-2 表示倒数第二个，以此类推。</p>
<p>该命令通过将结果范围限制为字符串的实际长度来处理超出范围的请求。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回存储在 key 中的字符串值的子串。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET user <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; SUBSTR user 1 2</span><br><span class="line"><span class="string">&quot;OH&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>使用负的偏移量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET user <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; SUBSTR user -3 -1</span><br><span class="line"><span class="string">&quot;LIN&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>当偏移量超出字符串的实际长度时：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET user <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; SUBSTR user 10 20</span><br><span class="line"><span class="string">&quot;N&quot;</span></span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis MGET 命令</title>
    <url>/2023/06/03/redis-cmd-strings-mget/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MGET key [key ...]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 1.0.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(N)$</p>
<p>其中 N 是要检索的 key 的数量。 </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@read</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>返回所有指定 key 的值。对于每个不持有字符串值或不存在的键，将返回特殊值 <code>nil</code>。正因为如此，该操作永远不会失败。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个数组，元素由所有给定的 key 上的值组成。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET key1 <span class="string">&quot;Hello&quot;</span></span><br><span class="line"><span class="string">&quot;OK&quot;</span></span><br><span class="line">redis&gt; SET key2 <span class="string">&quot;World&quot;</span></span><br><span class="line"><span class="string">&quot;OK&quot;</span></span><br><span class="line">redis&gt; MGET key1 key2 nonexisting</span><br><span class="line">1) <span class="string">&quot;Hello&quot;</span></span><br><span class="line">2) <span class="string">&quot;World&quot;</span></span><br><span class="line">3) (nil)</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis STRLEN 命令</title>
    <url>/2023/06/04/redis-cmd-strings-strlen/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">STRLEN key</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.2.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(1)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@read</code></strong>, <strong><code>@string</code></strong>, <strong><code>@fast</code></strong></p>
<p>返回存储在 key 处的字符串值的长度。当 key 存储的值不是字符串类型时，则返回错误。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数：</p>
<ul>
<li>key 对应值的字符串长度；</li>
<li>如果 key 不存在，则返回 0。</li>
</ul>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>返回键 user 存储的字符串的长度：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; SET user <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; STRLEN user</span><br><span class="line">(<span class="built_in">integer</span>) 11</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>键 nonexisting 不存在，<code>STRLEN</code> 操作返回 0：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS nonexisting</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; STRLEN nonexisting</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>键 listkey 存储的值不是字符串类型，<code>STRLEN</code> 操作返回错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; RPUSH listkey <span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; TYPE listkey</span><br><span class="line">list</span><br><span class="line">redis&gt; STRLEN listkey</span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>从源代码编译和安装 Redis</title>
    <url>/2023/06/02/install-redis-from-source/</url>
    <content><![CDATA[<p>我们可以在主流操作系统（包括 Windows、Linux 和 macOS）上从源代码编译和安装 Redis。Redis 除了 C 编译器和 <code>libc</code> 之外没有其他依赖。</p>
<p>Redis可以在以下系统上编译和安装：</p>
<ul>
<li>Linux - 包括 Ubuntu，RedHat，Arch Linux 等发行版。</li>
<li>macOS</li>
<li>其他类 UNIX 系统 - 如 FreeBSD，OpenBSD。</li>
<li>Windows - 需要安装 MinGW 并编译 Windows 版本的 Redis。</li>
</ul>
<p>要从源代码编译 Redis，需要：</p>
<ol>
<li>安装 git 并克隆 Redis 最新版本的源代码：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/redis/redis.git</span><br></pre></td></tr></table></figure>
<p>Redis 的源文件也可以从官方下载页 [<a href="https://redis.io/download">https://redis.io/download</a>] 直接下载获得。可以通过对照 <a href="https://github.com/redis/redis-hashes">redis-hashes</a> git 仓库中的摘要来验证这些下载文件的完整性。</p>
<p>要从 Redis 下载站点获取最新稳定版 Redis 的源文件，请运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://download.redis.io/redis-stable.tar.gz</span><br></pre></td></tr></table></figure>
<ol>
<li>进入 Redis 源代码目录：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis</span><br></pre></td></tr></table></figure>
<p>如果下载的是源码压缩包，则需要先进行解压，再进入 Redis 源代码目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzvf redis-stable.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-stable</span><br></pre></td></tr></table></figure>
<ol>
<li>运行 <code>make</code> 命令编译 Redis:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure>
<p>如果编译成功，你会在 <code>src</code> 目录中找到几个 Redis 二进制文件，包括：</p>
<ul>
<li><strong>redis-server</strong>：Redis 服务本身；</li>
<li><strong>redis-cli</strong>：用于与 Redis 对话的命令行界面工具。</li>
</ul>
<ol>
<li>安装 Redis （可选步骤）：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure>
<p>这将 Redis 二进制文件复制到 <code>/usr/local/bin</code>。你也可以直接运行 <code>src/redis-server</code> 和 <code>src/redis-cli</code> 使用 Redis。</p>
<ol>
<li>启动 Redis 服务：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure>
<p>启动成功后，Redis 会在前台运行，同时也能看到 Redis 的启动日志。使用 Ctrl + C 可以停止 Redis。</p>
<ol>
<li>使用 Redis 命令行客户端连接到服务器：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to Bash</title>
    <url>/2024/07/10/introduction-to-bash/</url>
    <content><![CDATA[<p>Bash, short for “Bourne Again Shell,” is a command-line interface for Unix and Linux systems and is the default shell for most Linux distributions.</p>
<h2 id="What-is-a-Shell"><a href="#What-is-a-Shell" class="headerlink" title="What is a Shell?"></a><strong>What is a Shell?</strong></h2><p>Before diving into Bash, it’s important to understand what a shell is. The term “shell” originally means “outer layer,” representing the interface between the user and the kernel. It provides a command-line environment where users interact with the operating system.<br>In essence, a shell has several meanings:</p>
<ol>
<li><strong>Program:</strong> The shell is a program that provides an environment for user interaction. This environment typically features a command prompt where users input commands from the keyboard. This setup is also known as the command-line interface (CLI). The shell receives these commands, executes them via the operating system, and returns the results to the user. Unless specified otherwise, “shell” in this context refers to the command-line environment.</li>
<li><strong>Command Interpreter:</strong> The shell interprets user commands. It supports variables, conditionals, loops, and other programming constructs, allowing users to write scripts—small programs that the shell can execute directly without needing compilation.</li>
<li><strong>Toolbox:</strong> The shell provides various utilities that simplify interacting with the operating system.</li>
</ol>
<h2 id="Types-of-Shells"><a href="#Types-of-Shells" class="headerlink" title="Types of Shells"></a><strong>Types of Shells</strong></h2><p>There are many types of shells, but any program providing a command-line environment can be considered a shell. Here are some common types of shells:</p>
<ol>
<li><strong>Bourne Shell (sh)</strong>: One of the earliest Unix shells, developed by Stephen Bourne. It provides basic scripting capabilities and is known for its simplicity.</li>
<li><strong>Bourne Again Shell (bash)</strong>: An enhanced version of the Bourne Shell, developed by Brian Fox for the GNU Project. It includes features such as command-line editing, job control, and improved scripting capabilities.</li>
<li><strong>C Shell (csh)</strong>: Developed by Bill Joy, this shell offers a C-like syntax and features such as job control and history mechanisms.</li>
<li><strong>TENEX C Shell (tcsh)</strong>: An enhanced version of the C Shell with additional features like command-line editing, file name completion, and better scripting capabilities.</li>
<li><strong>Korn Shell (ksh)</strong>: Developed by David Korn, this shell combines features from the Bourne Shell and C Shell with additional scripting capabilities and performance improvements.</li>
<li><strong>Z Shell (zsh)</strong>: Known for its extensive features and customizability, Zsh includes powerful tab completion, better scripting features, and a rich set of plugins and themes.</li>
<li><strong>Friendly Interactive Shell (fish)</strong>: A modern shell that focuses on user-friendliness with features like autosuggestions, syntax highlighting, and a user-friendly scripting syntax.</li>
<li><strong>PowerShell</strong>: Developed by Microsoft, this shell is designed for system administration and automation on Windows. It uses cmdlets and offers advanced scripting capabilities.</li>
</ol>
<p>Bash is currently the most commonly used shell. Unless stated otherwise, “shell” and “Bash” can be used interchangeably.<br>To check the currently running shell, use:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><br>To list all shells installed on your Linux system:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/shells</span><br></pre></td></tr></table></figure><br>In these commands, <code>$</code> represents the command-line prompt, and you only need to enter the text following it.<br>Linux allows users to choose different shells, with Bash often being the default or the most compatible option.</p>
<h2 id="Command-Line-Environment"><a href="#Command-Line-Environment" class="headerlink" title="Command-Line Environment"></a><strong>Command-Line Environment</strong></h2><h3 id="Terminal-Emulator"><a href="#Terminal-Emulator" class="headerlink" title="Terminal Emulator"></a><strong>Terminal Emulator</strong></h3><p>In Linux systems without a graphical environment (such as those used for servers), you start directly in the command-line environment.<br>Most modern Linux distributions, especially those aimed at general users, use graphical environments. After logging in, users are typically in a graphical interface and must launch a terminal emulator to access the command-line environment.<br>A “terminal emulator” is a program that simulates a command-line window, allowing users to interact with the shell and providing features such as color adjustments, font sizes, and line spacing.<br>Different Linux distributions and desktop environments offer various terminal programs, such as KDE’s Konsole or GNOME’s gnome-terminal. Despite their different names, all terminal programs essentially provide the same functionality, letting users access the command-line environment and use the shell.</p>
<h3 id="Command-Line-Prompt"><a href="#Command-Line-Prompt" class="headerlink" title="Command-Line Prompt"></a><strong>Command-Line Prompt</strong></h3><p>Upon entering the command-line environment, you’ll see the shell’s prompt, which typically includes a prefix ending with a dollar sign ($). This prompt is where you type your commands.<br>For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[user@hostname] $</span><br></pre></td></tr></table></figure><br>In this prompt, <code>[user@hostname]</code> is the prefix indicating the username and hostname. For instance, if your username is “johnson” and your hostname is “johnson-machine,” the prompt would look like <code>johnson@johnson-machine $</code>.<br>The root user’s prompt ends with a hash sign (#) instead of a dollar sign ($), indicating elevated permissions and reminding users to be cautious. This symbol can be customized; more details can be found in the “Command Prompt” chapter.<br>For simplicity, the dollar sign ($) will be used to represent the prompt in subsequent examples.</p>
<h3 id="Starting-and-Exiting-Bash"><a href="#Starting-and-Exiting-Bash" class="headerlink" title="Starting and Exiting Bash"></a><strong>Starting and Exiting Bash</strong></h3><p>After accessing the command-line environment, you are usually in Bash. If your shell is not Bash, you can start it by entering:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash</span><br></pre></td></tr></table></figure><br>To exit Bash, use the <code>exit</code> command or press <code>Ctrl + d</code>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><br>Basic Bash usage involves typing commands directly at the prompt. For practice, try entering <code>pwd</code> to display the current directory:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/home/me</span><br></pre></td></tr></table></figure><br>If you mistakenly type <code>pwe</code>, you’ll see an error message indicating that the command is not found:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwe</span><br><span class="line">bash: pwe: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure></p>
<h2 id="History-of-Shells"><a href="#History-of-Shells" class="headerlink" title="History of Shells"></a><strong>History of Shells</strong></h2><p>Shells have evolved alongside Unix systems:</p>
<ul>
<li><strong>1969:</strong> Ken Thompson and Dennis Ritchie developed the first Unix version.</li>
<li><strong>1971:</strong> Ken Thompson created the original shell, known as Thompson shell (sh), for Unix.</li>
<li><strong>1973-1975:</strong> John R. Mashey enhanced Thompson’s shell by adding programming features, creating the Mashey shell.</li>
<li><strong>1976:</strong> Stephen Bourne revamped the Mashey shell, resulting in the Bourne shell (sh).</li>
<li><strong>1978:</strong> Bill Joy developed the C shell (csh), introducing C-like syntax.</li>
<li><strong>1979:</strong> Unix Version 7 included the Bourne shell, making it the default for Unix systems.</li>
<li><strong>1983:</strong> David Korn created the Korn shell (ksh).</li>
<li><strong>1985:</strong> Richard Stallman founded the Free Software Foundation (FSF) and began developing a free shell to avoid licensing issues with Unix. This led to the creation of Bash.</li>
<li><strong>1988:</strong> Brian Fox, the FSF’s first paid programmer, released Bash, a free software clone of the Bourne shell.</li>
<li><strong>1989:</strong> Bash 1.0 was released.</li>
<li><strong>1996:</strong> Bash 2.0 was released.</li>
<li><strong>2004:</strong> Bash 3.0 was released.</li>
<li><strong>2009:</strong> Bash 4.0 was released.</li>
<li><strong>2019:</strong> Bash 5.0 was released.</li>
</ul>
<p>To check your local Bash version, use:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash --version</span><br><span class="line">GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line"></span><br><span class="line">This is free software; you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br></pre></td></tr></table></figure><br>Or:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$BASH_VERSION</span></span><br><span class="line">5.1.16(1)-release</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>查看 Redis 版本号</title>
    <url>/2023/06/02/how-to-check-the-redis-version/</url>
    <content><![CDATA[<h2 id="查看服务端版本"><a href="#查看服务端版本" class="headerlink" title="查看服务端版本"></a><strong>查看服务端版本</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server -v</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server --version</span><br></pre></td></tr></table></figure>
<p>例如，使用 <code>redis-server -v</code> 查看 Redis 的版本信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ redis-server -v</span><br><span class="line">Redis server v=7.0.4 sha=00000000:0 malloc=jemalloc-5.2.1 bits=64 build=59659b131c47ab91</span><br></pre></td></tr></table></figure>
<p>输出信息如下：</p>
<ul>
<li><code>redis-server</code> - 表示这是 Redis 服务器进程</li>
<li><code>v=7.0.4</code> - Redis 的版本号，这里是7.0.4版本</li>
<li><code>sha=00000000:0</code> - Git SHA 标识，用来标识 Git 中的某个提交</li>
<li><code>malloc=jemalloc-5.2.1</code> - Redis 使用的内存分配器，这里是 jemalloc 5.2.1 版本</li>
<li><code>bits=64</code> - Redis 编译时使用的位数，这里是 64 位</li>
<li><code>build=59659b131c47ab91</code> - Redis 的构建 ID</li>
</ul>
<h2 id="查看客户端版本"><a href="#查看客户端版本" class="headerlink" title="查看客户端版本"></a><strong>查看客户端版本</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli -v</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli --version</span><br></pre></td></tr></table></figure>
<p>例如，以下命令输出 <code>redis-cli 7.0.4</code> 表示当前使用的 Redis 命令行客户端的版本是7.0.4。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ redis-cli -v</span><br><span class="line">redis-cli 7.0.4</span><br></pre></td></tr></table></figure>
<h2 id="使用-info-命令查看-Redis-服务版本信息"><a href="#使用-info-命令查看-Redis-服务版本信息" class="headerlink" title="使用 info 命令查看 Redis 服务版本信息"></a>使用 info 命令查看 Redis 服务版本信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">info server</span><br></pre></td></tr></table></figure>
<p>首先，使用 <code>redis-cli</code> 命令行客户端连接到 Redis 服务，输入 <code>info server</code> 即可查看 Redis 服务详细信息。</p>
<p>例如，以下示例中，除了输出 Redis 服务的版本信息外，还输出了其他有用的信息，具体如下：</p>
<ul>
<li><code>redis_version</code>：Redis 版本，这里是7.0.4</li>
<li><code>redis_git_sha1</code>：Git SHA，这里是 00000000，表示这不是一个 Git 版本</li>
<li><code>redis_build_id</code>：构建 ID，这里是 59659b131c47ab91</li>
<li><code>os</code>：Redis 运行的操作系统，这里是 Linux</li>
<li><code>arch_bits</code>：架构（32 或 64 位），这里是64位</li>
<li><code>gcc_version</code>：编译 Redis 时使用的 GCC 版本，这里是 9.4.0</li>
<li><code>process_id</code>：Redis 进程 ID，这里是 7797</li>
<li><code>tcp_port</code>：Redis 正在监听的 TCP 端口，这里是默认的 6379</li>
<li><code>uptime_in_seconds</code>：Redis 运行时间（秒），这里是 25305 秒</li>
<li><code>hz</code>：Redis 服务器的频率，这里是10Hz</li>
<li><code>lru_clock</code>：用于 LRU (最近最少使用)算法的时钟周期，这里是 7977440</li>
<li><code>config_file</code>：Redis 配置文件的路径</li>
<li><code>io_threads_active</code>：活动 I/O 线程的数量，这里是 0</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; info server</span><br><span class="line"><span class="comment"># Server</span></span><br><span class="line">redis_version:7.0.4</span><br><span class="line">redis_git_sha1:00000000</span><br><span class="line">redis_git_dirty:0</span><br><span class="line">redis_build_id:59659b131c47ab91</span><br><span class="line">redis_mode:standalone</span><br><span class="line">os:Linux 4.4.0-19041-Microsoft x86_64</span><br><span class="line">arch_bits:64</span><br><span class="line">monotonic_clock:POSIX clock_gettime</span><br><span class="line">multiplexing_api:epoll</span><br><span class="line">atomicvar_api:c11-builtin</span><br><span class="line">gcc_version:9.4.0</span><br><span class="line">process_id:7797</span><br><span class="line">process_supervised:no</span><br><span class="line">run_id:7f922a2e5b1f2f8556042fb7faf6ae62a0c65c2b</span><br><span class="line">tcp_port:6379</span><br><span class="line">server_time_usec:1685699040255722</span><br><span class="line">uptime_in_seconds:25305</span><br><span class="line">uptime_in_days:0</span><br><span class="line">hz:10</span><br><span class="line">configured_hz:10</span><br><span class="line">lru_clock:7977440</span><br><span class="line">executable:/mnt/d/opt/redis-7.0.4/src/redis-server</span><br><span class="line">config_file:</span><br><span class="line">io_threads_active:0</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Your First Bash Script</title>
    <url>/2024/07/11/your-first-bash-script/</url>
    <content><![CDATA[<p>Bash, which stands for Bourne Again SHell, is a widely used command-line interpreter and scripting language that was originally developed by Brian Fox for the GNU Project as a free replacement for the Bourne shell (sh). Bash combines the features of the Bourne shell with many enhancements and new features, making it a powerful and flexible tool for users and system administrators.</p>
<p>Before you start your first script, you need to understand the shebang(<code>#!</code>) character.</p>
<h2 id="What-does-Mean"><a href="#What-does-Mean" class="headerlink" title="What does #! Mean?"></a>What does <code>#!</code> Mean?</h2><p>The <code>#!</code> sequence, known as “shebang,” is a special character combination used at the beginning of script files in Unix-like operating systems. It tells the system which interpreter should be used to execute the script. </p>
<p>When you place <code>#!</code> at the top of a script file followed by the path to an interpreter (e.g., <code>#!/bin/bash</code>), it instructs the operating system to use the specified interpreter to run the script. This helps ensure that the script runs with the correct interpreter, regardless of the user’s environment or default shell.</p>
<p>Here’s how a typical shebang line looks:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python3</span></span><br></pre></td></tr></table></figure><br>In this example, <code>#!/usr/bin/env python3</code> indicates that the script should be executed using Python 3, with <code>env</code> being used to locate the Python interpreter in the user’s environment.</p>
<h2 id="Writing-a-Simple-Bash-Script"><a href="#Writing-a-Simple-Bash-Script" class="headerlink" title="Writing a Simple Bash Script"></a>Writing a Simple Bash Script</h2><p>To create a simple Bash script, follow these steps:</p>
<ol>
<li><p><strong>Create a new file:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> hello_world.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Make the script executable:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x hello_world.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Edit the script (using nano, vim, or another text editor):</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano hello_world.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Add the shebang and commands:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello, World!&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Run the script(</strong><code>**sh hello_world.sh**</code><strong>, </strong><code>**bash hello_world.sh**</code><strong>, or </strong><code>**./hello_world.sh**</code><strong>):</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sh hello_world.sh</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash hello_world.sh</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./hello_world.sh</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>If you see the error <code>-bash: . /hello_world.sh: Permission denied</code> when running the script with <code>. /hello_world.sh</code>, it means the script doesn’t have execute permissions. To fix this, use the following commands to set the execute permission, then try running the script again.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> +x ./hello_world.sh</span><br><span class="line">$ ./hello_world.sh</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Variables in Bash</title>
    <url>/2024/07/12/variables-in-bash/</url>
    <content><![CDATA[<p>In Bash scripting, variables are used to store data that can be used later in the script. Here’s a quick overview of how to work with variables in Bash:</p>
<h2 id="Defining-Variables"><a href="#Defining-Variables" class="headerlink" title="Defining Variables"></a><strong>Defining Variables</strong></h2><p>Variables in Bash are defined by assigning a value to a name, with no spaces around the <code>=</code> sign:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">variable_name=value</span><br></pre></td></tr></table></figure><br>For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;Johnson&quot;</span></span><br><span class="line">age=28</span><br></pre></td></tr></table></figure></p>
<p>Note that there should be no spaces between the variable name and the equals sign, which might differ from what you’re used to in other programming languages. Variable names must follow these rules:</p>
<ul>
<li><strong>Contain only letters, numbers, and underscores</strong>: Variable names can include letters (case-sensitive), numbers, and underscores (_), but no other special characters.</li>
<li><strong>Not start with a number</strong>: While variable names can include numbers, they cannot begin with one.</li>
<li><strong>Avoid Shell keywords</strong>: Do not use Shell keywords (e.g., if, then, else, fi, for, while) as variable names to prevent confusion.</li>
<li><strong>Use uppercase for constants</strong>: By convention, variable names for constants are typically written in uppercase, like PI=3.14.</li>
<li><strong>Avoid special symbols</strong>: Try to avoid special symbols in variable names as they may conflict with Shell syntax.</li>
<li><strong>No spaces</strong>: Variable names should not include spaces, as spaces are generally used to separate commands and arguments.</li>
</ul>
<p>Examples of valid Shell variable names are as follows:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HOSTNAME=<span class="string">&quot;www.linjiangxiong.com&quot;</span></span><br><span class="line">FILEBEAT_HOME=<span class="string">&quot;/opt/filebeat&quot;</span></span><br><span class="line">_rvm_version=<span class="string">&quot;1.29.12&quot;</span></span><br><span class="line">flag2=<span class="string">&quot;35609&quot;</span></span><br></pre></td></tr></table></figure><br>Examples of invalid variable naming are as follows:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Avoid using reserved keywords like &quot;else&quot; as variable names.</span></span><br><span class="line"><span class="comment"># Using Shell keywords as variable names may not cause errors, </span></span><br><span class="line"><span class="comment"># but it can lead to confusion.</span></span><br><span class="line"><span class="keyword">else</span>=<span class="string">&quot;variable_with_reserved_keywords_else&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Avoid using special characters like $, ?, *, # in variable names</span></span><br><span class="line">var_$=42</span><br><span class="line">?_var=123</span><br><span class="line">user_*_name=johnson</span><br><span class="line"></span><br><span class="line"><span class="comment"># Avoid using spaces in variable names</span></span><br><span class="line">user name=johnson</span><br></pre></td></tr></table></figure><br>Avoid using spaces around the equal sign:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Correct assignment</span></span><br><span class="line">variable_name=value</span><br><span class="line"></span><br><span class="line"><span class="comment"># May cause errors: &#x27;variable_name: not found&#x27;</span></span><br><span class="line">variable_name = <span class="string">&quot;using spaces around the equal sign&quot;</span></span><br></pre></td></tr></table></figure><br>In addition to direct assignment, you can also assign values using statements, such as:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> $(<span class="built_in">ls</span> /home/john/);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span>;</span><br></pre></td></tr></table></figure><br>This loop iterates over the filenames in the <code>/home/john</code> directory.</p>
<h2 id="Using-Variables"><a href="#Using-Variables" class="headerlink" title="Using Variables"></a><strong>Using Variables</strong></h2><p>To use the value of a variable, prefix its name with a dollar sign <code>$</code>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;Johnson&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span></span><br></pre></td></tr></table></figure><br>This will output:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Johnson</span><br></pre></td></tr></table></figure><br><strong>Note:</strong> Braces around variable names are optional but can help the interpreter recognize the boundaries of the variable. For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ball_type <span class="keyword">in</span> Foot Base Basket Volley; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;I like <span class="variable">$&#123;ball_type&#125;</span>ball&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><br>Without braces, if you write <code>echo &quot;I like $ball_typeball&quot;</code>, the interpreter will treat <code>$ball_typeball</code> as a single variable (which will be empty), leading to unexpected results.</p>
<p>Defined variables can be reassigned, as shown in the example below. Note that when reassigning a variable, you should not use the dollar sign (<code>$</code>). The dollar sign is only needed when referencing the variable’s value.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Define a variable your_name and set it to &quot;john&quot;</span></span><br><span class="line">your_name=<span class="string">&quot;john&quot;</span></span><br><span class="line"><span class="comment"># Print the value of the variable your_name</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$your_name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the value of your_name to &quot;johnson&quot;</span></span><br><span class="line">your_name=<span class="string">&quot;johnson&quot;</span></span><br><span class="line"><span class="comment"># Print the new value of the variable your_name</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$your_name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This line of code has a syntax error</span></span><br><span class="line"><span class="variable">$your_name</span>=<span class="string">&quot;oihre&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$your_name</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Read-Only-Variables"><a href="#Read-Only-Variables" class="headerlink" title="Read-Only Variables"></a>Read-Only Variables</h2><p>The <code>readonly</code> command can be used to define a variable as read-only, meaning its value cannot be changed. The following example attempts to modify a read-only variable, which results in an error.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">name=<span class="string">&quot;Johnson&quot;</span></span><br><span class="line"><span class="built_in">readonly</span> name</span><br><span class="line">name=<span class="string">&quot;John&quot;</span></span><br></pre></td></tr></table></figure><br>Running the script produces the following result:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxxx.sh: 5: name: is <span class="built_in">read</span> only</span><br></pre></td></tr></table></figure></p>
<h2 id="Unsetting-Variables"><a href="#Unsetting-Variables" class="headerlink" title="Unsetting Variables"></a><strong>Unsetting Variables</strong></h2><p>To remove a variable, use the <code>unset</code> command:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">unset</span> variable_name</span><br></pre></td></tr></table></figure><br>Once a variable is deleted, it cannot be used again. For example, running the following code will produce no output.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">name=<span class="string">&quot;Johnson&quot;</span></span><br><span class="line"><span class="built_in">unset</span> name</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span></span><br></pre></td></tr></table></figure><br><strong>Note:</strong> The <code>unset</code> command cannot remove read-only variables. For example, running the following code will produce the error message <code>unset: first_name: is read only</code>.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">first_name=<span class="string">&quot;DD&quot;</span></span><br><span class="line"><span class="built_in">readonly</span> first_name</span><br><span class="line"><span class="built_in">unset</span> first_name</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$first_name</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Local-Variables"><a href="#Local-Variables" class="headerlink" title="Local Variables"></a><strong>Local Variables</strong></h2><p>Within functions, you can declare local variables using the <code>local</code> keyword:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Define a local variable within the function</span></span><br><span class="line">    <span class="built_in">local</span> greeting=<span class="string">&quot;Hello&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Output the local variable (accessible within the function)</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$greeting</span>, John!&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Global-vs-Local-Variables"><a href="#Global-vs-Local-Variables" class="headerlink" title="Global vs Local Variables"></a>Global vs Local Variables</h2><p>Global variables are accessible throughout the entire script, while local variables are only accessible within their defined scope, such as inside a function.<br>For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define a global variable</span></span><br><span class="line">GLOBAL_VAR=<span class="string">&quot;global variable value&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Define a local variable within the function</span></span><br><span class="line">    <span class="built_in">local</span> local_var=<span class="string">&quot;local variable value&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Output the local variable (accessible within the function)</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$local_var</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Output the global variable (accessible within the function)</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$GLOBAL_VAR</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call the function</span></span><br><span class="line">func</span><br><span class="line"></span><br><span class="line"><span class="comment"># Attempt to access the local variable (this will fail, as it&#x27;s only accessible within the function)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$local_var</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Output the global variable (accessible outside the function)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$GLOBAL_VAR</span></span><br></pre></td></tr></table></figure><br>When you execute the script:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sh t9.sh</span><br></pre></td></tr></table></figure><br>You will see:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">local variable value</span><br><span class="line">global variable value</span><br><span class="line"></span><br><span class="line">global variable value</span><br></pre></td></tr></table></figure><br>This output demonstrates that the local variable is only accessible within the function, while the global variable is accessible both inside and outside the function.</p>
<h2 id="System-Variables"><a href="#System-Variables" class="headerlink" title="System Variables"></a>System Variables</h2><p>System variables define various aspects of the shell and are managed by Bash itself. However, you can modify these variables to change shell behavior.</p>
<p>To list all available system variables and their values, type <code>env</code> in the Bash shell:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">env</span></span><br></pre></td></tr></table></figure></p>
<p>These variables are typically written in uppercase letters, such as <strong>PATH</strong>, <strong>SHELL</strong>, <strong>HOME</strong>, <strong>LANG</strong>, <strong>PWD</strong>, and many others.</p>
<p>For example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br><span class="line">/bin/bash</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$HOME</span></span><br><span class="line">/home/john</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$LANG</span></span><br><span class="line">en_US.UTF-8</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$PWD</span></span><br><span class="line">/home/johnson</span><br></pre></td></tr></table></figure></p>
<h2 id="Special-Variables"><a href="#Special-Variables" class="headerlink" title="Special Variables"></a><strong>Special Variables</strong></h2><p>Bash also has several special variables:</p>
<ul>
<li><code>$0</code>: The name of the script.</li>
<li><code>$1</code>, <code>$2</code>, …, <code>$n</code>: Positional parameters (arguments to the script).</li>
<li><code>$#</code>: The number of positional parameters.</li>
<li><code>$@</code>: All positional parameters as separate words.</li>
<li><code>$*</code>: All positional parameters as a single word.</li>
<li>$$$$: The process ID of the script.</li>
<li><code>$?</code>: The exit status of the last command.</li>
</ul>
<p>For example, create a shell script <code>special_variables_example.sh</code> using following code.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Print the name of the script itself: <span class="variable">$0</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Print the first argument passed to the script: <span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Print the second argument passed to the script: <span class="variable">$2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Print the total number of arguments passed to the script: <span class="variable">$#</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Print all the arguments passed to the script as a single string, with each argument separated by a space: <span class="variable">$@</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Print all the arguments passed to the script as a single string, with each argument separated by the first character of the IFS variable (usually space): $*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Print the process ID of the current shell: $$&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Print the exit status of the last command executed: $?&quot;</span></span><br></pre></td></tr></table></figure><br>Let’s execute the script:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sh special_variables_example.sh arg1 arg2 arg3</span><br></pre></td></tr></table></figure><br>It will output:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Print the name of the script itself: special_variables_example.sh</span><br><span class="line">Print the first argument passed to the script: arg1</span><br><span class="line">Print the second argument passed to the script: arg2</span><br><span class="line">Print the total number of arguments passed to the script: 3</span><br><span class="line">Print all the arguments passed to the script as a single string, with each argument separated by a space: arg1 arg2 arg3</span><br><span class="line">Print all the arguments passed to the script as a single string, with each argument separated by the first character of the IFS variable (usually space): arg1 arg2 arg3</span><br><span class="line">Print the process ID of the current shell: 27033</span><br><span class="line">Print the exit status of the last command executed: 0</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="Reading-User-Input"><a href="#Reading-User-Input" class="headerlink" title="Reading User Input"></a><strong>Reading User Input</strong></h2><p>You can read user input into a variable using the <code>read</code> command:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Enter your name: &quot;</span> user_name</span><br></pre></td></tr></table></figure><br>The value entered by the user will be stored in the <code>user_name</code> variable.<br>For example, running the following code will produce the message <code>Hello, Johnson</code>.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Enter your name: &quot;</span> user_name</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$user_name</span>&quot;</span></span><br></pre></td></tr></table></figure><br>Output:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sh read_input_example.sh </span><br><span class="line">Enter your name: Johnson </span><br><span class="line">Hello, Johnson</span><br></pre></td></tr></table></figure></p>
<h2 id="Exporting-Variables"><a href="#Exporting-Variables" class="headerlink" title="Exporting Variables"></a><strong>Exporting Variables</strong></h2><p>To make a variable available to subprocesses or child scripts, use the <code>export</code> command:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> MY_VAR=<span class="string">&quot;some value&quot;</span></span><br></pre></td></tr></table></figure><br>In a child script or process, you can access <code>MY_VAR</code> like any other variable.</p>
<h2 id="Variable-Substitution"><a href="#Variable-Substitution" class="headerlink" title="Variable Substitution"></a><strong>Variable Substitution</strong></h2><p>Bash supports various types of variable substitution:</p>
<ul>
<li><p><strong>Default Values</strong>: Use <code>$&#123;VAR:-default&#125;</code> to provide a default value if <code>VAR</code> is unset or null.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:-&quot;Unknown&quot;&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Substring Extraction</strong>: Use <code>$&#123;VAR:offset:length&#125;</code> to extract a substring.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">full_name=<span class="string">&quot;Alice Smith&quot;</span></span><br><span class="line">first_name=<span class="variable">$&#123;full_name:0:5&#125;</span>  <span class="comment"># Extracts &quot;Alice&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>String Replacement</strong>: Use <code>$&#123;VAR/old/new&#125;</code> to replace the first occurrence of <code>old</code> with <code>new</code>.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">path=<span class="string">&quot;/usr/local/bin&quot;</span></span><br><span class="line">new_path=<span class="variable">$&#123;path/bin/exe&#125;</span>  <span class="comment"># Results in &quot;/usr/local/exe&quot;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Comments in Bash</title>
    <url>/2024/07/13/comments-in-bash/</url>
    <content><![CDATA[<p>Comments in Bash scripts are used to annotate and explain the code. They help make the script more understandable and maintainable. In Bash, there are several ways to include comments:</p>
<h2 id="Single-Line-Comments"><a href="#Single-Line-Comments" class="headerlink" title="Single-Line Comments"></a><strong>Single-Line Comments</strong></h2><p>Single-line comments in Bash begin with a <code>#</code> character. Everything on the line after the <code>#</code> is considered a comment and is ignored by the Bash interpreter.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is a single-line comment</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello, World!&quot;</span>  <span class="comment"># This is also a comment</span></span><br></pre></td></tr></table></figure></p>
<p><strong>Note:</strong> The top line of the script, which starts with a <code>#</code>, is interpreted as a shebang rather than a comment.</p>
<h2 id="Multi-Line-Comments"><a href="#Multi-Line-Comments" class="headerlink" title="Multi-Line Comments"></a><strong>Multi-Line Comments</strong></h2><p>Bash does not have a built-in multi-line comment syntax like some other programming languages. However, you can use a <code>: &#39;...&#39;</code> or <code>: &quot;...&quot;</code> construct to create a block of comments. The <code>:</code> is a built-in command that does nothing, and the quoted text is ignored by the interpreter. This is a common workaround for multi-line comments.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">: <span class="string">&#x27;</span></span><br><span class="line"><span class="string">This is a multi-line comment.</span></span><br><span class="line"><span class="string">It spans several lines.</span></span><br><span class="line"><span class="string">It is ignored by the Bash interpreter.</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><br>Alternatively, you can use <code>&lt;&lt;&#39;COMMENT&#39;</code> with a here document to achieve a similar effect:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;&lt;<span class="string">&#x27;COMMENT&#x27;</span></span><br><span class="line">This is a multi-line comment.</span><br><span class="line">It also spans multiple lines.</span><br><span class="line">It is ignored by the Bash interpreter.</span><br><span class="line">COMMENT</span><br></pre></td></tr></table></figure></p>
<h2 id="Documentation-Comments"><a href="#Documentation-Comments" class="headerlink" title="Documentation Comments"></a><strong>Documentation Comments</strong></h2><p>For more structured documentation, you can use comments to describe functions or sections of your script. This is useful for providing detailed descriptions, usage information, and examples.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to greet the user</span></span><br><span class="line"><span class="comment"># Usage: greet &lt;name&gt;</span></span><br><span class="line"><span class="comment"># Example: greet &quot;Alice&quot;</span></span><br><span class="line"><span class="function"><span class="title">greet</span></span>() &#123;</span><br><span class="line">  <span class="built_in">local</span> name=<span class="variable">$1</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$name</span>!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Main script execution</span></span><br><span class="line">greet <span class="string">&quot;Alice&quot;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Best-Practices-for-Using-Comments"><a href="#Best-Practices-for-Using-Comments" class="headerlink" title="Best Practices for Using Comments"></a>Best Practices for Using Comments</h2><ul>
<li><strong>Be Clear and Concise</strong>: Comments should clearly explain what the code does, especially if the code is complex or not immediately obvious.</li>
<li><strong>Keep Comments Updated</strong>: Ensure that comments are updated along with the code they describe. Outdated comments can be misleading.</li>
<li><strong>Avoid Redundant Comments</strong>: Don’t state the obvious. For example, comments like <code># Increment i</code> right next to <code>i=$((i + 1))</code> can be redundant.</li>
<li><strong>Use Comments for Sections</strong>: Use comments to divide the script into logical sections, which helps in readability.</li>
</ul>
<p>Example Script with Comments:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define variables</span></span><br><span class="line">name=<span class="string">&quot;Alice&quot;</span></span><br><span class="line">age=30</span><br><span class="line"></span><br><span class="line"><span class="comment"># Output variable values</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Name: <span class="variable">$name</span>&quot;</span>  <span class="comment"># Print the name</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Age: <span class="variable">$age</span>&quot;</span>    <span class="comment"># Print the age</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read user input</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Enter your city: &quot;</span> city</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;City: <span class="variable">$city</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Perform string replacement</span></span><br><span class="line">new_name=<span class="variable">$&#123;name/Alice/Bob&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;New Name: <span class="variable">$new_name</span>&quot;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Quotes and Basic Escape Characters in Bash</title>
    <url>/2024/07/14/quotes-and-basic-escape-characters-in-bash/</url>
    <content><![CDATA[<p>In Bash, quotes are used to handle special characters, manage spaces, and control how strings are interpreted. There are three primary types of quotes in Bash:</p>
<h2 id="Single-Quotes-39"><a href="#Single-Quotes-39" class="headerlink" title="Single Quotes (&#39;)"></a><strong>Single Quotes (</strong><code>&#39;</code><strong>)</strong></h2><p>Single quotes are used to preserve the literal value of each character within the quotes. No variable substitution or command substitution occurs within single quotes.<br><strong>Example</strong>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;This is a string with a $variable and a `command`&#x27;</span></span><br></pre></td></tr></table></figure><br>Output:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is a string with a $variable and a `command`</span><br></pre></td></tr></table></figure><br>In this example, the <code>$variable</code> and <code>command</code> are not interpreted; they are displayed exactly as they are.</p>
<h2 id="Double-Quotes-quot"><a href="#Double-Quotes-quot" class="headerlink" title="Double Quotes (&quot;)"></a><strong>Double Quotes (</strong><code>&quot;</code><strong>)</strong></h2><p>Double quotes allow for variable and command substitution. Characters within double quotes are interpreted, meaning that <code>$</code>, <code>``, and</code>` can be used to insert variables, execute commands, or escape special characters.<br><strong>Example</strong>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">variable=<span class="string">&quot;world&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$variable</span>!&quot;</span></span><br></pre></td></tr></table></figure><br>Output:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello, world!</span><br></pre></td></tr></table></figure><br><strong>Example with command substitution</strong>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">current_date=$(<span class="built_in">date</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Today&#x27;s date is <span class="variable">$current_date</span>&quot;</span></span><br></pre></td></tr></table></figure><br>Output:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Today&#x27;s date is Mon Aug 21 10:00:00 UTC 2024</span><br></pre></td></tr></table></figure></p>
<h2 id="Backticks"><a href="#Backticks" class="headerlink" title="Backticks (```)"></a><strong>Backticks (</strong>```<strong>)</strong></h2><p>Backticks are an older method for command substitution. They are generally used to execute a command and substitute its output into a string. Although functional, backticks are less preferred than the <code>$(...)</code> syntax due to readability and nesting issues.<br><strong>Example</strong>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">current_date=`<span class="built_in">date</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Today&#x27;s date is <span class="variable">$current_date</span>&quot;</span></span><br></pre></td></tr></table></figure><br><strong>Note</strong>: For more complex substitutions or nested commands, prefer <code>$(...)</code> over backticks for better readability and maintainability.</p>
<h2 id="Escaping-Characters"><a href="#Escaping-Characters" class="headerlink" title="Escaping Characters"></a>Escaping Characters</h2><p>Sometimes, you need to include special characters within quotes. You can escape characters using the backslash (<code>\</code>) character. This is particularly useful within double quotes.</p>
<h3 id="Common-Escape-Characters"><a href="#Common-Escape-Characters" class="headerlink" title="Common Escape Characters"></a><strong>Common Escape Characters</strong></h3><ul>
<li><code>\</code>: The backslash itself acts as an escape character, telling the shell to ignore the special meaning of the character following it and treat it as a regular character.</li>
<li><code>\n</code>: Newline character, used to insert a new line.</li>
<li><code>\t</code>: Tab character, used to insert a tab.</li>
<li><code>\r</code>: Carriage return, used to move the cursor back to the beginning of the line.</li>
<li><code>\a</code>: Bell character, used to sound an alert.</li>
<li><code>\b</code>: Backspace, used to delete the character before the cursor.</li>
<li><code>\f</code>: Form feed, used for page separation.</li>
<li><code>\&#39;</code> and <code>\&quot;</code>: Single quote and double quote, used to include these characters within strings.</li>
</ul>
<p><strong>Usage Example</strong>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;A tab character is represented as \\t and a newline as \\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;A single quote: &#x27; and a backslash: \\&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is a new line: \n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Tab\tcharacter&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\a&quot;</span>  <span class="comment"># Sounds an alert</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Escaping-in-Strings"><a href="#Escaping-in-Strings" class="headerlink" title="Escaping in Strings"></a><strong>Escaping in Strings</strong></h3><p>Within strings, you can use double quotes (<code>&quot;</code>) or single quotes (<code>&#39;</code>) to enclose text:</p>
<ul>
<li><strong>Double Quotes</strong> (<code>&quot;</code>) allow variable substitution and command substitution, and escape characters within them are interpreted.</li>
<li><strong>Single Quotes</strong> (<code>&#39;</code>) do not allow variable or command substitution, and all characters within them are treated literally, even if preceded by an escape character.</li>
</ul>
<p><strong>Example</strong>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;A single quote: &#x27; and a backslash: \\&quot;</span> <span class="comment"># Outputs &quot;A single quote: &#x27; and a backslash: \&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is a <span class="variable">$VAR</span>&quot;</span>  <span class="comment"># If VAR=world, outputs &quot;This is a world&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;This is a $VAR&#x27;</span>  <span class="comment"># Outputs &quot;This is a $VAR&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is a \$VAR&quot;</span>  <span class="comment"># Outputs &quot;This is a $VAR&quot;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Escaping-Command-Line-Arguments"><a href="#Escaping-Command-Line-Arguments" class="headerlink" title="Escaping Command Line Arguments"></a>Escaping Command Line Arguments</h3><p>When passing arguments with special characters to scripts on the command line, you can escape them using a backslash.<br><strong>Example</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./script.sh <span class="string">&quot;This is a \&quot;quoted\&quot; string&quot;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Escaping-File-Paths"><a href="#Escaping-File-Paths" class="headerlink" title="Escaping File Paths"></a>Escaping File Paths</h3><p>When file paths contain spaces or other special characters, they should be enclosed in quotes or escaped using a backslash.<br><strong>Example</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;File path: /home/john/my file.txt&quot;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Important-Notes"><a href="#Important-Notes" class="headerlink" title="Important Notes"></a>Important Notes</h3><ul>
<li>When using the <code>echo</code> command, make sure the <code>-e</code> option is enabled to interpret escape sequences.</li>
<li>With the <code>printf</code> command, escape sequences are interpreted by default without needing the <code>-e</code> option.</li>
</ul>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul>
<li><strong>Single Quotes (</strong><code>&#39;</code><strong>)</strong>: Preserve the literal value of the enclosed text.</li>
<li><strong>Double Quotes (</strong><code>&quot;</code><strong>)</strong>: Allow for variable and command substitution within the enclosed text.</li>
<li><strong>Backticks (</strong><code>**</code><strong>`</strong>)**: An older method for command substitution, less preferred compared to <code>$(...)</code>.</li>
<li><strong>Escaping Characters (</strong><code>\</code><strong>)</strong>: Used to include special characters within quotes.</li>
</ul>
<p>Understanding how to use quotes effectively is essential for writing accurate and efficient Bash scripts, especially when dealing with strings containing spaces or special characters.</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Conditional Statements in Bash</title>
    <url>/2024/07/16/conditional-statements-in-bash/</url>
    <content><![CDATA[<p>In this article, we’ll explore the various types of conditional statements in Bash and how to use them effectively.</p>
<h2 id="If-Statement"><a href="#If-Statement" class="headerlink" title="If Statement"></a>If Statement</h2><p>The most basic conditional statement is the <code>if</code> statement. It allows you to execute code blocks based on whether a condition is true or false.<br><strong>Basic Syntax:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ condition ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># commands if condition is true</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><br><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">age=25</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -ge 18 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;You are an adult.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="If-Else-Statement"><a href="#If-Else-Statement" class="headerlink" title="If-Else Statement"></a>If-Else Statement</h2><p>The if-else statement allows you to specify an alternative code block to execute when the condition is false.<br><strong>Syntax:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ condition ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># commands if condition is true</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment"># commands if condition is false</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><br><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">temperature=28</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$temperature</span> -gt 30 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;It&#x27;s hot outside!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The weather is pleasant.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="If-Elif-Else-Statement"><a href="#If-Elif-Else-Statement" class="headerlink" title="If-Elif-Else Statement"></a>If-Elif-Else Statement</h2><p>For multiple conditions, use the elif (else if) clause to check additional conditions.<br><strong>Syntax:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ condition1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># commands for condition1</span></span><br><span class="line"><span class="keyword">elif</span> [ condition2 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># commands for condition2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment"># commands if no condition is true</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><br><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">grade=75</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$grade</span> -ge 90 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;A&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$grade</span> -ge 80 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;B&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$grade</span> -ge 70 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;F&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Nested-If-Statements"><a href="#Nested-If-Statements" class="headerlink" title="Nested If Statements"></a>Nested If Statements</h2><p>You can nest if statements inside other if statements for more complex logic.<br><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">age=25</span><br><span class="line">has_license=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -ge 18 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$has_license</span>&quot;</span> = <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;You can drive a car.&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;You need a license to drive.&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;You&#x27;re too young to drive.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Case-Statement"><a href="#Case-Statement" class="headerlink" title="Case Statement"></a>Case Statement</h2><p>For multiple conditions with specific values, the case statement can be more readable than multiple if-elif statements.<br><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">fruit=<span class="string">&quot;apple&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$fruit</span> <span class="keyword">in</span></span><br><span class="line">    <span class="string">&quot;apple&quot;</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;It&#x27;s an apple.&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="string">&quot;banana&quot;</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;It&#x27;s a banana.&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Unknown fruit.&quot;</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Logical-Operators"><a href="#Logical-Operators" class="headerlink" title="Logical Operators"></a>Logical Operators</h2><p>Use logical operators to combine conditions:</p>
<ul>
<li>AND: &amp;&amp;</li>
<li>OR: ||</li>
<li>NOT: !</li>
</ul>
<p><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">age=25</span><br><span class="line">has_job=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$age</span> -ge 18 ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$has_job</span>&quot;</span> = <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;You&#x27;re an employed adult.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="File-Test-Operators"><a href="#File-Test-Operators" class="headerlink" title="File Test Operators"></a>File Test Operators</h2><p>Bash provides special operators for testing file attributes:</p>
<ul>
<li><code>-e</code>: file exists</li>
<li><code>-f</code>: regular file</li>
<li><code>-d</code>: directory</li>
<li><code>-r</code>: readable</li>
<li><code>-w</code>: writable</li>
<li><code>-x</code>: executable</li>
</ul>
<p><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;myfile.txt&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;myfile.txt exists and is a regular file.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Mastering conditional statements in Bash allows you to create more dynamic and responsive scripts. By combining these different types of conditionals and operators, you can handle complex decision-making processes in your Bash scripts efficiently.<br>Remember to test your conditions thoroughly and consider edge cases when writing conditional statements. With practice, you’ll become proficient in using these powerful constructs to enhance your Bash scripting skills.</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>For Loop in Bash</title>
    <url>/2024/07/17/for-loop-in-bash/</url>
    <content><![CDATA[<p>A <code>for</code> loop in Bash is a control structure that allows you to repeat a set of commands for each item in a list, over a range, or based on other criteria. It’s commonly used for tasks like iterating over files in a directory, processing elements in an array, or executing a block of code multiple times.</p>
<h2 id="Basic-Syntax"><a href="#Basic-Syntax" class="headerlink" title="Basic Syntax"></a>Basic Syntax</h2><p>The basic syntax of a <code>for</code> loop in Bash is as follows:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> VARIABLE <span class="keyword">in</span> LIST</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="comment"># Commands to be executed</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li><code>VARIABLE</code> is a placeholder that takes the value of each item in <code>LIST</code> one by one.</li>
<li><code>LIST</code> can be a list of values, a range of numbers, or even a command that generates a list.</li>
<li><p>The <code>do</code> and <code>done</code> keywords define the start and end of the loop block.</p>
<h2 id="Example-1-Loop-Over-a-List-of-Values"><a href="#Example-1-Loop-Over-a-List-of-Values" class="headerlink" title="Example 1: Loop Over a List of Values"></a>Example 1: Loop Over a List of Values</h2><p>Here’s an example of a <code>for</code> loop that iterates over a list of words:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> apple banana cherry</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The fruit is: <span class="variable">$word</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>Output:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The fruit is: apple</span><br><span class="line">The fruit is: banana</span><br><span class="line">The fruit is: cherry</span><br></pre></td></tr></table></figure>
<h2 id="Example-2-Loop-Over-a-Range-of-Numbers"><a href="#Example-2-Loop-Over-a-Range-of-Numbers" class="headerlink" title="Example 2: Loop Over a Range of Numbers"></a>Example 2: Loop Over a Range of Numbers</h2><p>You can also loop over a sequence of numbers:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..5&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Number: <span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>Output:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Number: 1</span><br><span class="line">Number: 2</span><br><span class="line">Number: 3</span><br><span class="line">Number: 4</span><br><span class="line">Number: 5</span><br></pre></td></tr></table></figure>
<h2 id="Example-3-Loop-Over-Files-in-a-Directory"><a href="#Example-3-Loop-Over-Files-in-a-Directory" class="headerlink" title="Example 3: Loop Over Files in a Directory"></a>Example 3: Loop Over Files in a Directory</h2><p>A common use case is looping over files in a directory:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /path/to/directory/*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Processing <span class="variable">$file</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>This loop will iterate over each file in the specified directory and execute the commands inside the loop for each file.<br>For example, read all files from <code>/home/john</code> directory.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /home/john/*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Processing <span class="variable">$file</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>Output:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Processing /home/john/Desktop</span><br><span class="line">Processing /home/john/Documents</span><br><span class="line">Processing /home/john/Downloads</span><br><span class="line">Processing /home/john/Music</span><br><span class="line">Processing /home/john/Pictures</span><br><span class="line">Processing /home/john/Public</span><br><span class="line">Processing /home/john/Templates</span><br><span class="line">Processing /home/john/Videos</span><br><span class="line">Processing /home/john/snap</span><br><span class="line">Processing /home/john/tut</span><br></pre></td></tr></table></figure>
<h2 id="Example-4-C-Style-For-Loop"><a href="#Example-4-C-Style-For-Loop" class="headerlink" title="Example 4: C-Style For Loop"></a>Example 4: C-Style For Loop</h2><p>Bash also supports a C-style <code>for</code> loop, similar to loops in languages like C or Java:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Iteration <span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>Output:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Iteration 1</span><br><span class="line">Iteration 2</span><br><span class="line">Iteration 3</span><br><span class="line">Iteration 4</span><br><span class="line">Iteration 5</span><br></pre></td></tr></table></figure>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2></li>
<li><p><code>for</code> loops are versatile and can be used to iterate over lists, ranges, or output from commands.</p>
</li>
<li>They are useful for automating repetitive tasks, processing files, and more.</li>
</ul>
<p>This should give you a solid understanding of how to use <code>for</code> loops in Bash scripts.</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Until Loop in Bash</title>
    <url>/2024/07/19/until-loop-in-bash/</url>
    <content><![CDATA[<p>An <code>until</code> loop in Bash is similar to a <code>while</code> loop, but it works in the opposite way. It repeatedly executes a block of commands <strong>until</strong> a specified condition becomes true. In other words, the loop continues as long as the condition is false and stops when the condition becomes true.</p>
<h2 id="Basic-Syntax"><a href="#Basic-Syntax" class="headerlink" title="Basic Syntax"></a>Basic Syntax</h2><p>The basic syntax of an <code>until</code> loop in Bash is:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">until</span> [ CONDITION ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="comment"># Commands to be executed</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li><p><code>CONDITION</code> is an expression that is checked before each iteration of the loop. If the condition is false, the loop body (the commands between <code>do</code> and <code>done</code>) is executed. If the condition becomes true, the loop exits.</p>
<h2 id="Example-1-Counting-with-an-Until-Loop"><a href="#Example-1-Counting-with-an-Until-Loop" class="headerlink" title="Example 1: Counting with an Until Loop"></a>Example 1: Counting with an Until Loop</h2><p>Here’s an example that counts from 1 to 5 using an <code>until</code> loop:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">counter=1</span><br><span class="line"></span><br><span class="line"><span class="keyword">until</span> [ <span class="variable">$counter</span> -gt 5 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Counter: <span class="variable">$counter</span>&quot;</span></span><br><span class="line">    ((counter++))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>Output:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Counter: 1</span><br><span class="line">Counter: 2</span><br><span class="line">Counter: 3</span><br><span class="line">Counter: 4</span><br><span class="line">Counter: 5</span><br></pre></td></tr></table></figure>
</li>
<li><p>In this example, the loop continues until the <code>counter</code> is greater than 5. The condition <code>[ $counter -gt 5 ]</code> becomes true when <code>counter</code> reaches 6, causing the loop to stop.</p>
<h2 id="Example-2-Waiting-for-a-Condition-to-Become-True"><a href="#Example-2-Waiting-for-a-Condition-to-Become-True" class="headerlink" title="Example 2: Waiting for a Condition to Become True"></a>Example 2: Waiting for a Condition to Become True</h2><p>You can use an <code>until</code> loop to wait for a condition to become true, such as waiting for a service to start:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">until</span> pgrep apache2 &gt; /dev/null</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Waiting for Apache server to start...&quot;</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Apache server is running!&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>The loop will continue to check if the Apache server is running by using the <code>pgrep</code> command. Once <code>pgrep</code> finds the process and returns true, the loop exits.</p>
<h2 id="Example-3-Using-an-Until-Loop-for-User-Input"><a href="#Example-3-Using-an-Until-Loop-for-User-Input" class="headerlink" title="Example 3: Using an Until Loop for User Input"></a>Example 3: Using an Until Loop for User Input</h2><p>Here’s an example where an <code>until</code> loop is used to prompt the user until they enter a specific input:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">password=<span class="string">&quot;secret&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">until</span> [ <span class="string">&quot;<span class="variable">$user_input</span>&quot;</span> = <span class="string">&quot;<span class="variable">$password</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">&quot;Enter the password: &quot;</span> user_input</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Correct password entered!&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>The loop will keep asking for the password until the user enters “secret”.</p>
<h2 id="Example-4-Infinite-Loop-with-Until"><a href="#Example-4-Infinite-Loop-with-Until" class="headerlink" title="Example 4: Infinite Loop with Until"></a>Example 4: Infinite Loop with Until</h2><p>Although less common, you can create an infinite loop with <code>until</code> by using a condition that never becomes true:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">until</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;This is an infinite loop. Press Ctrl+C to stop.&quot;</span></span><br><span class="line">    <span class="built_in">sleep</span> 2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>This loop will run indefinitely because <code>false</code> is always false.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2></li>
<li><p>An <code>until</code> loop is similar to a <code>while</code> loop but continues running as long as the condition is false.</p>
</li>
<li>It’s useful when you want to repeat a block of code until a certain condition is met.</li>
<li>Typical use cases include waiting for a specific event to occur or processing input until a correct response is received.</li>
</ul>
<p>Understanding <code>until</code> loops adds another useful tool to your Bash scripting toolkit, particularly for situations where you want to keep looping until a specific condition is satisfied.</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>While Loop in Bash</title>
    <url>/2024/07/18/while-loop-in-Bash/</url>
    <content><![CDATA[<p>A <code>while</code> loop in Bash is another control structure that repeatedly executes a block of commands as long as a specified condition is true. It’s particularly useful when you don’t know in advance how many times you need to loop, as the loop will continue until the condition is no longer met.</p>
<h2 id="Basic-Syntax"><a href="#Basic-Syntax" class="headerlink" title="Basic Syntax"></a>Basic Syntax</h2><p>The basic syntax of a <code>while</code> loop in Bash is:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> [ CONDITION ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="comment"># Commands to be executed</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li><p><code>CONDITION</code> is a test or expression that is checked before each iteration of the loop. If the condition evaluates to true, the loop body (the commands between <code>do</code> and <code>done</code>) is executed. If the condition evaluates to false, the loop exits.</p>
<h2 id="Example-1-Counting-with-a-While-Loop"><a href="#Example-1-Counting-with-a-While-Loop" class="headerlink" title="Example 1: Counting with a While Loop"></a>Example 1: Counting with a While Loop</h2><p>Here’s a simple example that counts from 1 to 5 using a <code>while</code> loop:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">counter=1</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$counter</span> -le 5 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Counter: <span class="variable">$counter</span>&quot;</span></span><br><span class="line">    ((counter++))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>Output:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Counter: 1</span><br><span class="line">Counter: 2</span><br><span class="line">Counter: 3</span><br><span class="line">Counter: 4</span><br><span class="line">Counter: 5</span><br></pre></td></tr></table></figure>
<h2 id="Example-2-Waiting-for-a-Condition"><a href="#Example-2-Waiting-for-a-Condition" class="headerlink" title="Example 2: Waiting for a Condition"></a>Example 2: Waiting for a Condition</h2><p>You can use a <code>while</code> loop to wait for a specific condition to be met, such as waiting for a file to be created:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ ! -f /path/to/file ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Waiting for file to be created...&quot;</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;File has been created!&quot;</span></span><br></pre></td></tr></table></figure>
<p>In this example, the loop will continue to check if the file exists every second (<code>sleep 1</code>) and only exit once the file is found.</p>
<h2 id="Example-3-Reading-a-File-Line-by-Line"><a href="#Example-3-Reading-a-File-Line-by-Line" class="headerlink" title="Example 3: Reading a File Line by Line"></a>Example 3: Reading a File Line by Line</h2><p>A common use of <code>while</code> loops is reading a file line by line:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> IFS= <span class="built_in">read</span> -r line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Line: <span class="variable">$line</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span> &lt; /path/to/file.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>IFS= read -r line</code> ensures that each line is read correctly, even if it contains spaces or other special characters.</p>
</li>
<li><p>The loop will process each line of the file until the end of the file is reached.</p>
<h2 id="Example-4-Infinite-Loop"><a href="#Example-4-Infinite-Loop" class="headerlink" title="Example 4: Infinite Loop"></a>Example 4: Infinite Loop</h2><p>An infinite loop continues indefinitely until interrupted (e.g., with <code>Ctrl+C</code>). This can be useful in situations where you need continuous operation:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;This is an infinite loop. Press Ctrl+C to stop.&quot;</span></span><br><span class="line">    <span class="built_in">sleep</span> 2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>This loop will print the message every 2 seconds until manually stopped.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2></li>
<li><p><code>while</code> loops are great for situations where you need to repeat a task until a specific condition is met.</p>
</li>
<li>They’re commonly used for waiting for conditions, processing files, and other tasks where the number of iterations isn’t predetermined.</li>
</ul>
<p>Understanding <code>while</code> loops will help you write more flexible and responsive Bash scripts.</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Case Statement in Bash</title>
    <url>/2024/07/21/case-statement-in-bash/</url>
    <content><![CDATA[<p>Are you looking to streamline your Bash scripts and make them more efficient? Look no further than the powerful switch (case) statement! In this blog post, we’ll dive deep into how to use this versatile control structure in Bash scripting.</p>
<h2 id="What-is-a-Switch-Case-Statement"><a href="#What-is-a-Switch-Case-Statement" class="headerlink" title="What is a Switch (Case) Statement?"></a>What is a Switch (Case) Statement?</h2><p>The switch statement, known as the “case” statement in Bash, allows you to compare a given value against multiple patterns and execute different code blocks based on which pattern matches. It’s an excellent alternative to long chains of if-else statements when you need to handle multiple conditions.</p>
<h2 id="Basic-Syntax"><a href="#Basic-Syntax" class="headerlink" title="Basic Syntax"></a>Basic Syntax</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="variable">$variable</span> <span class="keyword">in</span></span><br><span class="line">    pattern1)</span><br><span class="line">        commands1</span><br><span class="line">        ;;</span><br><span class="line">    pattern2)</span><br><span class="line">        commands2</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        default_commands</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<p><strong>Key Features:</strong></p>
<ol>
<li>Pattern Matching: You can use wildcards and regular expressions in your patterns.</li>
<li>Multiple Patterns: Group several patterns together for the same code block.</li>
<li><p>Fall-through: Use the ;&amp; operator to continue checking subsequent patterns.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>Let’s create a simple script that greets users based on the time of day:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">hour=$(<span class="built_in">date</span> +%H)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$hour</span> <span class="keyword">in</span></span><br><span class="line">    0[0-9]|1[0-1])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Good morning!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    1[2-7])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Good afternoon!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Good evening!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<p>This script uses the case statement to match the current hour and output an appropriate greeting.</p>
<h2 id="Advanced-Tips"><a href="#Advanced-Tips" class="headerlink" title="Advanced Tips"></a>Advanced Tips</h2></li>
<li><p>Use the <code>|</code> operator for multiple patterns:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="variable">$fruit</span> <span class="keyword">in</span></span><br><span class="line">    apple|Apple)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;It&#x27;s an apple!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Implement a menu system:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Select an option:&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1) Option 1&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2) Option 2&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3) Quit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> choice</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$choice</span> <span class="keyword">in</span></span><br><span class="line">    1) <span class="built_in">echo</span> <span class="string">&quot;You selected Option 1&quot;</span> ;;</span><br><span class="line">    2) <span class="built_in">echo</span> <span class="string">&quot;You selected Option 2&quot;</span> ;;</span><br><span class="line">    3) <span class="built_in">echo</span> <span class="string">&quot;Goodbye!&quot;</span>; <span class="built_in">exit</span> ;;</span><br><span class="line">    *) <span class="built_in">echo</span> <span class="string">&quot;Invalid option&quot;</span> ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Use case statements in functions:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">get_day_type</span></span>() &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        Saturday|Sunday) <span class="built_in">echo</span> <span class="string">&quot;weekend&quot;</span> ;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;weekday&quot;</span> ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">day_type=$(get_day_type <span class="string">&quot;Monday&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Monday is a <span class="variable">$day_type</span>&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The switch (case) statement in Bash is a powerful tool for creating more readable and efficient scripts. By mastering this control structure, you’ll be able to handle complex conditionals with ease and write cleaner, more maintainable code.</p>
</li>
</ol>
<p>Remember to experiment with different patterns and use cases to fully leverage the power of the case statement in your Bash scripts!</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Include Files in Bash</title>
    <url>/2024/07/22/include-files-in-bash/</url>
    <content><![CDATA[<p>Just like other programming languages that allow you to include files, Bash scripting also enables you to include (or source) another shell script within your script. This practice is a powerful way to modularize your code and reuse functions, variables, and configurations. It helps keep your scripts organized, readable, and maintainable.</p>
<p>For instance, to include a script named <code>filename.sh</code> in your current script, you can use the following syntax, assuming that <code>filename.sh</code> is in the same directory as your current script:</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> filename.sh</span><br></pre></td></tr></table></figure>
<p>or<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">. filename.sh</span><br></pre></td></tr></table></figure></p>
<p>The <code>source</code> command (or its synonym <code>.</code>) is commonly used to include and execute the contents of one script within another. This method is ideal for incorporating functions, variables, and configurations.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>Suppose you have a script <code>functions.sh</code> containing some useful functions:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># functions.sh</span></span><br><span class="line"><span class="function"><span class="title">greet</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$1</span>!&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>You can include <code>functions.sh</code> in your main script <code>main.sh</code> like this:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include the functions script</span></span><br><span class="line"><span class="built_in">source</span> functions.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use the function from the included script</span></span><br><span class="line">greet <span class="string">&quot;World&quot;</span></span><br></pre></td></tr></table></figure><br>When you run <code>main.sh</code>, it will output:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./main.sh</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Functions in Bash</title>
    <url>/2024/07/24/functions-in-bash/</url>
    <content><![CDATA[<p>Functions are a powerful feature in Bash scripting that allow you to organize your code, improve readability, and reduce repetition. In this blog post, we’ll explore how to create and use functions effectively in your Bash scripts.</p>
<h2 id="Basic-Function-Syntax"><a href="#Basic-Function-Syntax" class="headerlink" title="Basic Function Syntax"></a>Basic Function Syntax</h2><p>Here’s the basic syntax for defining a function in Bash:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">function_name</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Function body</span></span><br><span class="line">    <span class="comment"># Commands go here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>You can also use this alternative syntax:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> function_name &#123;</span><br><span class="line">    <span class="comment"># Function body</span></span><br><span class="line">    <span class="comment"># Commands go here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">greet</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello, world!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call the function</span></span><br><span class="line">greet</span><br></pre></td></tr></table></figure></p>
<h2 id="Functions-with-Parameters"><a href="#Functions-with-Parameters" class="headerlink" title="Functions with Parameters"></a>Functions with Parameters</h2><p>Functions can accept parameters, which are accessed using 1, 2, etc., within the function:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">greet_person</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$1</span>!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call the function with an argument</span></span><br><span class="line">greet_person <span class="string">&quot;Johnson&quot;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Return-Values"><a href="#Return-Values" class="headerlink" title="Return Values"></a>Return Values</h2><p>Bash functions don’t return values like in other programming languages. Instead, they can:</p>
<ol>
<li><p>Use the <code>return</code> statement to exit with a status code:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">is_even</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> (( <span class="variable">$1</span> % <span class="number">2</span> == <span class="number">0</span> )); <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">return</span> 0  <span class="comment"># True in Bash</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">return</span> 1  <span class="comment"># False in Bash</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">is_even 4</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;4 is even&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Echo a result, which can be captured using command substitution:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">get_square</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> $(( <span class="variable">$1</span> * <span class="variable">$1</span> ))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result=$(get_square 5)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The square of 5 is <span class="variable">$result</span>&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Local-Variables"><a href="#Local-Variables" class="headerlink" title="Local Variables"></a>Local Variables</h2><p>Use the <code>local</code> keyword to declare variables that are only accessible within the function:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">my_function</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> my_var=<span class="string">&quot;I&#x27;m local&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$my_var</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">my_function</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$my_var</span>&quot;</span>  <span class="comment"># This will be empty</span></span><br></pre></td></tr></table></figure>
<h2 id="Function-Libraries"><a href="#Function-Libraries" class="headerlink" title="Function Libraries"></a>Function Libraries</h2><p>You can create function libraries and source them in your scripts:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># math_functions.sh</span></span><br><span class="line"><span class="function"><span class="title">add</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> $(( <span class="variable">$1</span> + <span class="variable">$2</span> ))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">subtract</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> $(( <span class="variable">$1</span> - <span class="variable">$2</span> ))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> math_functions.sh</span><br><span class="line"></span><br><span class="line">result=$(add 5 3)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;5 + 3 = <span class="variable">$result</span>&quot;</span></span><br><span class="line"></span><br><span class="line">result=$(subtract 10 4)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10 - 4 = <span class="variable">$result</span>&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Recursive-Functions"><a href="#Recursive-Functions" class="headerlink" title="Recursive Functions"></a>Recursive Functions</h2><p>Bash supports recursive functions, but be cautious about stack overflow:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">factorial</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> -le 1 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">local</span> temp=$(factorial $(( <span class="variable">$1</span> - <span class="number">1</span> )))</span><br><span class="line">        <span class="built_in">echo</span> $(( <span class="variable">$1</span> * temp ))</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result=$(factorial 5)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Factorial of 5 is <span class="variable">$result</span>&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Default-Parameter-Values"><a href="#Default-Parameter-Values" class="headerlink" title="Default Parameter Values"></a>Default Parameter Values</h2><p>You can set default values for function parameters:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">greet</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> name=<span class="variable">$&#123;1:-&quot;Guest&quot;&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$name</span>!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet        <span class="comment"># Outputs: Hello, Guest!</span></span><br><span class="line">greet <span class="string">&quot;Johnson&quot;</span>  <span class="comment"># Outputs: Hello, Johnson!</span></span><br></pre></td></tr></table></figure>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Functions in Bash are a versatile tool for creating modular, reusable code. They help improve script organization, readability, and maintainability. By mastering functions, you can write more efficient and elegant Bash scripts.<br>Remember to use meaningful function names, keep your functions focused on a single task, and document complex functions for better understanding. With practice, you’ll find that functions greatly enhance your Bash scripting capabilities.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>String Comparisons in Bash</title>
    <url>/2024/07/28/string-comparisons-in-bash/</url>
    <content><![CDATA[<p>String comparisons are a fundamental part of Bash scripting, allowing you to manipulate and make decisions based on text data. In this blog post, we’ll explore various methods and operators for comparing strings in Bash, along with practical examples and best practices.</p>
<h2 id="Basic-String-Comparison-Operators"><a href="#Basic-String-Comparison-Operators" class="headerlink" title="Basic String Comparison Operators"></a>Basic String Comparison Operators</h2><p>Bash provides several operators for comparing strings:</p>
<ul>
<li><code>=</code> or <code>==</code>: Equal to (use <code>==</code> inside double brackets <code>[[ ]]</code>)</li>
<li><code>!=</code>: Not equal to</li>
<li><code>&lt;</code>: Less than (in ASCII alphabetical order)</li>
<li><code>&gt;</code>: Greater than (in ASCII alphabetical order)</li>
<li><code>-z</code>: String is null (zero length)</li>
<li><code>-n</code>: String is not null (non-zero length)</li>
</ul>
<p>Example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">str1=<span class="string">&quot;hello&quot;</span></span><br><span class="line">str2=<span class="string">&quot;world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$str1</span>&quot;</span> = <span class="string">&quot;<span class="variable">$str2</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Strings are equal&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Strings are not equal&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$str1</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;String is empty&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Using-Double-Brackets"><a href="#Using-Double-Brackets" class="headerlink" title="Using Double Brackets"></a>Using Double Brackets</h2><p>Double brackets <code>[[ ]]</code> provide more features and are generally preferred for string comparisons:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">name=<span class="string">&quot;Alice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$name</span>&quot;</span> == <span class="string">&quot;Alice&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello, Alice!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$name</span>&quot;</span> != <span class="string">&quot;Bob&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;You&#x27;re not Bob&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Case-Insensitive-Comparisons"><a href="#Case-Insensitive-Comparisons" class="headerlink" title="Case-Insensitive Comparisons"></a>Case-Insensitive Comparisons</h2><p>To perform case-insensitive comparisons, use the <code>shopt</code> command to set <code>nocasematch</code>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">shopt</span> -s nocasematch</span><br><span class="line"></span><br><span class="line">name=<span class="string">&quot;alice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$name</span>&quot;</span> == <span class="string">&quot;ALICE&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Names match (case-insensitive)&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">shopt</span> -u nocasematch  <span class="comment"># Turn off nocasematch</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Pattern-Matching"><a href="#Pattern-Matching" class="headerlink" title="Pattern Matching"></a>Pattern Matching</h2><p>You can use pattern matching within double brackets:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">filename=<span class="string">&quot;document.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$filename</span>&quot;</span> == *.txt ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;This is a text file&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$filename</span>&quot;</span> == doc* ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Filename starts with &#x27;doc&#x27;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Regular-Expressions"><a href="#Regular-Expressions" class="headerlink" title="Regular Expressions"></a>Regular Expressions</h2><p>Bash supports basic regular expressions with the <code>=~</code> operator:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">email=<span class="string">&quot;user@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$email</span>&quot;</span> =~ [a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]&#123;2,4&#125; ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Valid email format&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Invalid email format&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Comparing-String-Lengths"><a href="#Comparing-String-Lengths" class="headerlink" title="Comparing String Lengths"></a>Comparing String Lengths</h2><p>You can compare string lengths using the <code>-gt</code>, <code>-lt</code>, or <code>-eq</code> operators:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">str1=<span class="string">&quot;hello&quot;</span></span><br><span class="line">str2=<span class="string">&quot;hi&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;#str1&#125;</span> -gt <span class="variable">$&#123;#str2&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;str1 is longer than str2&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#str1&#125;</span> -lt <span class="variable">$&#123;#str2&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;str1 is shorter than str2&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;str1 and str2 have the same length&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Substring-Check"><a href="#Substring-Check" class="headerlink" title="Substring Check"></a>Substring Check</h2><p>To check if a string contains a substring:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">sentence=<span class="string">&quot;The quick brown fox jumps over the lazy dog&quot;</span></span><br><span class="line">word=<span class="string">&quot;fox&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$sentence</span>&quot;</span> == *<span class="string">&quot;<span class="variable">$word</span>&quot;</span>* ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The sentence contains the word &#x27;<span class="variable">$word</span>&#x27;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Sorting-Strings"><a href="#Sorting-Strings" class="headerlink" title="Sorting Strings"></a>Sorting Strings</h2><p>You can use the <code>sort</code> command to compare and sort strings:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">string1=<span class="string">&quot;apple&quot;</span></span><br><span class="line">string2=<span class="string">&quot;banana&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="subst">$(echo -e <span class="string">&quot;<span class="variable">$string1</span>\n<span class="variable">$string2</span>&quot;</span> | sort | head -n1)</span>&quot;</span> == <span class="string">&quot;<span class="variable">$string1</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$string1</span> comes before <span class="variable">$string2</span> alphabetically&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$string2</span> comes before <span class="variable">$string1</span> alphabetically&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Comparing-Prefixes-and-Suffixes"><a href="#Comparing-Prefixes-and-Suffixes" class="headerlink" title="Comparing Prefixes and Suffixes"></a>Comparing Prefixes and Suffixes</h2><p>To check if a string starts or ends with a specific substring:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">filename=<span class="string">&quot;document.pdf&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$filename</span>&quot;</span> == doc* ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Filename starts with &#x27;doc&#x27;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$filename</span>&quot;</span> == *.pdf ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;File is a PDF&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Null-or-Empty-String-Checks"><a href="#Null-or-Empty-String-Checks" class="headerlink" title="Null or Empty String Checks"></a>Null or Empty String Checks</h2><p>Always quote variables to handle null or empty strings correctly:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">empty_var=<span class="string">&quot;&quot;</span></span><br><span class="line">unset_var</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$empty_var</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;empty_var is empty&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$unset_var</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;unset_var is null or unset&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Mastering string comparisons in Bash is essential for effective script writing. From basic equality checks to pattern matching and regular expressions, these techniques allow you to manipulate and validate text data efficiently.<br>Remember to always quote your variables to prevent word splitting and globbing issues. Also, prefer using double brackets <code>[[ ]]</code> for string comparisons as they provide more features and are less prone to errors.<br>By incorporating these string comparison techniques into your Bash scripts, you’ll be able to handle text processing tasks more effectively and create more robust and flexible scripts.</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Numeric Comparisons in Bash</title>
    <url>/2024/07/26/numeric-comparisons-in-bash/</url>
    <content><![CDATA[<p>Numeric comparisons are essential for decision-making in Bash scripts. Whether you’re comparing user input, performing calculations, or implementing conditional logic, understanding how to compare numbers effectively is crucial. In this blog post, we’ll explore the various methods and operators used for numeric comparisons in Bash.</p>
<h2 id="Basic-Numeric-Comparison-Operators"><a href="#Basic-Numeric-Comparison-Operators" class="headerlink" title="Basic Numeric Comparison Operators"></a>Basic Numeric Comparison Operators</h2><p>Bash provides several operators for comparing numbers:</p>
<ul>
<li><code>-eq</code>: Equal to</li>
<li><code>-ne</code>: Not equal to</li>
<li><code>-lt</code>: Less than</li>
<li><code>-le</code>: Less than or equal to</li>
<li><code>-gt</code>: Greater than</li>
<li><code>-ge</code>: Greater than or equal to</li>
</ul>
<p><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">x=10</span><br><span class="line">y=20</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$x</span> -lt <span class="variable">$y</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$x</span> is less than <span class="variable">$y</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Using-Double-Parentheses"><a href="#Using-Double-Parentheses" class="headerlink" title="Using Double Parentheses"></a>Using Double Parentheses</h2><p>For more complex arithmetic comparisons, you can use double parentheses <code>(( ))</code>. This syntax allows you to use familiar mathematical comparison operators:</p>
<ul>
<li><code>==</code>: Equal to</li>
<li><code>!=</code>: Not equal to</li>
<li><code>&lt;</code>: Less than</li>
<li><code>&lt;=</code>: Less than or equal to</li>
<li><code>&gt;</code>: Greater than</li>
<li><code>&gt;=</code>: Greater than or equal to</li>
</ul>
<p><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=15</span><br><span class="line">b=20</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (( a &lt; b )); <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$a</span> is less than <span class="variable">$b</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Comparing-Floating-Point-Numbers"><a href="#Comparing-Floating-Point-Numbers" class="headerlink" title="Comparing Floating-Point Numbers"></a>Comparing Floating-Point Numbers</h2><p>Bash doesn’t natively support floating-point arithmetic. However, you can use external commands like <code>bc</code> for floating-point comparisons:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">x=3.14</span><br><span class="line">y=3.15</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (( $(echo &quot;<span class="variable">$x</span> &lt; <span class="variable">$y</span>&quot; | bc -l) )); <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$x</span> is less than <span class="variable">$y</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Comparing-Multiple-Conditions"><a href="#Comparing-Multiple-Conditions" class="headerlink" title="Comparing Multiple Conditions"></a>Comparing Multiple Conditions</h2><p>You can combine multiple comparisons using logical operators:</p>
<ul>
<li><code>&amp;&amp;</code>: AND</li>
<li><code>||</code>: OR</li>
</ul>
<p><strong>Example:</strong><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">age=25</span><br><span class="line">salary=50000</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (( age &gt;= <span class="number">18</span> &amp;&amp; salary &gt;= <span class="number">30000</span> )); <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Eligible for loan&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Not eligible for loan&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Using-test-Command"><a href="#Using-test-Command" class="headerlink" title="Using test Command"></a>Using <code>test</code> Command</h2><p>The <code>test</code> command (which is equivalent to <code>[ ]</code>) can also be used for numeric comparisons:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">num=42</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> <span class="variable">$num</span> -eq 42; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The number is 42&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Arithmetic-Expansion"><a href="#Arithmetic-Expansion" class="headerlink" title="Arithmetic Expansion"></a>Arithmetic Expansion</h2><p>You can perform arithmetic operations within comparisons using <code>$((  ))</code>:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">x=5</span><br><span class="line">y=3</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (( $((x + y)) &gt; 7 )); <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The sum of <span class="variable">$x</span> and <span class="variable">$y</span> is greater than 7&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Comparing-Ranges"><a href="#Comparing-Ranges" class="headerlink" title="Comparing Ranges"></a>Comparing Ranges</h2><p>To check if a number falls within a range:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">score=75</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (( score &gt;= <span class="number">0</span> &amp;&amp; score &lt;= <span class="number">100</span> )); <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Valid score&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Invalid score&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Case-Statement-for-Numeric-Ranges"><a href="#Case-Statement-for-Numeric-Ranges" class="headerlink" title="Case Statement for Numeric Ranges"></a>Case Statement for Numeric Ranges</h2><p>You can use case statements with pattern matching for numeric ranges:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">age=25</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$age</span> <span class="keyword">in</span></span><br><span class="line">    [0-12])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Child&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    [13-19])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Teenager&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    [20-64])</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Adult&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Senior&quot;</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Comparing-Exit-Status"><a href="#Comparing-Exit-Status" class="headerlink" title="Comparing Exit Status"></a>Comparing Exit Status</h2><p>Remember that in Bash, 0 is considered true and any non-zero value is false when used as an exit status:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">is_even</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> $(( <span class="variable">$1</span> % <span class="number">2</span> ))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> is_even 4; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;4 is even&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;4 is odd&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Mastering numeric comparisons in Bash is crucial for writing effective scripts. Whether you’re using basic comparison operators, double parentheses, or external tools like <code>bc</code> for floating-point comparisons, understanding these techniques will help you create more robust and flexible Bash scripts.<br>Remember to always consider the nature of your data (integers vs. floating-point) and choose the appropriate comparison method. With practice, you’ll become proficient in handling various numeric comparison scenarios in your Bash scripts.</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Difference Between &#39;bash script.sh&#39; and &#39;./script.sh&#39;</title>
    <url>/2024/08/01/direct-and-indirect-script-invocation/</url>
    <content><![CDATA[<p>If you’re new to Bash scripting, you might have noticed two common ways to execute a script: <code>bash script.sh</code> and <code>./script.sh</code>. While both methods run your script, there are some key differences between them. In this tutorial, we’ll explore these differences and help you understand when to use each method.</p>
<h2 id="Basic-Execution-Methods"><a href="#Basic-Execution-Methods" class="headerlink" title="Basic Execution Methods"></a>Basic Execution Methods</h2><p>a) bash script.sh<br>   This method explicitly calls the Bash interpreter to execute your script.<br>b) ./script.sh<br>   This method executes the script directly, using the shebang (#!) line in the script to determine which interpreter to use.</p>
<h2 id="Interpreter-Selection"><a href="#Interpreter-Selection" class="headerlink" title="Interpreter Selection"></a>Interpreter Selection</h2><p>a) bash script.sh</p>
<ul>
<li>Always uses Bash to run the script, regardless of the shebang line.</li>
<li>Useful when you want to ensure Bash is used, even if the script specifies a different interpreter.</li>
</ul>
<p>b) ./script.sh</p>
<ul>
<li>Uses the interpreter specified in the script’s shebang line.</li>
<li>If no shebang is present, it uses the current shell.</li>
</ul>
<p>Example:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This script is running in $$&quot;</span></span><br><span class="line"><span class="built_in">readlink</span> /proc/$$/exe;</span><br></pre></td></tr></table></figure><br>Running this script with <code>bash script.sh</code> will always use Bash, while <code>./script.sh</code> will use <code>/bin/sh</code> as specified in the shebang.<br>Now, let’s see both methods to invoke this simple script:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ bash script.sh </span><br><span class="line">This script is running <span class="keyword">in</span> 31310</span><br><span class="line">/usr/bin/bash</span><br></pre></td></tr></table></figure><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./script.sh </span><br><span class="line">This script is running <span class="keyword">in</span> 31312</span><br><span class="line">/usr/bin/dash</span><br></pre></td></tr></table></figure></p>
<h2 id="Execution-Permissions"><a href="#Execution-Permissions" class="headerlink" title="Execution Permissions"></a>Execution Permissions</h2><p>a) bash script.sh</p>
<ul>
<li>Does not require the script to have execute permissions.</li>
<li>Bash reads the file and executes its contents.</li>
</ul>
<p>b) ./script.sh</p>
<ul>
<li>Requires the script to have execute permissions (<code>chmod +x script.sh</code>).</li>
<li>You’ll get a “Permission denied” error if the script isn’t executable.</li>
</ul>
<h2 id="Path-Considerations"><a href="#Path-Considerations" class="headerlink" title="Path Considerations"></a>Path Considerations</h2><p>a) bash script.sh</p>
<ul>
<li>Works as long as ‘bash’ is in your PATH.</li>
<li>Can execute scripts from any directory without ‘./‘ if the script’s directory is in your PATH.</li>
</ul>
<p>b) ./script.sh</p>
<ul>
<li>The ‘./‘ specifies the current directory.</li>
<li>Necessary for security reasons, as the current directory is not typically in the PATH.</li>
</ul>
<h2 id="Subshell-Behavior"><a href="#Subshell-Behavior" class="headerlink" title="Subshell Behavior"></a>Subshell Behavior</h2><p>a) bash script.sh</p>
<ul>
<li>Always runs the script in a new subshell.</li>
<li>Changes to environment variables in the script don’t affect the parent shell.</li>
</ul>
<p>b) ./script.sh</p>
<ul>
<li>Typically runs in a subshell, but can be sourced to run in the current shell using ‘. ./script.sh’.</li>
</ul>
<h2 id="Debugging"><a href="#Debugging" class="headerlink" title="Debugging"></a>Debugging</h2><p>a) bash -x script.sh</p>
<ul>
<li>Enables debug mode, printing each command before execution.</li>
<li>Useful for troubleshooting scripts.</li>
</ul>
<p>b) ./script.sh</p>
<ul>
<li>To debug, you need to modify the shebang line or the script itself.</li>
</ul>
<h2 id="Portability"><a href="#Portability" class="headerlink" title="Portability"></a>Portability</h2><p>a) bash script.sh</p>
<ul>
<li>More portable across different Unix-like systems.</li>
<li>Ensures Bash is used, which may be important for Bash-specific features.</li>
</ul>
<p>b) ./script.sh</p>
<ul>
<li>Relies on the correct interpreter being available as specified in the shebang.</li>
<li>More flexible if you want to use different interpreters for different scripts.</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Both <code>bash script.sh</code> and <code>./script.sh</code> have their places in Bash scripting. Use <code>bash script.sh</code> when you want to explicitly use Bash or when executing scripts without making them executable. Use <code>./script.sh</code> for scripts with proper shebangs and execute permissions, especially in production environments.<br>Remember:</p>
<ul>
<li>Always use shebangs in your scripts for clarity.</li>
<li>Set appropriate permissions for your scripts.</li>
<li>Consider portability and environment when choosing an execution method.</li>
</ul>
<p>By understanding these differences, you can choose the most appropriate method for executing your Bash scripts in various scenarios.</p>
]]></content>
      <categories>
        <category>Bash Tutorial</category>
      </categories>
      <tags>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis HyperLogLog</title>
    <url>/2024/11/03/redis-hyperloglog/</url>
    <content><![CDATA[<blockquote>
<p>HyperLogLog is a probabilistic data structure used to estimate the cardinality of a set. As a probabilistic data structure, HyperLogLog trades perfect accuracy for efficient space utilization.</p>
</blockquote>
<p>Redis added the HyperLogLog data structure in version 2.8.9.</p>
<p>HyperLogLog in Redis is an algorithm used for cardinality estimation. Its main advantage is that, even when the number of input elements is extremely large, the memory required to calculate the cardinality remains fixed and small.</p>
<p>In Redis, each HyperLogLog key only consumes 12 KB of memory, yet it can estimate the cardinality of up to 2^64 unique elements and provide a standard error of 0.81%. This is in stark contrast to traditional data structures like sets, where memory usage increases as the number of elements grows.</p>
<p>However, since HyperLogLog only computes the cardinality based on the input elements without storing them, it cannot return the individual elements like a set can.</p>
<h2 id="What-is-Cardinality"><a href="#What-is-Cardinality" class="headerlink" title="What is Cardinality?"></a>What is Cardinality?</h2><p>For example, consider the dataset {1, 3, 5, 7, 5, 7, 8}. The cardinality of this set is {1, 3, 5, 7, 8}, meaning there are 5 unique elements. Cardinality estimation is the process of quickly calculating the number of unique elements with a small margin of error.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>The following example demonstrates how HyperLogLog works:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PFADD hll_key redis</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; PFADD hll_key mysql</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; PFADD hll_key hbase</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; PFCOUNT hll_key</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Basic-Commands"><a href="#Basic-Commands" class="headerlink" title="Basic Commands"></a>Basic Commands</h2><p>The table below lists the basic Redis HyperLogLog commands:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>No.</th>
<th>Command and Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><code>PFADD key element [element ...]</code>    Adds the specified elements to the HyperLogLog.</td>
</tr>
<tr>
<td>2</td>
<td><code>PFCOUNT key [key ...]</code>    Returns the cardinality estimate for the given HyperLogLog(s).</td>
</tr>
<tr>
<td>3</td>
<td><code>PFMERGE destkey sourcekey [sourcekey ...]</code>    Combines multiple HyperLogLogs into one.</td>
</tr>
</tbody>
</table>
</div>
<p>See the <a href="https://redis.io/docs/latest/commands/?group=hyperloglog">complete list of HyperLogLog commands</a>.</p>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SADD Command</title>
    <url>/2024/10/02/redis-set-sadd-command/</url>
    <content><![CDATA[<p>The Redis <code>SADD</code> command adds one or more member elements to a set. If an element already exists in the set, it will be ignored.</p>
<p>If the set key does not exist, a new set is created with the added elements as its members.</p>
<p>If the key is not of the set type, an error is returned.</p>
<p><em><strong>Note:</strong></em> In Redis version 2.4 and earlier, the <code>SADD</code> command only accepts a single member value.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SADD</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SADD key member [member ...]</span><br></pre></td></tr></table></figure>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><ul>
<li>O(1) for each element added, </li>
<li>O(N) to add N elements when the command is called with multiple arguments.</li>
</ul>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@set</code>, <code>@fast</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>The number of new elements added to the set, excluding any elements that were ignored (i.e., already present in the set).</p>
<h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD s_db redis</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD s_db hbase</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD s_db mysql</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD s_db mysql</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS s_db</span><br><span class="line">1) &quot;mysql&quot;</span><br><span class="line">2) &quot;hbase&quot;</span><br><span class="line">3) &quot;redis&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>An error is returned when the value stored at key is not a set:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SET name Johnson</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; SADD name Ella</span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<p>In the example above, we used the <code>SADD</code> command to add elements to the set named “name.” Redis throws an exception because the operation is attempted on a key holding the wrong type of value.</p>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis HyperLogLog PFCOUNT Command</title>
    <url>/2024/11/06/redis-hyperloglog-pfcount-command/</url>
    <content><![CDATA[<p>The Redis <code>PFCOUNT</code> command returns the cardinality estimate of the given HyperLogLog.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>PFCOUNT</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PFCOUNT key [key ...]</span><br></pre></td></tr></table></figure>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version 2.8.9 and later.</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><ul>
<li>O(1) when called with a single key. </li>
<li>O(N) when called with multiple keys, where N is the number of keys.</li>
</ul>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@hyperloglog</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>An integer representing the cardinality of the given HyperLogLog. </p>
<p>If multiple HyperLogLogs are provided, returns the approximated cardinality of the union of the HyperLogLogs passed, by internally merging the HyperLogLogs stored at the provided keys into a temporary HyperLogLog.</p>
<p><em>Note</em>: as a side effect of calling this function, it is possible that the HyperLogLog is modified, since the last 8 bytes encode the latest computed cardinality for caching purposes. So <code>PFCOUNT</code> is technically a write command.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>The following example demonstrates the usage of the <code>PFCOUNT</code> command:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PFADD hll_key_1 redis mysql hbase</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFCOUNT hll_key_1</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; PFADD hll_key_2 java go python</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFCOUNT hll_key_2</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; PFCOUNT hll_key_1 hll_key_2</span><br><span class="line">(integer) 6</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<p>Here’s a breakdown of each command:</p>
<ul>
<li><code>PFADD hll_key_1 redis mysql hbase</code></li>
</ul>
<p>This command adds the three values (<code>redis</code>, <code>mysql</code>, and <code>hbase</code>) to the HyperLogLog with the key <code>hll_key_1</code>. It returns 1, indicating that the operation successfully added one or more unique elements to the HyperLogLog.</p>
<ul>
<li><code>PFCOUNT hll_key_1</code></li>
</ul>
<p>This command returns the approximate number of unique elements in the HyperLogLog with the key <code>hll_key_1</code>. It returns 3, indicating that <code>hll_key_1</code> contains approximately 3 unique elements.</p>
<ul>
<li><code>PFADD hll_key_2 java go python</code></li>
</ul>
<p>This command adds the three values (<code>java</code>, <code>go</code>, and <code>python</code>) to the HyperLogLog with the key <code>hll_key_2</code>. It returns 1, indicating that the operation successfully added one or more unique elements to the HyperLogLog.</p>
<ul>
<li><code>PFCOUNT hll_key_2</code></li>
</ul>
<p>This command returns the approximate number of unique elements in the HyperLogLog with the key <code>hll_key_2</code>. It returns 3, indicating that <code>hll_key_2</code> contains approximately 3 unique elements.</p>
<ul>
<li><code>PFCOUNT hll_key_1 hll_key_2</code></li>
</ul>
<p><code>PFCOUNT</code> can also take multiple keys and return the approximate number of unique elements across all the HyperLogLogs combined. It returns 6, indicating that when counting across multiple HyperLogLogs, Redis calculates the approximate union of the unique elements in all specified keys.</p>
<h2 id="Performances"><a href="#Performances" class="headerlink" title="Performances"></a>Performances</h2><p>Users should take in mind that single-key and multiple-keys executions of <code>PFCOUNT</code> command are semantically different and have different performances.</p>
<p>The <code>PFCOUNT</code> command performs efficiently with a single key due to caching, which helps avoid recalculating the cardinality frequently. This allows for hundreds of operations per second. However, when called with multiple keys, <code>PFCOUNT</code> requires an on-the-fly merge of the HyperLogLogs, which is slower and does not allow for caching of the union’s cardinality. As a result, the command may take longer (on the order of milliseconds) with multiple keys, and should not be overused.</p>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis HyperLogLog PFADD Command</title>
    <url>/2024/11/04/redis-hyperloglog-pfadd-command/</url>
    <content><![CDATA[<p>The <code>PFADD</code> command in Redis adds one or more elements to a HyperLogLog data structure.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax for the <code>PFADD</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PFADD key [element [element ...]]</span><br></pre></td></tr></table></figure>
<p>This command adds all the specified elements to the HyperLogLog data structure stored at the key provided as the first argument.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version 2.8.9 and later.</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(1) to add every element.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@hyperloglog</code>, <code>@fast</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns an integer:  </p>
<ul>
<li><code>1</code> if at least one element was added.  </li>
<li><code>0</code> if no new elements were added.</li>
</ul>
<blockquote>
<p>As a result, the internal state of the HyperLogLog may be updated, reflecting a new estimation of the cardinality (the number of unique items) based on the added elements.</p>
<p>If the estimated cardinality changes after executing the command, <code>PFADD</code> returns 1. If no change occurs, it returns 0. If the key doesn’t already exist, the command creates an empty HyperLogLog data structure (a Redis string with a specified length and encoding).</p>
</blockquote>
<h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PFADD hll_key redis mysql hbase</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFADD hll_key redis</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; PFCOUNT hll_key</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>You can also call the command with only a key and no elements. In this case:</p>
<ul>
<li>If the key already exists, no operation is performed.</li>
<li>If the key doesn’t exist, a new HyperLogLog structure is created, and the command returns 1.</li>
</ul>
<p>For example, if Redis already has a HyperLogLog for the key <code>hll_key</code> and you call the command with just the key and no elements (e.g., <code>PFADD hll_key</code>), it will return 0. If the key doesn’t exist (e.g., <code>PFADD hll_key_2</code>), the command will create an empty HyperLogLog data structure and return 1.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PFCOUNT hll_key</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; PFADD hll_key</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; PFADD hll_key_2</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Install Redis on Ubuntu Using the APT Command</title>
    <url>/2024/11/07/how-to-install-redis-on-ubuntu-using-the-apt-command/</url>
    <content><![CDATA[<blockquote>
<p>Redis is a popular, open-source, in-memory data structure store used as a database, cache, and message broker. </p>
</blockquote>
<p>Installing Redis on Ubuntu is straightforward, thanks to the Advanced Package Tool (<strong>APT</strong>), which simplifies installing software on Debian-based Linux systems like Ubuntu. Here’s a step-by-step guide on how to install Redis using APT.</p>
<h2 id="Step-1-Update-Your-System"><a href="#Step-1-Update-Your-System" class="headerlink" title="Step 1: Update Your System"></a>Step 1: Update Your System</h2><p>Before installing any new software, it’s good practice to update your package lists to ensure you have the latest versions available. Open your terminal and type:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>
<p>This command refreshes the list of available packages, which helps avoid potential issues during the installation.</p>
<h2 id="Step-2-Install-Redis"><a href="#Step-2-Install-Redis" class="headerlink" title="Step 2: Install Redis"></a>Step 2: Install Redis</h2><p>Now, you can install Redis with the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install redis-server -y</span><br></pre></td></tr></table></figure>
<p>The <code>-y</code> flag automatically confirms the installation, so you won’t need to approve it manually. This command installs the Redis server and other dependencies.</p>
<h2 id="Step-3-Verify-the-Installation"><a href="#Step-3-Verify-the-Installation" class="headerlink" title="Step 3: Verify the Installation"></a>Step 3: Verify the Installation</h2><p>Once the installation is complete, you can verify it by checking the Redis version:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-server --version</span><br></pre></td></tr></table></figure>
<p>This command should return the version number of Redis installed on your system, confirming that the installation was successful.</p>
<h2 id="Step-4-Start-and-Enable-the-Redis-Service"><a href="#Step-4-Start-and-Enable-the-Redis-Service" class="headerlink" title="Step 4: Start and Enable the Redis Service"></a>Step 4: Start and Enable the Redis Service</h2><p>To ensure Redis starts automatically with your system, enable the Redis service:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> redis-server</span><br></pre></td></tr></table></figure>
<p>Then, start the Redis service:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start redis-server</span><br></pre></td></tr></table></figure>
<p>You can check the status of the Redis service to confirm it’s running:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status redis-server</span><br></pre></td></tr></table></figure>
<p>If Redis is running, you’ll see an “active (running)” status.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> systemctl status redis-server</span><br><span class="line">● redis-server.service - Advanced key-value store</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/redis-server.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Thu 2024-11-07 15:36:06 CST; 1min 31s ago</span><br><span class="line">       Docs: http://redis.io/documentation,</span><br><span class="line">             man:redis-server(1)</span><br><span class="line">   Main PID: 3982 (redis-server)</span><br><span class="line">     Status: <span class="string">&quot;Ready to accept connections&quot;</span></span><br><span class="line">      Tasks: 5 (<span class="built_in">limit</span>: 4551)</span><br><span class="line">     Memory: 2.8M</span><br><span class="line">        CPU: 226ms</span><br><span class="line">     CGroup: /system.slice/redis-server.service</span><br><span class="line">             └─3982 <span class="string">&quot;/usr/bin/redis-server 127.0.0.1:6379&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> &gt;</span><br><span class="line"></span><br><span class="line">11月 07 15:36:05 john-vm-095ziwmi systemd[1]: Starting Advanced key-value store...</span><br><span class="line">11月 07 15:36:06 john-vm-095ziwmi systemd[1]: Started Advanced key-value store.</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Step-5-Test-the-Redis-Installation"><a href="#Step-5-Test-the-Redis-Installation" class="headerlink" title="Step 5: Test the Redis Installation"></a>Step 5: Test the Redis Installation</h2><p>To confirm that Redis is functioning as expected, you can use the <code>redis-cli</code> (Redis Command Line Interface) to connect to the Redis server and run a simple command. Type:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis-cli ping</span><br></pre></td></tr></table></figure>
<p>If Redis is working correctly, you’ll see a response of <code>PONG</code>, indicating a successful connection to the Redis server.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ redis-cli ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure>
<h2 id="Optional-Configure-Redis"><a href="#Optional-Configure-Redis" class="headerlink" title="Optional: Configure Redis"></a>Optional: Configure Redis</h2><p>For production environments, it’s essential to configure Redis securely. By default, Redis is configured to run in an open state, which is suitable for development but may require additional configuration for production. For example, you can modify the Redis configuration file located at <code>/etc/redis/redis.conf</code> to set up a password, configure persistent storage, and more. After making any changes to this file, restart the Redis service:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart redis-server</span><br></pre></td></tr></table></figure>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>With these steps, you’ve successfully installed Redis on your Ubuntu system using the APT package manager. Redis is now ready for use as an in-memory cache, database, or message broker on your server. For additional security and performance tuning, consider exploring the Redis configuration file and adjusting settings based on your specific needs.</p>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
        <tag>HowTo</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis HyperLogLog PFMERGE Command</title>
    <url>/2024/11/08/redis-hyperloglog-pfmerge-command/</url>
    <content><![CDATA[<p>The Redis <code>PFMERGE</code> command merges multiple HyperLogLogs into a single HyperLogLog. The cardinality estimate of the resulting HyperLogLog is calculated by taking the union of all the given HyperLogLogs.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>PFMERGE</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PFMERGE destkey [sourcekey [sourcekey ...]]</span><br></pre></td></tr></table></figure>
<p>The command merges multiple HyperLogLog values to approximate the cardinality of the union of the observed sets. The result is stored in a destination variable, which is created if it doesn’t already exist (defaulting to an empty HyperLogLog). If the destination variable already exists, it is treated as one of the source sets, and its cardinality is included in the final merged HyperLogLog.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Version 2.8.9 or later.</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N) to merge N HyperLogLogs, but with high constant times.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@hyperloglog</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns <code>OK</code>.</p>
<h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><p>Merge two HyperLogLogs into one and store it under a non-existing key:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PFADD hll:1 a b c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFADD &quot;hll:2&quot; d e f</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFMERGE &quot;hll:target&quot; &quot;hll:1&quot; &quot;hll:2&quot;</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; PFCOUNT &quot;hll:target&quot;</span><br><span class="line">(integer) 6</span><br></pre></td></tr></table></figure>
<h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>Merge two HyperLogLogs into one and store it under an existing key:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PFADD hll:1 a b c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFADD &quot;hll:2&quot; d e f</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFADD &quot;hll:3&quot; z</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFMERGE &quot;hll:3&quot; &quot;hll:1&quot; &quot;hll:2&quot;</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; PFCOUNT &quot;hll:3&quot;</span><br><span class="line">(integer) 7</span><br></pre></td></tr></table></figure>
<h2 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a>Example 3</h2><p>If you attempt to merge two HyperLogLogs into one and store the result under an existing key where the value type is a string, Redis will throw the following exception: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(error) WRONGTYPE Key is not a valid HyperLogLog string value.</span><br></pre></td></tr></table></figure>
<p>The following example illustrates this scenario:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PFADD hll_key_1 a b c d</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; PFADD hll_key_2 d e f</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SET key_3 xyz</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; PFMERGE key_3 hll_key_1 hll_key_2</span><br><span class="line">(error) WRONGTYPE Key is not a valid HyperLogLog string value.</span><br><span class="line">127.0.0.1:6379&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis HyperLogLog PFDEBUG Command</title>
    <url>/2024/11/09/redis-hyperloglog-pfdebug-command/</url>
    <content><![CDATA[<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>PFDEBUG</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PFDEBUG subcommand key</span><br></pre></td></tr></table></figure>
<p>The PFDEBUG command is an internal command. It is meant to be used for developing and testing Redis.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Version 2.8.9 or later.</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>N/A</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@hyperloglog</code>, <code>@admin</code>, <code>@slow</code>, <code>@dangerous</code></p>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis HyperLogLog PFSELFTEST Command</title>
    <url>/2024/11/09/redis-hyperloglog-pfselftest-command/</url>
    <content><![CDATA[<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>PFSELFTEST</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PFSELFTEST</span><br></pre></td></tr></table></figure>
<p>The PFSELFTEST command is an internal command. It is meant to be used for developing and testing Redis.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Version 2.8.9 or later.</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>N/A</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@hyperloglog</code>, <code>@admin</code>, <code>@slow</code>, <code>@dangerous</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns <code>OK</code>.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; PFSELFTEST</span><br><span class="line">OK</span><br><span class="line">(0.53s)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Running Multiple Pipelines in Apache Flink: Separate Jobs vs. Single Job with Multiple Pipelines</title>
    <url>/2024/10/29/multiple-jobs-or-multiple-pipelines-in-one-job-in-flink/</url>
    <content><![CDATA[<hr>
<p>When it comes to building data processing flows in Apache Flink, there are times you might want to run multiple independent pipelines, ideally sharing resources for efficiency. Here, we explore two common approaches to achieve this and provide a practical guide to help decide which one best suits your use case. </p>
<p>Imagine you have two independent flows that look like this:</p>
<ul>
<li><strong>Flow 1:</strong> Source1 -&gt; operator1 -&gt; Sink1</li>
<li><strong>Flow 2:</strong> Source2 -&gt; operator2 -&gt; Sink2</li>
</ul>
<p>The goal is to use a single Flink cluster for both flows to avoid redundant infrastructure. Let’s examine two approaches:</p>
<h2 id="Approach-1-Submit-Separate-Jobs"><a href="#Approach-1-Submit-Separate-Jobs" class="headerlink" title="Approach 1: Submit Separate Jobs"></a>Approach 1: Submit Separate Jobs</h2><p>In this setup, you submit two distinct jobs to the Flink cluster—one for each flow. Each job has its own lifecycle, configuration, and execution.</p>
<p><strong>Advantages of Using Separate Jobs</strong></p>
<ol>
<li><strong>Isolation and Simplicity</strong>: Each job runs independently, making code easier to maintain and isolate.</li>
<li><strong>Granular Configuration</strong>: You can set specific configurations per job, like fault tolerance settings, parallelism, heap sizes, and checkpoint intervals, to optimize each flow individually.</li>
<li><strong>Reliability</strong>: Since each job operates independently, a failure in one job does not impact the other. This makes it easier to manage state and perform targeted restarts or savepoints.</li>
</ol>
<hr>
<p><strong>Drawbacks of Using Separate Jobs</strong></p>
<ol>
<li><strong>Higher Infrastructure Costs</strong>: Each job may require its own resources, leading to higher infrastructure costs since resources aren’t shared across jobs.</li>
<li><strong>Complex Monitoring</strong>: More jobs mean more moving parts to monitor and manage, potentially adding complexity to your DevOps pipeline.</li>
</ol>
<h2 id="Approach-2-Define-Multiple-Pipelines-in-a-Single-Job"><a href="#Approach-2-Define-Multiple-Pipelines-in-a-Single-Job" class="headerlink" title="Approach 2: Define Multiple Pipelines in a Single Job"></a>Approach 2: Define Multiple Pipelines in a Single Job</h2><p>Alternatively, you can define multiple pipelines within the same job. In Flink, a job is defined by a single <code>StreamExecutionEnvironment</code>, so this approach involves setting up both flows within one environment and executing them together. Here’s how you can do it:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamingJob</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// set up the streaming execution environment</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">StreamExecutionEnvironment</span> <span class="variable">env</span> <span class="operator">=</span> StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// pipeline 1</span></span><br><span class="line">        env.readTextFile(textPath1)</span><br><span class="line">        .filter()</span><br><span class="line">        .flatMap()</span><br><span class="line">        .join()</span><br><span class="line">        .coGroup();</span><br><span class="line">        <span class="comment">// Add additional operations as needed</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// pipeline 2</span></span><br><span class="line">        env.readTextFile(textPath2)</span><br><span class="line">        .filter()</span><br><span class="line">        .flatMap()</span><br><span class="line">        .join()</span><br><span class="line">        .coGroup();</span><br><span class="line">        <span class="comment">// Add additional operations as needed</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// execute program</span></span><br><span class="line">        env.execute(<span class="string">&quot;Combined Job with Multiple Pipelines&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>Advantages of Using Multiple Pipelines in a Single Job</strong></p>
<ol>
<li><strong>Reduced Infrastructure Costs</strong>: By running both pipelines in a single job, you can share resources, which helps reduce infrastructure costs.</li>
<li><strong>Simplified Monitoring and Deployment</strong>: Monitoring a single job is generally easier, and deploying updates or hotfixes can be streamlined by managing a single codebase.</li>
<li><strong>Optimized Resource Usage</strong>: Since resources are allocated at the job level, you may achieve better utilization when processing multiple pipelines together.</li>
</ol>
<hr>
<p><strong>Drawbacks of Using Multiple Pipelines in a Single Job</strong></p>
<ol>
<li><strong>Shared Failures</strong>: If one pipeline fails, Flink restarts the entire job, meaning both pipelines are affected. This can disrupt overall processing and may be a risk if you need one flow to be highly resilient.</li>
<li><strong>Interdependency in Resource Usage</strong>: A bottleneck or back-pressure in one pipeline can affect the entire job. Since Flink takes a single snapshot per job, both pipelines share the same checkpoint and back-pressure, which may lead to performance trade-offs.</li>
<li><strong>Limited Control on Resource Allocation per Pipeline</strong>: You cannot configure resource usage (like memory or CPU) specifically for each pipeline. This could be restrictive if one flow requires more intensive processing than the other.</li>
</ol>
<h2 id="Which-Approach-Should-You-Choose"><a href="#Which-Approach-Should-You-Choose" class="headerlink" title="Which Approach Should You Choose?"></a>Which Approach Should You Choose?</h2><p>The choice between these two approaches hinges on your application requirements, specifically how critical isolation and independent fault tolerance are for your flows.</p>
<ul>
<li><strong>Choose Separate Jobs if</strong>:<ul>
<li>Isolation and fault tolerance are paramount, and you prefer each flow to be independently managed.</li>
<li>You need fine-grained control over resource allocation and configuration for each pipeline.</li>
<li>You have sufficient infrastructure budget and prefer simpler, modular code that’s easier to test and manage separately.</li>
</ul>
</li>
<li><strong>Choose Multiple Pipelines in a Single Job if</strong>:<ul>
<li>Cost efficiency is a priority, and sharing resources across pipelines makes more sense.</li>
<li>Both pipelines have similar performance and resilience requirements, and interdependency in failure or checkpointing is acceptable.</li>
<li>You want simplified monitoring and maintenance with a single deployment pipeline.</li>
</ul>
</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Running multiple pipelines on the same Flink cluster can be efficient, but balancing isolation with shared resources is key. If isolation is critical, independent jobs offer a robust solution with greater control over resource allocation and failure management. On the other hand, a single job with multiple pipelines can reduce infrastructure costs and simplify deployment and monitoring, albeit with potential limitations in fault tolerance and back-pressure handling.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Flink</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis BITCOUNT 命令</title>
    <url>/2023/06/06/redis-cmd-bitmap-bitcount/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">BITCOUNT key [start end [BYTE | BIT]]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.6.0</p>
<p><strong>时间复杂度</strong></p>
<p>$O(N)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@read</code></strong>, <strong><code>@bitmap</code></strong>, <strong><code>@slow</code></strong></p>
<p>计算给定字符串中，被设置为 1 的比特位的数量。</p>
<p>默认情况下，给定的整个字符串都会被进行计数，通过指定额外的 <code>start</code> 和 <code>end</code> 参数，可以让计数只在特定的位上进行。</p>
<p><code>start</code> 和 <code>end</code> 参数的设置和 <code>GETRANGE key start end</code> 命令类似，都可以使用负数值： 比如 -1 表示最后一个字节，-2 表示倒数第二个字节，以此类推。</p>
<p>不存在的 <code>key</code> 被当成是空字符串来处理，因此对一个不存在的 <code>key</code> 进行 <code>BITCOUNT</code> 操作，结果为 0 。</p>
<p>默认情况下，参数 <code>start</code> 和 <code>end</code> 指定一个字节索引。我们可以使用一个附加参数 <code>BIT</code> 来指定一个比特索引。所以 0 是第一位，1 是第二位，以此类推。对于负值，-1 是最后一位，-2 是倒数第二位，依此类推。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，表示被设置为 1 的位的数量。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>对一个不存在的 <code>key</code> 进行 <code>BITCOUNT</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS bits_key</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; BITCOUNT bits_key</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>对存储值的类型不是字符串的 <code>key</code> 进行 <code>BITCOUNT</code> 操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; TYPE list_key</span><br><span class="line">list</span><br><span class="line">redis&gt; BITCOUNT list_key</span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">redis&gt;</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>对存储值为字符串 <code>JOHNSON LIN</code> 的 <code>key</code> 进行 <code>BITCOUNT</code> 操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">redis&gt; GET user</span><br><span class="line"><span class="string">&quot;JOHNSON LIN&quot;</span></span><br><span class="line">redis&gt;</span><br><span class="line">redis&gt; BITCOUNT user</span><br><span class="line">(integer) <span class="number">38</span></span><br></pre></td></tr></table></figure>
<p>字符串 <code>JOHNSON LIN</code> 的二进制表示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>1001010 <span class="number">0</span>1001111 <span class="number">0</span>1001000 <span class="number">0</span>1001110 <span class="number">0</span>1010011 <span class="number">0</span>1001111 <span class="number">0</span>1001110 <span class="number">00</span>100000 <span class="number">0</span>1001100 <span class="number">0</span>1001001 <span class="number">0</span>1001110</span><br></pre></td></tr></table></figure>
<h2 id="示例-4"><a href="#示例-4" class="headerlink" title="示例 4"></a>示例 4</h2><p>通过指定 <code>start</code> 和 <code>end</code> 参数，只对存储值的第一个字节、第二个字节进行计数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">redis&gt; BITCOUNT user <span class="number">0</span> <span class="number">1</span> BYTE</span><br><span class="line">(integer) <span class="number">8</span></span><br></pre></td></tr></table></figure>
<p>该命令也可以省略 <code>BYTE</code> 参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">redis&gt; BITCOUNT user <span class="number">0</span> <span class="number">1</span></span><br><span class="line">(integer) <span class="number">8</span></span><br></pre></td></tr></table></figure>
<h2 id="示例-5"><a href="#示例-5" class="headerlink" title="示例 5"></a>示例 5</h2><p>通过指定 <code>start</code> 和 <code>end</code> 参数，只对存储值的倒数第一个字节、倒数第二个字节进行计数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">redis&gt; BITCOUNT user -<span class="number">2</span> -<span class="number">1</span> BYTE</span><br><span class="line">(integer) <span class="number">7</span></span><br></pre></td></tr></table></figure>
<p>省略 <code>BYTE</code> 参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">redis&gt; BITCOUNT user -<span class="number">2</span> -<span class="number">1</span></span><br><span class="line">(integer) <span class="number">7</span></span><br></pre></td></tr></table></figure>
<h2 id="示例-6"><a href="#示例-6" class="headerlink" title="示例 6"></a>示例 6</h2><p>通过指定 <code>start</code> 和 <code>end</code> 参数，只对存储值的第一位、第二位进行计数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">redis&gt; BITCOUNT user <span class="number">0</span> <span class="number">1</span> BIT</span><br><span class="line">(integer) <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="示例-7"><a href="#示例-7" class="headerlink" title="示例 7"></a>示例 7</h2><p>通过指定 <code>start</code> 和 <code>end</code> 参数，只对存储值的倒数第八位至倒数第一位进行计数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">redis&gt; BITCOUNT user -<span class="number">8</span> -<span class="number">1</span> BIT</span><br><span class="line">(integer) <span class="number">4</span></span><br></pre></td></tr></table></figure>
<h2 id="模式：使用-Bitmap-存储实时指标"><a href="#模式：使用-Bitmap-存储实时指标" class="headerlink" title="模式：使用 Bitmap 存储实时指标"></a>模式：使用 Bitmap 存储实时指标</h2><p>对某些特定类型的数据，使用 Bitmap 存储可以非常节省空间。例如，记录 Web 应用用户访问历史以筛选参与新功能测试的用户。</p>
<p>使用 <code>SETBIT</code> 命令可以轻松实现这一功能。可以使用一个小的递增整数来代表每一天，如 0 代表应用上线首日，1 代表第二日，以此类推。</p>
<p>每次用户浏览页面时，应用可使用 <code>SETBIT</code> 命令设置与当前日期对应的位，记录用户在当日访问。之后只需对 Bitmap 调用 <code>BITCOUNT</code> 命令就可以轻松知道用户访问的总天数。</p>
<p>一篇名为“Fast easy realtime metrics using Redis bitmaps”的文章描述了类似方式，只是使用用户 ID 而非日期。</p>
<h2 id="性能考虑因素"><a href="#性能考虑因素" class="headerlink" title="性能考虑因素"></a>性能考虑因素</h2><p>在上述计算用户访问天数的示例中，即使应用运行 10 年，每个用户的数据也仅为 365*10 比特，即每个用户只需 456 字节。对这样的数据量，<code>BITCOUNT</code> 的速度仍然与其他 $O(1)$ Redis 命令一样快，如 <code>GET</code> 或 <code>INCR</code>。</p>
<p>当位图很大时，有两种选择：</p>
<ol>
<li><p>将一个大的 Bitmap 分散到不同的 key 中，作为小的 Bitmap 来处理。使用 Lua 脚本可以高效且原子地实现这一功能。</p>
</li>
<li><p>使用 <code>BITCOUNT</code> 的 <code>start</code> 和 <code>end</code> 参数，遍历位图，每次只对部分位进行计算，然后在客户端累加结果。我们可以选择将累加结果缓存至一个键。</p>
</li>
</ol>
<h2 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h2><p>从 Redis 7.0.0 版本开始：增加了 <code>BYTE</code>、<code>BIT</code> 选项。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | 基本概念</title>
    <url>/2023/06/10/paimon-concepts-basic-concepts/</url>
    <content><![CDATA[<h2 id="快照（Snapshot）"><a href="#快照（Snapshot）" class="headerlink" title="快照（Snapshot）"></a>快照<strong><strong>（</strong></strong>Snapshot<strong><strong>）</strong></strong></h2><p>快照捕获了一个表在某个时间点上的状态。用户可以通过最新的快照来访问一个表的最新数据。通过时间旅行，用户也可以通过较早的快照访问表的先前状态。</p>
<h2 id="分区（Partition）"><a href="#分区（Partition）" class="headerlink" title="分区（Partition）"></a>分区（Partition）</h2><p>Paimon 采用了与 Apache Hive 相同的分区概念来分离数据。</p>
<p>分区是一种可选的方式，可以根据特定列的值（如日期、城市和部门等）将表划分为相关部分。每个表可以有一个或多个分区键来标识一个特定的分区。</p>
<p>通过分区，用户可以高效地对表中的某一记录切片进行操作。有关如何将文件划分为多个分区的详细信息，请参见文件布局。</p>
<blockquote>
<p>如果定义了主键，分区键必须是主键的一个子集。</p>
</blockquote>
<h2 id="桶（Bucket）"><a href="#桶（Bucket）" class="headerlink" title="桶（Bucket）"></a>桶<strong><strong>（</strong></strong>Bucket<strong><strong>）</strong></strong></h2><p>非分区的表或分区表中的分区会被细分为桶，以便为数据提供额外的结构，这可用于更有效的查询。</p>
<p>一个桶的范围是由记录中的一个或多个列的哈希值决定的。用户可以通过提供 <code>bucket-key</code> 选项来指定桶的列。如果没有指定 <code>bucket-key</code> 选项，将使用主键（如果定义了的话）或完整记录作为桶的键。</p>
<p>桶是最小的读写存储单元，所以桶的数量限制了最大的处理并行度。不过，这个数字不应该太大，因为它会导致大量的小文件和低读取性能。一般来说，建议每个桶的数据大小约为 1GB。</p>
<p>有关文件如何划分为桶的详细信息，请参见文件布局。另外，如果想在创建表后调整桶数的量，请参见<a href="https://paimon.apache.org/docs/0.4/maintenance/rescale-bucket/">调整桶大小</a>。</p>
<h2 id="一致性保证（Consistency-Guarantees）"><a href="#一致性保证（Consistency-Guarantees）" class="headerlink" title="一致性保证（Consistency Guarantees）"></a>一致性保证（Consistency Guarantees）</h2><p>Paimon 写入器（writers）使用两阶段提交协议，将一批记录原子地提交到表中。每次提交最多产生两个快照。</p>
<p>对于任何两个同时修改同一张表的写入器来说，只要他们不修改同一个桶，他们的提交是可串行化的。如果他们修改同一个桶，则只能保证快照的隔离。也就是说，最终的表状态可能是两个提交的混合体，但不会丢失任何变更。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | 主键表</title>
    <url>/2023/06/10/paimon-concepts-primary-key-table/</url>
    <content><![CDATA[<p>Changelog 表是创建表时的默认表类型。用户可以插入、更新或删除表中的记录。</p>
<p>主键由一列或多列组成，其值能唯一地标识表中的每一行记录。Paimon 强制对数据进行排序，这意味着系统将对每个桶内的主键进行排序。利用这个特性，用户可以通过在主键上添加过滤条件来实现高性能。</p>
<p>通过在变更日志表上定义主键，用户可以获得以下功能。</p>
<h2 id="合并引擎"><a href="#合并引擎" class="headerlink" title="合并引擎"></a>合并引擎</h2><p>当 Paimon 接收器（sink）收到具有相同主键的两条或更多记录时，它将把这些记录合并成一条记录以保持主键的唯一性。通过指定 <code>merge-engine</code> 表属性，用户可以选择如何合并记录。</p>
<blockquote>
<p>在 Flink SQL TableConfig 中始终将 <code>table.exec.sink.upsert-materialize</code> 设置为<code>NONE</code>，sink upsert-materialize 可能会导致奇怪的行为。当输入乱序时，建议使用 Sequence Field 进行乱序校正。</p>
</blockquote>
<h3 id="去重（Deduplicate）"><a href="#去重（Deduplicate）" class="headerlink" title="去重（Deduplicate）"></a>去重（Deduplicate）</h3><p><code>deduplicate</code> 合并引擎是默认的合并引擎。Paimon 只会保留最新的记录，并丢弃具有相同主键的其他记录。</p>
<p>具体来说，如果最新的记录是一条 <code>DELETE</code> 记录，那么所有主键相同的记录都会被删除。</p>
<h3 id="部分更新（Partial-Update）"><a href="#部分更新（Partial-Update）" class="headerlink" title="部分更新（Partial Update）"></a>部分更新（Partial Update）</h3><p>通过指定 <code>&#39;merge-engine&#39; = &#39;partial-update&#39;</code>，用户可以在多次更新中设置记录的列，并最终获得完整的记录。具体来说，相同主键下的各个值字段会一个接一个地更新为最新数据，但 <code>null</code> 值不会被覆盖。</p>
<p>例如，假设 Paimon 收到三条记录：</p>
<ul>
<li><code>&lt;1, 23.0, 10, NULL&gt;</code></li>
<li><code>&lt;1, NULL, NULL, &#39;This is a book&#39;&gt;</code></li>
<li><code>&lt;1, 25.2, NULL, NULL&gt;</code></li>
</ul>
<p>如果第一列是主键，最终结果将是 <code>&lt;1, 25.2, 10, &#39;This is a book&#39;&gt;</code>。</p>
<blockquote>
<p>对于流处理查询，<code>partial-update</code> 合并引擎必须与 <code>lookup</code> 或 <code>full-compaction</code> 一起使用。</p>
<p>Partial 不能接收 <code>DELETE</code> 消息，因为无法定义该行为。可以配置<code>partial-update.ignore-delete</code> 以忽略 <code>DELETE</code> 消息。</p>
</blockquote>
<h3 id="聚合（Aggregation）"><a href="#聚合（Aggregation）" class="headerlink" title="聚合（Aggregation）"></a>聚合（Aggregation）</h3><blockquote>
<p>注意：在 Flink SQL TableConfig 中始终将 <code>table.exec.sink.upsert-materialize</code> 设置为 <code>NONE</code>。</p>
</blockquote>
<p>有时候用户只关心聚合的结果。<code>aggregation</code> 合并引擎根据聚合函数，在同一个主键下，将每个值域与最新数据逐一聚合。</p>
<p>每个不属于主键的字段都可以被赋予一个聚合函数，由 <code>fields.&lt;field-name&gt;.aggregate-function</code> 表属性指定，否则它将使用 <code>last_non_null_value</code> 聚合作为默认值。</p>
<p>例如，考虑下表定义：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> MyTable (</span><br><span class="line">    product_id <span class="type">BIGINT</span>,</span><br><span class="line">    price <span class="keyword">DOUBLE</span>,</span><br><span class="line">    sales <span class="type">BIGINT</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (product_id) <span class="keyword">NOT</span> ENFORCED</span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">&#x27;merge-engine&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;aggregation&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;fields.price.aggregate-function&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;max&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;fields.sales.aggregate-function&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;sum&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>字段 <code>price</code> 通过 <code>max</code> 函数进行聚合，字段 <code>sales</code> 通过 <code>sum</code> 函数进行聚合。如果给定两条输入记录 <code>&lt;1, 23.0, 15&gt;</code> 和 <code>&lt;1, 30.2, 20&gt;</code>，那么最终结果为 <code>&lt;1, 30.2, 35&gt;</code>。</p>
<p>当前支持的聚合函数及其数据类型如下：</p>
<ul>
<li><code>sum</code>：支持 <code>DECIMAL</code>、<code>TINYINT</code>、<code>SMALLINT</code>、<code>INTEGER</code>、<code>BIGINT</code>、<code>FLOAT</code> 和 <code>DOUBLE</code> 等数据类型。</li>
<li><code>min/max</code>：支持 <code>DECIMAL</code>、<code>TINYINT</code>、<code>SMALLINT</code>、<code>INTEGER</code>、<code>BIGINT</code>、<code>FLOAT</code>、<code>DOUBLE</code>、<code>DATE</code>、<code>TIME</code>、<code>TIMESTAMP</code> 和 <code>TIMESTAMP_LTZ</code> 等数据类型。</li>
<li><code>last_value / last_non_null_value</code>：支持所有的数据类型。</li>
<li><code>listagg</code>：支持 <code>STRING</code> 数据类型。</li>
<li><code>bool_and / bool_or</code>：支持 <code>BOOLEAN</code> 数据类型。</li>
</ul>
<p>只有 <code>sum</code> 支持撤回（<code>UPDATE_BEFORE</code> 和 <code>DELETE</code>），其他聚合函数不支持撤回。如果允许某些函数忽略撤回消息，可以配置：<code>&#39;fields.$&#123;field_name&#125;.ignore-retract&#39;=&#39;true&#39;</code>。</p>
<blockquote>
<p>对于流处理查询，<code>aggregation</code> 合并引擎必须与 <code>lookup</code> 或<code>full-compaction</code> 一起使用。</p>
</blockquote>
<h2 id="变更日志生成器（Changelog-Producers）"><a href="#变更日志生成器（Changelog-Producers）" class="headerlink" title="变更日志生成器（Changelog Producers）"></a>变更日志生成器（Changelog Producers）</h2><p>流式查询会持续生成最新变更。这些变更可以来自底层表文件或外部日志系统（如Kafka）。与外部日志系统相比，表文件中的变更成本更低，但延迟更高（取决于快照创建的频率）。</p>
<p>通过在创建表时指定 <code>changelog-producer</code> 表属性，用户可以选择从文件生成的变更模式。</p>
<blockquote>
<p><code>changelog-producer</code> 表属性仅影响来自文件中的变更日志。它不会影响外部日志系统。</p>
</blockquote>
<h3 id="None"><a href="#None" class="headerlink" title="None"></a>None</h3><p>默认情况下，不会将额外的变更日志生成器应用于表的写入器。Paimon 源只能在快照之间看到合并的变更，比如删除的键、某些键的新值是什么。</p>
<p>但是，这些合并的变更不能形成完整的变更日志，因为我们不能直接从中读取键的旧值。合并的变更要求消费者“记住”每个键的值，并在不看到旧值的情况下重写值。然而，某些消费者需要旧值来确保正确性或效率。</p>
<p>考虑一个按分组键（可能不等于主键）计算总和的消费者。如果消费者只看到新值“5”，它无法确定应添加到求和结果的值。例如，如果旧值是“4”，应将“1”添加到结果中。但是如果旧值是“6”，则应从结果中减去“1”。对这些类型的消费者来说，旧值非常重要。</p>
<p>总而言之，<code>none</code> 变更日志生成器最适合数据库系统等消费者。Flink 也有一个内置的“normalize”运算符，它将每个键的值持久化在状态中。很明显，这个运算符的成本非常高，应避免使用。</p>
<p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b286cff0-566e-49f2-b859-f40567d5b3e9/Untitled.png" alt="Untitled"></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>通过指定 <code>&#39;changelog-producer&#39; = &#39;input&#39;</code>，Paimon 写入器将其输入作为完整变更日志的来源。所有输入记录将保存在单独的变更日志文件中，并由 Paimon 源提供给消费者。</p>
<p>当 Paimon 写入器的输入是完整的变更日志（例如来自数据库 CDC 或由 Flink 有状态计算生成）时，可以使用 <code>input</code> 变更日志生成器。</p>
<p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/777a5fe1-1495-4bd2-b018-8bff490a2131/Untitled.png" alt="Untitled"></p>
<h3 id="Lookup"><a href="#Lookup" class="headerlink" title="Lookup"></a>Lookup</h3><blockquote>
<p>这是一个试验性的功能。</p>
</blockquote>
<p>如果输入无法产生完整的变更日志，但仍想消除昂贵的标准化操作符，则可以考虑使用 <code>&#39;lookup&#39;</code> 变更日志生成器。</p>
<p>通过指定 <code>&#39;changelog-producer&#39; = &#39;lookup&#39;</code>，Paimon 会在提交数据写入之前通过 <code>&#39;lookup&#39;</code> 生成变更日志。</p>
<p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/be157ba9-c6fa-4956-b004-58ea95531ede/Untitled.png" alt="Untitled"></p>
<p>Lookup 会将数据缓存在内存和本地磁盘上，可以使用以下选项来调整性能：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>选项</th>
<th>默认值</th>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>lookup.cache-file-retention</td>
<td>1 h</td>
<td>时长</td>
<td>缓存文件的保留时长。文件过期后，如果有访问需求，会从 DFS 中重新读取以在本地磁盘上构建索引。</td>
</tr>
<tr>
<td>lookup.cache-max-disk-size</td>
<td>unlimited</td>
<td>内存大小</td>
<td>缓存的最大磁盘大小，可以使用此选项来限制本地磁盘的使用。</td>
</tr>
<tr>
<td>lookup.cache-max-memory-size</td>
<td>256 mb</td>
<td>内存大小</td>
<td>缓存的最大内存大小。</td>
</tr>
</tbody>
</table>
</div>
<h3 id="Full-Compaction"><a href="#Full-Compaction" class="headerlink" title="Full Compaction"></a>Full Compaction</h3><p>如果觉得 <code>&#39;lookup&#39;</code> 的资源消耗太大，可以考虑使用 <code>&#39;full-compaction&#39;</code> 变更日志生成器，它可以解耦数据写入和变更日志生成，更适合具有高延迟（比如 10 分钟）的场景。</p>
<p>通过指定 <code>&#39;changelog-producer&#39; = &#39;full-compaction&#39;</code>，Paimon 将比较完全压缩之间的结果并将差异产生为变更日志（changelog）。变更日志的延迟受完全压缩的频率的影响。</p>
<p>通过指定 <code>full-compaction.delta-commits</code> 表属性，将在增量提交（检查点）之后不断触发完全压缩。这个属性默认设置为 1，所以每个检查点都会有一个完整的压缩，并产生一个变更日志。</p>
<p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dfc462c7-0fc0-49b9-b5aa-421e060f5418/Untitled.png" alt="Untitled"></p>
<blockquote>
<p>完全压缩变更日志生成器可以为任何类型的源产生完整的变更日志。但是，与 <code>Input</code> 变更日志生成器相比，它的效率较低，且产生变更日志的延迟可能较高。</p>
</blockquote>
<h2 id="序列字段（Sequence-Field）"><a href="#序列字段（Sequence-Field）" class="headerlink" title="序列字段（Sequence Field）"></a>序列字段（Sequence Field）</h2><p>默认情况下，主键表根据输入顺序确定合并顺序（最后一条输入记录将是最后一个合并的）。然而，在分布式计算中，会有一些导致数据无序的情况。此时，可以使用一个时间字段作为 <code>sequence.field</code>，比如说：</p>
<p>当记录被更新或删除时，<code>sequence.field</code> 必须变大而不能保持不变。例如，可以使用Mysql Binlog 操作时间作为 <code>sequence.field</code>。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> MyTable (</span><br><span class="line">    pk <span class="type">BIGINT</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> ENFORCED,</span><br><span class="line">    v1 <span class="keyword">DOUBLE</span>,</span><br><span class="line">    v2 <span class="type">BIGINT</span>,</span><br><span class="line">    dt <span class="type">TIMESTAMP</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">&#x27;sequence.field&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;dt&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>具有最大 <code>sequence.field</code> 值的记录将最后合并，而不考虑输入顺序。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | 仅追加表（Append Only 表）</title>
    <url>/2023/06/10/paimon-concepts-append-only-table/</url>
    <content><![CDATA[<p>如果一个表没有定义主键，那么它默认是一个 append-only 表。</p>
<p>你只能向表中插入完整的记录。不支持删除或更新，也不能定义主键。这种类型的表适用于不需要更新的用例（例如日志数据同步）。</p>
<h2 id="分桶（Bucketing）"><a href="#分桶（Bucketing）" class="headerlink" title="分桶（Bucketing）"></a>分桶（<strong><strong>Bucketing）</strong></strong></h2><p>你也可以为 Append-only 表定义桶的数量，见 Bucket。</p>
<p>建议设置 <code>bucket-key</code> 字段。否则，数据会按照整行进行散列，性能会很差。</p>
<h2 id="压缩（Compaction）"><a href="#压缩（Compaction）" class="headerlink" title="压缩（Compaction）"></a>压缩（<strong><strong>Compaction</strong></strong>）</h2><p>默认情况下，接收节点（sink 节点）将自动进行压缩以控制文件数量。以下选项控制压缩策略：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Key</th>
<th>默认值</th>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>write-only</td>
<td>false</td>
<td>Boolean</td>
<td>如果设置为 true，压缩和快照过期将被跳过。此选项与专门的压缩作业一起使用。</td>
</tr>
<tr>
<td>compaction.min.file-num</td>
<td>5</td>
<td>Integer</td>
<td>对于文件集 [f_0,…,f_N]，满足 sum(size(f_i)) &gt;= targetFileSize 的最小文件数，以触发仅追加表的压缩操作。此值可避免压缩几乎完整的文件，这不符合成本效益。</td>
</tr>
<tr>
<td>compaction.max.file-num</td>
<td>50</td>
<td>Integer</td>
<td>对于文件集 [f_0,…,f_N]，触发仅追加表压缩的最大文件数，即使 sum(size(f_i)) &lt; targetFileSize。该值可避免保留过多的小文件，从而降低性能。</td>
</tr>
<tr>
<td>full-compaction.delta-commits</td>
<td>(none)</td>
<td>Integer</td>
<td>全量压缩将在增量提交后不断触发。</td>
</tr>
</tbody>
</table>
</div>
<h2 id="流源（Streaming-Source）"><a href="#流源（Streaming-Source）" class="headerlink" title="流源（Streaming Source）"></a>流源（Streaming Source）</h2><p>目前只有 Flink 引擎支持流源行为。</p>
<h3 id="流式读取顺序"><a href="#流式读取顺序" class="headerlink" title="流式读取顺序"></a>流式读取顺序</h3><p>对于流式读取，记录的生成顺序如下：</p>
<ul>
<li>对于来自两个不同分区的任意两条记录：<ul>
<li>如果 <code>scan.plan-sort-partition</code> 设置为 true，则先生成分区值较小的记录。</li>
<li>否则，先生成分区创建时间较早的记录。</li>
</ul>
</li>
<li>对于来自同一分区和同一桶的任意两条记录，先写入的记录先产生。</li>
<li>对于来自同一分区但两个不同桶的任意两条记录，不同的桶由不同的任务处理，它们之间没有顺序保证。</li>
</ul>
<h3 id="水印定义"><a href="#水印定义" class="headerlink" title="水印定义"></a>水印定义</h3><p>可以定义用于读取 Paimon 表的水印：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> T (</span><br><span class="line">    `<span class="keyword">user</span>` <span class="type">BIGINT</span>,</span><br><span class="line">    product STRING,</span><br><span class="line">    order_time <span class="type">TIMESTAMP</span>(<span class="number">3</span>),</span><br><span class="line">    WATERMARK <span class="keyword">FOR</span> order_time <span class="keyword">AS</span> order_time <span class="operator">-</span> <span class="type">INTERVAL</span> <span class="string">&#x27;5&#x27;</span> <span class="keyword">SECOND</span></span><br><span class="line">) <span class="keyword">WITH</span> (...);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- launch a bounded streaming job to read paimon_table</span></span><br><span class="line"><span class="keyword">SELECT</span> window_start, window_end, <span class="built_in">COUNT</span>(`<span class="keyword">user</span>`) <span class="keyword">FROM</span> <span class="keyword">TABLE</span>(</span><br><span class="line"> TUMBLE(<span class="keyword">TABLE</span> T, DESCRIPTOR(order_time), <span class="type">INTERVAL</span> <span class="string">&#x27;10&#x27;</span> MINUTES)) <span class="keyword">GROUP</span> <span class="keyword">BY</span> window_start, window_end;</span><br></pre></td></tr></table></figure>
<p>也可以启用 Flink 水印对齐机制，这可以确保不会有 sources/splits/shards/partitions 将其水印提前太远:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Key</th>
<th>默认值</th>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>scan.watermark.alignment.group</td>
<td>(none)</td>
<td>String</td>
<td>一组用于对齐水印的源</td>
</tr>
<tr>
<td>scan.watermark.alignment.max-drift</td>
<td>(none)</td>
<td>Duration</td>
<td>在暂停消费 source/task/partition 之前用于对齐水印的最大偏差。</td>
</tr>
</tbody>
</table>
</div>
<h3 id="有界流（Bounded-Stream）"><a href="#有界流（Bounded-Stream）" class="headerlink" title="有界流（Bounded Stream）"></a>有界流（Bounded Stream）</h3><p>流源也可以是有界的，可以指定“scan.bounded.watermark”来定义有界流模式的结束条件，流读取将一直持续到遇到一个更大的快照水印为止。</p>
<p>快照中的水印是由写入器生成的，例如，可以指定一个 Kafka 源和声明水印的定义。当使用此 Kafka 源向 Paimon 表写入数据时，Paimon 表的快照会生成相应的水印，这样就可以在流式读取该 Paimon 表时使用有界水印的功能。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> kafka_table (</span><br><span class="line">    `<span class="keyword">user</span>` <span class="type">BIGINT</span>,</span><br><span class="line">    product STRING,</span><br><span class="line">    order_time <span class="type">TIMESTAMP</span>(<span class="number">3</span>),</span><br><span class="line">    WATERMARK <span class="keyword">FOR</span> order_time <span class="keyword">AS</span> order_time <span class="operator">-</span> <span class="type">INTERVAL</span> <span class="string">&#x27;5&#x27;</span> <span class="keyword">SECOND</span></span><br><span class="line">) <span class="keyword">WITH</span> (<span class="string">&#x27;connector&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;kafka&#x27;</span>...);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- launch a streaming insert job</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> paimon_table <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> kakfa_table;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- launch a bounded streaming job to read paimon_table</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> paimon_table <span class="comment">/*+ OPTIONS(&#x27;scan.bounded.watermark&#x27;=&#x27;...&#x27;) */</span>;</span><br></pre></td></tr></table></figure>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>下面是一个创建 Append-Only 表并指定桶键的例子。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> MyTable (</span><br><span class="line">    product_id <span class="type">BIGINT</span>,</span><br><span class="line">    price <span class="keyword">DOUBLE</span>,</span><br><span class="line">    sales <span class="type">BIGINT</span></span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">&#x27;bucket&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;bucket-key&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;product_id&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | 外部日志系统</title>
    <url>/2023/06/10/paimon-concepts-external-log-systems/</url>
    <content><![CDATA[<p>除了底层表文件的变更日志外，Paimon 的变更日志也可以存储在外部日志系统中，比如 Kafka，或者从外部日志系统中消费。通过指定 <code>log.system</code> 表属性，用户可以选择使用哪个外部日志系统。</p>
<p>如果选择使用外部日志系统，那么所有写入表文件中的记录也会写入日志系统。因此，流查询产生的变化会从日志系统读取，而不是表文件。</p>
<h2 id="一致性保证"><a href="#一致性保证" class="headerlink" title="一致性保证"></a>一致性保证</h2><p>默认情况下，日志系统中的变化要等到快照之后才对消费者可见，就像表文件一样。这种行为保证了精确一次的语义。也就是说，每条记录只被消费者看到一次。</p>
<p>但是，用户也可以指定表的属性 <code>&#39;log.consistency&#39; = &#39;eventual&#39;</code>，这样写进日志系统的变更日志就可以立即被消费者消费，而不用等待下一个快照。这种行为减少了变更日志的延迟，但由于可能发生的故障，它只能保证至少一次的语义（即，消费者可能会看到重复的记录）。</p>
<p>如果设置 <code>&#39;log.consistency&#39; = &#39;eventual&#39;</code>，为了获得正确的结果，Flink 中的 Paimon 源将自动添加“normalize”运算符进行重复数据删除。该运算符将每个键的值保存在状态中。可以很容易地看出，该运算符的成本将非常高，应该避免使用。</p>
<h2 id="支持的日志系统"><a href="#支持的日志系统" class="headerlink" title="支持的日志系统"></a>支持的日志系统</h2><h3 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h3><p>准备 flink-sql-connector-kafka Jar 文件</p>
<p>Paimon 目前支持 Flink 1.17，1.16，1.15 和 1.14 版本。推荐使用最新的 Flink 版本以获得更好的体验。</p>
<p>下载相应版本的 flink-sql-connector-kafka jar 文件。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Flink 版本</th>
<th>Jar 包</th>
</tr>
</thead>
<tbody>
<tr>
<td>Flink 1.17</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.17.0/flink-sql-connector-kafka-1.17.0.jar">https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.17.0/flink-sql-connector-kafka-1.17.0.jar</a></td>
</tr>
<tr>
<td>Flink 1.16</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.16.1/flink-sql-connector-kafka-1.16.1.jar">https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.16.1/flink-sql-connector-kafka-1.16.1.jar</a></td>
</tr>
<tr>
<td>Flink 1.15</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.15.4/flink-sql-connector-kafka-1.15.4.jar">https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-connector-kafka/1.15.4/flink-sql-connector-kafka-1.15.4.jar</a></td>
</tr>
<tr>
<td>Flink 1.14</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-connector-kafka_2.11/1.14.4/flink-sql-connector-kafka_2.11-1.14.4.jar">https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-connector-kafka_2.11/1.14.4/flink-sql-connector-kafka_2.11-1.14.4.jar</a></td>
</tr>
</tbody>
</table>
</div>
<p>通过指定 ‘log.system’ = ‘kafka’，用户可以将更改与表文件一起写入 Kafka。</p>
<p>通过指定 <code>&#39;log.system&#39; = &#39;kafka&#39;</code>，用户可以将变更写入 Kafka 和表文件。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> T (...)</span><br><span class="line"><span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">&#x27;log.system&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;kafka&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;kafka.bootstrap.servers&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;kafka.topic&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;...&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>Kafka 的表属性如下所示：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Key</th>
<th>默认值</th>
<th>类型</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>kafka.bootstrap.servers</td>
<td>(none)</td>
<td>String</td>
<td>必填，Kafka 服务器连接字符串。</td>
</tr>
<tr>
<td>kafka.topic</td>
<td>(none)</td>
<td>String</td>
<td>Kafka 主题（Topic）</td>
</tr>
</tbody>
</table>
</div>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | 文件布局</title>
    <url>/2023/06/10/paimon-concepts-file-layouts/</url>
    <content><![CDATA[<p>一个表的所有文件都存储在一个基本目录下。Paimon 文件是以分层的方式组织的。下图说明了文件的布局。从一个快照文件开始，Paimon 读取器可以递归地访问表中的所有记录。</p>
<p><img src="/image/paimon/file-layouts.png" alt="Paimon文件布局"></p>
<h2 id="快照文件（Snapshot-Files）"><a href="#快照文件（Snapshot-Files）" class="headerlink" title="快照文件（Snapshot Files）"></a>快照文件（Snapshot Files）</h2><p>所有的快照文件都存储在 <code>snapshot</code> 目录中。</p>
<p>一个快照文件是一个 JSON 文件，包含有关此快照的信息，包括：</p>
<ul>
<li>使用的模式文件</li>
<li>包含此快照中所有更改的清单列表</li>
</ul>
<h2 id="清单文件（Manifest-Files）"><a href="#清单文件（Manifest-Files）" class="headerlink" title="清单文件（Manifest Files）"></a>清单文件（Manifest Files）</h2><p>所有清单列表和清单文件都存储在 <code>manifest</code> 目录中。</p>
<p>清单列表是清单文件名称的列表。</p>
<p>清单文件是一个包含有关 LSM 数据文件和变更日志文件的变更文件。例如，在相应的快照中，哪个 LSM 数据文件被创建，哪个文件被删除。</p>
<h2 id="数据文件（Data-Files）"><a href="#数据文件（Data-Files）" class="headerlink" title="数据文件（Data Files）"></a>数据文件（Data Files）</h2><p>数据文件是按分区和桶组织的。每个桶目录包含一个 LSM 树及其变更日志文件。</p>
<p>目前，Paimon 支持使用 orc（默认）、parquet 和 avro 作为数据文件的格式。</p>
<h2 id="LSM-树（LSM-Trees）"><a href="#LSM-树（LSM-Trees）" class="headerlink" title="LSM 树（LSM Trees）"></a>LSM 树（LSM Trees）</h2><p>Paimon 采用 LSM 树（log-structured merge-tree，日志结构合并树）作为文件存储的数据结构。本文档简要介绍了 LSM 树的概念。</p>
<h3 id="Sorted-Runs（有序段）"><a href="#Sorted-Runs（有序段）" class="headerlink" title="Sorted Runs（有序段）"></a>Sorted Runs（有序段）</h3><p>LSM 树将文件组织成几个 Sorted Run。一个 Sorted Run 由一个或多个数据文件组成，每个数据文件正好属于一个 Sorted Run。</p>
<p>数据文件内的记录按其主键进行排序。在一个 Sorted Run 中，数据文件的主键范围不会重叠。</p>
<p><img src="/image/paimon/lsm-sorted-run.png" alt="Sorted Runs"></p>
<p>正如你所看到的，不同的 Sorted Run 可能有重叠的主键范围，甚至可能包含相同的主键。当查询 LSM 树时，必须合并所有 Sorted Run，所有具有相同主键的记录必须根据用户指定的合并引擎和每个记录的时间戳进行合并。</p>
<p>写入 LSM 树的新记录首先会缓冲在内存中。当内存缓冲区满时，内存中的所有记录将被排序并刷新到磁盘。这时，就创建了一个新的 Sorted Run。</p>
<h3 id="Compaction（压缩）"><a href="#Compaction（压缩）" class="headerlink" title="Compaction（压缩）"></a>Compaction（压缩）</h3><p>当越来越多的记录写入 LSM 树时，Sorted Run 的数量会增加。因为查询 LSM 树需要合并所有的 Sorted Run，太多的 Sorted Run 会导致查询性能变差，甚至是内存溢出。</p>
<p>为了限制 Sorted Run 的数量，我们必须不时地将几个 Sorted Run 合并成一个大的 Sorted Run。这个过程被称为 Compaction（压缩）。</p>
<p>然而，Compaction 操作是一个资源密集型的过程，会消耗一定的 CPU 时间和磁盘 IO，所以太频繁的 Compaction 可能会反过来导致写入速度变慢。这是一个在查询性能和写入性能之间的权衡。Paimon 目前采用与 Rocksdb 的通用压缩策略类似的 Compaction 策略。</p>
<p>默认情况下，当 Paimon 写入器向 LSM 树追加记录时，他们也会根据需要进行 Compaction。用户也可以选择在一个专门的 Compaction 作业中执行所有的 Compaction。有关详细信息，请参阅专用 Compaction 作业。</p>
<h2 id="文件布局示例"><a href="#文件布局示例" class="headerlink" title="文件布局示例"></a>文件布局示例</h2><p>Paimon 表 <code>dwd_user</code> 的一级目录结构如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hadoop fs -<span class="built_in">ls</span> /fts/default.db/dwd_user</span><br><span class="line">Found 4 items</span><br><span class="line">drwxr-xr-x   - hadoop hdfs          0 2023-06-10 14:37 /fts/default.db/dwd_user/bucket-0</span><br><span class="line">drwxr-xr-x   - hadoop hdfs          0 2023-06-10 14:37 /fts/default.db/dwd_user/manifest</span><br><span class="line">drwxr-xr-x   - hadoop hdfs          0 2023-02-12 19:05 /fts/default.db/dwd_user/schema</span><br><span class="line">drwxr-xr-x   - hadoop hdfs          0 2023-06-10 14:37 /fts/default.db/dwd_user/snapshot</span><br></pre></td></tr></table></figure>
<p>Paimon 表 <code>dwd_user</code> 的子目录内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hadoop fs -<span class="built_in">ls</span> -R /fts/default.db/dwd_user/</span><br><span class="line">drwxr-xr-x   - hadoop hdfs          0 2023-06-10 14:31 /fts/default.db/dwd_user/bucket-0</span><br><span class="line">-rw-r--r--   3 hadoop hdfs          0 2023-05-17 18:35 /fts/default.db/dwd_user/bucket-0/data-0c690527-c8de-4f50-8937-63d727cdfbad-51.orc</span><br><span class="line">-rw-r--r--   3 hadoop hdfs       8092 2023-06-10 13:25 /fts/default.db/dwd_user/bucket-0/data-45105a64-dedc-42b6-be47-1e40334a802a-119.orc</span><br><span class="line">-rw-r--r--   3 hadoop hdfs       9860 2023-06-10 13:28 /fts/default.db/dwd_user/bucket-0/data-45105a64-dedc-42b6-be47-1e40334a802a-120.orc</span><br><span class="line">-rw-r--r--   3 hadoop hdfs       9788 2023-06-10 13:31 /fts/default.db/dwd_user/bucket-0/data-45105a64-dedc-42b6-be47-1e40334a802a-121.orc</span><br><span class="line">-rw-r--r--   3 hadoop hdfs       9400 2023-06-10 13:34 /fts/default.db/dwd_user/bucket-0/data-45105a64-dedc-42b6-be47-1e40334a802a-122.orc</span><br><span class="line">drwxr-xr-x   - hadoop hdfs          0 2023-06-10 14:31 /fts/default.db/dwd_user/manifest</span><br><span class="line">-rw-r--r--   3 hadoop hdfs       3973 2023-06-10 13:31 /fts/default.db/dwd_user/manifest/manifest-5d06962a-5f92-4235-a383-b6e4ccae4ed2-6186</span><br><span class="line">-rw-r--r--   3 hadoop hdfs       2396 2023-06-10 13:31 /fts/default.db/dwd_user/manifest/manifest-5d06962a-5f92-4235-a383-b6e4ccae4ed2-6187</span><br><span class="line">-rw-r--r--   3 hadoop hdfs       2353 2023-06-10 13:34 /fts/default.db/dwd_user/manifest/manifest-5d06962a-5f92-4235-a383-b6e4ccae4ed2-6188</span><br><span class="line">drwxr-xr-x   - hadoop hdfs          0 2023-02-12 19:05 /fts/default.db/dwd_user/schema</span><br><span class="line">-rw-r--r--   3 hadoop hdfs       3714 2023-02-12 19:05 /fts/default.db/dwd_user/schema/schema-0</span><br><span class="line">drwxr-xr-x   - hadoop hdfs          0 2023-06-10 14:31 /fts/default.db/dwd_user/snapshot</span><br><span class="line">-rw-r--r--   3 hadoop hdfs          5 2023-06-10 14:28 /fts/default.db/dwd_user/snapshot/EARLIEST</span><br><span class="line">-rw-r--r--   3 hadoop hdfs          5 2023-06-10 14:31 /fts/default.db/dwd_user/snapshot/LATEST</span><br><span class="line">-rw-r--r--   3 hadoop hdfs        422 2023-06-10 13:31 /fts/default.db/dwd_user/snapshot/snapshot-66591</span><br><span class="line">-rw-r--r--   3 hadoop hdfs        422 2023-06-10 13:34 /fts/default.db/dwd_user/snapshot/snapshot-66592</span><br><span class="line">-rw-r--r--   3 hadoop hdfs        422 2023-06-10 13:37 /fts/default.db/dwd_user/snapshot/snapshot-66593</span><br><span class="line">-rw-r--r--   3 hadoop hdfs        422 2023-06-10 13:40 /fts/default.db/dwd_user/snapshot/snapshot-66594</span><br><span class="line">-rw-r--r--   3 hadoop hdfs        423 2023-06-10 13:40 /fts/default.db/dwd_user/snapshot/snapshot-66595</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | 文件操作</title>
    <url>/2023/06/10/paimon-concepts-file-operations/</url>
    <content><![CDATA[<p>本文将深入探讨各种文件操作对文件产生的影响。文章提供具体的例子和实用技巧，说明 Paimon 是如何有效管理文件的。此外，通过对提交（commit）和压缩（compact）等操作的深入剖析，旨在加深对文件的创建和更新的理解。</p>
<h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><p>在深入阅读本文之前，本文假设你已经了解了以下内容：</p>
<ul>
<li>Paimon 基本概念；</li>
<li>Paimon 文件布局；</li>
<li>如何在 Flink 中使用 Paimon。</li>
</ul>
<h2 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a><strong><strong>创建目录</strong></strong></h2><p>通过 <code>./sql-client.sh</code> 启动 Flink SQL 客户端，并逐一执行以下语句来创建 Paimon 目录：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> CATALOG paimon <span class="keyword">WITH</span> (</span><br><span class="line"><span class="string">&#x27;type&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;paimon&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;warehouse&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;file:///tmp/paimon&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">USE CATALOG paimon;</span><br></pre></td></tr></table></figure>
<p>执行该创建目录语句会在给定的路径 <em>file:///tmp/paimon</em> 创建一个目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> /tmp/paimon</span><br><span class="line">default.db</span><br></pre></td></tr></table></figure>
<h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a><strong><strong>创建表</strong></strong></h2><p>执行下面的创建表语句，创建一个有 3 个字段的 Paimon 表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> T (</span><br><span class="line">  id <span class="type">BIGINT</span>,</span><br><span class="line">  a <span class="type">INT</span>,</span><br><span class="line">  b STRING,</span><br><span class="line">  dt STRING COMMENT <span class="string">&#x27;timestamp string in format yyyyMMdd&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY(id, dt) <span class="keyword">NOT</span> ENFORCED</span><br><span class="line">) PARTITIONED <span class="keyword">BY</span> (dt) <span class="keyword">WITH</span> (</span><br><span class="line">		<span class="string">&#x27;write-mode&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;change-log&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;merge-engine&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;deduplicate&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>执行该创建表语句会在路径 <em>/tmp/paimon/default.db/T</em> 下创建 Paimon 表 T，其模式存储在 <em>/tmp/paimon/default.db/T/schema/schema-0</em> 中。</p>
<p>使用 <code>tree</code> 命令以树状格式列出当前 Catalog 下的内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tree /tmp/paimon/</span><br><span class="line">/tmp/paimon/</span><br><span class="line">└── default.db</span><br><span class="line">    └── T</span><br><span class="line">        └── schema</span><br><span class="line">            └── schema-0</span><br><span class="line"></span><br><span class="line">3 directories, 1 file</span><br></pre></td></tr></table></figure>
<h2 id="向表中插入记录"><a href="#向表中插入记录" class="headerlink" title="向表中插入记录"></a><strong><strong>向表中插入记录</strong></strong></h2><p>在 Flink SQL 中运行以下插入语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> T <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">10001</span>, <span class="string">&#x27;varchar00001&#x27;</span>, <span class="string">&#x27;20230501&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>一旦 Flink 任务完成，记录就会通过一次成功的 <code>commit</code> 写入 Paimon 表。用户可以通过执行查询 <code>SELECT * FROM T</code> 来验证这些记录的可见性，这将返回一行记录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id           a                              b                             dt</span><br><span class="line"> 1       10001                   varchar00001                       20230501</span><br></pre></td></tr></table></figure>
<p>提交过程会在路径 <code>/tmp/paimon/default.db/T/snapshot/snapshot-1</code> 下创建一个快照。快照 snapshot-1 的最终文件布局如下所述：</p>
<p><img src="/image/paimon/snapshot-1.png" alt="snapshot-1"></p>
<p>使用 <code>tree</code> 命令以树状格式列出当前 Catalog 下的内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tree /tmp/paimon/</span><br><span class="line">/tmp/paimon/</span><br><span class="line">└── default.db</span><br><span class="line">    └── T</span><br><span class="line">        ├── dt=20230501</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       └── data-c4f3cde1-8759-4f69-abc2-da6bea4911a1-0.orc</span><br><span class="line">        ├── manifest</span><br><span class="line">        │   ├── manifest-401272a3-05f2-4d51-8a3d-27ecee17ca0e-0</span><br><span class="line">        │   ├── manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-0</span><br><span class="line">        │   └── manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-1</span><br><span class="line">        ├── schema</span><br><span class="line">        │   └── schema-0</span><br><span class="line">        └── snapshot</span><br><span class="line">            ├── EARLIEST</span><br><span class="line">            ├── LATEST</span><br><span class="line">            └── snapshot-1</span><br><span class="line"></span><br><span class="line">7 directories, 8 files</span><br></pre></td></tr></table></figure>
<p>使用 <code>vim</code> 命令查看 snapshot-1 的内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /tmp/paimon/default.db/T/snapshot/snapshot-1</span><br></pre></td></tr></table></figure>
<p>可以看到该快照文件内容包含快照的元数据，如清单和模式 ID：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;schemaId&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;baseManifestList&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;deltaManifestList&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;changelogManifestList&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commitUser&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;14c360cd-2141-4e0f-b4b7-a16de9c94bbf&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commitIdentifier&quot;</span> <span class="punctuation">:</span> <span class="number">9223372036854775807</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commitKind&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;APPEND&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timeMillis&quot;</span> <span class="punctuation">:</span> <span class="number">1686362112672</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;logOffsets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;totalRecordCount&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;deltaRecordCount&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;changelogRecordCount&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;watermark&quot;</span> <span class="punctuation">:</span> <span class="number">-9223372036854775808</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>请注意，清单列表包含快照的所有更改，<code>baseManifestList</code> 是应用 <code>deltaManifestList</code> 中的更改的基础文件。第一次提交会产生 1 个清单文件，并创建 2 个清单列表（文件名称可能与你的实验中的文件名称不同）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ll /tmp/paimon/default.db/T/manifest</span><br><span class="line">total 12K</span><br><span class="line">-rw-r--r-- 1 root root 1.7K Jun 10 09:55 manifest-401272a3-05f2-4d51-8a3d-27ecee17ca0e-0</span><br><span class="line">-rw-r--r-- 1 root root  676 Jun 10 09:55 manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-0</span><br><span class="line">-rw-r--r-- 1 root root  794 Jun 10 09:55 manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-1</span><br></pre></td></tr></table></figure>
<p><code>manifest-401272a3-05f2-4d51-8a3d-27ecee17ca0e-0</code> 是清单文件（manifest 文件），对应上图中的 <code>manifest-1-0</code>，它存储了快照中数据文件的信息。</p>
<p><code>manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-0</code> 是 <code>baseManifestList</code>（上图中的 <code>manifest-list-1-base</code>），它实际上是空的。</p>
<p><code>manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-1</code> 是 <code>deltaManifestList</code>（上图中的 <code>manifest-list-1-delta</code>），它包含了对数据文件执行操作的清单条目列表，在本例中为 <code>manifest-1-0</code>。</p>
<p>接下来，我们插入多条记录，这些记录分布在不同的分区中，让我们看看会发生什么。</p>
<p>在 Flink SQL 中，执行以下语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> T <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">2</span>, <span class="number">10002</span>, <span class="string">&#x27;varchar00002&#x27;</span>, <span class="string">&#x27;20230502&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="number">10003</span>, <span class="string">&#x27;varchar00003&#x27;</span>, <span class="string">&#x27;20230503&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="number">10004</span>, <span class="string">&#x27;varchar00004&#x27;</span>, <span class="string">&#x27;20230504&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="number">10005</span>, <span class="string">&#x27;varchar00005&#x27;</span>, <span class="string">&#x27;20230505&#x27;</span>),</span><br><span class="line">(<span class="number">6</span>, <span class="number">10006</span>, <span class="string">&#x27;varchar00006&#x27;</span>, <span class="string">&#x27;20230506&#x27;</span>),</span><br><span class="line">(<span class="number">7</span>, <span class="number">10007</span>, <span class="string">&#x27;varchar00007&#x27;</span>, <span class="string">&#x27;20230507&#x27;</span>),</span><br><span class="line">(<span class="number">8</span>, <span class="number">10008</span>, <span class="string">&#x27;varchar00008&#x27;</span>, <span class="string">&#x27;20230508&#x27;</span>),</span><br><span class="line">(<span class="number">9</span>, <span class="number">10009</span>, <span class="string">&#x27;varchar00009&#x27;</span>, <span class="string">&#x27;20230509&#x27;</span>),</span><br><span class="line">(<span class="number">10</span>, <span class="number">10010</span>, <span class="string">&#x27;varchar00010&#x27;</span>, <span class="string">&#x27;20230510&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>第二次 <code>commit</code> 后，执行 <code>SELECT * FROM T</code> 将返回 10 条记录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">id</span>           a                              b                             dt</span><br><span class="line"> 1       10001                   varchar00001                       20230501</span><br><span class="line"> 3       10003                   varchar00003                       20230503</span><br><span class="line">10       10010                   varchar00010                       20230510</span><br><span class="line"> 8       10008                   varchar00008                       20230508</span><br><span class="line"> 4       10004                   varchar00004                       20230504</span><br><span class="line"> 9       10009                   varchar00009                       20230509</span><br><span class="line"> 7       10007                   varchar00007                       20230507</span><br><span class="line"> 2       10002                   varchar00002                       20230502</span><br><span class="line"> 5       10005                   varchar00005                       20230505</span><br><span class="line"> 6       10006                   varchar00006                       20230506</span><br></pre></td></tr></table></figure>
<p>第二次 <code>commit</code> 后，同样会创建一个新的快照，即 snapshot-2，使用 <code>ls -atR</code> 查看物理文件布局如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -atR /tmp/paimon/default.db/T</span><br><span class="line">/tmp/paimon/default.db/T:</span><br><span class="line"> snapshot  <span class="string">&#x27;dt=20230506&#x27;</span>  <span class="string">&#x27;dt=20230505&#x27;</span>  <span class="string">&#x27;dt=20230507&#x27;</span>  <span class="string">&#x27;dt=20230504&#x27;</span>  <span class="string">&#x27;dt=20230510&#x27;</span>  <span class="string">&#x27;dt=20230501&#x27;</span>   ..</span><br><span class="line"> manifest   .             <span class="string">&#x27;dt=20230502&#x27;</span>  <span class="string">&#x27;dt=20230509&#x27;</span>  <span class="string">&#x27;dt=20230508&#x27;</span>  <span class="string">&#x27;dt=20230503&#x27;</span>   schema</span><br><span class="line"></span><br><span class="line">/tmp/paimon/default.db/T/snapshot:</span><br><span class="line">.  LATEST  snapshot-2  ..  EARLIEST  snapshot-1</span><br><span class="line"></span><br><span class="line">/tmp/paimon/default.db/T/manifest:</span><br><span class="line">manifest-list-98fad66b-1a62-4657-9127-39e31bd26b88-1  ..</span><br><span class="line">.                                                     manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-1</span><br><span class="line">manifest-16b42374-154b-4aaf-8d15-2aa0ba41ade1-0       manifest-401272a3-05f2-4d51-8a3d-27ecee17ca0e-0</span><br><span class="line">manifest-list-98fad66b-1a62-4657-9127-39e31bd26b88-0  manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-0</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230506&#x27;</span>:</span><br><span class="line">bucket-0  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230506/bucket-0&#x27;</span>:</span><br><span class="line">data-f416780e-d673-49e3-b3e3-bbe390e9c00c-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230505&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230505/bucket-0&#x27;</span>:</span><br><span class="line">data-78c70a1f-f51c-4ebd-822d-2f1f4a47ef9f-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230502&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230502/bucket-0&#x27;</span>:</span><br><span class="line">data-8ccf8d2d-607b-4b9f-bf91-ef6542d41d05-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230507&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230507/bucket-0&#x27;</span>:</span><br><span class="line">data-001834d2-3129-47da-b8cd-b61eb227d384-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230509&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230509/bucket-0&#x27;</span>:</span><br><span class="line">data-69f3f4eb-cf80-4741-92b3-9cb396354ac2-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230504&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230504/bucket-0&#x27;</span>:</span><br><span class="line">data-ae0d5e30-8178-4caa-b311-f39bbf116ed7-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230508&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230508/bucket-0&#x27;</span>:</span><br><span class="line">data-83161511-dc36-421a-bba7-ce8e46c7d5f8-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230510&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230510/bucket-0&#x27;</span>:</span><br><span class="line">data-71177b4a-0d97-4994-9447-c541ef61145b-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230503&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230503/bucket-0&#x27;</span>:</span><br><span class="line">data-4cb7a3f9-2ad1-4f7b-9cf3-4445029244cf-0.orc  .  ..</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230501&#x27;</span>:</span><br><span class="line">..  bucket-0  .</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;/tmp/paimon/default.db/T/dt=20230501/bucket-0&#x27;</span>:</span><br><span class="line">data-c4f3cde1-8759-4f69-abc2-da6bea4911a1-0.orc  .  ..</span><br><span class="line"></span><br><span class="line">/tmp/paimon/default.db/T/schema:</span><br><span class="line">..  .  schema-0</span><br></pre></td></tr></table></figure>
<p>使用 <code>tree</code> 命令以树状格式列出当前 Catalog 下的内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tree /tmp/paimon/default.db</span><br><span class="line">/tmp/paimon/default.db</span><br><span class="line">└── T</span><br><span class="line">    ├── dt=20230501</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-c4f3cde1-8759-4f69-abc2-da6bea4911a1-0.orc</span><br><span class="line">    ├── dt=20230502</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-8ccf8d2d-607b-4b9f-bf91-ef6542d41d05-0.orc</span><br><span class="line">    ├── dt=20230503</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-4cb7a3f9-2ad1-4f7b-9cf3-4445029244cf-0.orc</span><br><span class="line">    ├── dt=20230504</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-ae0d5e30-8178-4caa-b311-f39bbf116ed7-0.orc</span><br><span class="line">    ├── dt=20230505</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-78c70a1f-f51c-4ebd-822d-2f1f4a47ef9f-0.orc</span><br><span class="line">    ├── dt=20230506</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-f416780e-d673-49e3-b3e3-bbe390e9c00c-0.orc</span><br><span class="line">    ├── dt=20230507</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-001834d2-3129-47da-b8cd-b61eb227d384-0.orc</span><br><span class="line">    ├── dt=20230508</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-83161511-dc36-421a-bba7-ce8e46c7d5f8-0.orc</span><br><span class="line">    ├── dt=20230509</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-69f3f4eb-cf80-4741-92b3-9cb396354ac2-0.orc</span><br><span class="line">    ├── dt=20230510</span><br><span class="line">    │   └── bucket-0</span><br><span class="line">    │       └── data-71177b4a-0d97-4994-9447-c541ef61145b-0.orc</span><br><span class="line">    ├── manifest</span><br><span class="line">    │   ├── manifest-16b42374-154b-4aaf-8d15-2aa0ba41ade1-0</span><br><span class="line">    │   ├── manifest-401272a3-05f2-4d51-8a3d-27ecee17ca0e-0</span><br><span class="line">    │   ├── manifest-list-98fad66b-1a62-4657-9127-39e31bd26b88-0</span><br><span class="line">    │   ├── manifest-list-98fad66b-1a62-4657-9127-39e31bd26b88-1</span><br><span class="line">    │   ├── manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-0</span><br><span class="line">    │   └── manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-1</span><br><span class="line">    ├── schema</span><br><span class="line">    │   └── schema-0</span><br><span class="line">    └── snapshot</span><br><span class="line">        ├── EARLIEST</span><br><span class="line">        ├── LATEST</span><br><span class="line">        ├── snapshot-1</span><br><span class="line">        └── snapshot-2</span><br><span class="line"></span><br><span class="line">24 directories, 21 files</span><br></pre></td></tr></table></figure>
<p>从 snapshot-2 开始，新的文件布局看起来像</p>
<p><img src="/image/paimon/snapshot-2.png" alt="snapshot-2"></p>
<h2 id="从表中删除记录"><a href="#从表中删除记录" class="headerlink" title="从表中删除记录"></a><strong><strong>从表中删除记录</strong></strong></h2><p>现在删除满足条件 <code>dt&gt;=20230503</code> 的记录。使用以下命令删除表 T 中 <code>dt&gt;=20230503</code> 的记录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/flink run ./lib/paimon-flink-action-0.4.0-incubating.jar delete --path file:///tmp/paimon/default.db/T --<span class="built_in">where</span> <span class="string">&quot;dt &gt;= &#x27;20230503&#x27;&quot;</span></span><br></pre></td></tr></table></figure>
<p>执行过程输出的信息如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/flink run ./lib/paimon-flink-action-0.4.0-incubating.jar delete --path file:///tmp/paimon/default.db/T --<span class="built_in">where</span> <span class="string">&quot;dt &gt;= &#x27;20230503&#x27;&quot;</span></span><br><span class="line">WARNING: An illegal reflective access operation has occurred</span><br><span class="line">WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/mnt/d/opt/flink-1.17.1/lib/flink-shaded-hadoop-2-uber-2.7.5-10.0.jar) to method sun.security.krb5.Config.getInstance()</span><br><span class="line">WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil</span><br><span class="line">WARNING: Use --illegal-access=warn to <span class="built_in">enable</span> warnings of further illegal reflective access operations</span><br><span class="line">WARNING: All illegal access operations will be denied <span class="keyword">in</span> a future release</span><br><span class="line">Job has been submitted with JobID 1d3b1cb3c227ca01ba8559b38885b3a8</span><br></pre></td></tr></table></figure>
<p>以上命令的执行结果，等价于以下 SQL：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> T <span class="keyword">WHERE</span> dt <span class="operator">&gt;=</span> <span class="string">&#x27;20230503&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>笔者当前演示这些操作的时候，Paimon 0.4 尚不支持在 Flink SQL 中直接执行 <code>DELETE FROM T WHERE dt &gt;= &#39;20230503&#39;;</code> 语句进行删除，报错信息如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ERROR] Could not execute SQL statement. Reason:</span><br><span class="line">java.lang.UnsupportedOperationException: Can&#x27;t perform delete operation of the table paimon.default.T because the corresponding dynamic table sink has not yet implemented org.apache.flink.table.connector.sink.abilities.SupportsRowLevelDelete.</span><br></pre></td></tr></table></figure>
<p>具体执行 SQL 的流程：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Flink SQL&gt; CREATE CATALOG paimon WITH (</span><br><span class="line">&gt; <span class="string">&#x27;type&#x27;</span> = <span class="string">&#x27;paimon&#x27;</span>,</span><br><span class="line">&gt; <span class="string">&#x27;warehouse&#x27;</span> = <span class="string">&#x27;file:///tmp/paimon&#x27;</span></span><br><span class="line">&gt; );</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br><span class="line">[INFO] Execute statement succeed.</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; USE CATALOG paimon;</span><br><span class="line">[INFO] Execute statement succeed.</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; SELECT * FROM T;</span><br><span class="line">[INFO] Result retrieval cancelled.</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; SET <span class="string">&#x27;execution.runtime-mode&#x27;</span> = <span class="string">&#x27;batch&#x27;</span>;</span><br><span class="line">[INFO] Execute statement succeed.</span><br><span class="line"></span><br><span class="line">Flink SQL&gt; DELETE FROM T WHERE dt &gt;= <span class="string">&#x27;20230503&#x27;</span>;</span><br><span class="line">[ERROR] Could not execute SQL statement. Reason:</span><br><span class="line">java.lang.UnsupportedOperationException: Can<span class="string">&#x27;t perform delete operation of the table paimon.default.T because the corresponding dynamic table sink has not yet implemented org.apache.flink.table.connector.sink.abilities.SupportsRowLevelDelete.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Flink SQL&gt;</span></span><br></pre></td></tr></table></figure>
<p>因此，这里使用客户端命令进行删除操作。</p>
<p>另外，还要注意的点是，命令中引用的是 <strong>paimon-flink-action-0.4.0-incubating.jar</strong>，而不是 paimon-flink-1.17-0.4.0-incubating.jar，请不要混淆了。</p>
<p>关于 <code>delete</code> 操作的更多信息，可以通过以下命令详细了解：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;FLINK_HOME&gt;/bin/flink run /path/to/paimon-flink-action-&#123;&#123;&lt; version &gt;&#125;&#125;.jar delete --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>
<p>如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./bin/flink run ./lib/paimon-flink-action-0.4.jar delete --help</span><br><span class="line">WARNING: An illegal reflective access operation has occurred</span><br><span class="line">WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/mnt/d/opt/flink-1.17.1/lib/flink-shaded-hadoop-2-uber-2.7.5-10.0.jar) to method sun.security.krb5.Config.getInstance()</span><br><span class="line">WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil</span><br><span class="line">WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations</span><br><span class="line">WARNING: All illegal access operations will be denied in a future release</span><br><span class="line">Action &quot;delete&quot; deletes data from a table.</span><br><span class="line"></span><br><span class="line">Syntax:</span><br><span class="line">  delete --warehouse &lt;warehouse-path&gt; --database &lt;database-name&gt; --table &lt;table-name&gt; --where &lt;filter_spec&gt;</span><br><span class="line">  delete --path &lt;table-path&gt; --where &lt;filter_spec&gt;</span><br><span class="line"></span><br><span class="line">The &#x27;--where &lt;filter_spec&gt;&#x27; part is equal to the &#x27;WHERE&#x27; clause in SQL DELETE statement. If you want delete all records, please use overwrite (see doc).</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  delete --path hdfs:///path/to/warehouse/test_db.db/test_table --where id &gt; (SELECT count(*) FROM employee)</span><br><span class="line">  It&#x27;s equal to &#x27;DELETE FROM test_table WHERE id &gt; (SELECT count(*) FROM employee)</span><br></pre></td></tr></table></figure>
<p>现在继续探讨删除操作对的表文件产生的影响。</p>
<p>第三次 <code>commit</code> 后，创建了一个新的快照 snapshot-3。继续使用 <code>tree</code> 命令来列出表下的文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/tmp/paimon</span><br><span class="line">└── default.db</span><br><span class="line">    └── T</span><br><span class="line">        ├── dt=20230501</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       └── data-c4f3cde1-8759-4f69-abc2-da6bea4911a1-0.orc</span><br><span class="line">        ├── dt=20230502</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       └── data-8ccf8d2d-607b-4b9f-bf91-ef6542d41d05-0.orc</span><br><span class="line">        ├── dt=20230503</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       ├── data-4cb7a3f9-2ad1-4f7b-9cf3-4445029244cf-0.orc</span><br><span class="line">        │       └── data-d6cccfda-45b7-4640-8ca9-5455be7dfdc0-0.orc</span><br><span class="line">        ├── dt=20230504</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       ├── data-ae0d5e30-8178-4caa-b311-f39bbf116ed7-0.orc</span><br><span class="line">        │       └── data-ffaa7f9f-a112-4da0-9117-630fa02354f8-0.orc</span><br><span class="line">        ├── dt=20230505</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       ├── data-78c70a1f-f51c-4ebd-822d-2f1f4a47ef9f-0.orc</span><br><span class="line">        │       └── data-7bc0e30b-7509-45ca-a191-3ef30a173af0-0.orc</span><br><span class="line">        ├── dt=20230506</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       ├── data-95631ff5-7c56-4600-9e7a-1e3976016d28-0.orc</span><br><span class="line">        │       └── data-f416780e-d673-49e3-b3e3-bbe390e9c00c-0.orc</span><br><span class="line">        ├── dt=20230507</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       ├── data-001834d2-3129-47da-b8cd-b61eb227d384-0.orc</span><br><span class="line">        │       └── data-367c1275-e6d7-4a94-b8b6-9edc6a84d57d-0.orc</span><br><span class="line">        ├── dt=20230508</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       ├── data-83161511-dc36-421a-bba7-ce8e46c7d5f8-0.orc</span><br><span class="line">        │       └── data-bb095dcc-3c51-4a29-b408-3da9a325c47a-0.orc</span><br><span class="line">        ├── dt=20230509</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       ├── data-220babec-5065-4e24-b30d-d46d060a6e7a-0.orc</span><br><span class="line">        │       └── data-69f3f4eb-cf80-4741-92b3-9cb396354ac2-0.orc</span><br><span class="line">        ├── dt=20230510</span><br><span class="line">        │   └── bucket-0</span><br><span class="line">        │       ├── data-073c53a1-899e-416f-b43e-3433a541057b-0.orc</span><br><span class="line">        │       └── data-71177b4a-0d97-4994-9447-c541ef61145b-0.orc</span><br><span class="line">        ├── manifest</span><br><span class="line">        │   ├── manifest-16b42374-154b-4aaf-8d15-2aa0ba41ade1-0</span><br><span class="line">        │   ├── manifest-401272a3-05f2-4d51-8a3d-27ecee17ca0e-0</span><br><span class="line">        │   ├── manifest-9ed893d6-4f96-4f5a-bc9b-3f5da726a8d1-0</span><br><span class="line">        │   ├── manifest-list-28bc3d79-2688-4c70-b610-8fd359901eec-0</span><br><span class="line">        │   ├── manifest-list-28bc3d79-2688-4c70-b610-8fd359901eec-1</span><br><span class="line">        │   ├── manifest-list-98fad66b-1a62-4657-9127-39e31bd26b88-0</span><br><span class="line">        │   ├── manifest-list-98fad66b-1a62-4657-9127-39e31bd26b88-1</span><br><span class="line">        │   ├── manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-0</span><br><span class="line">        │   └── manifest-list-c996ae59-9dc5-4d67-b691-7f1c20d71526-1</span><br><span class="line">        ├── schema</span><br><span class="line">        │   └── schema-0</span><br><span class="line">        └── snapshot</span><br><span class="line">            ├── EARLIEST</span><br><span class="line">            ├── LATEST</span><br><span class="line">            ├── snapshot-1</span><br><span class="line">            ├── snapshot-2</span><br><span class="line">            └── snapshot-3</span><br><span class="line"></span><br><span class="line">25 directories, 33 files</span><br></pre></td></tr></table></figure>
<p>你会发现，从分区 dt=20230503 到分区 dt=20230510 都没有被删除。相反，在这些分区里创建这了一个新的数据文件，查看分区 dt=20230510 下的信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ll /tmp/paimon/default.db/T/dt=20230510/bucket-0</span><br><span class="line">total 8.0K</span><br><span class="line">-rw-r--r-- 1 root root 815 Jun 11 10:32 data-073c53a1-899e-416f-b43e-3433a541057b-0.orc</span><br><span class="line">-rwxrwxrwx 1 root root 801 Jun 10 10:29 data-71177b4a-0d97-4994-9447-c541ef61145b-0.orc</span><br></pre></td></tr></table></figure>
<p>这是可以理解的，因为我们在第二次 <code>commit</code> 时插入了一条记录（用 <code>+I[10, 10010, &#39;varchar00010&#39;, &#39;20230510&#39;]</code> 表示），然后在第三次 <code>commit</code> 时删除了这条记录。</p>
<p>执行 <code>SELECT * FROM T</code> 将返回 2 条记录，即：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">id</span>           a                              b                             dt</span><br><span class="line"> 1       10001                   varchar00001                       20230501</span><br><span class="line"> 2       10002                   varchar00002                       20230502</span><br></pre></td></tr></table></figure>
<p>从 snapshot-3 开始，新的文件布局看起来类似下图：</p>
<p><img src="/image/paimon/snapshot-3.png" alt="snapshot-3"></p>
<p>请注意，<code>manifest-3-0</code> 包含 8 个 <code>ADD</code> 操作类型的 manifest 条目，对应于 8 个新写入的数据文件。</p>
<h2 id="压缩表"><a href="#压缩表" class="headerlink" title="压缩表"></a>压缩表</h2><p>你可能已经注意到，小文件的数量会在连续的快照中增加，这可能会导致读取性能下降。因此，为了减少小文件的数量，需要进行完全压缩。</p>
<p>现在我们触发完全压缩。确保你已经将执行模式设置为批处理（在 flink-conf.yaml 中添加一个条目 <code>execution.runtime-mode: batch</code>，或在执行命令时添加参数 <code>-Dexecution.runtime-mode=BATCH</code>），并通过 <code>flink run</code> 运行一个专门的压缩作业：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;FLINK_HOME&gt;/bin/flink run \</span><br><span class="line">    /path/to/paimon-flink-action-0.4.0-incubating.jar \</span><br><span class="line">    compact \</span><br><span class="line">    --warehouse &lt;warehouse-path&gt; \</span><br><span class="line">    --database &lt;database-name&gt; \</span><br><span class="line">    --table &lt;table-name&gt; \</span><br><span class="line">[--partition &lt;partition-name&gt;] \</span><br><span class="line">[--catalog-conf &lt;paimon-catalog-conf&gt;[--catalog-conf &lt;paimon-catalog-conf&gt; ...]] \</span><br></pre></td></tr></table></figure>
<p>本文这里的执行命令是（当前已经在 Flink 的主目录中）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/flink run -Dexecution.runtime-mode=BATCH ./lib/paimon-flink-action-0.4.0-incubating.jar compact --path file:///tmp/paimon/default.db/T</span><br></pre></td></tr></table></figure>
<p>所有当前的表文件将被压缩，并产生一个新的快照，即 snapshot-4，使用 <code>vim</code> 命令打开文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /tmp/paimon/default.db/T/snapshot/snapshot-4</span><br></pre></td></tr></table></figure>
<p>snapshot-4 包含以下信息：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;schemaId&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;baseManifestList&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;manifest-list-7456ab8e-bc9e-4d9e-853f-cca13a8afc7a-0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;deltaManifestList&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;manifest-list-7456ab8e-bc9e-4d9e-853f-cca13a8afc7a-1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;changelogManifestList&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commitUser&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1541550f-4635-4a8f-a44a-b8e067249476&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commitIdentifier&quot;</span> <span class="punctuation">:</span> <span class="number">9223372036854775807</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commitKind&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;COMPACT&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timeMillis&quot;</span> <span class="punctuation">:</span> <span class="number">1686367786486</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;logOffsets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;totalRecordCount&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;deltaRecordCount&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;changelogRecordCount&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;watermark&quot;</span> <span class="punctuation">:</span> <span class="number">-9223372036854775808</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>从 snapshot-4 开始，新的文件布局看起来如下</p>
<p><img src="/image/paimon/snapshot-4.png" alt="snapshot-4"></p>
<p>请注意，<code>manifest-4-0</code> 包含 20 个清单条目（18 个 <code>DELETE</code> 操作和 2 个 <code>ADD</code> 操作）。</p>
<ol>
<li>对于分区 dt=20230503 至分区 dt=20230510，对两个数据文件进行两次 <code>DELETE</code> 操作；</li>
<li>对于分区 dt=20230501 至分区 dt=20230502，对同一数据文件进行一次 <code>DELETE</code> 操作和一次 <code>ADD</code> 操作。</li>
</ol>
<h2 id="更改表"><a href="#更改表" class="headerlink" title="更改表"></a><strong><strong>更改表</strong></strong></h2><p>在 Flink SQL 客户端执行下面的语句来配置完全压缩：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> T <span class="keyword">SET</span> (<span class="string">&#x27;full-compaction.delta-commits&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>执行上述语句会为 Paimon 表创建一个新的模式，即 schema-1。但是，在下次 <code>commit</code> 之前，新创建的模式 schema-1 实际上还没有被使用。</p>
<h2 id="快照过期"><a href="#快照过期" class="headerlink" title="快照过期"></a>快照<strong><strong>过期</strong></strong></h2><p>注意，只有在快照过期且没有消费者依赖快照时，标记的数据文件才会被真正删除。欲了解更多信息，请参见<a href="https://paimon.apache.org/docs/0.4/maintenance/expiring-snapshots/">快照过期</a>。</p>
<p>在快照过期过程中，首先确定快照的范围，然后将这些快照内的数据文件标记为删除。仅当存在引用该特定数据文件的类型为 <code>DELETE</code> 的清单条目时，数据文件才被标记为删除。此标记可确保该文件不会被后续快照使用，可以安全地删除。</p>
<p>假设上图中的 4 个快照都要过期了。过期的流程如下：</p>
<ol>
<li>首先删除所有标记的数据文件，并记录任何更改的桶。</li>
<li>然后删除任何更新日志文件和关联的清单文件。</li>
<li>最后，删除快照本身、写入最早的提示文件。</li>
</ol>
<p>如果在删除过程中，有任何目录是空的，它们也会被删除。</p>
<p>假设创建了另一个快照，即 snapshot-5，并且触发了快照过期。<code>snapshot-1</code> 到 <code>snapshot-4</code> 将被删除。为简单起见，我们只关注前面的快照中的文件，快照过期后的最终布局如下：</p>
<p><img src="/image/paimon/snapshot-5.png" alt="snapshot-5"></p>
<p>结果，分区 <code>20230503</code> 到 <code>20230510</code> 被物理删除。</p>
<h2 id="Flink流写入"><a href="#Flink流写入" class="headerlink" title="Flink流写入"></a><strong><strong>Flink流写入</strong></strong></h2><p>最后，我们将通过使用 CDC 摄取的例子来研究 Flink 流写入。本节将讨论捕获和写入变化数据到 Paimon 的方法，以及异步压缩和快照提交和过期背后的机制。</p>
<p>首先，让我们仔细研究 CDC 数据摄取的工作流程，以及每个相关组件所扮演的独特角色。</p>
<p><img src="/image/paimon/flink-stream-write.png" alt="Untitled"></p>
<ol>
<li><code>MySQL CDC Source</code> 统一读取快照数据和增量数据，其中 <code>SnapshotReader</code> 读取快照数据，<code>BinlogReader</code> 读取增量数据。</li>
<li><code>Paimon Sink</code> 将数据写入 Paimon 表中，并在桶级别进行归类。其中的 <code>CompactManager</code> 会异步触发数据压缩。</li>
<li><code>Committer Operator</code> 是一个单例（意味着整个流程中只有一个这样的组件），负责提交快照数据和删除过期的快照数据。</li>
</ol>
<p>接下来，我们介绍一下端到端的数据流。</p>
<p><img src="/image/paimon/end-to-end.png" alt="Untitled"></p>
<p><code>MySQL Cdc Source</code> 读取快照和增量数据，在归一化（规范化）后将其发出到下游。</p>
<p><img src="/image/paimon/mysql-cdc-source.png" alt="Untitled"></p>
<p>Paimon Sink首先在基于堆的LSM树中缓冲新的记录，并在内存缓冲区满时将其刷入磁盘。请注意，每写一个数据文件都是一个排序的运行。在这一点上，没有创建清单文件和快照。就在Flink检查点发生之前，Paimon Sink将刷新所有缓冲区的记录，并向下游发送可提交的消息，在检查点期间由Committer Operator读取并提交。</p>
<p><code>Paimon Sink</code> 首先在基于堆的 LSM 树中缓冲新的记录，当内存缓冲区满时将其刷新到磁盘。请注意，每个写入的数据文件都是排序段（sorted run）。在这一点上，没有创建清单文件和快照。就在 Flink 检查点发生之前，<code>Paimon Sink</code> 将刷新所有缓冲区的记录，并向下游发送可提交的消息，该消息由 <code>Committer Operator</code> 在检查点期间读取和提交。</p>
<p><img src="/image/paimon/mysql-cdc-source-2.png" alt="Untitled"></p>
<p>在检查点期间，<code>Committer Operator</code> 将创建一个新快照，并将其与清单列表关联，以便该快照包含表内所有数据文件的信息。</p>
<p><img src="/image/paimon/mysql-cdc-source-3.png" alt="Untitled"></p>
<p>之后可能会发生异步压缩，并且 <code>CompactManager</code> 产生的可提交内容包含有关以前文件和合并文件的数据信息，以便 <code>Committer Operator</code> 可以构建相应的清单条目。在这种情况下，<code>Committer Operator</code> 可能在 Flink 检查点期间产生两个快照，一个用于写入的数据（类型为 <code>Append</code> 的快照），另一个用于压缩（类型为 <code>Compact</code> 的快照）。如果在检查点区间内没有写入数据文件，则仅创建类型为 <code>Compact</code> 的快照。<code>Committer Operator</code> 将检查快照的过期情况，并对标记的数据文件进行物理删除。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | Flink引擎</title>
    <url>/2023/06/10/paimon-engines-flink/</url>
    <content><![CDATA[<p>本文介绍如何在 Flink 中使用 Paimon。</p>
<h2 id="准备-Paimon-Jar-文件"><a href="#准备-Paimon-Jar-文件" class="headerlink" title="准备 Paimon Jar 文件"></a>准备 Paimon Jar 文件</h2><p>Paimon 目前支持 Flink 1.17、1.16、1.15 和 1.14。推荐使用最新的 Flink 版本以获得更好的体验。</p>
<p>下载对应版本的 jar 文件：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Flink 版本</th>
<th>Jar</th>
</tr>
</thead>
<tbody>
<tr>
<td>Flink 1.17</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.17/0.4.0-incubating/paimon-flink-1.17-0.4.0-incubating.jar">https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.17/0.4.0-incubating/paimon-flink-1.17-0.4.0-incubating.jar</a></td>
</tr>
<tr>
<td>Flink 1.16</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.16/0.4.0-incubating/paimon-flink-1.16-0.4.0-incubating.jar">https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.16/0.4.0-incubating/paimon-flink-1.16-0.4.0-incubating.jar</a></td>
</tr>
<tr>
<td>Flink 1.15</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.15/0.4.0-incubating/paimon-flink-1.15-0.4.0-incubating.jar">https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.15/0.4.0-incubating/paimon-flink-1.15-0.4.0-incubating.jar</a></td>
</tr>
<tr>
<td>Flink 1.14</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.14/0.4.0-incubating/paimon-flink-1.14-0.4.0-incubating.jar">https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.14/0.4.0-incubating/paimon-flink-1.14-0.4.0-incubating.jar</a></td>
</tr>
<tr>
<td>Flink Action</td>
<td><a href="https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-action/0.4.0-incubating/paimon-flink-action-0.4.0-incubating.jar">https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-action/0.4.0-incubating/paimon-flink-action-0.4.0-incubating.jar</a></td>
</tr>
</tbody>
</table>
</div>
<p>也可以选择从源代码手动构建 jar 文件。</p>
<p>要从源代码构建，需要先把代码克隆到本地，Github：<a href="https://github.com/apache/incubator-paimon.git。">https://github.com/apache/incubator-paimon.git。</a></p>
<p>然后使用以下命令构建：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean install -DskipTests</span><br></pre></td></tr></table></figure>
<p>构建成功后，可以在 <code>./paimon-flink/paimon-flink-&lt;flink-version&gt;/target/paimon-flink-&lt;flink-version&gt;-0.4.0-incubating.jar</code> 中找到 jar 文件。</p>
<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>1）下载 Flink</p>
<p>如果还没有下载 Flink，可以通过 <a href="https://flink.apache.org/downloads.html">https://flink.apache.org/downloads.html</a> 下载，然后使用以下命令进行解压：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzf flink-*.tgz</span><br></pre></td></tr></table></figure>
<p>2）将 Paimon 的 jar 文件拷贝到 Flink 主目录的 lib 目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> paimon-flink-*.jar &lt;FLINK_HOME&gt;/lib/</span><br></pre></td></tr></table></figure>
<p>3）将 Hadoop 的 jar 文件拷贝到 Flink 主目录的 lib 目录下</p>
<blockquote>
<p>如果机器处于 Hadoop 环境中，请确保环境变量 HADOOP_CLASSPATH 的值包括常用 Hadoop 库的路径，你不需要使用下面预装的 Hadoop jar 文件。</p>
</blockquote>
<p>下载 Pre-bundled Hadoop jar 文件，并将该 jar 文件拷贝到 Flink 目录的 lib 目录下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> flink-shaded-hadoop-2-uber-*.jar &lt;FLINK_HOME&gt;/lib/</span><br></pre></td></tr></table></figure>
<p>4）启动 Flink 本地集群</p>
<p>为了可以同时运行多个 Flink 作业，需要修改<FLINK_HOME>/conf/flink-conf.yaml 中的集群配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskmanager.numberOfTaskSlots: 2</span><br></pre></td></tr></table></figure>
<p>运行 Flink 自带的 bash 脚本，启动本地集群：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;FLINK_HOME&gt;/bin/start-cluster.sh</span><br></pre></td></tr></table></figure>
<p>在浏览器打开链接 <a href="http://localhost:8081/">http://localhost:8081/</a> 查看 Flink 仪表盘，可以看到集群已启动并正在运行。</p>
<p>启动 Flink SQL 客户端来执行 SQL 脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;FLINK_HOME&gt;/bin/sql-client.sh</span><br></pre></td></tr></table></figure>
<p>5）创建目录和表</p>
<p>依次执行以下 SQL 语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- if you&#x27;re trying out Paimon in a distributed environment,</span></span><br><span class="line"><span class="comment">-- the warehouse path should be set to a shared file system, such as HDFS or OSS</span></span><br><span class="line"><span class="keyword">CREATE</span> CATALOG my_catalog <span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">&#x27;type&#x27;</span><span class="operator">=</span><span class="string">&#x27;paimon&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;warehouse&#x27;</span><span class="operator">=</span><span class="string">&#x27;file:/tmp/paimon&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">USE CATALOG my_catalog;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- create a word count table</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> word_count (</span><br><span class="line">    word STRING <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> ENFORCED,</span><br><span class="line">    cnt <span class="type">BIGINT</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>6）写入数据</p>
<p>依次执行以下 SQL 语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- create a word data generator table</span></span><br><span class="line"><span class="keyword">CREATE</span> TEMPORARY <span class="keyword">TABLE</span> word_table (</span><br><span class="line">    word STRING</span><br><span class="line">) <span class="keyword">WITH</span> (</span><br><span class="line">    <span class="string">&#x27;connector&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;datagen&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;fields.word.length&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- paimon requires checkpoint interval in streaming mode</span></span><br><span class="line"><span class="keyword">SET</span> <span class="string">&#x27;execution.checkpointing.interval&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;10 s&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- write streaming data to dynamic table</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> word_count <span class="keyword">SELECT</span> word, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> word_table <span class="keyword">GROUP</span> <span class="keyword">BY</span> word;</span><br></pre></td></tr></table></figure>
<p>7）OLAP 查询</p>
<p>依次执行以下 SQL：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- use tableau result mode</span></span><br><span class="line"><span class="keyword">SET</span> <span class="string">&#x27;sql-client.execution.result-mode&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;tableau&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- switch to batch mode</span></span><br><span class="line">RESET <span class="string">&#x27;execution.checkpointing.interval&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="string">&#x27;execution.runtime-mode&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;batch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- olap query the table</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> word_count;</span><br></pre></td></tr></table></figure>
<p>可以多执行几次上面的查询 SQL 语句，并观察结果的变化。</p>
<p>8）流式查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- switch to streaming mode</span></span><br><span class="line"><span class="keyword">SET</span> <span class="string">&#x27;execution.runtime-mode&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;streaming&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- track the changes of table and calculate the count interval statistics</span></span><br><span class="line"><span class="keyword">SELECT</span> `<span class="type">interval</span>`, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> interval_cnt <span class="keyword">FROM</span></span><br><span class="line">    (<span class="keyword">SELECT</span> cnt <span class="operator">/</span> <span class="number">10000</span> <span class="keyword">AS</span> `<span class="type">interval</span>` <span class="keyword">FROM</span> word_count) <span class="keyword">GROUP</span> <span class="keyword">BY</span> `<span class="type">interval</span>`;</span><br></pre></td></tr></table></figure>
<p>9）退出</p>
<p>打开 Flink 仪表盘上正在运行作业列表上的作业，进入作业详情页面，点击 Cancel Job 按钮，取消作业。</p>
<p>执行以下 SQL 语句，退出 Flink SQL 客户端：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- uncomment the following line if you want to drop the dynamic table and clear the files</span></span><br><span class="line"><span class="comment">-- DROP TABLE word_count;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- exit sql-client</span></span><br><span class="line">EXIT;</span><br></pre></td></tr></table></figure>
<p>停止 Flink 本地集群：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/stop-cluster.sh</span><br></pre></td></tr></table></figure>
<h2 id="支持的-Flink-数据类型"><a href="#支持的-Flink-数据类型" class="headerlink" title="支持的 Flink 数据类型"></a>支持的 Flink 数据类型</h2><p>Flink 数据类型请参阅：<a href="https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/table/types/。">https://nightlies.apache.org/flink/flink-docs-release-1.17/docs/dev/table/types/。</a></p>
<p>支持所有 Flink 数据类型，除了</p>
<ul>
<li>不支持 MULTISET 类型；</li>
<li>不支持将 MAP 作为主键。</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | 概述</title>
    <url>/2023/06/20/paimon-concepts-overview/</url>
    <content><![CDATA[<p>Apache Paimon（孵化中）是一个流式数据湖平台，支持高速数据摄取、变化数据跟踪和高效的实时分析。</p>
<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p><img src="/image/paimon/paimon-infra.png" alt="Paimon架构"></p>
<p>如上面的架构图所示：</p>
<p><strong>读/写：</strong>Paimon 支持以多种方式读/写数据和执行 OLAP 查询。</p>
<ul>
<li>对于读取，它支持消费<ul>
<li>历史快照（批处理模式）的数据，</li>
<li>从最新偏移量（流处理模式）读取数据，或者</li>
<li>以混合方式读取增量快照。</li>
</ul>
</li>
<li>对于写入，它支持从数据库的变化日志（CDC）中进行流式同步，或从离线数据中批量插入/覆盖。</li>
</ul>
<p><strong>生态系统：</strong>除了 Apache Flink 之外，Paimon 还支持其他计算引擎的读取，如 Apache Hive、Apache Spark 和 Trino。</p>
<p><strong>内部原理：</strong>Paimon 在文件系统/对象存储中存储列式文件，并使用 LSM 树结构来支持大量数据更新和高性能查询。</p>
<h2 id="统一存储"><a href="#统一存储" class="headerlink" title="统一存储"></a><strong><strong>统一存储</strong></strong></h2><p>对于像 Apache Flink 这样的流引擎，通常有三种类型的连接器：</p>
<ul>
<li>消息队列，如 Apache Kafka，用于管道的源头和中间阶段，以确保延迟在秒级内。</li>
<li>OLAP 系统，如 Clickhouse，以流的方式接收处理后的数据，并为用户的临时查询提供服务。</li>
<li>批量存储，如 Apache Hive，支持传统批处理的各种操作，包括 <code>INSERT OVERWRITE</code>。</li>
</ul>
<p>Paimon 提供了表的抽象化。它的使用方式与传统数据库没有区别：</p>
<ul>
<li>在批处理执行模式下，它就像一个 Hive 表，支持 Batch SQL 的各种操作。查询它可以看到最新的快照。</li>
<li>在流式执行模式下，它的行为就像一个消息队列。查询它的行为就像从一个历史数据永不过期的消息队列中查询一个流变化日志。</li>
</ul>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Paimon | 引擎概述</title>
    <url>/2023/06/10/paimon-engines-overview/</url>
    <content><![CDATA[<p>Paimon 不仅原生支持 Flink SQL 的写入和查询，而且还提供其他流行引擎的查询，例如 Apache Spark 和 Apache Hive。</p>
<h2 id="兼容性矩阵"><a href="#兼容性矩阵" class="headerlink" title="兼容性矩阵"></a>兼容性矩阵</h2><div class="table-container">
<table>
<thead>
<tr>
<th>引擎</th>
<th>版本</th>
<th>批读取</th>
<th>批写入</th>
<th>创建表</th>
<th>流写入</th>
<th>流读取</th>
<th>批覆盖</th>
</tr>
</thead>
<tbody>
<tr>
<td>Flink</td>
<td>1.14 - 1.17</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
</tr>
<tr>
<td>Hive</td>
<td>2.1 - 3.1</td>
<td>✅</td>
<td>✅</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
</tr>
<tr>
<td>Spark</td>
<td>3.1 - 3.4</td>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
</tr>
<tr>
<td>Spark</td>
<td>2.4</td>
<td>✅</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
</tr>
<tr>
<td>Trino</td>
<td>358 - 400</td>
<td>✅</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
</tr>
<tr>
<td>Presto</td>
<td>0.236 - 0.279</td>
<td>✅</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
<td>❌</td>
</tr>
</tbody>
</table>
</div>
<p>正在进行的引擎：</p>
<p>Doris：开发中，<a href="https://github.com/apache/doris/issues/18433">支持Paimon目录</a>，<a href="https://github.com/apache/doris/issues/16392">Doris 产品路线图 2023</a>。</p>
<p>Seatunnel：开发中，<a href="https://github.com/apache/incubator-seatunnel/pull/4178">引入 Paimon 连接器</a>。</p>
<p>Starrocks：正在讨论中。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Apache Paimon</category>
      </categories>
      <tags>
        <tag>Paimon</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis PFADD 命令</title>
    <url>/2023/06/08/redis-cmd-hyperloglog-pfadd/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PFADD key [element [element ...]]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.8.9</p>
<p><strong>时间复杂度</strong></p>
<p>每添加一个元素的复杂度为 $O(1)$ </p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@hyperloglog</code></strong>, <strong><code>@fast</code></strong></p>
<p>将所有的元素参数添加到 HyperLogLog 数据结构中，存储在作为第一个参数指定的变量名称中。</p>
<p>作为这个命令的副作用，在执行此命令时，HyperLogLog 内部可能会更新，以反映截至目前为止添加的唯一项目数的不同近似值（集合的基数）。</p>
<p>如果 HyperLogLog 估计的近似基数在执行命令后发生变化，<code>PFADD</code> 将返回 1，否则返回 0。如果指定的键不存在，该命令将自动创建一个空的 HyperLogLog 结构（即具有指定长度和给定编码的 Redis 字符串）。</p>
<p>在调用命令时，如果不传递元素，而只有有效的 key 名称，那么如果 key 已经存在则不执行任何操作，否则只创建数据结构（在后一种情况下会返回 1）。</p>
<p>有关 HyperLogLog 数据结构的更多信息，请参阅 PFCOUNT 命令文档。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，如果 HyperLogLog 内部存储被修改了，则返回 1。 否则返回 0。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; PFADD hll J O H N S O N L I N</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFCOUNT hll</span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>执行 <code>PFADD</code> 命令时，只传 key 名称，而不传递元素，key 不存在的情况，该命令执行结果返回 1：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS hkey</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; PFADD hkey</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure>
<h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例 3"></a>示例 3</h2><p>执行 <code>PFADD</code> 命令时，只传 key 名称，而不传递元素，key 存在的情况，该命令执行结果返回 0：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; EXISTS hkey</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFADD hkey</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis PFDEBUG 命令</title>
    <url>/2023/06/09/redis-cmd-hyperloglog-pfdebug/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PFDEBUG subcommand key</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.8.9</p>
<p><strong>时间复杂度</strong></p>
<p>N/A</p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@hyperloglog</code></strong>, <strong><code>@admin</code></strong>, <strong><code>@slow</code></strong>, <strong><code>@dangerous</code></strong></p>
<p><code>PFDEBUG</code> 命令是一个内部命令，用于开发和测试 Redis。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis PFMERGE 命令</title>
    <url>/2023/06/09/redis-cmd-hyperloglog-pfmerge/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PFMERGE destkey [sourcekey [sourcekey ...]]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.8.9</p>
<p><strong>时间复杂度</strong></p>
<p>$O(N)$</p>
<p>N 为需要的 HyperLogLog 的数量。</p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@write</code></strong>, <strong><code>@hyperloglog</code></strong>, <strong><code>@slow</code></strong></p>
<p>将多个 HyperLogLog 合并为一个 HyperLogLog，合并后的 HyperLogLog 的基数估算值是通过对所有给定 HyperLogLog 进行并集计算得出的。</p>
<p>合并后的 HyperLogLog 会被储存在 <code>destkey</code> 键里面，如果该键并不存在，那么命令在执行之前，会先为该键创建一个空的 HyperLogLog。如果该键存在，则将其视为源集之一，其基数将包含在计算的 HyperLogLog 的基数中。</p>
<p>简单来说就是，把多个 HyperLogLog 合并到一起，得到一个代表并集基数的HyperLogLog，如果目标 key 存在，也会一起合并，得到的目标 key 就是最终的合并结果。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回 <code>OK</code>。</p>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h2><p>将两个 HyperLogLog 合并为一个 HyperLogLog，并储存在一个不存在的键上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; PFADD hll:1 a b c</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFADD <span class="string">&quot;hll:2&quot;</span> d e f</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFMERGE <span class="string">&quot;hll:target&quot;</span> <span class="string">&quot;hll:1&quot;</span> <span class="string">&quot;hll:2&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; PFCOUNT <span class="string">&quot;hll:target&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br></pre></td></tr></table></figure>
<h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h2><p>将两个 HyperLogLog 合并为一个 HyperLogLog，并储存在一个已经存在的键上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; PFADD hll:1 a b c</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFADD <span class="string">&quot;hll:2&quot;</span> d e f</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFADD <span class="string">&quot;hll:3&quot;</span> z</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFMERGE <span class="string">&quot;hll:3&quot;</span> <span class="string">&quot;hll:1&quot;</span> <span class="string">&quot;hll:2&quot;</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; PFCOUNT <span class="string">&quot;hll:3&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis PFSELFTEST 命令</title>
    <url>/2023/06/09/redis-cmd-hyperloglog-pfselftest/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PFSELFTEST</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.8.9</p>
<p><strong>时间复杂度</strong></p>
<p>N/A</p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@hyperloglog</code></strong>, <strong><code>@admin</code></strong>, <strong><code>@slow</code></strong>, <strong><code>@dangerous</code></strong></p>
<p><code>PFSELFTEST</code> 是一个内部命令，仅用于开发和测试 Redis。</p>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis PFCOUNT 命令</title>
    <url>/2023/06/08/redis-cmd-hyperloglog-pfcount/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PFCOUNT key [key ...]</span><br></pre></td></tr></table></figure>
<p><strong>可用版本</strong></p>
<p>≥ 2.8.9</p>
<p><strong>时间复杂度</strong></p>
<p>当命令作用于单个 HyperLogLog 时，复杂度为 $O(1)$，并且具有非常低的平均常数时间。当命令作用于 N 个 HyperLogLog 时，复杂度为 $O(N)$ ，常数时间也比处理单个 HyperLogLog 时要大得多。</p>
<p><strong>ACL类别</strong></p>
<p><strong><code>@read</code></strong>, <strong><code>@hyperloglog</code></strong>, <strong><code>@slow</code></strong></p>
<p>调用 <code>PFCOUNT</code> 命令时，如果只传入一个 key，则返回存储在指定 key 中的 HyperLogLog 数据结构计算的近似基数，如果 key 不存在则返回为 0。</p>
<p>如果传入多个 key 时，则返回所有给定 key 中的 HyperLogLog 的合集的近似基数，这个近似基数是通过合并所有给定的 HyperLogLog 到一个临时 HyperLogLog 中计算得出的。</p>
<p>HyperLogLog 数据结构用于计算集合中的唯一元素，只需要使用少量固定内存，特别是每个 HyperLogLog 占用 12KB（加上 key 本身的几个字节）。</p>
<p>返回的集合基数不是精确的，而是近似的，标准误差为 0.81%。</p>
<p>例如，要计算一天中进行的所有不同搜索查询次数，一个程序需要在每次处理查询时调用 <code>PFADD</code>。随时可以用 <code>PFCOUNT</code> 检索近似的唯一查询次数。</p>
<p>注意：作为调用此函数的副作用，HyperLogLog 有可能被修改，因为最后 8 个字节编码了最近计算的基数以进行缓存。所以从技术上讲，<code>PFCOUNT</code> 也是一个写命令。</p>
<h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a><strong><strong>返回值</strong></strong></h2><p>返回一个整数，给定 HyperLogLog 包含的唯一元素的近似数量。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis&gt; PFADD hll foo bar zap</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFADD hll zap zap zap</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; PFADD hll foo bar</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">redis&gt; PFCOUNT hll</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">redis&gt; PFADD some-other-hll 1 2 3</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; PFCOUNT hll some-other-hll</span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br></pre></td></tr></table></figure>
<p>（END）</p>
]]></content>
      <categories>
        <category>Redis教程</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to Redis Bitmaps</title>
    <url>/2024/11/15/redis-bitmaps-intro/</url>
    <content><![CDATA[<p>Bitmaps are not an actual data type, but a set of bit-oriented operations defined on the String type which is treated like a bit vector. Since strings are binary safe blobs and their maximum length is 512 MB, they are suitable to set up to 2^32 different bits.</p>
<p>You can perform bitwise operations on one or more strings. Some examples of bitmap use cases include:</p>
<ul>
<li>Efficient set representations for cases where the members of a set correspond to the integers 0-N.</li>
<li>Object permissions, where each bit represents a particular permission, similar to the way that file systems store permissions.</li>
</ul>
<h2 id="Basic-Commands"><a href="#Basic-Commands" class="headerlink" title="Basic Commands"></a>Basic Commands</h2><ul>
<li><code>SETBIT</code> sets a bit at the provided offset to 0 or 1.</li>
<li><code>GETBIT</code> returns the value of a bit at a given offset.</li>
</ul>
<p>See the <a href="https://redis.io/docs/latest/commands/?group=bitmap">complete list of bitmap commands</a>.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>Suppose you have 1000 cyclists racing through the country-side, with sensors on their bikes labeled 0-999. You want to quickly determine whether a given sensor has pinged a tracking server within the hour to check in on a rider.</p>
<p>You can represent this scenario using a bitmap whose key references the current hour.</p>
<ul>
<li>Rider 123 pings the server on January 1, 2024 within the 00:00 hour. You can then confirm that rider 123 pinged the server. You can also check to see if rider 456 has pinged the server for that same hour.</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; SETBIT pings:2024-01-01-00:00 123 1</span><br><span class="line">(integer) 0</span><br><span class="line">&gt; GETBIT pings:2024-01-01-00:00 123</span><br><span class="line">1</span><br><span class="line">&gt; GETBIT pings:2024-01-01-00:00 456</span><br><span class="line">0</span><br></pre></td></tr></table></figure>
<h2 id="Bit-Operations"><a href="#Bit-Operations" class="headerlink" title="Bit Operations"></a>Bit Operations</h2><p>Bit operations are divided into two groups: constant-time single bit operations, like setting a bit to 1 or 0, or getting its value, and operations on groups of bits, for example counting the number of set bits in a given range of bits (e.g., population counting).</p>
<p>One of the biggest advantages of bitmaps is that they often provide extreme space savings when storing information. For example in a system where different users are represented by incremental user IDs, it is possible to remember a single bit information (for example, knowing whether a user wants to receive a newsletter) of 4 billion users using just 512 MB of memory.</p>
<p>The <code>SETBIT</code> command takes as its first argument the bit number, and as its second argument the value to set the bit to, which is 1 or 0. The command automatically enlarges the string if the addressed bit is outside the current string length.</p>
<p><code>GETBIT</code> just returns the value of the bit at the specified index. Out of range bits (addressing a bit that is outside the length of the string stored into the target key) are always considered to be zero.</p>
<p>There are three commands operating on group of bits:</p>
<ol>
<li><code>BITOP</code> performs bit-wise operations between different strings. The provided operations are AND, OR, XOR and NOT.</li>
<li><code>BITCOUNT</code> performs population counting, reporting the number of bits set to 1.</li>
<li><code>BITPOS</code> finds the first bit having the specified value of 0 or 1.</li>
</ol>
<p>Both <code>BITPOS</code> and <code>BITCOUNT</code> are able to operate with byte ranges of the string, instead of running for the whole length of the string. We can trivially see the number of bits that have been set in a bitmap.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; BITCOUNT pings:2024-01-01-00:00</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>
<p>For example imagine you want to know the longest streak of daily visits of your web site users. You start counting days starting from zero, that is the day you made your web site public, and set a bit with <code>SETBIT</code> every time the user visits the web site. As a bit index you simply take the current unix time, subtract the initial offset, and divide by the number of seconds in a day (normally, 3600*24).</p>
<p>This way for each user you have a small string containing the visit information for each day. With <code>BITCOUNT</code> it is possible to easily get the number of days a given user visited the web site, while with a few <code>BITPOS</code> calls, or simply fetching and analyzing the bitmap client-side, it is possible to easily compute the longest streak.</p>
<p>Bitmaps are trivial to split into multiple keys, for example for the sake of sharding the data set and because in general it is better to avoid working with huge keys. To split a bitmap across different keys instead of setting all the bits into a key, a trivial strategy is just to store M bits per key and obtain the key name with bit-number/M and the Nth bit to address inside the key with bit-number MOD M.</p>
<h2 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h2><p><code>SETBIT</code> and <code>GETBIT</code> are O(1). <code>BITOP</code> is O(n), where n is the length of the longest string in the comparison.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Convert LocalDateTime to Long Timestamp in Java</title>
    <url>/2024/11/19/java-convert-localdatetime-to-long-timestamp/</url>
    <content><![CDATA[<p>When working with dates and times in Java, you may often need to convert a <code>LocalDateTime</code> object into a <code>long</code> timestamp, typically representing the number of milliseconds or seconds since the Unix epoch (January 1, 1970, 00:00:00 UTC). This can be useful for database operations, APIs, or any scenario requiring a numerical representation of date and time.</p>
<h2 id="Step-by-Step-Conversion-Process"><a href="#Step-by-Step-Conversion-Process" class="headerlink" title="Step-by-Step Conversion Process"></a>Step-by-Step Conversion Process</h2><p>Java’s <code>LocalDateTime</code> is a part of the <code>java.time</code> package introduced in Java 8. Since <code>LocalDateTime</code> is time-zone agnostic, converting it to a timestamp requires associating it with a time zone. Here’s how you can achieve this:</p>
<h3 id="1-Using-ZoneId-and-ZonedDateTime"><a href="#1-Using-ZoneId-and-ZonedDateTime" class="headerlink" title="1. Using ZoneId and ZonedDateTime"></a>1. <strong>Using </strong><code>ZoneId</code><strong> and </strong><code>ZonedDateTime</code></h3><p>You need to combine <code>LocalDateTime</code> with a <code>ZoneId</code> to create a <code>ZonedDateTime</code>. Once you have a <code>ZonedDateTime</code>, you can convert it to an epoch timestamp.</p>
<h4 id="Example-Converting-to-Milliseconds"><a href="#Example-Converting-to-Milliseconds" class="headerlink" title="Example: Converting to Milliseconds"></a>Example: Converting to Milliseconds</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.time.ZonedDateTime;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LocalDateTimeToTimestamp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// Create a LocalDateTime instance</span></span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">localDateTime</span> <span class="operator">=</span> LocalDateTime.now();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Specify the ZoneId (e.g., UTC)</span></span><br><span class="line">        <span class="type">ZoneId</span> <span class="variable">zoneId</span> <span class="operator">=</span> ZoneId.of(<span class="string">&quot;UTC&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Convert LocalDateTime to ZonedDateTime</span></span><br><span class="line">        <span class="type">ZonedDateTime</span> <span class="variable">zonedDateTime</span> <span class="operator">=</span> localDateTime.atZone(zoneId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Convert ZonedDateTime to milliseconds since epoch</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">timestampMillis</span> <span class="operator">=</span> zonedDateTime.toInstant().toEpochMilli();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print the timestamp</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Timestamp in milliseconds: &quot;</span> + timestampMillis);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Example-Converting-to-Seconds"><a href="#Example-Converting-to-Seconds" class="headerlink" title="Example: Converting to Seconds"></a>Example: Converting to Seconds</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.time.ZonedDateTime;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LocalDateTimeToSeconds</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">localDateTime</span> <span class="operator">=</span> LocalDateTime.now();</span><br><span class="line">        <span class="type">ZoneId</span> <span class="variable">zoneId</span> <span class="operator">=</span> ZoneId.of(<span class="string">&quot;UTC&quot;</span>);</span><br><span class="line">        <span class="type">ZonedDateTime</span> <span class="variable">zonedDateTime</span> <span class="operator">=</span> localDateTime.atZone(zoneId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Convert to seconds since epoch</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">timestampSeconds</span> <span class="operator">=</span> zonedDateTime.toInstant().getEpochSecond();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Timestamp in seconds: &quot;</span> + timestampSeconds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="2-Custom-Time-Zones"><a href="#2-Custom-Time-Zones" class="headerlink" title="2. Custom Time Zones"></a>2. <strong>Custom Time Zones</strong></h3><p>If your application operates in a specific time zone, replace <code>&quot;UTC&quot;</code> with the desired <code>ZoneId</code>. For example:</p>
<ul>
<li><code>ZoneId.of(&quot;America/New_York&quot;)</code></li>
<li><code>ZoneId.of(&quot;Europe/London&quot;)</code></li>
<li><code>ZoneId.of(&quot;Asia/Shanghai&quot;)</code></li>
</ul>
<p>This ensures accurate conversion based on local time rules.</p>
<hr>
<h3 id="3-Handling-Different-Time-Zones"><a href="#3-Handling-Different-Time-Zones" class="headerlink" title="3. Handling Different Time Zones"></a>3. <strong>Handling Different Time Zones</strong></h3><p>When dealing with users or systems in different time zones, you can pass the relevant <code>ZoneId</code> dynamically. For example:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ZoneId</span> <span class="variable">zoneId</span> <span class="operator">=</span> ZoneId.systemDefault();</span><br></pre></td></tr></table></figure>
<p>This fetches the system’s default time zone.</p>
<hr>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Converting <code>LocalDateTime</code> to a <code>long</code> timestamp is a straightforward process:</p>
<ol>
<li>Combine <code>LocalDateTime</code> with a <code>ZoneId</code> to get a <code>ZonedDateTime</code>.</li>
<li>Use the <code>toInstant()</code> method to get an epoch-based <code>Instant</code>.</li>
<li>Convert the <code>Instant</code> to either milliseconds (<code>toEpochMilli()</code>) or seconds (<code>getEpochSecond()</code>).</li>
</ol>
<p>This approach leverages Java’s modern <code>java.time</code> API, ensuring your code is robust and adheres to best practices.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>HowTo</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SDIFFSTORE Command</title>
    <url>/2024/10/05/redis-set-sdiffstore-command/</url>
    <content><![CDATA[<p>The Redis <code>SDIFFSTORE</code> command stores the difference between the specified sets in a given destination set. If the destination set already exists, it will be overwritten.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SDIFFSTORE</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SDIFFSTORE destination key [key ...]</span><br></pre></td></tr></table></figure>
<p>This command is equal to <code>SDIFF</code>, but instead of returning the resulting set, it is stored in destination.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N) where N is the total number of elements in all given sets.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code><font style="color:rgb(9, 26, 35);">, </font><code>@set</code><font style="color:rgb(9, 26, 35);">, </font><code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns the number of elements in the resulting set.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD key2 c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD key3 a c e</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SDIFFSTORE dest_set key1 key2 key3</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS dest_set</span><br><span class="line">1) &quot;b&quot;</span><br><span class="line">2) &quot;d&quot;</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SDIFF Command</title>
    <url>/2024/10/04/redis-set-sdiff-command/</url>
    <content><![CDATA[<p>The Redis <code>SDIFF</code> command returns the difference between the first set and the other sets, which can be thought of as the elements unique to the first set. If any of the set keys do not exist, they are treated as empty sets.</p>
<p>For example, assume we have three sets: the first set contains the elements <code>a</code>, <code>b</code>, <code>c</code>, and <code>d</code>; the second set contains only <code>c</code>; and the third set contains <code>a</code>, <code>c</code>, and <code>e</code>. The result of the <code>SDIFF key1 key2 key3</code> command is <code>&#123;b, d&#125;</code>, which consists of the elements from <code>key1</code> that are not present in either <code>key2</code> or <code>key3</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key1 = &#123;a, b, c, d&#125;</span><br><span class="line">key2 = &#123;c&#125;</span><br><span class="line">key3 = &#123;a, c, e&#125;</span><br><span class="line">SDIFF key1 key2 key3 = &#123;b, d&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SDIFF</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SDIFF key [key ...]</span><br></pre></td></tr></table></figure>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N) where N is the total number of elements in all given sets.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code><font style="color:rgb(9, 26, 35);">, </font><code>@set</code><font style="color:rgb(9, 26, 35);">, </font><code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns a set with the members of the resulting set.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>The <code>SDIFF</code> command returns the elements that are present in the <code>first set</code> (<code>key1</code>) but not in any of the other sets (<code>key2</code>, <code>key3</code>). Specifically, it checks: Which elements in <code>key1</code> do not appear in <code>key2</code> or <code>key3</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD key2 c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD key3 a c e</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SDIFF key1 key2 key3</span><br><span class="line">1) &quot;b&quot;</span><br><span class="line">2) &quot;d&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<p>Step-by-step breakdown:</p>
<ul>
<li>The first set is <code>key1 = &#123;a, b, c, d&#125;</code>.</li>
<li>The second set is <code>key2 = &#123;c&#125;</code> and the third set is <code>key3 = &#123;a, c, e&#125;</code>.</li>
<li>Now, we check which elements in <code>key1</code> are not in <code>key2</code> or <code>key3</code>:<ul>
<li><code>a</code>: Found in <code>key3</code>, so it’s <strong>excluded</strong>.</li>
<li><code>b</code>: Not found in <code>key2</code> or <code>key3</code>, so it <strong>remains</strong>.</li>
<li><code>c</code>: Found in both <code>key2</code> and <code>key3</code>, so it’s <strong>excluded</strong>.</li>
<li><code>d</code>: Not found in <code>key2</code> or <code>key3</code>, so it <strong>remains</strong>.</li>
</ul>
</li>
<li>The difference between <code>key1</code> and the other two sets is <code>&#123;b, d&#125;</code>.</li>
</ul>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set</title>
    <url>/2024/10/01/redis-set/</url>
    <content><![CDATA[<p>In Redis, a <strong>Set</strong> is an unordered collection of unique <strong>String</strong> elements. This means that duplicate values are not allowed within a Set.</p>
<p>The Set’s underlying data structure can either be an <strong>intset</strong> or a <strong>hashtable</strong>.</p>
<p>Since Redis Sets are implemented using hash tables, the time complexity for adding, removing, or checking for members is <strong>O(1)</strong>.</p>
<p>A Set can have a maximum of <strong>2^32 - 1</strong> (4,294,967,295) members, which means each Set can store over 4 billion elements.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD s_db redis</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD s_db hbase</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD s_db mysql</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD s_db mysql</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS s_db</span><br><span class="line">1) <span class="string">&quot;mysql&quot;</span></span><br><span class="line">2) <span class="string">&quot;hbase&quot;</span></span><br><span class="line">3) <span class="string">&quot;redis&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<p>In the above example, we used the <code>SADD</code> command to add three elements to the set named <code>s_db</code>. When attempting to add <code>&quot;mysql&quot;</code> a second time, Redis returns <code>0</code> since it already exists in the Set.</p>
<h2 id="Common-Redis-Set-Commands"><a href="#Common-Redis-Set-Commands" class="headerlink" title="Common Redis Set Commands"></a>Common Redis Set Commands</h2><p>Here’s a list of basic Redis Set commands:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>No.</th>
<th>Command &amp; Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><code>SADD key member1 [member2]</code><br/>Add the specified members to the set stored at key.</td>
</tr>
<tr>
<td>2</td>
<td><code>SCARD key</code></td>
</tr>
<tr>
<td>3</td>
<td><code>SDIFF key1 [key2]</code></td>
</tr>
<tr>
<td>4</td>
<td><code>SDIFFSTORE destination key1 [key2]</code></td>
</tr>
<tr>
<td>5</td>
<td><code>SINTER key1 [key2]</code></td>
</tr>
<tr>
<td>6</td>
<td><code>SINTERSTORE destination key1 [key2]</code></td>
</tr>
<tr>
<td>7</td>
<td><code>SISMEMBER key member</code></td>
</tr>
<tr>
<td>8</td>
<td><code>SMEMBERS key</code></td>
</tr>
<tr>
<td>9</td>
<td><code>SMOVE source destination member</code></td>
</tr>
<tr>
<td>10</td>
<td><code>SPOP key</code></td>
</tr>
<tr>
<td>11</td>
<td><code>SRANDMEMBER key [count]</code></td>
</tr>
<tr>
<td>12</td>
<td><code>SREM key member1 [member2]</code></td>
</tr>
<tr>
<td>13</td>
<td><code>SUNION key1 [key2]</code></td>
</tr>
<tr>
<td>14</td>
<td><code>SUNIONSTORE destination key1 [key2]</code></td>
</tr>
<tr>
<td>15</td>
<td><code>SSCAN key cursor [MATCH pattern] [COUNT count]</code></td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SCARD Command</title>
    <url>/2024/10/03/redis-set-scard-command/</url>
    <content><![CDATA[<p>The Redis <code>SCARD</code> command returns the set cardinality (number of elements) of the set stored at key.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SCARD</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SCARD key</span><br></pre></td></tr></table></figure>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(1)</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code><font style="color:rgb(9, 26, 35);">, </font><code>@set</code><font style="color:rgb(9, 26, 35);">, </font><code>@fast</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns <font style="color:rgb(9, 26, 35);">the cardinality (number of elements) of the set, or </font><code>0</code><font style="color:rgb(9, 26, 35);"> if the key does not exist.</font></p>
<h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD s_db redis</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD s_db hbase</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD s_db mysql</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SCARD s_db</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>If the key does not exist, it returns 0.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; EXISTS ss</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; SCARD ss</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>
<p>In the example above, we first check if the key(<code>ss</code>) exists. If it doesn’t, the <code>EXISTS</code> command returns 0. Next, we execute the <code>SCARD</code> command, which also returns 0.</p>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SINTER Command</title>
    <url>/2024/10/06/redis-set-sadd-command/</url>
    <content><![CDATA[<p>The Redis <code>SINTER</code> command returns the members of the set resulting from the intersection of all the given sets. Keys that do not exist are considered to be empty sets. With one of the keys being an empty set, the resulting set is also empty (since set intersection with an empty set always results in an empty set).</p>
<p>For example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key1 = &#123;a,b,c,d&#125;</span><br><span class="line">key2 = &#123;c&#125;</span><br><span class="line">key3 = &#123;a,c,e&#125;</span><br><span class="line">SINTER key1 key2 key3 = &#123;c&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SINTER</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SINTER key [key ...]</span><br></pre></td></tr></table></figure>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@set</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns a set with the members of the resulting set.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD key2 c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD key3 a c e</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SINTER key1 key2 key3</span><br><span class="line">1) &quot;c&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SINTERCARD Command</title>
    <url>/2024/10/08/redis-set-sintercard-command/</url>
    <content><![CDATA[<p>The Redis <code>SINTERCARD</code> command returns the cardinality of the set which would result from the intersection of all the given sets. Keys that do not exist are considered to be empty sets. With one of the keys being an empty set, the resulting set is also empty (since set intersection with an empty set always results in an empty set).</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SINTERCARD</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SINTERCARD numkeys key [key ...] [LIMIT limit]</span><br></pre></td></tr></table></figure>
<p>This command is similar to <code>SINTER</code>, but instead of returning the result set, it returns just the cardinality of the result. </p>
<p>By default, the command calculates the cardinality of the intersection of all given sets. When provided with the optional LIMIT argument (which defaults to 0 and means unlimited), if the intersection cardinality reaches limit partway through the computation, the algorithm will exit and yield limit as the cardinality. Such implementation ensures a significant speedup for queries where the limit is lower than the actual intersection cardinality.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version <strong>&gt;= 7.0.0</strong></p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@set</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns the number of elements in the resulting intersection.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD key2 a c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD key3 a c e</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SINTERCARD key1 key2 key3</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; SINTERCARD key1 key2 key3 LIMIT 1</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SMEMBERS Command</title>
    <url>/2024/10/10/redis-set-smembers-command/</url>
    <content><![CDATA[<p>The Redis <code>SMEMBERS</code> command returns all the members of a set. If the set does not exist, it is treated as an empty set.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SMEMBERS</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SMEMBERS key</span><br></pre></td></tr></table></figure>
<p>This command returns all the members of the set value stored at key. It has the same effect as running SINTER with one argument key.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N) where N is the set cardinality.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@set</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns a set with all the members of the set.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS key1</span><br><span class="line">1) &quot;c&quot;</span><br><span class="line">2) &quot;b&quot;</span><br><span class="line">3) &quot;a&quot;</span><br><span class="line">4) &quot;d&quot;</span><br><span class="line">127.0.0.1:6379&gt; SINTER key1</span><br><span class="line">1) &quot;c&quot;</span><br><span class="line">2) &quot;b&quot;</span><br><span class="line">3) &quot;a&quot;</span><br><span class="line">4) &quot;d&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SINTERSTORE Command</title>
    <url>/2024/10/07/redis-set-sinterstore-command/</url>
    <content><![CDATA[<p>The Redis <code>SINTERSTORE</code> command stores the intersection of the specified sets in a given destination set. If the destination set already exists, it will be overwritten.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SINTERSTORE</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SINTERSTORE destination key [key ...]</span><br></pre></td></tr></table></figure>
<p>This command is equal to <code>SINTER</code>, but instead of returning the resulting set, it is stored in destination.</p>
<p>If destination already exists, it is overwritten.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@set</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns the number of elements in the set that stores the intersection.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD key2 c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD key3 a c e</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SINTERSTORE dest_key key1 key2 key3</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS dest_key</span><br><span class="line">1) &quot;c&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SMOVE Command</title>
    <url>/2024/10/12/redis-set-sadd-command/</url>
    <content><![CDATA[<p>The Redis <code>SMOVE</code> command moves the specified member element from the source set to the destination set.</p>
<p><code>SMOVE</code> operation is an atomic.</p>
<p>If the source set does not exist or does not contain the specified member, the command does nothing and returns 0. Otherwise, the member is removed from the source set and added to the destination set.</p>
<p>If the destination set already contains the member, the <code>SMOVE</code> command simply removes the member from the source set without adding it to the destination set again.</p>
<p>If either the source or the destination is not a set, an error is returned.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SMOVE</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SMOVE source destination member</span><br></pre></td></tr></table></figure>
<p>Move member from the set at source to the set at destination.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(1)</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@set</code>, <code>@fast</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><ul>
<li><code>1</code> if the element is moved.</li>
<li><code>0</code> if the element is not a member of source and no operation was performed.</li>
</ul>
<h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><p>Moves the specified member element from the source set to the destination set:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD myset a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD anotherset e</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SMOVE myset anotherset b</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">1) &quot;c&quot;</span><br><span class="line">2) &quot;a&quot;</span><br><span class="line">3) &quot;d&quot;</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS anotherset</span><br><span class="line">1) &quot;e&quot;</span><br><span class="line">2) &quot;b&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>If the source set does not exist, no operation is performed and 0 is returned.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; EXISTS myset2</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; SMOVE myset2 anotherset a</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<h2 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a>Example 3</h2><p>If the source set does not contain the specified element, no operation is performed and 0 is returned.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD myset a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD anotherset e</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SMOVE myset anotherset p</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS anotherset</span><br><span class="line">1) &quot;e&quot;</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>
<h2 id="Example-4"><a href="#Example-4" class="headerlink" title="Example 4"></a>Example 4</h2><p>When the specified element already exists in the destination set, it is only removed from the source set.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD myset a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD anotherset a e</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; SMOVE myset anotherset a</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">1) &quot;c&quot;</span><br><span class="line">2) &quot;b&quot;</span><br><span class="line">3) &quot;d&quot;</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS anotherset</span><br><span class="line">1) &quot;e&quot;</span><br><span class="line">2) &quot;a&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
<h2 id="Example-5"><a href="#Example-5" class="headerlink" title="Example 5"></a>Example 5</h2><p>An error is returned if source or destination does not hold a set value.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SET dest johnson</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; TYPE dest</span><br><span class="line">string</span><br><span class="line">127.0.0.1:6379&gt; SMOVE myset dest e</span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SMISMEMBER Command</title>
    <url>/2024/10/11/redis-set-smismember-command/</url>
    <content><![CDATA[<p>The Redis <code>SMISMEMBER</code> command returns whether each member is a member of the set stored at key. For every member, </p>
<ul>
<li>1 is returned if the value is a member of the set, </li>
<li>or 0 if the element is not a member of the set or if key does not exist.</li>
</ul>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SMISMEMBER</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SMISMEMBER key member [member ...]</span><br></pre></td></tr></table></figure>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version <strong>&gt;= 6.2.0</strong></p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N) where N is the number of elements being checked for membership</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@set</code>, <code>@fast</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns a list representing the membership of the given elements, in the same order as they are requested.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SMISMEMBER key1 a e</span><br><span class="line">1) (integer) 1</span><br><span class="line">2) (integer) 0</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SISMEMBER Command</title>
    <url>/2024/10/09/redis-set-sismember-command/</url>
    <content><![CDATA[<p>The Redis <code>SISMEMBER</code> command checks if a given element is a member of the set.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SISMEMBER</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SISMEMBER key member</span><br></pre></td></tr></table></figure>
<p>It returns if <code>member</code> is a member of the set stored at <code>key</code>.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(1)</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@set</code>, <code>@fast</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><ul>
<li><code>0</code> if the element is not a member of the set, or when the key does not exist.</li>
<li><code>1</code> if the element is a member of the set.</li>
</ul>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SISMEMBER key1 a</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SISMEMBER key1 e</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SUNION Command</title>
    <url>/2024/10/17/redis-set-sunion-command/</url>
    <content><![CDATA[<p>The Redis <code>SUNION</code> command returns the union of the specified sets. Keys that do not exist are considered to be empty sets.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SUNION</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SUNION key [key ...]</span><br></pre></td></tr></table></figure>
<p>For example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key1 = &#123;a,b,c,d&#125;</span><br><span class="line">key2 = &#123;c&#125;</span><br><span class="line">key3 = &#123;a,c,e&#125;</span><br><span class="line">SUNION key1 key2 key3 = &#123;a,b,c,d,e&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N) where N is the total number of elements in all given sets.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@set</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns the members of the set resulting from the union of all the given sets.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD key2 c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD key3 a c e</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SUNION key1 key2 key3</span><br><span class="line">1) &quot;b&quot;</span><br><span class="line">2) &quot;d&quot;</span><br><span class="line">3) &quot;e&quot;</span><br><span class="line">4) &quot;c&quot;</span><br><span class="line">5) &quot;a&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SREM Command</title>
    <url>/2024/10/15/redis-set-srem-command/</url>
    <content><![CDATA[<p>The Redis <code>SREM</code> command removes one or more members from a set. Non-existent members are ignored.</p>
<p>An error is returned if the key is not of set type.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SREM</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SREM key member [member ...]</span><br></pre></td></tr></table></figure>
<p>In Redis version 2.4 and earlier, <code>SREM</code> only accepted a single member value.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N) where N is the number of members to be removed.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@set</code>, <code>@fast</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns the number of members that were removed from the set, not including non existing members.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD myset a b c d e</span><br><span class="line">(integer) 5</span><br><span class="line">127.0.0.1:6379&gt; SREM myset b</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SREM myset f</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">1) &quot;d&quot;</span><br><span class="line">2) &quot;c&quot;</span><br><span class="line">3) &quot;e&quot;</span><br><span class="line">4) &quot;a&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SSCAN Command</title>
    <url>/2024/10/16/redis-set-sscan-command/</url>
    <content><![CDATA[<p>The Redis <code>SSCAN</code> command is used to iterate over the elements of a set. It is based on the <code>SCAN</code> command.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SSCAN</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SSCAN key cursor [MATCH pattern] [COUNT count]</span><br></pre></td></tr></table></figure>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 2.8.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(1) for every call. </p>
<p>O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@set</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns an array. specifically, an array with two elements:</p>
<ul>
<li>The first element is a Bulk string reply that represents an unsigned 64-bit number, the cursor.</li>
<li>The second element is an Array reply with the names of scanned members.</li>
</ul>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD myset Johnson Jack Tim Paul</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SSCAN myset 0 MATCH J*</span><br><span class="line">1) &quot;0&quot;</span><br><span class="line">2) 1) &quot;Johnson&quot;</span><br><span class="line">   2) &quot;Jack&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SPOP Command</title>
    <url>/2024/10/13/redis-set-sadd-command/</url>
    <content><![CDATA[<p>Removes and returns one or more random members from the set value store at key.</p>
<p>This operation is similar to <code>SRANDMEMBER</code>, that returns one or more random elements from a set but does not remove it.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SPOP</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SPOP key [count]</span><br></pre></td></tr></table></figure>
<p>By default, the command pops a single member from the set. When provided with the optional count argument, the reply will consist of up to count members, depending on the set’s cardinality.</p>
<p><em><strong>Note</strong></em>: the <code>count</code> argument is available in version 3.2.0 and later.</p>
<blockquote>
<p>Distribution of returned elements</p>
<p>Note that this command is not suitable when you need a guaranteed uniform distribution of the returned elements. For more information about the algorithms used for SPOP, look up both the Knuth sampling and Floyd sampling algorithms.</p>
</blockquote>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>Without the count argument O(1), otherwise O(N) where N is the value of the passed count.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@set</code>, <code>@fast</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns the removed member(s). Returns <code>nil</code> if the set does not exist or is empty.</p>
<h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD myset a b c d e f g</span><br><span class="line">(integer) 7</span><br><span class="line">127.0.0.1:6379&gt; SPOP myset</span><br><span class="line">&quot;a&quot;</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">1) &quot;g&quot;</span><br><span class="line">2) &quot;b&quot;</span><br><span class="line">3) &quot;d&quot;</span><br><span class="line">4) &quot;f&quot;</span><br><span class="line">5) &quot;c&quot;</span><br><span class="line">6) &quot;e&quot;</span><br><span class="line">127.0.0.1:6379&gt; SPOP myset 3</span><br><span class="line">1) &quot;g&quot;</span><br><span class="line">2) &quot;f&quot;</span><br><span class="line">3) &quot;b&quot;</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">1) &quot;d&quot;</span><br><span class="line">2) &quot;c&quot;</span><br><span class="line">3) &quot;e&quot;</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>
<h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>Returns <code>nil</code> if the set does not exist:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SPOP ss</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>
<p>Returns <code>nil</code> if the set is empty:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; SPOP myset</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Bitmaps</title>
    <url>/2024/10/19/redis-bitmaps/</url>
    <content><![CDATA[<p>In Redis, a bitmap is a data structure that represents a sequence of bits (0s and 1s). Each bit in the bitmap can be either on (1) or off (0), allowing it to represent binary data in a compact form. This is particularly useful when you need to handle large sets of boolean data, as bitmaps allow you to store information in a very space-efficient way.</p>
<p>For example, if you have a system tracking whether users have completed a daily task, a bitmap can efficiently store whether each user has completed the task for each day. Bitmaps are ideal for such cases because they reduce memory usage compared to other data structures like strings or hashes.</p>
<h2 id="Basic-Commands"><a href="#Basic-Commands" class="headerlink" title="Basic Commands"></a>Basic Commands</h2><font style="color:rgb(38, 38, 38);">Here's a list of basic commands:</font>

<div class="table-container">
<table>
<thead>
<tr>
<th><font style="color:rgb(38, 38, 38);">Command</font></th>
<th><font style="color:rgb(38, 38, 38);"> Description</font></th>
</tr>
</thead>
<tbody>
<tr>
<td>SETBIT</td>
<td>Set a specific bit in the bitmap.</td>
</tr>
<tr>
<td>GETBIT</td>
<td>Retrieve the value of a specific bit.</td>
</tr>
<tr>
<td>BITCOUNT</td>
<td>Count the number of bits set to 1 in a range.</td>
</tr>
<tr>
<td>BITOP</td>
<td>Perform bitwise operations (AND, OR, XOR, NOT) on bitmaps.</td>
</tr>
<tr>
<td>BITPOS</td>
<td>Find the position of the first bit set to a given value (0 or 1).</td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<font style="color:rgb(38, 38, 38);">See the </font>[complete list of bitmap commands](https://redis.io/docs/latest/commands/?group=bitmap)<font style="color:rgb(38, 38, 38);">.  
</font>

<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a><font style="color:rgb(38, 38, 38);">Example</font></h2><h3 id="User-Activity-Tracking"><a href="#User-Activity-Tracking" class="headerlink" title="User Activity Tracking"></a>User Activity Tracking</h3><p>Redis bitmaps are often used to track daily activity, like logging in or completing a task. Each user is assigned a unique offset, and the bit is set to 1 if the user was active on a given day. By using bitmaps, it’s possible to represent the activity of millions of users efficiently.</p>
<h3 id="Feature-Flags"><a href="#Feature-Flags" class="headerlink" title="Feature Flags"></a>Feature Flags</h3><p>You can also use bitmaps to enable or disable feature flags for users. By setting or clearing specific bits, you can control which users have access to certain features, making this an efficient alternative to storing the data in a database.</p>
<h3 id="A-B-Testing-and-Experimentation"><a href="#A-B-Testing-and-Experimentation" class="headerlink" title="A/B Testing and Experimentation"></a>A/B Testing and Experimentation</h3><p>In A/B testing, bitmaps can be used to represent users assigned to different experimental groups. Each group is a separate bitmap, and Redis commands make it easy to check or update which users are in each group.  </p>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Set SUNIONSTORE Command</title>
    <url>/2024/10/18/redis-set-sunionstore-command/</url>
    <content><![CDATA[<p>The Redis <code>SUNIONSTORE</code> command stores the union of the given sets in the specified destination set. If the destination set already exists, it will be overwritten.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>SUNIONSTORE</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SUNIONSTORE destination key [key ...]</span><br></pre></td></tr></table></figure>
<p>This command is equal to <code>SUNION</code>, but instead of returning the resulting set, it is stored in destination.</p>
<p>If destination already exists, it is overwritten.</p>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 1.0.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N) where N is the total number of elements in all given sets.</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@write</code>, <code>@set</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns the number of elements in the resulting set.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD key1 a b c d</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; SADD key2 c</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD key3 a c e</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SUNIONSTORE key key1 key2 key3</span><br><span class="line">(integer) 5</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS key</span><br><span class="line">1) &quot;b&quot;</span><br><span class="line">2) &quot;d&quot;</span><br><span class="line">3) &quot;e&quot;</span><br><span class="line">4) &quot;c&quot;</span><br><span class="line">5) &quot;a&quot;</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis Bitmap BITCOUNT Command</title>
    <url>/2024/10/20/redis-bitmap-bitcount-command/</url>
    <content><![CDATA[<p>The Redis <code>BITCOUNT</code> command count the number of set bits (population counting) in a string.</p>
<h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>The basic syntax of the <code>BITCOUNT</code> command is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BITCOUNT key [start end [BYTE | BIT]]</span><br></pre></td></tr></table></figure>
<p>By default all the bytes contained in the string are examined. It is possible to specify the counting operation only in an interval passing the additional arguments start and end.</p>
<p>Like for the <code>GETRANGE</code> command start and end can contain negative values in order to index bytes starting from the end of the string, where -1 is the last byte, -2 is the penultimate, and so forth.</p>
<p>Non-existent keys are treated as empty strings, so the command will return zero.</p>
<p>By default, the additional arguments start and end specify a byte index. We can use an additional argument BIT to specify a bit index. So 0 is the first bit, 1 is the second bit, and so forth. For negative values, -1 is the last bit, -2 is the penultimate, and so forth.</p>
<blockquote>
<p><em><strong>Note</strong></em>: Starting with Redis version 7.0.0: Added the BYTE|BIT option.</p>
</blockquote>
<h2 id="Available-Since"><a href="#Available-Since" class="headerlink" title="Available Since"></a>Available Since</h2><p>Redis version &gt;= 2.6.0</p>
<h2 id="Time-Complexity"><a href="#Time-Complexity" class="headerlink" title="Time Complexity"></a>Time Complexity</h2><p>O(N)</p>
<h2 id="ACL-Categories"><a href="#ACL-Categories" class="headerlink" title="ACL Categories"></a>ACL Categories</h2><p><code>@read</code>, <code>@bitmap</code>, <code>@slow</code></p>
<h2 id="Return-Value"><a href="#Return-Value" class="headerlink" title="Return Value"></a>Return Value</h2><p>Returns the number of bits set to 1.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SET mykey JOHNSONLIN</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; BITCOUNT mykey</span><br><span class="line">(integer) 37</span><br><span class="line">127.0.0.1:6379&gt; BITCOUNT mykey 0 0</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; BITCOUNT mykey 1 1</span><br><span class="line">(integer) 5</span><br><span class="line">127.0.0.1:6379&gt; BITCOUNT mykey 1 1 BYTE</span><br><span class="line">(integer) 5</span><br><span class="line">127.0.0.1:6379&gt; BITCOUNT mykey 1 1 BIT</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; BITCOUNT mykey 5 40 BIT</span><br><span class="line">(integer) 16</span><br><span class="line">127.0.0.1:6379&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Standard ASCII Table: A Complete Reference of 7-bit ASCII</title>
    <url>/2024/11/29//wiki/a-complete-reference-of-7-bit-ascii/</url>
    <content><![CDATA[<p>Note: Refer to the ASCII table for character encoding, ASCII codes, and comparisons. Use <code>Ctrl+F</code> to quickly find the decimal value or escape character for any character you’re looking for.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>DEC</th>
<th>OCT</th>
<th>HEX</th>
<th>BIN</th>
<th>Symbol</th>
<th>HTML Number</th>
<th>HTML Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.ascii-code.com/0">0</a></td>
<td>000</td>
<td>00</td>
<td>00000000</td>
<td>␀</td>
<td><code>&amp;#00</code></td>
<td></td>
<td>Null character</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/1">1</a></td>
<td>001</td>
<td>01</td>
<td>00000001</td>
<td>␁</td>
<td><code>&amp;#01</code></td>
<td></td>
<td>Start of Heading</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/2">2</a></td>
<td>002</td>
<td>02</td>
<td>00000010</td>
<td>␂</td>
<td><code>&amp;#02</code></td>
<td></td>
<td>Start of Text</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/3">3</a></td>
<td>003</td>
<td>03</td>
<td>00000011</td>
<td>␃</td>
<td><code>&amp;#03</code></td>
<td></td>
<td>End of Text</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/4">4</a></td>
<td>004</td>
<td>04</td>
<td>00000100</td>
<td>␄</td>
<td><code>&amp;#04</code></td>
<td></td>
<td>End of Transmission</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/5">5</a></td>
<td>005</td>
<td>05</td>
<td>00000101</td>
<td>␅</td>
<td><code>&amp;#05</code></td>
<td></td>
<td>Enquiry</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/6">6</a></td>
<td>006</td>
<td>06</td>
<td>00000110</td>
<td>␆</td>
<td><code>&amp;#06</code></td>
<td></td>
<td>Acknowledge</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/7">7</a></td>
<td>007</td>
<td>07</td>
<td>00000111</td>
<td>␇</td>
<td><code>&amp;#07</code></td>
<td></td>
<td>Bell, Alert</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/8">8</a></td>
<td>010</td>
<td>08</td>
<td>00001000</td>
<td>␈</td>
<td><code>&amp;#08</code></td>
<td></td>
<td>Backspace</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/9">9</a></td>
<td>011</td>
<td>09</td>
<td>00001001</td>
<td>␉</td>
<td><code>&amp;#09</code></td>
<td></td>
<td>Horizontal Tab</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/10">10</a></td>
<td>012</td>
<td>0A</td>
<td>00001010</td>
<td>␊</td>
<td><code>&amp;#10</code></td>
<td></td>
<td>Line Feed</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/11">11</a></td>
<td>013</td>
<td>0B</td>
<td>00001011</td>
<td>␋</td>
<td><code>&amp;#11</code></td>
<td></td>
<td>Vertical Tabulation</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/12">12</a></td>
<td>014</td>
<td>0C</td>
<td>00001100</td>
<td>␌</td>
<td><code>&amp;#12</code></td>
<td></td>
<td>Form Feed</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/13">13</a></td>
<td>015</td>
<td>0D</td>
<td>00001101</td>
<td>␍</td>
<td><code>&amp;#13</code></td>
<td></td>
<td>Carriage Return</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/14">14</a></td>
<td>016</td>
<td>0E</td>
<td>00001110</td>
<td>␎</td>
<td><code>&amp;#14</code></td>
<td></td>
<td>Shift Out</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/15">15</a></td>
<td>017</td>
<td>0F</td>
<td>00001111</td>
<td>␏</td>
<td><code>&amp;#15</code></td>
<td></td>
<td>Shift In</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/16">16</a></td>
<td>020</td>
<td>10</td>
<td>00010000</td>
<td>␐</td>
<td><code>&amp;#16</code></td>
<td></td>
<td>Data Link Escape</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/17">17</a></td>
<td>021</td>
<td>11</td>
<td>00010001</td>
<td>␑</td>
<td><code>&amp;#17</code></td>
<td></td>
<td>Device Control One (XON)</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/18">18</a></td>
<td>022</td>
<td>12</td>
<td>00010010</td>
<td>␒</td>
<td><code>&amp;#18</code></td>
<td></td>
<td>Device Control Two</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/19">19</a></td>
<td>023</td>
<td>13</td>
<td>00010011</td>
<td>␓</td>
<td><code>&amp;#19</code></td>
<td></td>
<td>Device Control Three (XOFF)</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/20">20</a></td>
<td>024</td>
<td>14</td>
<td>00010100</td>
<td>␔</td>
<td><code>&amp;#20</code></td>
<td></td>
<td>Device Control Four</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/21">21</a></td>
<td>025</td>
<td>15</td>
<td>00010101</td>
<td>␕</td>
<td><code>&amp;#21</code></td>
<td></td>
<td>Negative Acknowledge</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/22">22</a></td>
<td>026</td>
<td>16</td>
<td>00010110</td>
<td>␖</td>
<td><code>&amp;#22</code></td>
<td></td>
<td>Synchronous Idle</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/23">23</a></td>
<td>027</td>
<td>17</td>
<td>00010111</td>
<td>␗</td>
<td><code>&amp;#23</code></td>
<td></td>
<td>End of Transmission Block</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/24">24</a></td>
<td>030</td>
<td>18</td>
<td>00011000</td>
<td>␘</td>
<td><code>&amp;#24</code></td>
<td></td>
<td>Cancel</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/25">25</a></td>
<td>031</td>
<td>19</td>
<td>00011001</td>
<td>␙</td>
<td><code>&amp;#25</code></td>
<td></td>
<td>End of medium</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/26">26</a></td>
<td>032</td>
<td>1A</td>
<td>00011010</td>
<td>␚</td>
<td><code>&amp;#26</code></td>
<td></td>
<td>Substitute</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/27">27</a></td>
<td>033</td>
<td>1B</td>
<td>00011011</td>
<td>␛</td>
<td><code>&amp;#27</code></td>
<td></td>
<td>Escape</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/28">28</a></td>
<td>034</td>
<td>1C</td>
<td>00011100</td>
<td>␜</td>
<td><code>&amp;#28</code></td>
<td></td>
<td>File Separator</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/29">29</a></td>
<td>035</td>
<td>1D</td>
<td>00011101</td>
<td>␝</td>
<td><code>&amp;#29</code></td>
<td></td>
<td>Group Separator</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/30">30</a></td>
<td>036</td>
<td>1E</td>
<td>00011110</td>
<td>␞</td>
<td><code>&amp;#30</code></td>
<td></td>
<td>Record Separator</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/31">31</a></td>
<td>037</td>
<td>1F</td>
<td>00011111</td>
<td>␟</td>
<td><code>&amp;#31</code></td>
<td></td>
<td>Unit Separator</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/32">32</a></td>
<td>040</td>
<td>20</td>
<td>00100000</td>
<td>␠</td>
<td><code>&amp;#32</code></td>
<td></td>
<td>Space</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/33">33</a></td>
<td>041</td>
<td>21</td>
<td>00100001</td>
<td>!</td>
<td><code>&amp;#33</code></td>
<td><code>&amp;excl</code></td>
<td>Exclamation mark</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/34">34</a></td>
<td>042</td>
<td>22</td>
<td>00100010</td>
<td>“</td>
<td><code>&amp;#34</code></td>
<td><code>&amp;quot</code></td>
<td>Double quotes (or speech marks)</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/35">35</a></td>
<td>043</td>
<td>23</td>
<td>00100011</td>
<td>#</td>
<td><code>&amp;#35</code></td>
<td><code>&amp;num</code></td>
<td>Number sign</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/36">36</a></td>
<td>044</td>
<td>24</td>
<td>00100100</td>
<td>$</td>
<td><code>&amp;#36</code></td>
<td><code>&amp;dollar</code></td>
<td>Dollar</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/37">37</a></td>
<td>045</td>
<td>25</td>
<td>00100101</td>
<td>%</td>
<td><code>&amp;#37</code></td>
<td><code>&amp;percnt</code></td>
<td>Per cent sign</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/38">38</a></td>
<td>046</td>
<td>26</td>
<td>00100110</td>
<td>&amp;</td>
<td><code>&amp;#38</code></td>
<td><code>&amp;amp</code></td>
<td>Ampersand</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/39">39</a></td>
<td>047</td>
<td>27</td>
<td>00100111</td>
<td>‘</td>
<td><code>&amp;#39</code></td>
<td><code>&amp;apos</code></td>
<td>Single quote</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/40">40</a></td>
<td>050</td>
<td>28</td>
<td>00101000</td>
<td>(</td>
<td><code>&amp;#40</code></td>
<td><code>&amp;lparen</code></td>
<td>Open parenthesis (or open bracket)</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/41">41</a></td>
<td>051</td>
<td>29</td>
<td>00101001</td>
<td>)</td>
<td><code>&amp;#41</code></td>
<td><code>&amp;rparen</code></td>
<td>Close parenthesis (or close bracket)</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/42">42</a></td>
<td>052</td>
<td>2A</td>
<td>00101010</td>
<td>*</td>
<td><code>&amp;#42</code></td>
<td><code>&amp;ast</code></td>
<td>Asterisk</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/43">43</a></td>
<td>053</td>
<td>2B</td>
<td>00101011</td>
<td>+</td>
<td><code>&amp;#43</code></td>
<td><code>&amp;plus</code></td>
<td>Plus</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/44">44</a></td>
<td>054</td>
<td>2C</td>
<td>00101100</td>
<td>,</td>
<td><code>&amp;#44</code></td>
<td><code>&amp;comma</code></td>
<td>Comma</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/45">45</a></td>
<td>055</td>
<td>2D</td>
<td>00101101</td>
<td>-</td>
<td><code>&amp;#45</code></td>
<td></td>
<td>Hyphen-minus</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/46">46</a></td>
<td>056</td>
<td>2E</td>
<td>00101110</td>
<td>.</td>
<td><code>&amp;#46</code></td>
<td><code>&amp;period</code></td>
<td>Period, dot or full stop</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/47">47</a></td>
<td>057</td>
<td>2F</td>
<td>00101111</td>
<td>/</td>
<td><code>&amp;#47</code></td>
<td><code>&amp;sol</code></td>
<td>Slash or divide</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/48">48</a></td>
<td>060</td>
<td>30</td>
<td>00110000</td>
<td>0</td>
<td><code>&amp;#48</code></td>
<td></td>
<td>Zero</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/49">49</a></td>
<td>061</td>
<td>31</td>
<td>00110001</td>
<td>1</td>
<td><code>&amp;#49</code></td>
<td></td>
<td>One</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/50">50</a></td>
<td>062</td>
<td>32</td>
<td>00110010</td>
<td>2</td>
<td><code>&amp;#50</code></td>
<td></td>
<td>Two</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/51">51</a></td>
<td>063</td>
<td>33</td>
<td>00110011</td>
<td>3</td>
<td><code>&amp;#51</code></td>
<td></td>
<td>Three</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/52">52</a></td>
<td>064</td>
<td>34</td>
<td>00110100</td>
<td>4</td>
<td><code>&amp;#52</code></td>
<td></td>
<td>Four</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/53">53</a></td>
<td>065</td>
<td>35</td>
<td>00110101</td>
<td>5</td>
<td><code>&amp;#53</code></td>
<td></td>
<td>Five</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/54">54</a></td>
<td>066</td>
<td>36</td>
<td>00110110</td>
<td>6</td>
<td><code>&amp;#54</code></td>
<td></td>
<td>Six</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/55">55</a></td>
<td>067</td>
<td>37</td>
<td>00110111</td>
<td>7</td>
<td><code>&amp;#55</code></td>
<td></td>
<td>Seven</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/56">56</a></td>
<td>070</td>
<td>38</td>
<td>00111000</td>
<td>8</td>
<td><code>&amp;#56</code></td>
<td></td>
<td>Eight</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/57">57</a></td>
<td>071</td>
<td>39</td>
<td>00111001</td>
<td>9</td>
<td><code>&amp;#57</code></td>
<td></td>
<td>Nine</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/58">58</a></td>
<td>072</td>
<td>3A</td>
<td>00111010</td>
<td>:</td>
<td><code>&amp;#58</code></td>
<td><code>&amp;colon</code></td>
<td>Colon</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/59">59</a></td>
<td>073</td>
<td>3B</td>
<td>00111011</td>
<td>`</td>
<td><code>&amp;#59</code></td>
<td><code>&amp;semi</code></td>
<td>Semicolon</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/60">60</a></td>
<td>074</td>
<td>3C</td>
<td>00111100</td>
<td>&lt;</td>
<td><code>&amp;#60</code></td>
<td><code>&amp;lt</code></td>
<td>Less than (or open angled bracket)</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/61">61</a></td>
<td>075</td>
<td>3D</td>
<td>00111101</td>
<td>=</td>
<td><code>&amp;#61</code></td>
<td><code>&amp;equals</code></td>
<td>Equals</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/62">62</a></td>
<td>076</td>
<td>3E</td>
<td>00111110</td>
<td>&gt;</td>
<td><code>&amp;#62</code></td>
<td><code>&amp;gt</code></td>
<td>Greater than (or close angled bracket)</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/63">63</a></td>
<td>077</td>
<td>3F</td>
<td>00111111</td>
<td>?</td>
<td><code>&amp;#63</code></td>
<td><code>&amp;quest</code></td>
<td>Question mark</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/64">64</a></td>
<td>100</td>
<td>40</td>
<td>01000000</td>
<td>@</td>
<td><code>&amp;#64</code></td>
<td><code>&amp;commat</code></td>
<td>At sign</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/65">65</a></td>
<td>101</td>
<td>41</td>
<td>01000001</td>
<td>A</td>
<td><code>&amp;#65</code></td>
<td></td>
<td>Uppercase A</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/66">66</a></td>
<td>102</td>
<td>42</td>
<td>01000010</td>
<td>B</td>
<td><code>&amp;#66</code></td>
<td></td>
<td>Uppercase B</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/67">67</a></td>
<td>103</td>
<td>43</td>
<td>01000011</td>
<td>C</td>
<td><code>&amp;#67</code></td>
<td></td>
<td>Uppercase C</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/68">68</a></td>
<td>104</td>
<td>44</td>
<td>01000100</td>
<td>D</td>
<td><code>&amp;#68</code></td>
<td></td>
<td>Uppercase D</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/69">69</a></td>
<td>105</td>
<td>45</td>
<td>01000101</td>
<td>E</td>
<td><code>&amp;#69</code></td>
<td></td>
<td>Uppercase E</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/70">70</a></td>
<td>106</td>
<td>46</td>
<td>01000110</td>
<td>F</td>
<td><code>&amp;#70</code></td>
<td></td>
<td>Uppercase F</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/71">71</a></td>
<td>107</td>
<td>47</td>
<td>01000111</td>
<td>G</td>
<td><code>&amp;#71</code></td>
<td></td>
<td>Uppercase G</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/72">72</a></td>
<td>110</td>
<td>48</td>
<td>01001000</td>
<td>H</td>
<td><code>&amp;#72</code></td>
<td></td>
<td>Uppercase H</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/73">73</a></td>
<td>111</td>
<td>49</td>
<td>01001001</td>
<td>I</td>
<td><code>&amp;#73</code></td>
<td></td>
<td>Uppercase I</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/74">74</a></td>
<td>112</td>
<td>4A</td>
<td>01001010</td>
<td>J</td>
<td><code>&amp;#74</code></td>
<td></td>
<td>Uppercase J</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/75">75</a></td>
<td>113</td>
<td>4B</td>
<td>01001011</td>
<td>K</td>
<td><code>&amp;#75</code></td>
<td></td>
<td>Uppercase K</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/76">76</a></td>
<td>114</td>
<td>4C</td>
<td>01001100</td>
<td>L</td>
<td><code>&amp;#76</code></td>
<td></td>
<td>Uppercase L</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/77">77</a></td>
<td>115</td>
<td>4D</td>
<td>01001101</td>
<td>M</td>
<td><code>&amp;#77</code></td>
<td></td>
<td>Uppercase M</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/78">78</a></td>
<td>116</td>
<td>4E</td>
<td>01001110</td>
<td>N</td>
<td><code>&amp;#78</code></td>
<td></td>
<td>Uppercase N</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/79">79</a></td>
<td>117</td>
<td>4F</td>
<td>01001111</td>
<td>O</td>
<td><code>&amp;#79</code></td>
<td></td>
<td>Uppercase O</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/80">80</a></td>
<td>120</td>
<td>50</td>
<td>01010000</td>
<td>P</td>
<td><code>&amp;#80</code></td>
<td></td>
<td>Uppercase P</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/81">81</a></td>
<td>121</td>
<td>51</td>
<td>01010001</td>
<td>Q</td>
<td><code>&amp;#81</code></td>
<td></td>
<td>Uppercase Q</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/82">82</a></td>
<td>122</td>
<td>52</td>
<td>01010010</td>
<td>R</td>
<td><code>&amp;#82</code></td>
<td></td>
<td>Uppercase R</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/83">83</a></td>
<td>123</td>
<td>53</td>
<td>01010011</td>
<td>S</td>
<td><code>&amp;#83</code></td>
<td></td>
<td>Uppercase S</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/84">84</a></td>
<td>124</td>
<td>54</td>
<td>01010100</td>
<td>T</td>
<td><code>&amp;#84</code></td>
<td></td>
<td>Uppercase T</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/85">85</a></td>
<td>125</td>
<td>55</td>
<td>01010101</td>
<td>U</td>
<td><code>&amp;#85</code></td>
<td></td>
<td>Uppercase U</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/86">86</a></td>
<td>126</td>
<td>56</td>
<td>01010110</td>
<td>V</td>
<td><code>&amp;#86</code></td>
<td></td>
<td>Uppercase V</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/87">87</a></td>
<td>127</td>
<td>57</td>
<td>01010111</td>
<td>W</td>
<td><code>&amp;#87</code></td>
<td></td>
<td>Uppercase W</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/88">88</a></td>
<td>130</td>
<td>58</td>
<td>01011000</td>
<td>X</td>
<td><code>&amp;#88</code></td>
<td></td>
<td>Uppercase X</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/89">89</a></td>
<td>131</td>
<td>59</td>
<td>01011001</td>
<td>Y</td>
<td><code>&amp;#89</code></td>
<td></td>
<td>Uppercase Y</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/90">90</a></td>
<td>132</td>
<td>5A</td>
<td>01011010</td>
<td>Z</td>
<td><code>&amp;#90</code></td>
<td></td>
<td>Uppercase Z</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/91">91</a></td>
<td>133</td>
<td>5B</td>
<td>01011011</td>
<td>[</td>
<td><code>&amp;#91</code></td>
<td><code>&amp;lsqb</code></td>
<td>Opening bracket</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/92">92</a></td>
<td>134</td>
<td>5C</td>
<td>01011100</td>
<td>`</td>
<td><code>&amp;#92</code></td>
<td><code>&amp;bsol</code></td>
<td>Backslash</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/93">93</a></td>
<td>135</td>
<td>5D</td>
<td>01011101</td>
<td>]</td>
<td><code>&amp;#93</code></td>
<td><code>&amp;rsqb</code></td>
<td>Closing bracket</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/94">94</a></td>
<td>136</td>
<td>5E</td>
<td>01011110</td>
<td>^</td>
<td><code>&amp;#94</code></td>
<td><code>&amp;Hat</code></td>
<td>Caret - circumflex</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/95">95</a></td>
<td>137</td>
<td>5F</td>
<td>01011111</td>
<td>_</td>
<td><code>&amp;#95</code></td>
<td><code>&amp;lowbar</code></td>
<td>Underscore</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/96">96</a></td>
<td>140</td>
<td>60</td>
<td>01100000</td>
<td>`</td>
<td><code>&amp;#96</code></td>
<td><code>&amp;grave</code></td>
<td>Grave accent</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/97">97</a></td>
<td>141</td>
<td>61</td>
<td>01100001</td>
<td>a</td>
<td><code>&amp;#97</code></td>
<td></td>
<td>Lowercase a</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/98">98</a></td>
<td>142</td>
<td>62</td>
<td>01100010</td>
<td>b</td>
<td><code>&amp;#98</code></td>
<td></td>
<td>Lowercase b</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/99">99</a></td>
<td>143</td>
<td>63</td>
<td>01100011</td>
<td>c</td>
<td><code>&amp;#99</code></td>
<td></td>
<td>Lowercase c</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/100">100</a></td>
<td>144</td>
<td>64</td>
<td>01100100</td>
<td>d</td>
<td><code>&amp;#100</code></td>
<td></td>
<td>Lowercase d</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/101">101</a></td>
<td>145</td>
<td>65</td>
<td>01100101</td>
<td>e</td>
<td><code>&amp;#101</code></td>
<td></td>
<td>Lowercase e</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/102">102</a></td>
<td>146</td>
<td>66</td>
<td>01100110</td>
<td>f</td>
<td><code>&amp;#102</code></td>
<td></td>
<td>Lowercase f</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/103">103</a></td>
<td>147</td>
<td>67</td>
<td>01100111</td>
<td>g</td>
<td><code>&amp;#103</code></td>
<td></td>
<td>Lowercase g</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/104">104</a></td>
<td>150</td>
<td>68</td>
<td>01101000</td>
<td>h</td>
<td><code>&amp;#104</code></td>
<td></td>
<td>Lowercase h</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/105">105</a></td>
<td>151</td>
<td>69</td>
<td>01101001</td>
<td>i</td>
<td><code>&amp;#105</code></td>
<td></td>
<td>Lowercase i</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/106">106</a></td>
<td>152</td>
<td>6A</td>
<td>01101010</td>
<td>j</td>
<td><code>&amp;#106</code></td>
<td></td>
<td>Lowercase j</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/107">107</a></td>
<td>153</td>
<td>6B</td>
<td>01101011</td>
<td>k</td>
<td><code>&amp;#107</code></td>
<td></td>
<td>Lowercase k</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/108">108</a></td>
<td>154</td>
<td>6C</td>
<td>01101100</td>
<td>l</td>
<td><code>&amp;#108</code></td>
<td></td>
<td>Lowercase l</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/109">109</a></td>
<td>155</td>
<td>6D</td>
<td>01101101</td>
<td>m</td>
<td><code>&amp;#109</code></td>
<td></td>
<td>Lowercase m</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/110">110</a></td>
<td>156</td>
<td>6E</td>
<td>01101110</td>
<td>n</td>
<td><code>&amp;#110</code></td>
<td></td>
<td>Lowercase n</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/111">111</a></td>
<td>157</td>
<td>6F</td>
<td>01101111</td>
<td>o</td>
<td><code>&amp;#111</code></td>
<td></td>
<td>Lowercase o</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/112">112</a></td>
<td>160</td>
<td>70</td>
<td>01110000</td>
<td>p</td>
<td><code>&amp;#112</code></td>
<td></td>
<td>Lowercase p</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/113">113</a></td>
<td>161</td>
<td>71</td>
<td>01110001</td>
<td>q</td>
<td><code>&amp;#113</code></td>
<td></td>
<td>Lowercase q</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/114">114</a></td>
<td>162</td>
<td>72</td>
<td>01110010</td>
<td>r</td>
<td><code>&amp;#114</code></td>
<td></td>
<td>Lowercase r</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/115">115</a></td>
<td>163</td>
<td>73</td>
<td>01110011</td>
<td>s</td>
<td><code>&amp;#115</code></td>
<td></td>
<td>Lowercase s</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/116">116</a></td>
<td>164</td>
<td>74</td>
<td>01110100</td>
<td>t</td>
<td><code>&amp;#116</code></td>
<td></td>
<td>Lowercase t</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/117">117</a></td>
<td>165</td>
<td>75</td>
<td>01110101</td>
<td>u</td>
<td><code>&amp;#117</code></td>
<td></td>
<td>Lowercase u</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/118">118</a></td>
<td>166</td>
<td>76</td>
<td>01110110</td>
<td>v</td>
<td><code>&amp;#118</code></td>
<td></td>
<td>Lowercase v</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/119">119</a></td>
<td>167</td>
<td>77</td>
<td>01110111</td>
<td>w</td>
<td><code>&amp;#119</code></td>
<td></td>
<td>Lowercase w</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/120">120</a></td>
<td>170</td>
<td>78</td>
<td>01111000</td>
<td>x</td>
<td><code>&amp;#120</code></td>
<td></td>
<td>Lowercase x</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/121">121</a></td>
<td>171</td>
<td>79</td>
<td>01111001</td>
<td>y</td>
<td><code>&amp;#121</code></td>
<td></td>
<td>Lowercase y</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/122">122</a></td>
<td>172</td>
<td>7A</td>
<td>01111010</td>
<td>z</td>
<td><code>&amp;#122</code></td>
<td></td>
<td>Lowercase z</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/123">123</a></td>
<td>173</td>
<td>7B</td>
<td>01111011</td>
<td>{</td>
<td><code>&amp;#123</code></td>
<td><code>&amp;lcub</code></td>
<td>Opening brace</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/124">124</a></td>
<td>174</td>
<td>7C</td>
<td>01111100</td>
<td></td>
<td></td>
<td><code>&amp;#124</code></td>
<td><code>&amp;verbar</code></td>
<td>Vertical bar</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/125">125</a></td>
<td>175</td>
<td>7D</td>
<td>01111101</td>
<td>}</td>
<td><code>&amp;#125</code></td>
<td><code>&amp;rcub</code></td>
<td>Closing brace</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/126">126</a></td>
<td>176</td>
<td>7E</td>
<td>01111110</td>
<td>~</td>
<td><code>&amp;#126</code></td>
<td><code>&amp;tilde</code></td>
<td>Equivalency sign - tilde</td>
</tr>
<tr>
<td><a href="https://www.ascii-code.com/127">127</a></td>
<td>177</td>
<td>7F</td>
<td>01111111</td>
<td>␡</td>
<td><code>&amp;#127</code></td>
<td></td>
<td>Delete</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Install Redis on Ubuntu with Snap</title>
    <url>/2024/11/28/how-to-install-redis-on-ubuntu-with-snap/</url>
    <content><![CDATA[<p>Redis is a powerful, in-memory data structure store used as a database, cache, and message broker. It’s often used in web applications for high-performance caching and session management. Installing Redis on Ubuntu is easy and quick, especially using Snap, which simplifies installation and management. In this article, we’ll walk you through the steps to install Redis on Ubuntu using Snap.</p>
<h2 id="What-is-Snap"><a href="#What-is-Snap" class="headerlink" title="What is Snap?"></a>What is Snap?</h2><p>Snap is a package management system that allows you to install software packages (called “snaps”) in a secure and isolated environment. It ensures that you always have the latest version of the software, as snaps are automatically updated. Snap is supported on many Linux distributions, including Ubuntu.</p>
<h2 id="Steps-to-Install-Redis-on-Ubuntu-with-Snap"><a href="#Steps-to-Install-Redis-on-Ubuntu-with-Snap" class="headerlink" title="Steps to Install Redis on Ubuntu with Snap"></a>Steps to Install Redis on Ubuntu with Snap</h2><ol>
<li><p><strong>Update Your System</strong></p>
<p> Before installing any software, it’s always a good idea to update your system’s package list to ensure you’re getting the latest available versions of packages. Open your terminal and run the following command:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>
<p> If there are any available updates for your system, you can install them with:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt upgrade</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Install Snap (if not installed)</strong></p>
<p> Most recent versions of Ubuntu come with Snap pre-installed. However, if for any reason Snap is not installed on your system, you can install it by running:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install snapd</span><br></pre></td></tr></table></figure>
<p> After installing Snap, you may need to log out and log back in, or restart your system, for the Snap commands to work properly.</p>
</li>
<li><p><strong>Install Redis via Snap</strong></p>
<p> With Snap installed, you can now install Redis. Snap makes this process incredibly simple. To install the official Redis snap package, run the following command:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> snap install redis</span><br></pre></td></tr></table></figure>
<p> This command will automatically download and install the latest stable version of Redis. The snap package contains everything Redis needs to run, so you won’t need to worry about dependencies or configuration issues.</p>
</li>
<li><p><strong>Check Redis Installation</strong></p>
<p> Once the installation is complete, you can check if Redis is running by executing the following command:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snap info redis</span><br></pre></td></tr></table></figure>
<p> This should return the version of Redis that was installed.</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ snap info redis</span><br><span class="line">name:      redis</span><br><span class="line">summary:   Redis is used as a database, cache and message broker.</span><br><span class="line">publisher: Redis (redislabs)</span><br><span class="line">store-url: https://snapcraft.io/redis</span><br><span class="line">contact:   redis@redis.io</span><br><span class="line">license:   <span class="built_in">unset</span></span><br><span class="line">description: |</span><br><span class="line">  Redis is an open <span class="built_in">source</span> (BSD licensed), in-memory data structure store, used as a database, cache</span><br><span class="line">  and message broker. |</span><br><span class="line">  It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries,</span><br><span class="line">  bitmaps, hyperloglogs, geospatial indexes with radius queries and streams. |</span><br><span class="line">  Redis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of</span><br><span class="line">  on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning</span><br><span class="line">  with Redis Cluster. |</span><br><span class="line">  |</span><br><span class="line">  Check out https://redis.io/ <span class="keyword">for</span> more information.</span><br><span class="line">commands:</span><br><span class="line">  - redis.benchmark</span><br><span class="line">  - redis.check-aof</span><br><span class="line">  - redis.check-rdb</span><br><span class="line">  - redis.cli</span><br><span class="line">  - redis.sentinel</span><br><span class="line">services:</span><br><span class="line">  redis.server: simple, enabled, active</span><br><span class="line">snap-id:      hHi3Iys64CUmQLvb3OG1cOfj7fyffvwD</span><br><span class="line">tracking:     latest/stable</span><br><span class="line">refresh-date: today at 17:04 CST</span><br><span class="line">channels:</span><br><span class="line">  latest/stable:    7.4.1       2024-10-02 (1572) 10MB -</span><br><span class="line">  latest/candidate: ↑                                  </span><br><span class="line">  latest/beta:      ↑                                  </span><br><span class="line">  latest/edge:      255.255.255 2024-03-10 (1566) 10MB -</span><br><span class="line">**installed:          7.4.1                  (1572) 10MB -**</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Start and Enable Redis</strong></p>
<p> Redis installed via Snap should start automatically after installation. However, if it doesn’t, you can start it manually by running:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> snap start redis</span><br></pre></td></tr></table></figure>
<p> To ensure Redis starts automatically on boot, run:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> snap <span class="built_in">enable</span> redis</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Access the Redis CLI</strong></p>
<p> After starting Redis, you can access the Redis command-line interface (CLI) to interact with your Redis instance. Run the following command:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redis.cli</span><br></pre></td></tr></table></figure>
<p> You should see the Redis prompt (<code>127.0.0.1:6379&gt;</code>), where you can run Redis commands like <code>PING</code> to test the connection:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PING</span><br></pre></td></tr></table></figure>
<p> Redis should respond with <code>PONG</code>.</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ redis.cli</span><br><span class="line">127.0.0.1:6379&gt; PING</span><br><span class="line">PONG</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Configuring Redis (Optional)</strong></p>
<p> Redis configuration files are typically located in <code>/var/snap/redis/current/redis.conf</code> when installed via Snap. You can modify these configuration files to suit your needs, such as changing the port or enabling authentication.</p>
<p> To edit the configuration file, use a text editor like <code>nano</code>:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /var/snap/redis/current/redis.conf</span><br></pre></td></tr></table></figure>
<p> After making changes, remember to restart Redis for the changes to take effect:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> snap restart redis</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Uninstall Redis (if needed)</strong></p>
<p> If you ever need to uninstall Redis, you can easily do so with Snap by running:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> snap remove redis</span><br></pre></td></tr></table></figure>
<p> This will completely remove Redis from your system.</p>
</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Installing Redis on Ubuntu using Snap is a fast, easy, and reliable method. With Snap, Redis is kept up to date automatically, and the installation process is streamlined, requiring minimal effort from the user. By following the steps above, you’ll have Redis up and running in no time, ready for use in your web applications or as a caching solution.</p>
]]></content>
      <categories>
        <category>Redis Tutorial</category>
      </categories>
      <tags>
        <tag>HowTo</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Install `.deb` Packages on Ubuntu</title>
    <url>/2024/11/27/how-to-install-deb-packages-on-ubuntu/</url>
    <content><![CDATA[<p>If you’re using Ubuntu and need to install a <code>.deb</code> package (the standard package format for Debian-based distributions), you have several methods to do so. This guide will walk you through the process using different approaches to suit your preferences.</p>
<h2 id="What-is-a-deb-Package"><a href="#What-is-a-deb-Package" class="headerlink" title="What is a .deb Package?"></a>What is a <code>.deb</code> Package?</h2><p>A <code>.deb</code> file is a Debian software package that contains all the necessary files and metadata required to install software on a Debian-based distribution like Ubuntu. You may download <code>.deb</code> packages manually or use a repository to install them, but sometimes you may need to install one manually if it’s not available via Ubuntu’s package manager.</p>
<h2 id="Method-1-Using-dpkg-Debian-Package-Manager"><a href="#Method-1-Using-dpkg-Debian-Package-Manager" class="headerlink" title="Method 1: Using dpkg (Debian Package Manager)"></a>Method 1: Using <code>dpkg</code> (Debian Package Manager)</h2><p>The most common way to install <code>.deb</code> packages is through the <code>dpkg</code> command in the terminal.</p>
<h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps:"></a>Steps:</h3><ol>
<li><strong>Open a Terminal</strong>:<ul>
<li>Press <code>Ctrl + Alt + T</code> to open the terminal.</li>
</ul>
</li>
<li><p><strong>Navigate to the directory where your <code>.deb</code> file is located</strong>:<br>Use the <code>cd</code> command to change to the directory containing your <code>.deb</code> file. For example:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Install the package using <code>dpkg</code></strong>:<br>Run the following command to install the <code>.deb</code> package:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> dpkg -i your-package-name.deb</span><br></pre></td></tr></table></figure>
<p> Replace <code>your-package-name.deb</code> with the name of the actual <code>.deb</code> file you want to install.</p>
</li>
<li><p><strong>Fix any dependency issues</strong>:<br>Sometimes, <code>dpkg</code> may show dependency errors. To resolve this, run the following command to fix any broken dependencies:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install -f</span><br></pre></td></tr></table></figure>
<p> This command will automatically fix the missing dependencies and complete the installation.</p>
</li>
</ol>
<h3 id="Pros"><a href="#Pros" class="headerlink" title="Pros:"></a>Pros:</h3><ul>
<li>Fast and direct.</li>
<li>Allows precise control over what you’re installing.</li>
</ul>
<h3 id="Cons"><a href="#Cons" class="headerlink" title="Cons:"></a>Cons:</h3><ul>
<li>You need to manually resolve dependencies with <code>apt-get install -f</code>.</li>
</ul>
<hr>
<h2 id="Method-2-Using-gdebi-Graphical-or-Command-Line-Installer"><a href="#Method-2-Using-gdebi-Graphical-or-Command-Line-Installer" class="headerlink" title="Method 2: Using gdebi (Graphical or Command-Line Installer)"></a>Method 2: Using <code>gdebi</code> (Graphical or Command-Line Installer)</h2><p><code>gdebi</code> is a tool specifically designed to handle <code>.deb</code> packages and their dependencies. It’s often more user-friendly than <code>dpkg</code> because it automatically resolves and installs dependencies.</p>
<h3 id="Steps-1"><a href="#Steps-1" class="headerlink" title="Steps:"></a>Steps:</h3><ol>
<li><p><strong>Install <code>gdebi</code> if it’s not already installed</strong>:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install gdebi</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Install the <code>.deb</code> package using <code>gdebi</code></strong>:</p>
<ul>
<li>For a graphical interface:<br>Right-click on the <code>.deb</code> file and select “Open with GDebi Package Installer.”</li>
<li><p>Alternatively, use the command-line version:</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> gdebi your-package-name.deb</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h3 id="Pros-1"><a href="#Pros-1" class="headerlink" title="Pros:"></a>Pros:</h3><ul>
<li>Automatically resolves dependencies.</li>
<li>Can be used both through the terminal and with a graphical interface.</li>
</ul>
<h3 id="Cons-1"><a href="#Cons-1" class="headerlink" title="Cons:"></a>Cons:</h3><ul>
<li>Not installed by default, so you must install it first.</li>
</ul>
<hr>
<h2 id="Method-3-Using-Ubuntu-Software-Center-GUI-Method"><a href="#Method-3-Using-Ubuntu-Software-Center-GUI-Method" class="headerlink" title="Method 3: Using Ubuntu Software Center (GUI Method)"></a>Method 3: Using Ubuntu Software Center (GUI Method)</h2><p>If you prefer a graphical method and don’t want to mess around with the terminal, Ubuntu’s Software Center allows you to easily install <code>.deb</code> packages.</p>
<h3 id="Steps-2"><a href="#Steps-2" class="headerlink" title="Steps:"></a>Steps:</h3><ol>
<li><strong>Locate the <code>.deb</code> file</strong> in your file manager (e.g., Nautilus).</li>
<li><strong>Double-click the <code>.deb</code> file</strong>:<br>This will open it in the Ubuntu Software Center.</li>
<li><strong>Click the “Install” button</strong>:<br>The Software Center will show the details of the package. Just click the “Install” button to install it.</li>
</ol>
<h3 id="Pros-2"><a href="#Pros-2" class="headerlink" title="Pros:"></a>Pros:</h3><ul>
<li>Easy to use for beginners.</li>
<li>Requires no command-line experience.</li>
</ul>
<h3 id="Cons-2"><a href="#Cons-2" class="headerlink" title="Cons:"></a>Cons:</h3><ul>
<li>Slower than using <code>dpkg</code> or <code>gdebi</code>.</li>
<li>Limited to GUI users.</li>
</ul>
<hr>
<h2 id="Method-4-Using-apt-Advanced-Packaging-Tool-for-Local-deb-Packages"><a href="#Method-4-Using-apt-Advanced-Packaging-Tool-for-Local-deb-Packages" class="headerlink" title="Method 4: Using apt (Advanced Packaging Tool) for Local .deb Packages"></a>Method 4: Using <code>apt</code> (Advanced Packaging Tool) for Local <code>.deb</code> Packages</h2><p>Starting with Ubuntu 20.04, you can also use <code>apt</code> to install <code>.deb</code> packages, which will automatically resolve dependencies, just like it does for regular packages from repositories.</p>
<h3 id="Steps-3"><a href="#Steps-3" class="headerlink" title="Steps:"></a>Steps:</h3><ol>
<li><p><strong>Navigate to the directory containing the <code>.deb</code> file</strong>:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Install the <code>.deb</code> package using <code>apt</code></strong>:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ./your-package-name.deb</span><br></pre></td></tr></table></figure>
<p> Make sure to use <code>./</code> to indicate that the <code>.deb</code> file is located in the current directory.</p>
</li>
</ol>
<h3 id="Pros-3"><a href="#Pros-3" class="headerlink" title="Pros:"></a>Pros:</h3><ul>
<li>Automatically resolves dependencies.</li>
<li>Simple and convenient.</li>
</ul>
<h3 id="Cons-3"><a href="#Cons-3" class="headerlink" title="Cons:"></a>Cons:</h3><ul>
<li>Requires at least Ubuntu 20.04 or later.</li>
</ul>
<hr>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Installing <code>.deb</code> packages on Ubuntu can be done in several ways, depending on your preference for using the terminal or a graphical interface. Whether you opt for <code>dpkg</code>, <code>gdebi</code>, or the Ubuntu Software Center, all methods are effective for installing local <code>.deb</code> files. For users who want the simplest experience, using <code>apt</code> or <code>gdebi</code> is recommended, as they handle dependencies automatically.</p>
<p>Choose the method that best fits your needs and system configuration.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>HowTo</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Understanding the &quot;Classic Confinement&quot; Warning in Snap Packages</title>
    <url>/2024/11/29/understanding-the-classic-confinement-warning-in-snap-packages/</url>
    <content><![CDATA[<p>If you’ve ever installed a Snap package on your Linux system, you may have encountered an error message like this one:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error: This revision of snap &quot;node&quot; was published using classic confinement and thus may perform</span><br><span class="line">       arbitrary system changes outside of the security sandbox that snaps are usually confined to,</span><br><span class="line">       which may put your system at risk.</span><br><span class="line"></span><br><span class="line">       If you understand and want to proceed repeat the command including --classic.</span><br></pre></td></tr></table></figure>
<p>This warning can be unsettling, especially if you’re unfamiliar with Snap confinement or how it relates to system security. In this blog, we’ll break down what this error message means, why it’s important, and how you can approach it.</p>
<h2 id="What-is-“Classic-Confinement”-in-Snap-Packages"><a href="#What-is-“Classic-Confinement”-in-Snap-Packages" class="headerlink" title="What is “Classic Confinement” in Snap Packages?"></a>What is “Classic Confinement” in Snap Packages?</h2><p>Before we dive into the error itself, let’s clarify what “Snap confinement” is and why it matters.</p>
<h3 id="What-is-a-Snap-Package"><a href="#What-is-a-Snap-Package" class="headerlink" title="What is a Snap Package?"></a>What is a Snap Package?</h3><p>A <strong>Snap package</strong> is a type of software packaging format that bundles an application and all of its dependencies into a single package. The Snap ecosystem is designed to be cross-platform, meaning the same Snap package can run on various Linux distributions without modification. Snaps are typically isolated from the rest of your system for security reasons, using something called <strong>“confinement”</strong>.</p>
<h3 id="What-is-Confinement"><a href="#What-is-Confinement" class="headerlink" title="What is Confinement?"></a>What is Confinement?</h3><p>Confinement refers to the level of isolation a Snap package has from your system. Snaps can have different levels of confinement:</p>
<ul>
<li><strong>Strict confinement</strong>: This is the default and most secure form. In strict confinement, a Snap can only access files and resources that it explicitly requests and is granted permission to access. It is isolated in a sandbox, which minimizes the risk to your system.</li>
<li><strong>Classic confinement</strong>: A Snap with classic confinement has fewer restrictions, meaning it has more access to your system and can interact with resources outside the Snap sandbox. It’s much closer to the way traditional packages work, where an app can make arbitrary system changes.</li>
<li><strong>Devmode confinement</strong>: This is typically used for development purposes. It allows a Snap to run with fewer restrictions than strict confinement, but it still doesn’t have the unrestricted access of classic confinement.</li>
</ul>
<h2 id="Why-Does-the-Warning-Mention-Classic-Confinement"><a href="#Why-Does-the-Warning-Mention-Classic-Confinement" class="headerlink" title="Why Does the Warning Mention Classic Confinement?"></a>Why Does the Warning Mention Classic Confinement?</h2><p>When you see the error message related to “classic confinement,” it’s highlighting the fact that the <strong>Node.js Snap</strong> you’re installing is published with <strong>classic confinement</strong>.</p>
<p>In the case of Node.js (or any other Snap with classic confinement), this means the application is not fully sandboxed, and it can interact with your system more freely than a strictly confined Snap. As a result, the Snap can potentially make system-wide changes, access sensitive files, and execute actions that could pose a security risk.</p>
<p>Here’s a breakdown of why this is important:</p>
<ul>
<li><strong>Security Risks</strong>: Since a Snap with classic confinement isn’t as restricted, it may have the ability to make changes that could affect the system. For example, it could access files outside its own sandbox or run system-level commands that could compromise system integrity.</li>
<li><strong>System Stability</strong>: Because classic confinement allows a Snap to make broad changes, there’s a risk of instability if the application behaves unexpectedly, conflicts with other software, or has bugs that affect system-wide resources.</li>
<li><strong>Permissions</strong>: You, the user, are effectively allowing the Snap to act more like a traditional application, meaning it could have access to parts of the system you may not want it to interact with. For example, a developer tool like Node.js might need to install packages globally, which could conflict with the operating system’s package manager or other installed software.</li>
</ul>
<h2 id="Why-is-Classic-Confinement-Used"><a href="#Why-is-Classic-Confinement-Used" class="headerlink" title="Why is Classic Confinement Used?"></a>Why is Classic Confinement Used?</h2><p>Despite the security trade-offs, classic confinement is sometimes necessary for certain applications, especially those that need low-level system access or need to interact with parts of the system outside of the typical Snap sandbox. In the case of Node.js, it may require the ability to install packages globally or access other resources that are not easily available within the confines of a strict sandbox.</p>
<p>Some use cases where classic confinement might be required include:</p>
<ul>
<li><strong>Development Tools</strong>: Certain programming languages or frameworks (like Node.js, Python, or Go) often require access to system directories and package managers that are outside the sandbox.</li>
<li><strong>Legacy Applications</strong>: Some older applications or those not originally designed for Snap confinement may need classic access to function properly.</li>
<li><strong>Complex Dependencies</strong>: Applications that require complex interactions with the operating system or external programs might not function well under strict confinement.</li>
</ul>
<h2 id="What-Should-You-Do-When-You-See-This-Warning"><a href="#What-Should-You-Do-When-You-See-This-Warning" class="headerlink" title="What Should You Do When You See This Warning?"></a>What Should You Do When You See This Warning?</h2><p>If you’re concerned about the risks mentioned in the error message, you have a few options for how to proceed:</p>
<ol>
<li><strong>Review the Package</strong>: Before proceeding, check whether the Snap you’re installing is trustworthy. In the case of popular software like Node.js, the risk is relatively low, as the Snap is likely published and maintained by a reputable source.</li>
<li><p><strong>Use a Different Installation Method</strong>: If you are uncomfortable with classic confinement, you could install Node.js (or any other software) using other methods, such as:</p>
<ul>
<li>Using your distribution’s package manager (e.g., <code>apt</code> for Ubuntu, <code>dnf</code> for Fedora).</li>
<li><p>Installing from source or using version managers like <code>nvm</code> for Node.js.</p>
<p>These methods often come with more granular control over the installation process and typically don’t require the application to be run with classic confinement.</p>
</li>
</ul>
</li>
<li><p><strong>Proceed with Caution</strong>: If you decide to proceed with the Snap, be aware of the potential risks, but know that popular software packages like Node.js are usually safe. Always keep your system updated, and if you encounter issues, check the Snap’s support channels or the community forums for guidance.</p>
</li>
<li><strong>Feedback to Snap Maintainers</strong>: If you believe a package should be confined more strictly for security reasons, you can always submit feedback or contribute to the Snap packaging project. Open-source communities are often open to suggestions on improving security practices.</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The warning about <strong>classic confinement</strong> is important for understanding the security implications of installing certain Snap packages. While classic confinement allows more freedom for applications to interact with your system, it comes with a trade-off in terms of security. For trusted applications like Node.js, the risk may be minimal, but for less familiar software, it’s worth considering whether a different installation method might be more appropriate.</p>
<p>As with all software installations, stay informed and always review the permissions and the risks involved before proceeding.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Html Special Char</title>
    <url>/2024/11/30//wiki/html-char/</url>
    <content><![CDATA[<div class="table-container">
<table>
<thead>
<tr>
<th>char</th>
<th>entity</th>
<th>char</th>
<th>entity</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&quot;</code></td>
<td><code>&amp;quot</code></td>
<td><code>&amp;</code></td>
<td><code>&amp;amp</code></td>
</tr>
<tr>
<td><code>&#039;</code></td>
<td><code>&amp;#039</code></td>
<td><code>&lt;</code></td>
<td><code>&amp;lt</code></td>
</tr>
<tr>
<td><code>&gt;</code></td>
<td><code>&amp;gt</code></td>
<td><code>&nbsp;</code></td>
<td><code>&amp;nbsp</code></td>
</tr>
<tr>
<td><code>&iexcl;</code></td>
<td><code>&amp;iexcl</code></td>
<td><code>&cent;</code></td>
<td><code>&amp;cent</code></td>
</tr>
<tr>
<td><code>&pound;</code></td>
<td><code>&amp;pound</code></td>
<td><code>&curren;</code></td>
<td><code>&amp;curren</code></td>
</tr>
<tr>
<td><code>&yen;</code></td>
<td><code>&amp;yen</code></td>
<td><code>&brvbar;</code></td>
<td><code>&amp;brvbar</code></td>
</tr>
<tr>
<td><code>&sect;</code></td>
<td><code>&amp;sect</code></td>
<td><code>&uml;</code></td>
<td><code>&amp;uml</code></td>
</tr>
<tr>
<td><code>&copy;</code></td>
<td><code>&amp;copy</code></td>
<td><code>&ordf;</code></td>
<td><code>&amp;ordf</code></td>
</tr>
<tr>
<td><code>&laquo;</code></td>
<td><code>&amp;laquo</code></td>
<td><code>&not;</code></td>
<td><code>&amp;not</code></td>
</tr>
<tr>
<td><code>&shy;</code></td>
<td><code>&amp;shy</code></td>
<td><code>&reg;</code></td>
<td><code>&amp;reg</code></td>
</tr>
<tr>
<td><code>&macr;</code></td>
<td><code>&amp;macr</code></td>
<td><code>&deg;</code></td>
<td><code>&amp;deg</code></td>
</tr>
<tr>
<td><code>&plusmn;</code></td>
<td><code>&amp;plusmn</code></td>
<td><code>&sup2;</code></td>
<td><code>&amp;sup2</code></td>
</tr>
<tr>
<td><code>&sup3;</code></td>
<td><code>&amp;sup3</code></td>
<td><code>&acute;</code></td>
<td><code>&amp;acute</code></td>
</tr>
<tr>
<td><code>&micro;</code></td>
<td><code>&amp;micro</code></td>
<td><code>&para;</code></td>
<td><code>&amp;para</code></td>
</tr>
<tr>
<td><code>&middot;</code></td>
<td><code>&amp;middot</code></td>
<td><code>&cedil;</code></td>
<td><code>&amp;cedil</code></td>
</tr>
<tr>
<td><code>&sup1;</code></td>
<td><code>&amp;sup1</code></td>
<td><code>&ordm;</code></td>
<td><code>&amp;ordm</code></td>
</tr>
<tr>
<td><code>&raquo;</code></td>
<td><code>&amp;raquo</code></td>
<td><code>&frac14;</code></td>
<td><code>&amp;frac14</code></td>
</tr>
<tr>
<td><code>&frac12;</code></td>
<td><code>&amp;frac12</code></td>
<td><code>&frac34;</code></td>
<td><code>&amp;frac34</code></td>
</tr>
<tr>
<td><code>&iquest;</code></td>
<td><code>&amp;iquest</code></td>
<td><code>&agrave;</code></td>
<td><code>&amp;agrave</code></td>
</tr>
<tr>
<td><code>&aacute;</code></td>
<td><code>&amp;aacute</code></td>
<td><code>&acirc;</code></td>
<td><code>&amp;acirc</code></td>
</tr>
<tr>
<td><code>&atilde;</code></td>
<td><code>&amp;atilde</code></td>
<td><code>&auml;</code></td>
<td><code>&amp;auml</code></td>
</tr>
<tr>
<td><code>&aring;</code></td>
<td><code>&amp;aring</code></td>
<td><code>&aelig;</code></td>
<td><code>&amp;aelig</code></td>
</tr>
<tr>
<td><code>&ccedil;</code></td>
<td><code>&amp;ccedil</code></td>
<td><code>&egrave;</code></td>
<td><code>&amp;egrave</code></td>
</tr>
<tr>
<td><code>&eacute;</code></td>
<td><code>&amp;eacute</code></td>
<td><code>&ecirc;</code></td>
<td><code>&amp;ecirc</code></td>
</tr>
<tr>
<td><code>&euml;</code></td>
<td><code>&amp;euml</code></td>
<td><code>&igrave;</code></td>
<td><code>&amp;igrave</code></td>
</tr>
<tr>
<td><code>&iacute;</code></td>
<td><code>&amp;iacute</code></td>
<td><code>&icirc;</code></td>
<td><code>&amp;icirc</code></td>
</tr>
<tr>
<td><code>&iuml;</code></td>
<td><code>&amp;iuml</code></td>
<td><code>&eth;</code></td>
<td><code>&amp;eth</code></td>
</tr>
<tr>
<td><code>&ntilde;</code></td>
<td><code>&amp;ntilde</code></td>
<td><code>&ograve;</code></td>
<td><code>&amp;ograve</code></td>
</tr>
<tr>
<td><code>&oacute;</code></td>
<td><code>&amp;oacute</code></td>
<td><code>&ocirc;</code></td>
<td><code>&amp;ocirc</code></td>
</tr>
<tr>
<td><code>&otilde;</code></td>
<td><code>&amp;otilde</code></td>
<td><code>&ouml;</code></td>
<td><code>&amp;ouml</code></td>
</tr>
<tr>
<td><code>&times;</code></td>
<td><code>&amp;times</code></td>
<td><code>&oslash;</code></td>
<td><code>&amp;oslash</code></td>
</tr>
<tr>
<td><code>&ugrave;</code></td>
<td><code>&amp;ugrave</code></td>
<td><code>&uacute;</code></td>
<td><code>&amp;uacute</code></td>
</tr>
<tr>
<td><code>&ucirc;</code></td>
<td><code>&amp;ucirc</code></td>
<td><code>&uuml;</code></td>
<td><code>&amp;uuml</code></td>
</tr>
<tr>
<td><code>&yacute;</code></td>
<td><code>&amp;yacute</code></td>
<td><code>&thorn;</code></td>
<td><code>&amp;thorn</code></td>
</tr>
<tr>
<td><code>&szlig;</code></td>
<td><code>&amp;szlig</code></td>
<td><code>&agrave;</code></td>
<td><code>&amp;agrave</code></td>
</tr>
<tr>
<td><code>&aacute;</code></td>
<td><code>&amp;aacute</code></td>
<td><code>&acirc;</code></td>
<td><code>&amp;acirc</code></td>
</tr>
<tr>
<td><code>&atilde;</code></td>
<td><code>&amp;atilde</code></td>
<td><code>&auml;</code></td>
<td><code>&amp;auml</code></td>
</tr>
<tr>
<td><code>&aring;</code></td>
<td><code>&amp;aring</code></td>
<td><code>&aelig;</code></td>
<td><code>&amp;aelig</code></td>
</tr>
<tr>
<td><code>&ccedil;</code></td>
<td><code>&amp;ccedil</code></td>
<td><code>&egrave;</code></td>
<td><code>&amp;egrave</code></td>
</tr>
<tr>
<td><code>&eacute;</code></td>
<td><code>&amp;eacute</code></td>
<td><code>&ecirc;</code></td>
<td><code>&amp;ecirc</code></td>
</tr>
<tr>
<td><code>&euml;</code></td>
<td><code>&amp;euml</code></td>
<td><code>&igrave;</code></td>
<td><code>&amp;igrave</code></td>
</tr>
<tr>
<td><code>&iacute;</code></td>
<td><code>&amp;iacute</code></td>
<td><code>&icirc;</code></td>
<td><code>&amp;icirc</code></td>
</tr>
<tr>
<td><code>&iuml;</code></td>
<td><code>&amp;iuml</code></td>
<td><code>&eth;</code></td>
<td><code>&amp;eth</code></td>
</tr>
<tr>
<td><code>&ntilde;</code></td>
<td><code>&amp;ntilde</code></td>
<td><code>&ograve;</code></td>
<td><code>&amp;ograve</code></td>
</tr>
<tr>
<td><code>&oacute;</code></td>
<td><code>&amp;oacute</code></td>
<td><code>&ocirc;</code></td>
<td><code>&amp;ocirc</code></td>
</tr>
<tr>
<td><code>&otilde;</code></td>
<td><code>&amp;otilde</code></td>
<td><code>&ouml;</code></td>
<td><code>&amp;ouml</code></td>
</tr>
<tr>
<td><code>&divide;</code></td>
<td><code>&amp;divide</code></td>
<td><code>&oslash;</code></td>
<td><code>&amp;oslash</code></td>
</tr>
<tr>
<td><code>&ugrave;</code></td>
<td><code>&amp;ugrave</code></td>
<td><code>&uacute;</code></td>
<td><code>&amp;uacute</code></td>
</tr>
<tr>
<td><code>&ucirc;</code></td>
<td><code>&amp;ucirc</code></td>
<td><code>&uuml;</code></td>
<td><code>&amp;uuml</code></td>
</tr>
<tr>
<td><code>&yacute;</code></td>
<td><code>&amp;yacute</code></td>
<td><code>&thorn;</code></td>
<td><code>&amp;thorn</code></td>
</tr>
<tr>
<td><code>&yuml;</code></td>
<td><code>&amp;yuml</code></td>
<td><code>&oelig;</code></td>
<td><code>&amp;oelig</code></td>
</tr>
<tr>
<td><code>&oelig;</code></td>
<td><code>&amp;oelig</code></td>
<td><code>&scaron;</code></td>
<td><code>&amp;scaron</code></td>
</tr>
<tr>
<td><code>&scaron;</code></td>
<td><code>&amp;scaron</code></td>
<td><code>&yuml;</code></td>
<td><code>&amp;yuml</code></td>
</tr>
<tr>
<td><code>&fnof;</code></td>
<td><code>&amp;fnof</code></td>
<td><code>&circ;</code></td>
<td><code>&amp;circ</code></td>
</tr>
<tr>
<td><code>&tilde;</code></td>
<td><code>&amp;tilde</code></td>
<td><code>&alpha;</code></td>
<td><code>&amp;alpha</code></td>
</tr>
<tr>
<td><code>&beta;</code></td>
<td><code>&amp;beta</code></td>
<td><code>&gamma;</code></td>
<td><code>&amp;gamma</code></td>
</tr>
<tr>
<td><code>&delta;</code></td>
<td><code>&amp;delta</code></td>
<td><code>&epsilon;</code></td>
<td><code>&amp;epsilon</code></td>
</tr>
<tr>
<td><code>&zeta;</code></td>
<td><code>&amp;zeta</code></td>
<td><code>&eta;</code></td>
<td><code>&amp;eta</code></td>
</tr>
<tr>
<td><code>&theta;</code></td>
<td><code>&amp;theta</code></td>
<td><code>&iota;</code></td>
<td><code>&amp;iota</code></td>
</tr>
<tr>
<td><code>&kappa;</code></td>
<td><code>&amp;kappa</code></td>
<td><code>&lambda;</code></td>
<td><code>&amp;lambda</code></td>
</tr>
<tr>
<td><code>&mu;</code></td>
<td><code>&amp;mu</code></td>
<td><code>&nu;</code></td>
<td><code>&amp;nu</code></td>
</tr>
<tr>
<td><code>&xi;</code></td>
<td><code>&amp;xi</code></td>
<td><code>&omicron;</code></td>
<td><code>&amp;omicron</code></td>
</tr>
<tr>
<td><code>&pi;</code></td>
<td><code>&amp;pi</code></td>
<td><code>&rho;</code></td>
<td><code>&amp;rho</code></td>
</tr>
<tr>
<td><code>&sigma;</code></td>
<td><code>&amp;sigma</code></td>
<td><code>&tau;</code></td>
<td><code>&amp;tau</code></td>
</tr>
<tr>
<td><code>&upsilon;</code></td>
<td><code>&amp;upsilon</code></td>
<td><code>&phi;</code></td>
<td><code>&amp;phi</code></td>
</tr>
<tr>
<td><code>&chi;</code></td>
<td><code>&amp;chi</code></td>
<td><code>&psi;</code></td>
<td><code>&amp;psi</code></td>
</tr>
<tr>
<td><code>&omega;</code></td>
<td><code>&amp;omega</code></td>
<td><code>&alpha;</code></td>
<td><code>&amp;alpha</code></td>
</tr>
<tr>
<td><code>&beta;</code></td>
<td><code>&amp;beta</code></td>
<td><code>&gamma;</code></td>
<td><code>&amp;gamma</code></td>
</tr>
<tr>
<td><code>&delta;</code></td>
<td><code>&amp;delta</code></td>
<td><code>&epsilon;</code></td>
<td><code>&amp;epsilon</code></td>
</tr>
<tr>
<td><code>&zeta;</code></td>
<td><code>&amp;zeta</code></td>
<td><code>&eta;</code></td>
<td><code>&amp;eta</code></td>
</tr>
<tr>
<td><code>&theta;</code></td>
<td><code>&amp;theta</code></td>
<td><code>&iota;</code></td>
<td><code>&amp;iota</code></td>
</tr>
<tr>
<td><code>&kappa;</code></td>
<td><code>&amp;kappa</code></td>
<td><code>&lambda;</code></td>
<td><code>&amp;lambda</code></td>
</tr>
<tr>
<td><code>&mu;</code></td>
<td><code>&amp;mu</code></td>
<td><code>&nu;</code></td>
<td><code>&amp;nu</code></td>
</tr>
<tr>
<td><code>&xi;</code></td>
<td><code>&amp;xi</code></td>
<td><code>&omicron;</code></td>
<td><code>&amp;omicron</code></td>
</tr>
<tr>
<td><code>&pi;</code></td>
<td><code>&amp;pi</code></td>
<td><code>&rho;</code></td>
<td><code>&amp;rho</code></td>
</tr>
<tr>
<td><code>&sigmaf;</code></td>
<td><code>&amp;sigmaf</code></td>
<td><code>&sigma;</code></td>
<td><code>&amp;sigma</code></td>
</tr>
<tr>
<td><code>&tau;</code></td>
<td><code>&amp;tau</code></td>
<td><code>&upsilon;</code></td>
<td><code>&amp;upsilon</code></td>
</tr>
<tr>
<td><code>&phi;</code></td>
<td><code>&amp;phi</code></td>
<td><code>&chi;</code></td>
<td><code>&amp;chi</code></td>
</tr>
<tr>
<td><code>&psi;</code></td>
<td><code>&amp;psi</code></td>
<td><code>&omega;</code></td>
<td><code>&amp;omega</code></td>
</tr>
<tr>
<td><code>&thetasym;</code></td>
<td><code>&amp;thetasym</code></td>
<td><code>&upsih;</code></td>
<td><code>&amp;upsih</code></td>
</tr>
<tr>
<td><code>&piv;</code></td>
<td><code>&amp;piv</code></td>
<td><code>&ensp;</code></td>
<td><code>&amp;ensp</code></td>
</tr>
<tr>
<td><code>&emsp;</code></td>
<td><code>&amp;emsp</code></td>
<td><code>&thinsp;</code></td>
<td><code>&amp;thinsp</code></td>
</tr>
<tr>
<td><code>&zwnj;</code></td>
<td><code>&amp;zwnj</code></td>
<td><code>&zwj;</code></td>
<td><code>&amp;zwj</code></td>
</tr>
<tr>
<td><code>&lrm;</code></td>
<td><code>&amp;lrm</code></td>
<td><code>&rlm;</code></td>
<td><code>&amp;rlm</code></td>
</tr>
<tr>
<td><code>&ndash;</code></td>
<td><code>&amp;ndash</code></td>
<td><code>&mdash;</code></td>
<td><code>&amp;mdash</code></td>
</tr>
<tr>
<td><code>&lsquo;</code></td>
<td><code>&amp;lsquo</code></td>
<td><code>&rsquo;</code></td>
<td><code>&amp;rsquo</code></td>
</tr>
<tr>
<td><code>&sbquo;</code></td>
<td><code>&amp;sbquo</code></td>
<td><code>&ldquo;</code></td>
<td><code>&amp;ldquo</code></td>
</tr>
<tr>
<td><code>&rdquo;</code></td>
<td><code>&amp;rdquo</code></td>
<td><code>&bdquo;</code></td>
<td><code>&amp;bdquo</code></td>
</tr>
<tr>
<td><code>&dagger;</code></td>
<td><code>&amp;dagger</code></td>
<td><code>&dagger;</code></td>
<td><code>&amp;dagger</code></td>
</tr>
<tr>
<td><code>&bull;</code></td>
<td><code>&amp;bull</code></td>
<td><code>&hellip;</code></td>
<td><code>&amp;hellip</code></td>
</tr>
<tr>
<td><code>&permil;</code></td>
<td><code>&amp;permil</code></td>
<td><code>&prime;</code></td>
<td><code>&amp;prime</code></td>
</tr>
<tr>
<td><code>&prime;</code></td>
<td><code>&amp;prime</code></td>
<td><code>&lsaquo;</code></td>
<td><code>&amp;lsaquo</code></td>
</tr>
<tr>
<td><code>&rsaquo;</code></td>
<td><code>&amp;rsaquo</code></td>
<td><code>&oline;</code></td>
<td><code>&amp;oline</code></td>
</tr>
<tr>
<td><code>&frasl;</code></td>
<td><code>&amp;frasl</code></td>
<td><code>&euro;</code></td>
<td><code>&amp;euro</code></td>
</tr>
<tr>
<td><code>&image;</code></td>
<td><code>&amp;image</code></td>
<td><code>&weierp;</code></td>
<td><code>&amp;weierp</code></td>
</tr>
<tr>
<td><code>&real;</code></td>
<td><code>&amp;real</code></td>
<td><code>&trade;</code></td>
<td><code>&amp;trade</code></td>
</tr>
<tr>
<td><code>&alefsym;</code></td>
<td><code>&amp;alefsym</code></td>
<td><code>&larr;</code></td>
<td><code>&amp;larr</code></td>
</tr>
<tr>
<td><code>&uarr;</code></td>
<td><code>&amp;uarr</code></td>
<td><code>&rarr;</code></td>
<td><code>&amp;rarr</code></td>
</tr>
<tr>
<td><code>&darr;</code></td>
<td><code>&amp;darr</code></td>
<td><code>&harr;</code></td>
<td><code>&amp;harr</code></td>
</tr>
<tr>
<td><code>&crarr;</code></td>
<td><code>&amp;crarr</code></td>
<td><code>&larr;</code></td>
<td><code>&amp;larr</code></td>
</tr>
<tr>
<td><code>&uarr;</code></td>
<td><code>&amp;uarr</code></td>
<td><code>&rarr;</code></td>
<td><code>&amp;rarr</code></td>
</tr>
<tr>
<td><code>&darr;</code></td>
<td><code>&amp;darr</code></td>
<td><code>&harr;</code></td>
<td><code>&amp;harr</code></td>
</tr>
<tr>
<td><code>&forall;</code></td>
<td><code>&amp;forall</code></td>
<td><code>&part;</code></td>
<td><code>&amp;part</code></td>
</tr>
<tr>
<td><code>&exist;</code></td>
<td><code>&amp;exist</code></td>
<td><code>&empty;</code></td>
<td><code>&amp;empty</code></td>
</tr>
<tr>
<td><code>&nabla;</code></td>
<td><code>&amp;nabla</code></td>
<td><code>&isin;</code></td>
<td><code>&amp;isin</code></td>
</tr>
<tr>
<td><code>&notin;</code></td>
<td><code>&amp;notin</code></td>
<td><code>&ni;</code></td>
<td><code>&amp;ni</code></td>
</tr>
<tr>
<td><code>&prod;</code></td>
<td><code>&amp;prod</code></td>
<td><code>&sum;</code></td>
<td><code>&amp;sum</code></td>
</tr>
<tr>
<td><code>&minus;</code></td>
<td><code>&amp;minus</code></td>
<td><code>&lowast;</code></td>
<td><code>&amp;lowast</code></td>
</tr>
<tr>
<td><code>&radic;</code></td>
<td><code>&amp;radic</code></td>
<td><code>&prop;</code></td>
<td><code>&amp;prop</code></td>
</tr>
<tr>
<td><code>&infin;</code></td>
<td><code>&amp;infin</code></td>
<td><code>&ang;</code></td>
<td><code>&amp;ang</code></td>
</tr>
<tr>
<td><code>&and;</code></td>
<td><code>&amp;and</code></td>
<td><code>&or;</code></td>
<td><code>&amp;or</code></td>
</tr>
<tr>
<td><code>&cap;</code></td>
<td><code>&amp;cap</code></td>
<td><code>&cup;</code></td>
<td><code>&amp;cup</code></td>
</tr>
<tr>
<td><code>&int;</code></td>
<td><code>&amp;int</code></td>
<td><code>&there4;</code></td>
<td><code>&amp;there4</code></td>
</tr>
<tr>
<td><code>&sim;</code></td>
<td><code>&amp;sim</code></td>
<td><code>&cong;</code></td>
<td><code>&amp;cong</code></td>
</tr>
<tr>
<td><code>&asymp;</code></td>
<td><code>&amp;asymp</code></td>
<td><code>&ne;</code></td>
<td><code>&amp;ne</code></td>
</tr>
<tr>
<td><code>&equiv;</code></td>
<td><code>&amp;equiv</code></td>
<td><code>&le;</code></td>
<td><code>&amp;le</code></td>
</tr>
<tr>
<td><code>&ge;</code></td>
<td><code>&amp;ge</code></td>
<td><code>&sub;</code></td>
<td><code>&amp;sub</code></td>
</tr>
<tr>
<td><code>&sup;</code></td>
<td><code>&amp;sup</code></td>
<td><code>&nsub;</code></td>
<td><code>&amp;nsub</code></td>
</tr>
<tr>
<td><code>&sube;</code></td>
<td><code>&amp;sube</code></td>
<td><code>&supe;</code></td>
<td><code>&amp;supe</code></td>
</tr>
<tr>
<td><code>&oplus;</code></td>
<td><code>&amp;oplus</code></td>
<td><code>&otimes;</code></td>
<td><code>&amp;otimes</code></td>
</tr>
<tr>
<td><code>&perp;</code></td>
<td><code>&amp;perp</code></td>
<td><code>&sdot;</code></td>
<td><code>&amp;sdot</code></td>
</tr>
<tr>
<td><code>&lceil;</code></td>
<td><code>&amp;lceil</code></td>
<td><code>&rceil;</code></td>
<td><code>&amp;rceil</code></td>
</tr>
<tr>
<td><code>&lfloor;</code></td>
<td><code>&amp;lfloor</code></td>
<td><code>&rfloor;</code></td>
<td><code>&amp;rfloor</code></td>
</tr>
<tr>
<td><code>&lang;</code></td>
<td><code>&amp;lang</code></td>
<td><code>&rang;</code></td>
<td><code>&amp;rang</code></td>
</tr>
<tr>
<td><code>&loz;</code></td>
<td><code>&amp;loz</code></td>
<td><code>&spades;</code></td>
<td><code>&amp;spades</code></td>
</tr>
<tr>
<td><code>&clubs;</code></td>
<td><code>&amp;clubs</code></td>
<td><code>&hearts;</code></td>
<td><code>&amp;hearts</code></td>
</tr>
<tr>
<td><code>&diams;</code></td>
<td><code>&amp;diams</code></td>
<td></td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 13</title>
    <url>/2024/12/03//wiki/ascii-code-13/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 13 is represented by the control character ␍ also known as the carriage return.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␍</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␍</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>13</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>15</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>D</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 1101</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Carriage Return</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Printing and display control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+000D</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 10</title>
    <url>/2024/12/03//wiki/ascii-code-10/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 10 is represented by the control character ␊ also known as the line feed.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␊</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␊</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>10</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>12</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>A</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 1010</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Line Feed</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Printing and display control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+000A</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 11</title>
    <url>/2024/12/03//wiki/ascii-code-11/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 11 is represented by the control character ␋ also known as the vertical tabulation.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␋</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␋</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>11</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>13</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>B</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 1011</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Vertical Tabulation</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Printing and display control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+000B</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 1</title>
    <url>/2024/12/03//wiki/ascii-code-1/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 1 is represented by the control character ␁ also known as the start of heading.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␁</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␁</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>1</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>1</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>1</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 0001</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Start of Heading</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission Control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0001</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 15</title>
    <url>/2024/12/03//wiki/ascii-code-15/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 15 is represented by the control character ␏ also known as the shift in.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␏</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␏</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>15</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>17</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>F</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 1111</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Shift In</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Printing and display control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+000F</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 12</title>
    <url>/2024/12/03//wiki/ascii-code-12/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 12 is represented by the control character ␌ also known as the form feed.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␌</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␌</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>12</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>14</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>C</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 1100</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Form Feed</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Printing and display control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+000C</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 14</title>
    <url>/2024/12/03//wiki/ascii-code-14/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 14 is represented by the control character ␎ also known as the shift out.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␎</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␎</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>14</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>16</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>E</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 1110</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Shift Out</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Printing and display control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+000E</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 17</title>
    <url>/2024/12/03//wiki/ascii-code-17/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 17 is represented by the control character ␑ also known as the device control one (xon).</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␑</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␑</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>17</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>21</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>11</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 0001</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Device Control One (XON)</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0011</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 18</title>
    <url>/2024/12/03//wiki/ascii-code-18/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 18 is represented by the control character ␒ also known as the device control two.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␒</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␒</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>18</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>22</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>12</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 0010</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Device Control Two</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0012</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 19</title>
    <url>/2024/12/03//wiki/ascii-code-19/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 19 is represented by the control character ␓ also known as the device control three (xoff).</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␓</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␓</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>19</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>23</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>13</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 0011</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Device Control Three (XOFF)</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0013</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 16</title>
    <url>/2024/12/03//wiki/ascii-code-16/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 16 is represented by the control character ␐ also known as the data link escape.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␐</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␐</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>16</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>20</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>10</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 0000</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Data Link Escape</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0010</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 21</title>
    <url>/2024/12/03//wiki/ascii-code-21/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 21 is represented by the control character ␕ also known as the negative acknowledge.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␕</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␕</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>21</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>25</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>15</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 0101</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Negative Acknowledge</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0015</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 20</title>
    <url>/2024/12/03//wiki/ascii-code-20/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 20 is represented by the control character ␔ also known as the device control four.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␔</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␔</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>20</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>24</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>14</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 0100</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Device Control Four</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0014</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 22</title>
    <url>/2024/12/03//wiki/ascii-code-22/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 22 is represented by the control character ␖ also known as the synchronous idle.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␖</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␖</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>22</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>26</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>16</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 0110</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Synchronous Idle</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Miscellaneous codes</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0016</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 2</title>
    <url>/2024/12/03//wiki/ascii-code-2/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 2 is represented by the control character ␂ also known as the start of text.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␂</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␂</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>2</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>2</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>2</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 0010</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Start of Text</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission Control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0002</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 25</title>
    <url>/2024/12/03//wiki/ascii-code-25/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 25 is represented by the control character ␙ also known as the end of medium.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␙</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␙</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>25</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>31</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>19</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 1001</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>End of medium</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Data structuring</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0019</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 24</title>
    <url>/2024/12/03//wiki/ascii-code-24/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 24 is represented by the control character ␘ also known as the cancel.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␘</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␘</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>24</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>30</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>18</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 1000</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Cancel</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0018</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 26</title>
    <url>/2024/12/03//wiki/ascii-code-26/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 26 is represented by the control character ␚ also known as the substitute.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␚</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␚</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>26</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>32</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>1A</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 1010</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Substitute</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+001A</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 23</title>
    <url>/2024/12/03//wiki/ascii-code-23/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 23 is represented by the control character ␗ also known as the end of transmission block.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␗</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␗</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>23</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>27</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>17</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 0111</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>End of Transmission Block</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0017</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 28</title>
    <url>/2024/12/03//wiki/ascii-code-28/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 28 is represented by the control character ␜ also known as the file separator.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␜</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␜</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>28</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>34</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>1C</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 1100</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>File Separator</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Data structuring</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+001C</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 29</title>
    <url>/2024/12/03//wiki/ascii-code-29/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 29 is represented by the control character ␝ also known as the group separator.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␝</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␝</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>29</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>35</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>1D</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 1101</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Group Separator</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Data structuring</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+001D</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 3</title>
    <url>/2024/12/03//wiki/ascii-code-3/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 3 is represented by the control character ␃ also known as the end of text.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␃</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␃</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>3</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>3</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>3</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 0011</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>End of Text</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission Control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0003</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 27</title>
    <url>/2024/12/03//wiki/ascii-code-27/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 27 is represented by the control character ␛ also known as the escape.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␛</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␛</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>27</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>33</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>1B</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 1011</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Escape</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+001B</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 5</title>
    <url>/2024/12/03//wiki/ascii-code-5/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 5 is represented by the control character ␅ also known as the enquiry.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␅</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␅</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>5</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>5</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>5</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 0101</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Enquiry</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission Control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0005</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 31</title>
    <url>/2024/12/03//wiki/ascii-code-31/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 31 is represented by the control character ␟ also known as the unit separator.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␟</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␟</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>31</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>37</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>1F</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 1111</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Unit Separator</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Data structuring</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+001F</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 30</title>
    <url>/2024/12/03//wiki/ascii-code-30/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 30 is represented by the control character ␞ also known as the record separator.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␞</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␞</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>30</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>36</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>1E</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0001 1110</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Record Separator</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Data structuring</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+001E</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 32</title>
    <url>/2024/12/03//wiki/ascii-code-32/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 32 is represented by non-printing character also known as the space.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>&#32;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>32</td>
</tr>
<tr>
<td>Octal</td>
<td>40</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>20</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 0000</td>
</tr>
<tr>
<td>Description</td>
<td>Space</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0020</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%20</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=20</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 33</title>
    <url>/2024/12/03//wiki/ascii-code-33/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 33 is represented by the character ! also known as the exclamation mark.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>!</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>33</td>
</tr>
<tr>
<td>Octal</td>
<td>41</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>21</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 0001</td>
</tr>
<tr>
<td>Description</td>
<td>Exclamation mark</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0021</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%21</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=21</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 7</title>
    <url>/2024/12/03//wiki/ascii-code-7/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 7 is represented by the control character ␇ also known as the bell, alert.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␇</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␇</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>7</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>7</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>7</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 0111</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Bell, Alert</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Miscellaneous codes</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0007</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 4</title>
    <url>/2024/12/03//wiki/ascii-code-4/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 4 is represented by the control character ␄ also known as the end of transmission.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␄</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␄</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>4</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>4</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>4</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 0100</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>End of Transmission</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission Control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0004</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 6</title>
    <url>/2024/12/03//wiki/ascii-code-6/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 6 is represented by the control character ␆ also known as the acknowledge.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␆</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␆</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>6</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>6</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>6</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 0110</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Acknowledge</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Transmission Control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0006</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 9</title>
    <url>/2024/12/03//wiki/ascii-code-9/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 9 is represented by the control character ␉ also known as the horizontal tab.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␉</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␉</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>9</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>11</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>9</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 1001</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Horizontal Tab</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Printing and display control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0009</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 8</title>
    <url>/2024/12/03//wiki/ascii-code-8/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 8 is represented by the control character ␈ also known as the backspace.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␈</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␈</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>8</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>10</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>8</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 1000</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Backspace</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Printing and display control</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0008</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 0</title>
    <url>/2024/12/03//wiki/ascii-code-0/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 0 is represented by the control character ␀ also known as the null character.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Attribute</strong></th>
<th><strong>Value</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Symbol</strong></td>
<td>␀</td>
</tr>
<tr>
<td><strong>Unicode Symbol</strong></td>
<td>␀</td>
</tr>
<tr>
<td><strong>Decimal</strong></td>
<td>0</td>
</tr>
<tr>
<td><strong>Octal</strong></td>
<td>0</td>
</tr>
<tr>
<td><strong>Hexadecimal</strong></td>
<td>0</td>
</tr>
<tr>
<td><strong>Binary</strong></td>
<td>0000 0000</td>
</tr>
<tr>
<td><strong>Description</strong></td>
<td>Null character</td>
</tr>
<tr>
<td><strong>Category</strong></td>
<td>Control Characters</td>
</tr>
<tr>
<td><strong>Subcategory</strong></td>
<td>Miscellaneous codes</td>
</tr>
<tr>
<td><strong>Unicode</strong></td>
<td>U+0000</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 100</title>
    <url>/2024/12/03//wiki/ascii-code-100/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 100 is represented by the character <code>d</code> also known as the lowercase d.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>d</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>100</td>
</tr>
<tr>
<td>Octal</td>
<td>144</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>64</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 0100</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase d</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0064</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>d</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=64</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 101</title>
    <url>/2024/12/03//wiki/ascii-code-101/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 101 is represented by the character <code>e</code> also known as the lowercase e.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>e</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>101</td>
</tr>
<tr>
<td>Octal</td>
<td>145</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>65</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 0101</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase e</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0065</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>e</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=65</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 104</title>
    <url>/2024/12/03//wiki/ascii-code-104/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 104 is represented by the character <code>h</code> also known as the lowercase h.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>h</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>104</td>
</tr>
<tr>
<td>Octal</td>
<td>150</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>68</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 1000</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase h</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0068</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>h</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=68</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 102</title>
    <url>/2024/12/03//wiki/ascii-code-102/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 102 is represented by the character <code>f</code> also known as the lowercase f.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>f</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>102</td>
</tr>
<tr>
<td>Octal</td>
<td>146</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>66</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 0110</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase f</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0066</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>f</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=66</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 107</title>
    <url>/2024/12/03//wiki/ascii-code-107/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 107 is represented by the character <code>k</code> also known as the lowercase k.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>k</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>107</td>
</tr>
<tr>
<td>Octal</td>
<td>153</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>6B</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 1011</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase k</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+006B</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>k</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=6B</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>Standard ASCII Table (7-bit)</title>
    <url>/2024/11/29//wiki/standard-ascii-table/</url>
    <content><![CDATA[<p><strong>ASCII</strong> (/‘æski:/ ASS-kee), an acronym for <strong>American Standard Code for Information Interchange</strong>. It’s a character encoding standard used in electronic communication to represent text in computers, telecommunications equipment, and other devices. ASCII uses a 7-bit character encoding system to represent 128 unique characters, which include both control characters and printable characters.</p>
<p>The first 32 code points (numbers 0-31 in decimal) and the last one (number 127 in decimal) are reserved for control characters, originally from Teletype models. While most of these control characters are outdated, some, like carriage return, line feed, and tab, are still in common use today.</p>
<p>Of the 128 characters, 95 are printable, including the digits 0-9, lowercase letters (a-z), uppercase letters (A-Z), and various punctuation symbols.</p>
<blockquote>
<p>Note: The standard ASCII encoding is essential for learning programming. It uses 7 bits within one byte. To make use of the 8th bit (the highest bit), an extended version of ASCII was created. The extended ASCII set includes additional special characters, letters from foreign languages, and graphical symbols. However, extended ASCII is not internationally standardized, and different countries may use different character sets for it.</p>
</blockquote>
<p>Below is the standard ASCII table (with light yellow backgrounds for control characters and white for printable characters).</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>DEC</th>
<th>OCT</th>
<th>HEX</th>
<th>BIN</th>
<th>Symbol</th>
<th>HTML Number</th>
<th>HTML Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-0">0</a></td>
<td>000</td>
<td>00</td>
<td>00000000</td>
<td>␀</td>
<td><code>&amp;#00</code></td>
<td></td>
<td>Null character</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-1">1</a></td>
<td>001</td>
<td>01</td>
<td>00000001</td>
<td>␁</td>
<td><code>&amp;#01</code></td>
<td></td>
<td>Start of Heading</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-2">2</a></td>
<td>002</td>
<td>02</td>
<td>00000010</td>
<td>␂</td>
<td><code>&amp;#02</code></td>
<td></td>
<td>Start of Text</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-3">3</a></td>
<td>003</td>
<td>03</td>
<td>00000011</td>
<td>␃</td>
<td><code>&amp;#03</code></td>
<td></td>
<td>End of Text</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-4">4</a></td>
<td>004</td>
<td>04</td>
<td>00000100</td>
<td>␄</td>
<td><code>&amp;#04</code></td>
<td></td>
<td>End of Transmission</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-5">5</a></td>
<td>005</td>
<td>05</td>
<td>00000101</td>
<td>␅</td>
<td><code>&amp;#05</code></td>
<td></td>
<td>Enquiry</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-6">6</a></td>
<td>006</td>
<td>06</td>
<td>00000110</td>
<td>␆</td>
<td><code>&amp;#06</code></td>
<td></td>
<td>Acknowledge</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-7">7</a></td>
<td>007</td>
<td>07</td>
<td>00000111</td>
<td>␇</td>
<td><code>&amp;#07</code></td>
<td></td>
<td>Bell, Alert</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-8">8</a></td>
<td>010</td>
<td>08</td>
<td>00001000</td>
<td>␈</td>
<td><code>&amp;#08</code></td>
<td></td>
<td>Backspace</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-9">9</a></td>
<td>011</td>
<td>09</td>
<td>00001001</td>
<td>␉</td>
<td><code>&amp;#09</code></td>
<td></td>
<td>Horizontal Tab</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-10">10</a></td>
<td>012</td>
<td>0A</td>
<td>00001010</td>
<td>␊</td>
<td><code>&amp;#10</code></td>
<td></td>
<td>Line Feed</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-11">11</a></td>
<td>013</td>
<td>0B</td>
<td>00001011</td>
<td>␋</td>
<td><code>&amp;#11</code></td>
<td></td>
<td>Vertical Tabulation</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-12">12</a></td>
<td>014</td>
<td>0C</td>
<td>00001100</td>
<td>␌</td>
<td><code>&amp;#12</code></td>
<td></td>
<td>Form Feed</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-13">13</a></td>
<td>015</td>
<td>0D</td>
<td>00001101</td>
<td>␍</td>
<td><code>&amp;#13</code></td>
<td></td>
<td>Carriage Return</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-14">14</a></td>
<td>016</td>
<td>0E</td>
<td>00001110</td>
<td>␎</td>
<td><code>&amp;#14</code></td>
<td></td>
<td>Shift Out</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-15">15</a></td>
<td>017</td>
<td>0F</td>
<td>00001111</td>
<td>␏</td>
<td><code>&amp;#15</code></td>
<td></td>
<td>Shift In</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-16">16</a></td>
<td>020</td>
<td>10</td>
<td>00010000</td>
<td>␐</td>
<td><code>&amp;#16</code></td>
<td></td>
<td>Data Link Escape</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-17">17</a></td>
<td>021</td>
<td>11</td>
<td>00010001</td>
<td>␑</td>
<td><code>&amp;#17</code></td>
<td></td>
<td>Device Control One (XON)</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-18">18</a></td>
<td>022</td>
<td>12</td>
<td>00010010</td>
<td>␒</td>
<td><code>&amp;#18</code></td>
<td></td>
<td>Device Control Two</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-19">19</a></td>
<td>023</td>
<td>13</td>
<td>00010011</td>
<td>␓</td>
<td><code>&amp;#19</code></td>
<td></td>
<td>Device Control Three (XOFF)</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-20">20</a></td>
<td>024</td>
<td>14</td>
<td>00010100</td>
<td>␔</td>
<td><code>&amp;#20</code></td>
<td></td>
<td>Device Control Four</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-21">21</a></td>
<td>025</td>
<td>15</td>
<td>00010101</td>
<td>␕</td>
<td><code>&amp;#21</code></td>
<td></td>
<td>Negative Acknowledge</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-22">22</a></td>
<td>026</td>
<td>16</td>
<td>00010110</td>
<td>␖</td>
<td><code>&amp;#22</code></td>
<td></td>
<td>Synchronous Idle</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-23">23</a></td>
<td>027</td>
<td>17</td>
<td>00010111</td>
<td>␗</td>
<td><code>&amp;#23</code></td>
<td></td>
<td>End of Transmission Block</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-24">24</a></td>
<td>030</td>
<td>18</td>
<td>00011000</td>
<td>␘</td>
<td><code>&amp;#24</code></td>
<td></td>
<td>Cancel</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-25">25</a></td>
<td>031</td>
<td>19</td>
<td>00011001</td>
<td>␙</td>
<td><code>&amp;#25</code></td>
<td></td>
<td>End of medium</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-26">26</a></td>
<td>032</td>
<td>1A</td>
<td>00011010</td>
<td>␚</td>
<td><code>&amp;#26</code></td>
<td></td>
<td>Substitute</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-27">27</a></td>
<td>033</td>
<td>1B</td>
<td>00011011</td>
<td>␛</td>
<td><code>&amp;#27</code></td>
<td></td>
<td>Escape</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-28">28</a></td>
<td>034</td>
<td>1C</td>
<td>00011100</td>
<td>␜</td>
<td><code>&amp;#28</code></td>
<td></td>
<td>File Separator</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-29">29</a></td>
<td>035</td>
<td>1D</td>
<td>00011101</td>
<td>␝</td>
<td><code>&amp;#29</code></td>
<td></td>
<td>Group Separator</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-30">30</a></td>
<td>036</td>
<td>1E</td>
<td>00011110</td>
<td>␞</td>
<td><code>&amp;#30</code></td>
<td></td>
<td>Record Separator</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-31">31</a></td>
<td>037</td>
<td>1F</td>
<td>00011111</td>
<td>␟</td>
<td><code>&amp;#31</code></td>
<td></td>
<td>Unit Separator</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-32">32</a></td>
<td>040</td>
<td>20</td>
<td>00100000</td>
<td>␠</td>
<td><code>&amp;#32</code></td>
<td></td>
<td>Space</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-33">33</a></td>
<td>041</td>
<td>21</td>
<td>00100001</td>
<td>!</td>
<td><code>&amp;#33</code></td>
<td><code>&amp;excl</code></td>
<td>Exclamation mark</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-34">34</a></td>
<td>042</td>
<td>22</td>
<td>00100010</td>
<td>“</td>
<td><code>&amp;#34</code></td>
<td><code>&amp;quot</code></td>
<td>Double quotes (or speech marks)</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-35">35</a></td>
<td>043</td>
<td>23</td>
<td>00100011</td>
<td>#</td>
<td><code>&amp;#35</code></td>
<td><code>&amp;num</code></td>
<td>Number sign</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-36">36</a></td>
<td>044</td>
<td>24</td>
<td>00100100</td>
<td>$</td>
<td><code>&amp;#36</code></td>
<td><code>&amp;dollar</code></td>
<td>Dollar</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-37">37</a></td>
<td>045</td>
<td>25</td>
<td>00100101</td>
<td>%</td>
<td><code>&amp;#37</code></td>
<td><code>&amp;percnt</code></td>
<td>Per cent sign</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-38">38</a></td>
<td>046</td>
<td>26</td>
<td>00100110</td>
<td>&amp;</td>
<td><code>&amp;#38</code></td>
<td><code>&amp;amp</code></td>
<td>Ampersand</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-39">39</a></td>
<td>047</td>
<td>27</td>
<td>00100111</td>
<td>‘</td>
<td><code>&amp;#39</code></td>
<td><code>&amp;apos</code></td>
<td>Single quote</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-40">40</a></td>
<td>050</td>
<td>28</td>
<td>00101000</td>
<td>(</td>
<td><code>&amp;#40</code></td>
<td><code>&amp;lparen</code></td>
<td>Open parenthesis (or open bracket)</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-41">41</a></td>
<td>051</td>
<td>29</td>
<td>00101001</td>
<td>)</td>
<td><code>&amp;#41</code></td>
<td><code>&amp;rparen</code></td>
<td>Close parenthesis (or close bracket)</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-42">42</a></td>
<td>052</td>
<td>2A</td>
<td>00101010</td>
<td>*</td>
<td><code>&amp;#42</code></td>
<td><code>&amp;ast</code></td>
<td>Asterisk</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-43">43</a></td>
<td>053</td>
<td>2B</td>
<td>00101011</td>
<td>+</td>
<td><code>&amp;#43</code></td>
<td><code>&amp;plus</code></td>
<td>Plus</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-44">44</a></td>
<td>054</td>
<td>2C</td>
<td>00101100</td>
<td>,</td>
<td><code>&amp;#44</code></td>
<td><code>&amp;comma</code></td>
<td>Comma</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-45">45</a></td>
<td>055</td>
<td>2D</td>
<td>00101101</td>
<td>-</td>
<td><code>&amp;#45</code></td>
<td></td>
<td>Hyphen-minus</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-46">46</a></td>
<td>056</td>
<td>2E</td>
<td>00101110</td>
<td>.</td>
<td><code>&amp;#46</code></td>
<td><code>&amp;period</code></td>
<td>Period, dot or full stop</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-47">47</a></td>
<td>057</td>
<td>2F</td>
<td>00101111</td>
<td>/</td>
<td><code>&amp;#47</code></td>
<td><code>&amp;sol</code></td>
<td>Slash or divide</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-48">48</a></td>
<td>060</td>
<td>30</td>
<td>00110000</td>
<td>0</td>
<td><code>&amp;#48</code></td>
<td></td>
<td>Zero</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-49">49</a></td>
<td>061</td>
<td>31</td>
<td>00110001</td>
<td>1</td>
<td><code>&amp;#49</code></td>
<td></td>
<td>One</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-50">50</a></td>
<td>062</td>
<td>32</td>
<td>00110010</td>
<td>2</td>
<td><code>&amp;#50</code></td>
<td></td>
<td>Two</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-51">51</a></td>
<td>063</td>
<td>33</td>
<td>00110011</td>
<td>3</td>
<td><code>&amp;#51</code></td>
<td></td>
<td>Three</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-52">52</a></td>
<td>064</td>
<td>34</td>
<td>00110100</td>
<td>4</td>
<td><code>&amp;#52</code></td>
<td></td>
<td>Four</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-53">53</a></td>
<td>065</td>
<td>35</td>
<td>00110101</td>
<td>5</td>
<td><code>&amp;#53</code></td>
<td></td>
<td>Five</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-54">54</a></td>
<td>066</td>
<td>36</td>
<td>00110110</td>
<td>6</td>
<td><code>&amp;#54</code></td>
<td></td>
<td>Six</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-55">55</a></td>
<td>067</td>
<td>37</td>
<td>00110111</td>
<td>7</td>
<td><code>&amp;#55</code></td>
<td></td>
<td>Seven</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-56">56</a></td>
<td>070</td>
<td>38</td>
<td>00111000</td>
<td>8</td>
<td><code>&amp;#56</code></td>
<td></td>
<td>Eight</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-57">57</a></td>
<td>071</td>
<td>39</td>
<td>00111001</td>
<td>9</td>
<td><code>&amp;#57</code></td>
<td></td>
<td>Nine</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-58">58</a></td>
<td>072</td>
<td>3A</td>
<td>00111010</td>
<td>:</td>
<td><code>&amp;#58</code></td>
<td><code>&amp;colon</code></td>
<td>Colon</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-59">59</a></td>
<td>073</td>
<td>3B</td>
<td>00111011</td>
<td>`</td>
<td><code>&amp;#59</code></td>
<td><code>&amp;semi</code></td>
<td>Semicolon</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-60">60</a></td>
<td>074</td>
<td>3C</td>
<td>00111100</td>
<td>&lt;</td>
<td><code>&amp;#60</code></td>
<td><code>&amp;lt</code></td>
<td>Less than (or open angled bracket)</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-61">61</a></td>
<td>075</td>
<td>3D</td>
<td>00111101</td>
<td>=</td>
<td><code>&amp;#61</code></td>
<td><code>&amp;equals</code></td>
<td>Equals</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-62">62</a></td>
<td>076</td>
<td>3E</td>
<td>00111110</td>
<td>&gt;</td>
<td><code>&amp;#62</code></td>
<td><code>&amp;gt</code></td>
<td>Greater than (or close angled bracket)</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-63">63</a></td>
<td>077</td>
<td>3F</td>
<td>00111111</td>
<td>?</td>
<td><code>&amp;#63</code></td>
<td><code>&amp;quest</code></td>
<td>Question mark</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-64">64</a></td>
<td>100</td>
<td>40</td>
<td>01000000</td>
<td>@</td>
<td><code>&amp;#64</code></td>
<td><code>&amp;commat</code></td>
<td>At sign</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-65">65</a></td>
<td>101</td>
<td>41</td>
<td>01000001</td>
<td>A</td>
<td><code>&amp;#65</code></td>
<td></td>
<td>Uppercase A</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-66">66</a></td>
<td>102</td>
<td>42</td>
<td>01000010</td>
<td>B</td>
<td><code>&amp;#66</code></td>
<td></td>
<td>Uppercase B</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-67">67</a></td>
<td>103</td>
<td>43</td>
<td>01000011</td>
<td>C</td>
<td><code>&amp;#67</code></td>
<td></td>
<td>Uppercase C</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-68">68</a></td>
<td>104</td>
<td>44</td>
<td>01000100</td>
<td>D</td>
<td><code>&amp;#68</code></td>
<td></td>
<td>Uppercase D</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-69">69</a></td>
<td>105</td>
<td>45</td>
<td>01000101</td>
<td>E</td>
<td><code>&amp;#69</code></td>
<td></td>
<td>Uppercase E</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-70">70</a></td>
<td>106</td>
<td>46</td>
<td>01000110</td>
<td>F</td>
<td><code>&amp;#70</code></td>
<td></td>
<td>Uppercase F</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-71">71</a></td>
<td>107</td>
<td>47</td>
<td>01000111</td>
<td>G</td>
<td><code>&amp;#71</code></td>
<td></td>
<td>Uppercase G</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-72">72</a></td>
<td>110</td>
<td>48</td>
<td>01001000</td>
<td>H</td>
<td><code>&amp;#72</code></td>
<td></td>
<td>Uppercase H</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-73">73</a></td>
<td>111</td>
<td>49</td>
<td>01001001</td>
<td>I</td>
<td><code>&amp;#73</code></td>
<td></td>
<td>Uppercase I</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-74">74</a></td>
<td>112</td>
<td>4A</td>
<td>01001010</td>
<td>J</td>
<td><code>&amp;#74</code></td>
<td></td>
<td>Uppercase J</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-75">75</a></td>
<td>113</td>
<td>4B</td>
<td>01001011</td>
<td>K</td>
<td><code>&amp;#75</code></td>
<td></td>
<td>Uppercase K</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-76">76</a></td>
<td>114</td>
<td>4C</td>
<td>01001100</td>
<td>L</td>
<td><code>&amp;#76</code></td>
<td></td>
<td>Uppercase L</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-77">77</a></td>
<td>115</td>
<td>4D</td>
<td>01001101</td>
<td>M</td>
<td><code>&amp;#77</code></td>
<td></td>
<td>Uppercase M</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-78">78</a></td>
<td>116</td>
<td>4E</td>
<td>01001110</td>
<td>N</td>
<td><code>&amp;#78</code></td>
<td></td>
<td>Uppercase N</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-79">79</a></td>
<td>117</td>
<td>4F</td>
<td>01001111</td>
<td>O</td>
<td><code>&amp;#79</code></td>
<td></td>
<td>Uppercase O</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-80">80</a></td>
<td>120</td>
<td>50</td>
<td>01010000</td>
<td>P</td>
<td><code>&amp;#80</code></td>
<td></td>
<td>Uppercase P</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-81">81</a></td>
<td>121</td>
<td>51</td>
<td>01010001</td>
<td>Q</td>
<td><code>&amp;#81</code></td>
<td></td>
<td>Uppercase Q</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-82">82</a></td>
<td>122</td>
<td>52</td>
<td>01010010</td>
<td>R</td>
<td><code>&amp;#82</code></td>
<td></td>
<td>Uppercase R</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-83">83</a></td>
<td>123</td>
<td>53</td>
<td>01010011</td>
<td>S</td>
<td><code>&amp;#83</code></td>
<td></td>
<td>Uppercase S</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-84">84</a></td>
<td>124</td>
<td>54</td>
<td>01010100</td>
<td>T</td>
<td><code>&amp;#84</code></td>
<td></td>
<td>Uppercase T</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-85">85</a></td>
<td>125</td>
<td>55</td>
<td>01010101</td>
<td>U</td>
<td><code>&amp;#85</code></td>
<td></td>
<td>Uppercase U</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-86">86</a></td>
<td>126</td>
<td>56</td>
<td>01010110</td>
<td>V</td>
<td><code>&amp;#86</code></td>
<td></td>
<td>Uppercase V</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-87">87</a></td>
<td>127</td>
<td>57</td>
<td>01010111</td>
<td>W</td>
<td><code>&amp;#87</code></td>
<td></td>
<td>Uppercase W</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-88">88</a></td>
<td>130</td>
<td>58</td>
<td>01011000</td>
<td>X</td>
<td><code>&amp;#88</code></td>
<td></td>
<td>Uppercase X</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-89">89</a></td>
<td>131</td>
<td>59</td>
<td>01011001</td>
<td>Y</td>
<td><code>&amp;#89</code></td>
<td></td>
<td>Uppercase Y</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-90">90</a></td>
<td>132</td>
<td>5A</td>
<td>01011010</td>
<td>Z</td>
<td><code>&amp;#90</code></td>
<td></td>
<td>Uppercase Z</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-91">91</a></td>
<td>133</td>
<td>5B</td>
<td>01011011</td>
<td>[</td>
<td><code>&amp;#91</code></td>
<td><code>&amp;lsqb</code></td>
<td>Opening bracket</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-92">92</a></td>
<td>134</td>
<td>5C</td>
<td>01011100</td>
<td>`</td>
<td><code>&amp;#92</code></td>
<td><code>&amp;bsol</code></td>
<td>Backslash</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-93">93</a></td>
<td>135</td>
<td>5D</td>
<td>01011101</td>
<td>]</td>
<td><code>&amp;#93</code></td>
<td><code>&amp;rsqb</code></td>
<td>Closing bracket</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-94">94</a></td>
<td>136</td>
<td>5E</td>
<td>01011110</td>
<td>^</td>
<td><code>&amp;#94</code></td>
<td><code>&amp;Hat</code></td>
<td>Caret - circumflex</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-95">95</a></td>
<td>137</td>
<td>5F</td>
<td>01011111</td>
<td>_</td>
<td><code>&amp;#95</code></td>
<td><code>&amp;lowbar</code></td>
<td>Underscore</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-96">96</a></td>
<td>140</td>
<td>60</td>
<td>01100000</td>
<td>`</td>
<td><code>&amp;#96</code></td>
<td><code>&amp;grave</code></td>
<td>Grave accent</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-97">97</a></td>
<td>141</td>
<td>61</td>
<td>01100001</td>
<td>a</td>
<td><code>&amp;#97</code></td>
<td></td>
<td>Lowercase a</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-98">98</a></td>
<td>142</td>
<td>62</td>
<td>01100010</td>
<td>b</td>
<td><code>&amp;#98</code></td>
<td></td>
<td>Lowercase b</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-99">99</a></td>
<td>143</td>
<td>63</td>
<td>01100011</td>
<td>c</td>
<td><code>&amp;#99</code></td>
<td></td>
<td>Lowercase c</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-100">100</a></td>
<td>144</td>
<td>64</td>
<td>01100100</td>
<td>d</td>
<td><code>&amp;#100</code></td>
<td></td>
<td>Lowercase d</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-101">101</a></td>
<td>145</td>
<td>65</td>
<td>01100101</td>
<td>e</td>
<td><code>&amp;#101</code></td>
<td></td>
<td>Lowercase e</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-102">102</a></td>
<td>146</td>
<td>66</td>
<td>01100110</td>
<td>f</td>
<td><code>&amp;#102</code></td>
<td></td>
<td>Lowercase f</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-103">103</a></td>
<td>147</td>
<td>67</td>
<td>01100111</td>
<td>g</td>
<td><code>&amp;#103</code></td>
<td></td>
<td>Lowercase g</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-104">104</a></td>
<td>150</td>
<td>68</td>
<td>01101000</td>
<td>h</td>
<td><code>&amp;#104</code></td>
<td></td>
<td>Lowercase h</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-105">105</a></td>
<td>151</td>
<td>69</td>
<td>01101001</td>
<td>i</td>
<td><code>&amp;#105</code></td>
<td></td>
<td>Lowercase i</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-106">106</a></td>
<td>152</td>
<td>6A</td>
<td>01101010</td>
<td>j</td>
<td><code>&amp;#106</code></td>
<td></td>
<td>Lowercase j</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-107">107</a></td>
<td>153</td>
<td>6B</td>
<td>01101011</td>
<td>k</td>
<td><code>&amp;#107</code></td>
<td></td>
<td>Lowercase k</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-108">108</a></td>
<td>154</td>
<td>6C</td>
<td>01101100</td>
<td>l</td>
<td><code>&amp;#108</code></td>
<td></td>
<td>Lowercase l</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-109">109</a></td>
<td>155</td>
<td>6D</td>
<td>01101101</td>
<td>m</td>
<td><code>&amp;#109</code></td>
<td></td>
<td>Lowercase m</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-110">110</a></td>
<td>156</td>
<td>6E</td>
<td>01101110</td>
<td>n</td>
<td><code>&amp;#110</code></td>
<td></td>
<td>Lowercase n</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-111">111</a></td>
<td>157</td>
<td>6F</td>
<td>01101111</td>
<td>o</td>
<td><code>&amp;#111</code></td>
<td></td>
<td>Lowercase o</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-112">112</a></td>
<td>160</td>
<td>70</td>
<td>01110000</td>
<td>p</td>
<td><code>&amp;#112</code></td>
<td></td>
<td>Lowercase p</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-113">113</a></td>
<td>161</td>
<td>71</td>
<td>01110001</td>
<td>q</td>
<td><code>&amp;#113</code></td>
<td></td>
<td>Lowercase q</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-114">114</a></td>
<td>162</td>
<td>72</td>
<td>01110010</td>
<td>r</td>
<td><code>&amp;#114</code></td>
<td></td>
<td>Lowercase r</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-115">115</a></td>
<td>163</td>
<td>73</td>
<td>01110011</td>
<td>s</td>
<td><code>&amp;#115</code></td>
<td></td>
<td>Lowercase s</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-116">116</a></td>
<td>164</td>
<td>74</td>
<td>01110100</td>
<td>t</td>
<td><code>&amp;#116</code></td>
<td></td>
<td>Lowercase t</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-117">117</a></td>
<td>165</td>
<td>75</td>
<td>01110101</td>
<td>u</td>
<td><code>&amp;#117</code></td>
<td></td>
<td>Lowercase u</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-118">118</a></td>
<td>166</td>
<td>76</td>
<td>01110110</td>
<td>v</td>
<td><code>&amp;#118</code></td>
<td></td>
<td>Lowercase v</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-119">119</a></td>
<td>167</td>
<td>77</td>
<td>01110111</td>
<td>w</td>
<td><code>&amp;#119</code></td>
<td></td>
<td>Lowercase w</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-120">120</a></td>
<td>170</td>
<td>78</td>
<td>01111000</td>
<td>x</td>
<td><code>&amp;#120</code></td>
<td></td>
<td>Lowercase x</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-121">121</a></td>
<td>171</td>
<td>79</td>
<td>01111001</td>
<td>y</td>
<td><code>&amp;#121</code></td>
<td></td>
<td>Lowercase y</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-122">122</a></td>
<td>172</td>
<td>7A</td>
<td>01111010</td>
<td>z</td>
<td><code>&amp;#122</code></td>
<td></td>
<td>Lowercase z</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-123">123</a></td>
<td>173</td>
<td>7B</td>
<td>01111011</td>
<td>{</td>
<td><code>&amp;#123</code></td>
<td><code>&amp;lcub</code></td>
<td>Opening brace</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-124">124</a></td>
<td>174</td>
<td>7C</td>
<td>01111100</td>
<td>|</td>
<td><code>&amp;#124</code></td>
<td><code>&amp;verbar</code></td>
<td>Vertical bar</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-125">125</a></td>
<td>175</td>
<td>7D</td>
<td>01111101</td>
<td>}</td>
<td><code>&amp;#125</code></td>
<td><code>&amp;rcub</code></td>
<td>Closing brace</td>
</tr>
<tr>
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-126">126</a></td>
<td>176</td>
<td>7E</td>
<td>01111110</td>
<td>~</td>
<td><code>&amp;#126</code></td>
<td><code>&amp;tilde</code></td>
<td>Equivalency sign - tilde</td>
</tr>
<tr style="background-color: #ffffe0;">
<td><a target="_blank" rel="noopener" href="https://www.linjiangxiong.com/2024/12/03/wiki/ascii-code-127">127</a></td>
<td>177</td>
<td>7F</td>
<td>01111111</td>
<td>␡</td>
<td><code>&amp;#127</code></td>
<td></td>
<td>Delete</td>
</tr>
</tbody>
</table>
</div>


<h2 id="Explanation-of-Control-Characters"><a href="#Explanation-of-Control-Characters" class="headerlink" title="Explanation of Control Characters"></a>Explanation of Control Characters</h2><p>In ASCII encoding, the first 32 characters (from 0 to 31) and the last character (number 127) are invisible (non-displayable), but they all serve special functions. These are called control characters or function codes.</p>
<p>These 33 control characters are mostly related to communication, data storage, and older devices, though some of their meanings have changed in modern computers. Some of these control characters might require a bit of technical knowledge to fully understand, so beginners can skip over the more complex ones and focus on the easier concepts.</p>
<p>Here are some examples of control characters and their functions:</p>
<p><strong>NUL (0)</strong><br>The NULL character. Originally, it was intended to be a “no operation” (NOP) character, meaning it doesn’t do anything. It can be thought of as an empty placeholder.  </p>
<p>In the early days of computing, NUL was used in punched tape systems to reserve a spot for later use—kind of like leaving a blank space in case you want to add something later.  </p>
<p>Later on, NUL was adopted in the C programming language to mark the end of a string. If a NUL character appears within a string, it signals the end of that string. This makes it easy to define strings of any length, as long as there’s enough memory, and you can always terminate the string with a <code>\0</code> (NULL), indicating the end of the string.</p>
<p><strong>SOH (1) – Start Of Heading</strong></p>
<p>SOH stands for “Start of Heading,” which is used to mark the beginning of a message or command in communication systems. It was originally defined in the 1963 ASCII standard as “Start of Message,” but later changed to “Start of Heading.”</p>
<p>Today, SOH is commonly used in master-slave communication systems, like in RS232 protocols. In this setup, the master device begins communication with SOH, signaling the start of a new message. This helps the slave device resynchronize if there’s an error during data transmission. Without a clear marker like SOH to indicate the start of each command, resynchronization would be much harder to achieve.</p>
<p><strong>STX (2) and ETX (3) – Start of Text / End of Text</strong></p>
<p>STX stands for “Start of Text” and marks the beginning of the actual data or message. ETX, on the other hand, stands for “End of Text” and signals the end of the data.</p>
<p>When transmitting data through a protocol, the transmission is often divided into “frames.” Each frame includes a header, which contains addressing information—like who the message is for and where it’s going—followed by the actual data you want to send.</p>
<p>STX marks the start of this data, and ETX marks the end. The specific content of the data, however, is defined by the protocol you’re using, not by ASCII.</p>
<p>In short, a frame consists of:</p>
<ul>
<li><strong>SOH</strong> (Start of Heading) marks the beginning of the frame header.</li>
<li><strong>STX</strong> (Start of Text) marks the start of the data.</li>
<li><strong>ETX</strong> (End of Text) marks the end of the data.</li>
</ul>
<p><strong>BEL (7)</strong><br>The <strong>BEL</strong> character, also known as “bell,” triggers a sound, usually a beep, to grab attention. It’s part of the ASCII character set and was commonly used in early computing systems to alert users or signal problems. While the beep itself doesn’t come from the sound card or speakers, it’s usually emitted by a small internal speaker or buzzer connected to the motherboard. This sound was often heard when a system encountered errors or when a computer started up. However, modern computers often no longer have internal buzzers, so even if the <strong>BEL</strong> character is triggered, you might not hear anything.</p>
<p><strong>BS (8)</strong><br>The <strong>BS</strong> character stands for <strong>BackSpace</strong>, which is the <strong>backspace key</strong> on your keyboard. Over time, its role has evolved. Originally, on typewriters and early printers, pressing backspace moved the cursor one space back, allowing you to overwrite the previous character for emphasis. For example, pressing backspace after typing “a” might result in something like “aBS^.” </p>
<p>In modern systems, backspace not only moves the cursor but also deletes the character at the cursor’s position. This dual function is now standard, but its origins in physical typewriters are still reflected in the key’s behavior.</p>
<p><strong>HT (9)</strong><br>The <strong>HT</strong> character, or <strong>Horizontal Tab</strong>, is used to create space in text. It’s the same as the <strong>Tab</strong> key on your keyboard, and it helps with formatting by moving the cursor to the next tab stop. The width of a tab can vary, but it’s commonly set to four spaces on most systems. <strong>HT</strong> is a handy tool because it reduces the effort needed for manual spacing and can save storage space—one tab can replace multiple spaces.</p>
<p><strong>LF (10)</strong><br><strong>LF</strong> stands for <strong>Line Feed</strong>, which means to move the cursor to the next line. In the early days, <strong>LF</strong> was used to move the print head of a typewriter or printer down one line, while another character, <strong>CR</strong> (Carriage Return), would return the print head to the beginning of the line. </p>
<p>In modern systems like Unix and C programming, <strong>LF</strong> has taken on the role of a “newline” character, which typically signifies both a <strong>Carriage Return</strong> and <strong>Line Feed</strong> combined (the equivalent of pressing both Enter and Return). MS-DOS and Windows, however, use both <strong>CR</strong> and <strong>LF</strong> together to represent a new line. </p>
<p>In most modern text editors, you can use just <strong>LF</strong> or the combined <strong>CR/LF</strong>, depending on the system.</p>
<p><strong>VT (11)</strong><br>The <strong>VT</strong> character stands for <strong>Vertical Tab</strong>, which, like the horizontal tab, is used for formatting text. It moves the cursor to the next predefined line, creating vertical space. However, <strong>VT</strong> is not widely used today, as <strong>LF</strong> (Line Feed) has largely replaced it for most tasks involving line breaks.</p>
<p><strong>FF (12)</strong><br>Form Feed – Page break. The “Form Feed” key is used to control printer behavior. When the printer receives this command, it moves to the next page.</p>
<p>Different devices may interpret this control character differently. For example, on some systems, it clears the screen, while others display the <code>^L</code> character or simply move to the next line. In Unix/Linux, both Bash Shell and Tcsh treat FF as a screen-clear command.</p>
<p><strong>CR (13)</strong><br>Carriage Return – Moves the machine’s print head or cursor to the left margin.</p>
<p>Originally, CR was used to return the print head to the start of a line without moving down. Over time, it became associated with the “Enter” key, indicating the end of input. In modern systems, pressing “Enter” also moves the cursor to the next line, and in C and Unix, CR is often redefined to mean “move to the next line.” When CR is pressed, systems may automatically convert it to LF (Line Feed).</p>
<p><strong>SO (14) and SI (15)</strong><br>Shift Out (SO) and Shift In (SI) – Control characters for switching character sets or fonts.</p>
<p>These were introduced in the 1960s as part of the ASCII standard to handle multiple character sets. Initially, SO and SI were used to switch between Cyrillic and Latin alphabets. In Latin-based ASCII, SO was used to print double-width characters (like full-width), and SI printed compressed (half-width) characters.</p>
<p><strong>DLE (16)</strong><br>Data Link Escape – Used to interrupt a data stream and signal that the following characters should be handled differently.</p>
<p>DLE is used when control characters are part of the data stream but need to be treated as special. When DLE is detected, the receiving system treats the following characters in a unique way. However, the exact action depends on the system, as the ASCII standard only specifies the interruption without defining the handling process.</p>
<p><strong>DC1 (17)</strong><br>Device Control 1 – Also known as XON (Transmission ON).</p>
<p>DC1, or XON, is used for software flow control in serial communication. It resumes data transmission after it’s been paused by an XOFF signal. For example, pressing Ctrl+Q (equivalent to XON) can restart communication if it was interrupted due to an error, allowing the data transmission to continue smoothly.</p>
<p><strong>DC3 (19)</strong><br>Device Control 3, or XOFF (Transmission Off), is used to interrupt data transmission.</p>
<p><strong>EM (25)</strong><br>End of Medium. This indicates that the storage medium is full or that the logical end of the data has been reached, similar to how a tape or a tape head reaches the end of its physical medium. It doesn’t necessarily mean the physical end of the storage, but rather the logical endpoint.</p>
<p><strong>FS (28)</strong><br>File Separator. This control character is interesting because it shows how computers from the 1960s organized data.</p>
<p>Back then, storage systems were mostly sequential and not random-access like RAM or hard drives we use today. This included devices like punch cards, paper tapes, or magnetic tapes. In that context, a control character like FS was a clever way to separate two different files in a sequential storage system.</p>
<p><strong>GS (29)</strong><br>Group Separator. This was used to separate different groups of data in a sequential data storage system.</p>
<p>One reason ASCII includes control characters is for organizing data storage. In database design, data is often structured in tables, where each table contains multiple records of the same type. The GS character was used to separate different groups of records in a sequential system, long before Excel spreadsheets existed. In the early days, these were just referred to as “groups.”</p>
<p><strong>RS (30)</strong><br>Record Separator. This is used to separate individual records within a group or table.</p>
<p><strong>US (31)</strong><br>Unit Separator. In ASCII, the smallest data item in a database was called a “unit,” which we now refer to as a “field.” The US character separates these units in a sequential data storage environment.</p>
<p>Back then, storage space was limited, so fields were usually given enough space for the largest possible entry, even if they didn’t always need that much. This could waste a lot of space. The US control character helped save storage by allowing fields to have variable lengths.</p>
<p><strong>DEL (127)</strong><br>Delete. The DEL character is interesting because its value (127) is much higher than the other control characters, which range from 0 to 31.</p>
<p>This was due to its use on paper tapes, which typically had 7 holes for encoding data. The value 127 corresponds to the binary number 1111111, meaning all 7 bits are set to 1. When this was used on paper tape, it effectively punched all the holes, deleting any existing data.</p>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 103</title>
    <url>/2024/12/03//wiki/ascii-code-103/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 103 is represented by the character <code>g</code> also known as the lowercase g.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>g</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>103</td>
</tr>
<tr>
<td>Octal</td>
<td>147</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>67</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 0111</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase g</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0067</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>g</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=67</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 106</title>
    <url>/2024/12/03//wiki/ascii-code-106/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 106 is represented by the character <code>j</code> also known as the lowercase j.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>j</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>106</td>
</tr>
<tr>
<td>Octal</td>
<td>152</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>6A</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 1010</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase j</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+006A</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>j</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=6A</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 109</title>
    <url>/2024/12/03//wiki/ascii-code-109/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 109 is represented by the character <code>m</code> also known as the lowercase m.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>m</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>109</td>
</tr>
<tr>
<td>Octal</td>
<td>155</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>6D</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 1101</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase m</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+006D</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>m</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=6D</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 105</title>
    <url>/2024/12/03//wiki/ascii-code-105/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 105 is represented by the character <code>i</code> also known as the lowercase i.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>i</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>105</td>
</tr>
<tr>
<td>Octal</td>
<td>151</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>69</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 1001</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase i</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0069</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>i</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=69</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 111</title>
    <url>/2024/12/03//wiki/ascii-code-111/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 111 is represented by the character <code>o</code> also known as the lowercase o.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>o</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>111</td>
</tr>
<tr>
<td>Octal</td>
<td>157</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>6F</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 1111</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase o</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+006F</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>o</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=6F</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 108</title>
    <url>/2024/12/03//wiki/ascii-code-108/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 108 is represented by the character <code>l</code> also known as the lowercase l.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>l</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>108</td>
</tr>
<tr>
<td>Octal</td>
<td>154</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>6C</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 1100</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase l</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+006C</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>l</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=6C</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 114</title>
    <url>/2024/12/03//wiki/ascii-code-114/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 114 is represented by the character <code>r</code> also known as the lowercase r.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>r</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>114</td>
</tr>
<tr>
<td>Octal</td>
<td>162</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>72</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 0010</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase r</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0072</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>r</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=72</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 110</title>
    <url>/2024/12/03//wiki/ascii-code-110/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 110 is represented by the character <code>n</code> also known as the lowercase n.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>n</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>110</td>
</tr>
<tr>
<td>Octal</td>
<td>156</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>6E</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 1110</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase n</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+006E</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>n</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=6E</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 115</title>
    <url>/2024/12/03//wiki/ascii-code-115/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 115 is represented by the character <code>s</code> also known as the lowercase s.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>s</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>115</td>
</tr>
<tr>
<td>Octal</td>
<td>163</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>73</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 0011</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase s</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0073</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>s</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=73</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 113</title>
    <url>/2024/12/03//wiki/ascii-code-113/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 113 is represented by the character <code>q</code> also known as the lowercase q.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>q</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>113</td>
</tr>
<tr>
<td>Octal</td>
<td>161</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>71</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 0001</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase q</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0071</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>q</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=71</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 112</title>
    <url>/2024/12/03//wiki/ascii-code-112/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 112 is represented by the character <code>p</code> also known as the lowercase p.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>p</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>112</td>
</tr>
<tr>
<td>Octal</td>
<td>160</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>70</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 0000</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase p</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0070</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>p</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=70</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 117</title>
    <url>/2024/12/03//wiki/ascii-code-117/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 117 is represented by the character <code>u</code> also known as the lowercase u.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>u</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>117</td>
</tr>
<tr>
<td>Octal</td>
<td>165</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>75</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 0101</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase u</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0075</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>u</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=75</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 116</title>
    <url>/2024/12/03//wiki/ascii-code-116/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 116 is represented by the character <code>t</code> also known as the lowercase t.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>t</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>116</td>
</tr>
<tr>
<td>Octal</td>
<td>164</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>74</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 0100</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase t</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0074</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>t</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=74</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 118</title>
    <url>/2024/12/03//wiki/ascii-code-118/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 118 is represented by the character <code>v</code> also known as the lowercase v.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>v</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>118</td>
</tr>
<tr>
<td>Octal</td>
<td>166</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>76</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 0110</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase v</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0076</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=76</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 119</title>
    <url>/2024/12/03//wiki/ascii-code-119/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 119 is represented by the character <code>w</code> also known as the lowercase w.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>w</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>119</td>
</tr>
<tr>
<td>Octal</td>
<td>167</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>77</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 0111</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase w</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0077</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>w</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=77</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 120</title>
    <url>/2024/12/03//wiki/ascii-code-120/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 120 is represented by the character <code>x</code> also known as the lowercase x.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>x</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>120</td>
</tr>
<tr>
<td>Octal</td>
<td>170</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>78</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 1000</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase x</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0078</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>x</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=78</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 121</title>
    <url>/2024/12/03//wiki/ascii-code-121/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 121 is represented by the character <code>y</code> also known as the lowercase y.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>y</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>121</td>
</tr>
<tr>
<td>Octal</td>
<td>171</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>79</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 1001</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase y</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0079</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>y</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=79</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 125</title>
    <url>/2024/12/03//wiki/ascii-code-125/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 125 is represented by the character <code>&#125;</code> also known as the closing brace.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>&#125;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>125</td>
</tr>
<tr>
<td>Octal</td>
<td>175</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>7D</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 1101</td>
</tr>
<tr>
<td>Description</td>
<td>Closing brace</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+007D</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%7D</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=7D</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 124</title>
    <url>/2024/12/03//wiki/ascii-code-124/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 124 is represented by the character <code>|</code> also known as the vertical bar.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td>`</td>
<td>`</td>
</tr>
<tr>
<td>Decimal</td>
<td>124</td>
</tr>
<tr>
<td>Octal</td>
<td>174</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>7C</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 1100</td>
</tr>
<tr>
<td>Description</td>
<td>Vertical bar</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+007C</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%7C</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=7C</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 123</title>
    <url>/2024/12/03//wiki/ascii-code-123/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 123 is represented by the character <code>&#123;</code> also known as the opening brace.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>&#123;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>123</td>
</tr>
<tr>
<td>Octal</td>
<td>173</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>7B</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 1011</td>
</tr>
<tr>
<td>Description</td>
<td>Opening brace</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+007B</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%7B</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=7B</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 122</title>
    <url>/2024/12/03//wiki/ascii-code-122/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 122 is represented by the character <code>z</code> also known as the lowercase z.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>z</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>122</td>
</tr>
<tr>
<td>Octal</td>
<td>172</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>7A</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 1010</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase z</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+007A</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>z</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=7A</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 34</title>
    <url>/2024/12/03//wiki/ascii-code-34/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 34 is represented by the character “ also known as the double quotes (or speech marks).</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>&quot;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>34</td>
</tr>
<tr>
<td>Octal</td>
<td>42</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>22</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 0010</td>
</tr>
<tr>
<td>Description</td>
<td>Double quotes (or speech marks)</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0022</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%22</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=22</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 36</title>
    <url>/2024/12/03//wiki/ascii-code-36/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 36 is represented by the character <code>$</code> also known as the dollar.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>$</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>36</td>
</tr>
<tr>
<td>Octal</td>
<td>44</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>24</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 0100</td>
</tr>
<tr>
<td>Description</td>
<td>Dollar</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0024</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%24</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=24</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 126</title>
    <url>/2024/12/03//wiki/ascii-code-126/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 126 is represented by the character <code>~</code> also known as the equivalency sign - tilde.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>~</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>126</td>
</tr>
<tr>
<td>Octal</td>
<td>176</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>7E</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 1110</td>
</tr>
<tr>
<td>Description</td>
<td>Equivalency sign - tilde</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+007E</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>~</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=7E</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 127</title>
    <url>/2024/12/03//wiki/ascii-code-127/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 127 is represented by the control character ␡ also known as the delete.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td>␡</td>
</tr>
<tr>
<td>Decimal</td>
<td>127</td>
</tr>
<tr>
<td>Octal</td>
<td>177</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>7F</td>
</tr>
<tr>
<td>Binary</td>
<td>0111 1111</td>
</tr>
<tr>
<td>Description</td>
<td>Delete</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Control character</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+007F</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 41</title>
    <url>/2024/12/03//wiki/ascii-code-41/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 41 is represented by the character <code>)</code> also known as the close parenthesis (or close bracket).</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>)</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>41</td>
</tr>
<tr>
<td>Octal</td>
<td>51</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>29</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 1001</td>
</tr>
<tr>
<td>Description</td>
<td>Close parenthesis (or close bracket)</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0029</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%29</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=29</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 40</title>
    <url>/2024/12/03//wiki/ascii-code-40/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 40 is represented by the character <code>(</code> also known as the open parenthesis (or open bracket).</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>(</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>40</td>
</tr>
<tr>
<td>Octal</td>
<td>50</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>28</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 1000</td>
</tr>
<tr>
<td>Description</td>
<td>Open parenthesis (or open bracket)</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0028</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%28</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=28</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 35</title>
    <url>/2024/12/03//wiki/ascii-code-35/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 35 is represented by the character <code>#</code> also known as the number sign.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>#</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>35</td>
</tr>
<tr>
<td>Octal</td>
<td>43</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>23</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 0011</td>
</tr>
<tr>
<td>Description</td>
<td>Number sign</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0023</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%23</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=23</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 37</title>
    <url>/2024/12/03//wiki/ascii-code-37/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 37 is represented by the character % also known as the per cent sign.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>%</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>37</td>
</tr>
<tr>
<td>Octal</td>
<td>45</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>25</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 0101</td>
</tr>
<tr>
<td>Description</td>
<td>Per cent sign</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0025</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%25</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=25</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 43</title>
    <url>/2024/12/03//wiki/ascii-code-43/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 43 is represented by the character <code>+</code> also known as the plus.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>+</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>43</td>
</tr>
<tr>
<td>Octal</td>
<td>53</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>2B</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 1011</td>
</tr>
<tr>
<td>Description</td>
<td>Plus</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+002B</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%2B</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=2B</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 44</title>
    <url>/2024/12/03//wiki/ascii-code-44/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 44 is represented by the character <code>,</code> also known as the comma.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>,</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>44</td>
</tr>
<tr>
<td>Octal</td>
<td>54</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>2C</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 1100</td>
</tr>
<tr>
<td>Description</td>
<td>Comma</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+002C</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%2C</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=2C</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 38</title>
    <url>/2024/12/03//wiki/ascii-code-38/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 38 is represented by the character <code>&amp;</code> also known as the ampersand.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>&amp;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>38</td>
</tr>
<tr>
<td>Octal</td>
<td>46</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>26</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 0110</td>
</tr>
<tr>
<td>Description</td>
<td>Ampersand</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0026</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%26</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=26</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 39</title>
    <url>/2024/12/03//wiki/ascii-code-39/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 39 is represented by the character <code>&#39;</code> also known as the single quote.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>&#39;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>39</td>
</tr>
<tr>
<td>Octal</td>
<td>47</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>27</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 0111</td>
</tr>
<tr>
<td>Description</td>
<td>Single quote</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0027</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%27</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=27</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 46</title>
    <url>/2024/12/03//wiki/ascii-code-46/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 46 is represented by the character <code>.</code> also known as the period, dot or full stop.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>.</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>46</td>
</tr>
<tr>
<td>Octal</td>
<td>56</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>2E</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 1110</td>
</tr>
<tr>
<td>Description</td>
<td>Period, dot or full stop</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+002E</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%2E</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=2E</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 45</title>
    <url>/2024/12/03//wiki/ascii-code-45/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 45 is represented by the character <code>-</code> also known as the hyphen-minus.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>-</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>45</td>
</tr>
<tr>
<td>Octal</td>
<td>55</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>2D</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 1101</td>
</tr>
<tr>
<td>Description</td>
<td>Hyphen-minus</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+002D</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%2D</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=2D</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 42</title>
    <url>/2024/12/03//wiki/ascii-code-42/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 42 is represented by the character <code>*</code> also known as the asterisk.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>*</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>42</td>
</tr>
<tr>
<td>Octal</td>
<td>52</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>2A</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 1010</td>
</tr>
<tr>
<td>Description</td>
<td>Asterisk</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+002A</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%2A</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=2A</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 48</title>
    <url>/2024/12/03//wiki/ascii-code-48/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 48 is represented by the character 0 also known as the zero.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>0</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>48</td>
</tr>
<tr>
<td>Octal</td>
<td>60</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>30</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 0000</td>
</tr>
<tr>
<td>Description</td>
<td>Zero</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0030</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=30</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 49</title>
    <url>/2024/12/03//wiki/ascii-code-49/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 49 is represented by the character 1 also known as the one.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>1</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>49</td>
</tr>
<tr>
<td>Octal</td>
<td>61</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>31</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 0001</td>
</tr>
<tr>
<td>Description</td>
<td>One</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0031</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=31</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 50</title>
    <url>/2024/12/03//wiki/ascii-code-50/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 50 is represented by the character 2 also known as the two.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>2</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>50</td>
</tr>
<tr>
<td>Octal</td>
<td>62</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>32</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 0010</td>
</tr>
<tr>
<td>Description</td>
<td>Two</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0032</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>2</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=32</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 47</title>
    <url>/2024/12/03//wiki/ascii-code-47/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 47 is represented by the character <code>/</code> also known as the slash or divide.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>/</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>47</td>
</tr>
<tr>
<td>Octal</td>
<td>57</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>2F</td>
</tr>
<tr>
<td>Binary</td>
<td>0010 1111</td>
</tr>
<tr>
<td>Description</td>
<td>Slash or divide</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+002F</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%2F</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=2F</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 52</title>
    <url>/2024/12/03//wiki/ascii-code-52/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 52 is represented by the character 4 also known as the four.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>4</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>52</td>
</tr>
<tr>
<td>Octal</td>
<td>64</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>34</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 0100</td>
</tr>
<tr>
<td>Description</td>
<td>Four</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0034</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>4</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=34</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 55</title>
    <url>/2024/12/03//wiki/ascii-code-55/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 55 is represented by the character 7 also known as the seven.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>7</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>55</td>
</tr>
<tr>
<td>Octal</td>
<td>67</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>37</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 0111</td>
</tr>
<tr>
<td>Description</td>
<td>Seven</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0037</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>7</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=37</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 53</title>
    <url>/2024/12/03//wiki/ascii-code-53/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 53 is represented by the character 5 also known as the five.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>5</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>53</td>
</tr>
<tr>
<td>Octal</td>
<td>65</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>35</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 0101</td>
</tr>
<tr>
<td>Description</td>
<td>Five</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0035</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=35</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 51</title>
    <url>/2024/12/03//wiki/ascii-code-51/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 51 is represented by the character 3 also known as the three.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>3</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>51</td>
</tr>
<tr>
<td>Octal</td>
<td>63</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>33</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 0011</td>
</tr>
<tr>
<td>Description</td>
<td>Three</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0033</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>3</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=33</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 56</title>
    <url>/2024/12/03//wiki/ascii-code-56/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 56 is represented by the character 8 also known as the eight.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>8</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>56</td>
</tr>
<tr>
<td>Octal</td>
<td>70</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>38</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 1000</td>
</tr>
<tr>
<td>Description</td>
<td>Eight</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0038</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>8</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=38</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 58</title>
    <url>/2024/12/03//wiki/ascii-code-58/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 58 is represented by the character <code>:</code> also known as the colon.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>:</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>58</td>
</tr>
<tr>
<td>Octal</td>
<td>72</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>3A</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 1010</td>
</tr>
<tr>
<td>Description</td>
<td>Colon</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+003A</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%3A</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=3A</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 61</title>
    <url>/2024/12/03//wiki/ascii-code-61/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 61 is represented by the character <code>=</code> also known as the equals.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>=</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>61</td>
</tr>
<tr>
<td>Octal</td>
<td>75</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>3D</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 1101</td>
</tr>
<tr>
<td>Description</td>
<td>Equals</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+003D</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%3D</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=3D</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 54</title>
    <url>/2024/12/03//wiki/ascii-code-54/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 54 is represented by the character 6 also known as the six.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>6</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>54</td>
</tr>
<tr>
<td>Octal</td>
<td>66</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>36</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 0110</td>
</tr>
<tr>
<td>Description</td>
<td>Six</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0036</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=36</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 57</title>
    <url>/2024/12/03//wiki/ascii-code-57/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 57 is represented by the character 9 also known as the nine.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>9</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>57</td>
</tr>
<tr>
<td>Octal</td>
<td>71</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>39</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 1001</td>
</tr>
<tr>
<td>Description</td>
<td>Nine</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Digits</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0039</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>9</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=39</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 59</title>
    <url>/2024/12/03//wiki/ascii-code-59/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 59 is represented by the character <code>;</code> also known as the semicolon.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>59</td>
</tr>
<tr>
<td>Octal</td>
<td>73</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>3B</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 1011</td>
</tr>
<tr>
<td>Description</td>
<td>Semicolon</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+003B</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%3B</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=3B</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 60</title>
    <url>/2024/12/03//wiki/ascii-code-60/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 60 is represented by the character <code>&lt;</code> also known as the less than (or open angled bracket).</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>&lt;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>60</td>
</tr>
<tr>
<td>Octal</td>
<td>74</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>3C</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 1100</td>
</tr>
<tr>
<td>Description</td>
<td>Less than (or open angled bracket)</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+003C</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%3C</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=3C</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 64</title>
    <url>/2024/12/03//wiki/ascii-code-64/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 64 is represented by the character <code>@</code> also known as the at sign.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>@</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>64</td>
</tr>
<tr>
<td>Octal</td>
<td>100</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>40</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 0000</td>
</tr>
<tr>
<td>Description</td>
<td>At sign</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0040</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%40</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=40</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 63</title>
    <url>/2024/12/03//wiki/ascii-code-63/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 63 is represented by the character <code>?</code> also known as the question mark.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>?</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>63</td>
</tr>
<tr>
<td>Octal</td>
<td>77</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>3F</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 1111</td>
</tr>
<tr>
<td>Description</td>
<td>Question mark</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+003F</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%3F</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=3F</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 65</title>
    <url>/2024/12/03//wiki/ascii-code-65/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 65 is represented by the character <code>A</code> also known as the uppercase a.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>A</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>65</td>
</tr>
<tr>
<td>Octal</td>
<td>101</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>41</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 0001</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase A</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0041</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>A</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=41</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 69</title>
    <url>/2024/12/03//wiki/ascii-code-69/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 69 is represented by the character <code>E</code> also known as the uppercase e.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>E</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>69</td>
</tr>
<tr>
<td>Octal</td>
<td>105</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>45</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 0101</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase E</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0045</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>E</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=45</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 62</title>
    <url>/2024/12/03//wiki/ascii-code-62/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 62 is represented by the character <code>&gt;</code> also known as the greater than (or close angled bracket).</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>&gt;</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>62</td>
</tr>
<tr>
<td>Octal</td>
<td>76</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>3E</td>
</tr>
<tr>
<td>Binary</td>
<td>0011 1110</td>
</tr>
<tr>
<td>Description</td>
<td>Greater than (or close angled bracket)</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+003E</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%3E</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=3E</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 68</title>
    <url>/2024/12/03//wiki/ascii-code-68/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 68 is represented by the character <code>D</code> also known as the uppercase d.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>D</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>68</td>
</tr>
<tr>
<td>Octal</td>
<td>104</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>44</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 0100</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase D</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0044</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>D</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=44</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 70</title>
    <url>/2024/12/03//wiki/ascii-code-70/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 70 is represented by the character <code>F</code> also known as the uppercase f.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>F</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>70</td>
</tr>
<tr>
<td>Octal</td>
<td>106</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>46</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 0110</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase F</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0046</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>F</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=46</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 72</title>
    <url>/2024/12/03//wiki/ascii-code-72/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 72 is represented by the character <code>H</code> also known as the uppercase h.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>H</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>72</td>
</tr>
<tr>
<td>Octal</td>
<td>110</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>48</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 1000</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase H</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0048</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>H</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=48</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 66</title>
    <url>/2024/12/03//wiki/ascii-code-66/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 66 is represented by the character <code>B</code> also known as the uppercase b.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>B</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>66</td>
</tr>
<tr>
<td>Octal</td>
<td>102</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>42</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 0010</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase B</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0042</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>B</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=42</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 67</title>
    <url>/2024/12/03//wiki/ascii-code-67/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 67 is represented by the character <code>C</code> also known as the uppercase c.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>C</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>67</td>
</tr>
<tr>
<td>Octal</td>
<td>103</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>43</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 0011</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase C</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0043</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>C</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=43</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 71</title>
    <url>/2024/12/03//wiki/ascii-code-71/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 71 is represented by the character <code>G</code> also known as the uppercase g.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>G</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>71</td>
</tr>
<tr>
<td>Octal</td>
<td>107</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>47</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 0111</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase G</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0047</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>G</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=47</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 73</title>
    <url>/2024/12/03//wiki/ascii-code-73/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 73 is represented by the character <code>I</code> also known as the uppercase i.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>I</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>73</td>
</tr>
<tr>
<td>Octal</td>
<td>111</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>49</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 1001</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase I</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0049</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>I</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=49</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 76</title>
    <url>/2024/12/03//wiki/ascii-code-76/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 76 is represented by the character <code>L</code> also known as the uppercase l.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>L</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>76</td>
</tr>
<tr>
<td>Octal</td>
<td>114</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>4C</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 1100</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase L</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+004C</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>L</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=4C</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 75</title>
    <url>/2024/12/03//wiki/ascii-code-75/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 75 is represented by the character <code>K</code> also known as the uppercase k.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>K</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>75</td>
</tr>
<tr>
<td>Octal</td>
<td>113</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>4B</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 1011</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase K</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+004B</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>K</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=4B</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 74</title>
    <url>/2024/12/03//wiki/ascii-code-74/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 74 is represented by the character <code>J</code> also known as the uppercase j.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>J</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>74</td>
</tr>
<tr>
<td>Octal</td>
<td>112</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>4A</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 1010</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase J</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+004A</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>J</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=4A</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 80</title>
    <url>/2024/12/03//wiki/ascii-code-80/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 80 is represented by the character <code>P</code> also known as the uppercase p.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>P</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>80</td>
</tr>
<tr>
<td>Octal</td>
<td>120</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>50</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 0000</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase P</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0050</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>P</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=50</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 79</title>
    <url>/2024/12/03//wiki/ascii-code-79/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 79 is represented by the character <code>O</code> also known as the uppercase o.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>O</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>79</td>
</tr>
<tr>
<td>Octal</td>
<td>117</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>4F</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 1111</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase O</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+004F</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>O</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=4F</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 78</title>
    <url>/2024/12/03//wiki/ascii-code-78/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 78 is represented by the character <code>N</code> also known as the uppercase n.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>N</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>78</td>
</tr>
<tr>
<td>Octal</td>
<td>116</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>4E</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 1110</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase N</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+004E</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>N</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=4E</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 77</title>
    <url>/2024/12/03//wiki/ascii-code-77/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 77 is represented by the character <code>M</code> also known as the uppercase m.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>M</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>77</td>
</tr>
<tr>
<td>Octal</td>
<td>115</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>4D</td>
</tr>
<tr>
<td>Binary</td>
<td>0100 1101</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase M</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+004D</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>M</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=4D</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 81</title>
    <url>/2024/12/03//wiki/ascii-code-81/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 81 is represented by the character <code>Q</code> also known as the uppercase q.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>Q</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>81</td>
</tr>
<tr>
<td>Octal</td>
<td>121</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>51</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 0001</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase Q</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0051</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>Q</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=51</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 84</title>
    <url>/2024/12/03//wiki/ascii-code-84/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 84 is represented by the character <code>T</code> also known as the uppercase t.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>T</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>84</td>
</tr>
<tr>
<td>Octal</td>
<td>124</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>54</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 0100</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase T</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0054</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>T</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=54</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 83</title>
    <url>/2024/12/03//wiki/ascii-code-83/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 83 is represented by the character <code>S</code> also known as the uppercase s.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>S</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>83</td>
</tr>
<tr>
<td>Octal</td>
<td>123</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>53</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 0011</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase S</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0053</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>S</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=53</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 82</title>
    <url>/2024/12/03//wiki/ascii-code-82/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 82 is represented by the character <code>R</code> also known as the uppercase r.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>R</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>82</td>
</tr>
<tr>
<td>Octal</td>
<td>122</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>52</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 0010</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase R</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0052</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>R</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=52</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 88</title>
    <url>/2024/12/03//wiki/ascii-code-88/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 88 is represented by the character <code>X</code> also known as the uppercase x.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>X</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>88</td>
</tr>
<tr>
<td>Octal</td>
<td>130</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>58</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 1000</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase X</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0058</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>X</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=58</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 85</title>
    <url>/2024/12/03//wiki/ascii-code-85/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 85 is represented by the character <code>U</code> also known as the uppercase u.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>U</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>85</td>
</tr>
<tr>
<td>Octal</td>
<td>125</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>55</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 0101</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase U</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0055</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>U</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=55</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 87</title>
    <url>/2024/12/03//wiki/ascii-code-87/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 87 is represented by the character <code>W</code> also known as the uppercase w.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>W</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>87</td>
</tr>
<tr>
<td>Octal</td>
<td>127</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>57</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 0111</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase W</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0057</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>W</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=57</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 86</title>
    <url>/2024/12/03//wiki/ascii-code-86/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 86 is represented by the character <code>V</code> also known as the uppercase v.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>V</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>86</td>
</tr>
<tr>
<td>Octal</td>
<td>126</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>56</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 0110</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase V</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0056</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>V</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=56</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 94</title>
    <url>/2024/12/03//wiki/ascii-code-94/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 94 is represented by the character <code>^</code> also known as the caret - circumflex.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>^</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>94</td>
</tr>
<tr>
<td>Octal</td>
<td>136</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>5E</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 1110</td>
</tr>
<tr>
<td>Description</td>
<td>Caret - circumflex</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+005E</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%5E</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=5E</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 89</title>
    <url>/2024/12/03//wiki/ascii-code-89/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 89 is represented by the character <code>Y</code> also known as the uppercase y.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>Y</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>89</td>
</tr>
<tr>
<td>Octal</td>
<td>131</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>59</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 1001</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase Y</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0059</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>Y</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=59</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 92</title>
    <url>/2024/12/03//wiki/ascii-code-92/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 92 is represented by the character <code>\</code> also known as the backslash.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>\</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>92</td>
</tr>
<tr>
<td>Octal</td>
<td>134</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>5C</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 1100</td>
</tr>
<tr>
<td>Description</td>
<td>Backslash</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+005C</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%5C</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=5C</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 90</title>
    <url>/2024/12/03//wiki/ascii-code-90/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 90 is represented by the character <code>Z</code> also known as the uppercase z.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>Z</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>90</td>
</tr>
<tr>
<td>Octal</td>
<td>132</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>5A</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 1010</td>
</tr>
<tr>
<td>Description</td>
<td>Uppercase Z</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Uppercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+005A</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>Z</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=5A</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 93</title>
    <url>/2024/12/03//wiki/ascii-code-93/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 93 is represented by the character <code>]</code> also known as the closing bracket.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>]</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>93</td>
</tr>
<tr>
<td>Octal</td>
<td>135</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>5D</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 1101</td>
</tr>
<tr>
<td>Description</td>
<td>Closing bracket</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+005D</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%5D</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=5D</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 99</title>
    <url>/2024/12/03//wiki/ascii-code-99/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 99 is represented by the character <code>c</code> also known as the lowercase c.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>c</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>99</td>
</tr>
<tr>
<td>Octal</td>
<td>143</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>63</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 0011</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase c</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0063</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>c</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=63</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 91</title>
    <url>/2024/12/03//wiki/ascii-code-91/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 91 is represented by the character <code>[</code> also known as the opening bracket.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>[</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>91</td>
</tr>
<tr>
<td>Octal</td>
<td>133</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>5B</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 1011</td>
</tr>
<tr>
<td>Description</td>
<td>Opening bracket</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+005B</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%5B</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=5B</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 97</title>
    <url>/2024/12/03//wiki/ascii-code-97/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 97 is represented by the character <code>a</code> also known as the lowercase a.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>a</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>97</td>
</tr>
<tr>
<td>Octal</td>
<td>141</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>61</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 0001</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase a</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0061</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>a</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=61</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 98</title>
    <url>/2024/12/03//wiki/ascii-code-98/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 98 is represented by the character <code>b</code> also known as the lowercase b.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>b</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>98</td>
</tr>
<tr>
<td>Octal</td>
<td>142</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>62</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 0010</td>
</tr>
<tr>
<td>Description</td>
<td>Lowercase b</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Lowercase Latin alphabet</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0062</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>b</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=62</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 96</title>
    <url>/2024/12/03//wiki/ascii-code-96/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 96 is represented by the character ``` also known as the grave accent.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td>```</td>
</tr>
<tr>
<td>Decimal</td>
<td>96</td>
</tr>
<tr>
<td>Octal</td>
<td>140</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>60</td>
</tr>
<tr>
<td>Binary</td>
<td>0110 0000</td>
</tr>
<tr>
<td>Description</td>
<td>Grave accent</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+0060</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>%60</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=60</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII Code 95</title>
    <url>/2024/12/03//wiki/ascii-code-95/</url>
    <content><![CDATA[<p>In the 7-bit ASCII character set, ASCII code 95 is represented by the character <code>_</code> also known as the underscore.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Character Representation</strong></th>
<th><strong>Value/Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII Character</td>
<td><code>_</code></td>
</tr>
<tr>
<td>Decimal</td>
<td>95</td>
</tr>
<tr>
<td>Octal</td>
<td>137</td>
</tr>
<tr>
<td>Hexadecimal</td>
<td>5F</td>
</tr>
<tr>
<td>Binary</td>
<td>0101 1111</td>
</tr>
<tr>
<td>Description</td>
<td>Underscore</td>
</tr>
<tr>
<td>Category</td>
<td>Printable Characters</td>
</tr>
<tr>
<td>Subcategory</td>
<td>Punctuation and Symbols</td>
</tr>
<tr>
<td>Unicode</td>
<td>U+005F</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h2><p>Encoding non-standard letters and characters into values that can be displayed e.g. in browsers</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Encoding Method</th>
<th>Encoded Value</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>URL Escape Code</td>
<td>_</td>
<td></td>
</tr>
<tr>
<td>Quoted-printable</td>
<td>=5F</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>ascii-code</tag>
      </tags>
  </entry>
  <entry>
    <title>What is pagefile.sys in Windows, and should it be deleted?</title>
    <url>/2024/12/09/what-is-pagefile-sys-in-windows/</url>
    <content><![CDATA[<p>When your Windows computer is running low on storage, you might start looking for ways to free up some space. One of the less conventional methods you may come across is deleting the pagefile.sys file. However, before you consider deleting it, it’s important to understand what pagefile.sys is and whether you should delete it in the first place.</p>
<p>Here’s a quick rundown of what you can adjust about pagefile.sys.</p>
<h2 id="What-is-pagefile-sys"><a href="#What-is-pagefile-sys" class="headerlink" title="What is pagefile.sys?"></a>What is pagefile.sys?</h2><p>pagefile.sys is a system file in Windows that acts as virtual memory for your computer’s RAM (random access memory). When your computer’s RAM starts running low, it uses the pagefile to offload less critical data, such as files and apps, to free up space.</p>
<p>So, how does your computer decide when to unload data from RAM? Let’s take an example with an app to explain how it works.</p>
<p>Normally, when you minimize an app, Windows keeps it running in the background but stores its data in memory so it can quickly reload it when needed.</p>
<p>But when you open a memory-intensive application, Windows needs to make room in RAM. To do this, Windows will offload the data from your minimized apps into the pagefile.sys, freeing up memory without losing any of the data.</p>
<blockquote>
<p><strong>Note</strong><br>By default, Windows stores the pagefile.sys in the root directory of your local drive (C:).</p>
</blockquote>
<p>When you need to use a minimized app again, Windows will read its data from the pagefile.sys file. This helps compensate for the lack of physical memory using your local drive.</p>
<p>Reading data from pagefile.sys is slower than accessing it directly from RAM. If you’re using a hard disk drive (HDD) instead of a solid-state drive (SSD), this process will be even slower. However, it’s still faster than completely closing and reopening the app.</p>
<h2 id="How-to-Check-the-Size-of-pagefile-sys"><a href="#How-to-Check-the-Size-of-pagefile-sys" class="headerlink" title="How to Check the Size of pagefile.sys?"></a>How to Check the Size of pagefile.sys?</h2><p>By default, Windows hides the pagefile.sys file to prevent tampering. If you’d like to see it, follow these steps:</p>
<ol>
<li>Press <strong>Win + E</strong> to open <strong>File Explorer</strong>.</li>
<li>Click on <strong>This PC</strong> in the left pane, then double-click on the <strong>Local Disk (C:)</strong> in the right pane to open it.</li>
<li>Now, you need to open <strong>Folder Options</strong>. In Windows 11, click the three dots in the top menu and select <strong>Options</strong>.</li>
<li>In Windows 10, click <strong>View</strong> in the top menu, then select <strong>Options</strong>. In the Folder Options window, go to the <strong>View</strong> tab and uncheck <strong>Hide protected operating system files (Recommended)</strong>.</li>
<li>In the warning prompt that appears, click <strong>Yes</strong>.</li>
<li>Select the <strong>Show hidden files, folders, and drives</strong> option.</li>
<li>Click <strong>OK</strong> to close Folder Options and apply the changes.</li>
<li>Scroll down in the Local Disk, and you’ll now be able to see <strong>pagefile.sys</strong>.</li>
</ol>
<p>As you can see, the pagefile.sys file is quite large, which is why some people consider deleting it when storage space is tight.</p>
<h2 id="Should-You-Delete-pagefile-sys"><a href="#Should-You-Delete-pagefile-sys" class="headerlink" title="Should You Delete pagefile.sys?"></a>Should You Delete pagefile.sys?</h2><p>Deleting pagefile.sys to free up disk space might make sense if you have a lot of RAM. With sufficient memory, your system can store all the data needed to keep applications running without unloading anything. For most Windows users, a minimum of 16GB of RAM is recommended.</p>
<p>However, if you delete pagefile.sys and your computer runs out of physical memory, your system will start to slow down. If the slowdown gets too bad, Windows itself might even crash.</p>
<p>You might also notice some applications running slower or crashing. This happens because they have nowhere to store the data they need to operate normally, since your RAM is full and there’s no pagefile.sys to handle the overflow.</p>
<p>So, unless your physical memory requirements don’t exceed the installed RAM, we recommend keeping pagefile.sys enabled.</p>
<h2 id="How-to-Delete-pagefile-sys"><a href="#How-to-Delete-pagefile-sys" class="headerlink" title="How to Delete pagefile.sys"></a>How to Delete pagefile.sys</h2><p>Since Windows constantly uses pagefile.sys, you can’t simply delete it through File Explorer. However, there’s another way to remove the file and free up some disk space. Just follow these steps:</p>
<ol>
<li>Press <strong>Win + S</strong> to open Windows Search.</li>
<li>Type <strong>sysdm.cpl</strong> into the search bar and hit <strong>Enter</strong>.</li>
<li>Select the <strong>Advanced</strong> tab, then click the <strong>Settings</strong> button under the <strong>Performance</strong> section.</li>
<li>In the <strong>Performance Options</strong> dialog, go to the <strong>Advanced</strong> tab and click <strong>Change</strong>.</li>
<li>In the <strong>Virtual Memory</strong> dialog, uncheck the box at the top that says <strong>Automatically manage paging file size for all drives</strong>.</li>
<li>Select the <strong>No paging file</strong> radio button, then click <strong>Set</strong>.</li>
<li>You’ll get a warning from Windows. Click <strong>Yes</strong> to confirm.</li>
<li>Click <strong>OK</strong> to close the Virtual Memory dialog and apply the changes.</li>
<li>Restart your computer for the changes to take effect.</li>
</ol>
<p>Once Windows reboots, it will no longer use pagefile.sys, and the file will be removed from your local drive.</p>
<h2 id="How-to-Adjust-the-Size-of-pagefile-sys"><a href="#How-to-Adjust-the-Size-of-pagefile-sys" class="headerlink" title="How to Adjust the Size of pagefile.sys"></a>How to Adjust the Size of pagefile.sys</h2><p>If deleting pagefile.sys isn’t an option for you, you can adjust its size instead. Here’s how to do it:</p>
<ol>
<li>Press <strong>Win + S</strong> to open Windows Search.</li>
<li>Type <strong>sysdm.cpl</strong> in the search bar and press <strong>Enter</strong>.</li>
<li>Click on the <strong>Advanced</strong> tab, then click the <strong>Settings</strong> button under the <strong>Performance</strong> section.</li>
<li>In the <strong>Performance Options</strong> dialog, go to the <strong>Advanced</strong> tab and click <strong>Change</strong>.</li>
<li>In the <strong>Virtual Memory</strong> dialog, uncheck the box that says <strong>Automatically manage paging file size for all drives</strong>.</li>
<li>Select the <strong>Custom size</strong> radio button. You’ll now see two text boxes (Initial size and Maximum size) become active.</li>
<li>Enter the desired page file size in both text boxes (in megabytes), then click <strong>Set</strong>.</li>
<li>Click <strong>OK</strong> to close the Virtual Memory dialog and apply the changes.</li>
<li>Restart your computer for the changes to take effect.</li>
</ol>
<p>That’s it! Your pagefile size will now be adjusted.</p>
<h2 id="Is-pagefile-sys-Important"><a href="#Is-pagefile-sys-Important" class="headerlink" title="Is pagefile.sys Important?"></a>Is pagefile.sys Important?</h2><p>pagefile.sys is crucial for keeping your Windows computer running smoothly. It helps provide extra memory space for your PC when physical RAM can no longer handle more data.</p>
<p>You can delete it, but only if you’re sure your computer has enough memory to run on its own. If not, it’s better to simply adjust the size of pagefile.sys so it doesn’t take up too much space. If you’re not sure what to do, it’s best to let Windows manage the file automatically and look for other ways to free up space on your storage drive.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Install OpenJDK 21 LTS on Ubuntu 24.04|22.04|20.04|18.04</title>
    <url>/2025/01/01/install-java-jdk-21-openjdk-21-on-ubuntu/</url>
    <content><![CDATA[<blockquote>
<p>JDK 21 is a long-term support (LTS) release from most vendors.</p>
</blockquote>
<p>OpenJDK (Open Java Development Kit) is an open-source implementation of the Java Platform, Standard Edition (Java SE) licensed under the GNU General Public License, which provides a complete runtime environment for executing Java applications and a development environment for building Java applications. OpenJDK is governed by the OpenJDK Community, and its development is led by Oracle, with contributions from various companies and individuals. </p>
<p>OpenJDK 21, released in September 2023,  is a production-ready open-source builds of the <a href="https://openjdk.org/projects/jdk/21/">Java Development Kit, version 21</a>, an implementation of the <a href="http://openjdk.org/projects/jdk/21/spec/">Java SE 21 Platform</a>. It introduces several new features and improvements to the Java platform. Key enhancements in OpenJDK 21 include updates to the language, the JDK internals, performance optimizations, and the introduction of new features such as pattern matching for switch statements and virtual threads, which improve both the usability and performance of Java applications, especially in the context of modern multicore processors. </p>
<p>To install OpenJDK 21, visit <a href="https://jdk.java.net/archive/">OpenJDK GA Release Page</a> and get the latest version of OpenJDK 21 for your CPU architecture. The latest available version of OpenJDK 21 is 21.0.2.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://download.java.net/java/GA/jdk21.0.2/f2283984656d49d69e91c558476027ac/13/GPL/openjdk-21.0.2_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure>
<p>Extract downloaded archive.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xvf openjdk-21.0.2_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure>
<p>Set environment variables inside <em>/etc/profile.d/</em> directory. For example: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/profile.d/dev-conf.sh</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/java/jdk-21.0.2</span><br><span class="line"><span class="built_in">export</span> PATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$&#123;PATH&#125;</span></span><br></pre></td></tr></table></figure>
<p>Source the files to make variables available in your current shell session.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile.d/dev-conf.sh</span><br></pre></td></tr></table></figure>
<p>Confirm Java version using the <code>java -version</code> command.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ java -version</span><br><span class="line">openjdk version <span class="string">&quot;21.0.2&quot;</span> 2024-01-16</span><br><span class="line">OpenJDK Runtime Environment (build 21.0.2+13-58)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 21.0.2+13-58, mixed mode, sharing)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>HowTo</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Install OpenJDK 17 on Ubuntu 24.0.4</title>
    <url>/2025/01/04/how-to-install-openjdk-17-on-ubuntu-24-0-4/</url>
    <content><![CDATA[<p>This guide walks you through the step-by-step process, ensuring you get OpenJDK 17 up and running on your system in no time.</p>
<h2 id="Step-1-Update-Package-Lists"><a href="#Step-1-Update-Package-Lists" class="headerlink" title="Step 1: Update Package Lists"></a>Step 1: Update Package Lists</h2><p>Before starting the installation process, it’s always a good practice to update your system’s package list. This ensures that you’re installing the latest version available in the repositories.</p>
<p>Open your terminal and run the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>
<p>This command will refresh the list of available packages and their versions, making sure you are working with the most recent versions of software.</p>
<h2 id="Step-2-Install-OpenJDK-17"><a href="#Step-2-Install-OpenJDK-17" class="headerlink" title="Step 2: Install OpenJDK 17"></a>Step 2: Install OpenJDK 17</h2><p>Ubuntu 24.0.4 includes OpenJDK 17 in its official package repositories, so you can easily install it using the <code>apt</code> package manager.</p>
<p>To install OpenJDK 17, execute the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install openjdk-17-jdk</span><br></pre></td></tr></table></figure>
<p>This will install the OpenJDK 17 Development Kit (JDK), which includes the Java Runtime Environment (JRE) as well as development tools like the compiler and debugger.</p>
<h2 id="Step-3-Verify-the-Installation"><a href="#Step-3-Verify-the-Installation" class="headerlink" title="Step 3: Verify the Installation"></a>Step 3: Verify the Installation</h2><p>After the installation is complete, you can verify that OpenJDK 17 is installed correctly by checking the version with the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p>You should see an output similar to this:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openjdk version &quot;17.0.x&quot; 2021-09-14</span><br><span class="line">OpenJDK Runtime Environment (build 17.0.x+xx-xxx)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 17.0.x+xx-xxx, mixed mode, sharing)</span><br></pre></td></tr></table></figure>
<p>This confirms that OpenJDK 17 is installed and running on your system.</p>
<h2 id="Step-4-Set-the-Default-Java-Version-Optional"><a href="#Step-4-Set-the-Default-Java-Version-Optional" class="headerlink" title="Step 4: Set the Default Java Version (Optional)"></a>Step 4: Set the Default Java Version (Optional)</h2><p>If you have multiple versions of Java installed on your system, you may want to set OpenJDK 17 as the default Java version. To do this, you can use the <code>update-alternatives</code> command:</p>
<ol>
<li>First, configure the <code>java</code> alternatives:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> update-alternatives --config java</span><br></pre></td></tr></table></figure>
<p>This will present a list of installed Java versions. You can choose the one corresponding to OpenJDK 17 by entering the number next to it.</p>
<ol>
<li>You can also set the default <code>javac</code> (Java compiler) version in a similar manner:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> update-alternatives --config javac</span><br></pre></td></tr></table></figure>
<h2 id="Step-5-Set-JAVA-HOME-Optional"><a href="#Step-5-Set-JAVA-HOME-Optional" class="headerlink" title="Step 5: Set JAVA_HOME (Optional)"></a>Step 5: Set JAVA_HOME (Optional)</h2><p>Many Java applications require the <code>JAVA_HOME</code> environment variable to be set. To set it for OpenJDK 17, follow these steps:</p>
<ol>
<li>Find the installation path of OpenJDK 17 with the following command:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> update-alternatives --config java</span><br></pre></td></tr></table></figure>
This will show the path to the Java executable. It will look something like <code>/usr/lib/jvm/java-17-openjdk-amd64/bin/java</code>.</li>
<li>Create or edit the <code>/etc/environment</code> file:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/environment</span><br></pre></td></tr></table></figure></li>
<li>Add the following line at the end of the file, adjusting the path based on your system’s installation path:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=<span class="string">&quot;/usr/lib/jvm/java-17-openjdk-amd64&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>Save the file and close the editor.</li>
<li>Finally, apply the changes by running:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/environment</span><br></pre></td></tr></table></figure></li>
<li>Verify that the <code>JAVA_HOME</code> variable is set correctly:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br></pre></td></tr></table></figure>
This should display the path to your OpenJDK 17 installation.</li>
</ol>
<h2 id="Step-6-Optional-Install-OpenJDK-17-from-a-PPA-if-not-available-in-repositories"><a href="#Step-6-Optional-Install-OpenJDK-17-from-a-PPA-if-not-available-in-repositories" class="headerlink" title="Step 6: Optional - Install OpenJDK 17 from a PPA (if not available in repositories)"></a>Step 6: Optional - Install OpenJDK 17 from a PPA (if not available in repositories)</h2><p>If, for any reason, OpenJDK 17 is not available in your Ubuntu 24.0.4 repositories, you can use the <code>openjdk</code> PPA (Personal Package Archive). Here’s how:</p>
<ol>
<li>Add the PPA repository:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:openjdk-r/ppa</span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure></li>
<li>Then install OpenJDK 17:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install openjdk-17-jdk</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>You’ve successfully installed OpenJDK 17 on Ubuntu 24.0.4. Whether you’re a developer setting up a Java environment or a server administrator configuring a Java-based application, these steps should have you up and running in no time. </p>
<p>If you need further help or have any issues, don’t hesitate to check the official OpenJDK documentation or ask for support in relevant online forums.</p>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>HowTo</tag>
      </tags>
  </entry>
  <entry>
    <title>Install OpenJDK 17 LTS on Ubuntu 24.04|22.04|20.04|18.04</title>
    <url>/2025/01/03/install-openjdk-17-on-ubuntu/</url>
    <content><![CDATA[<ol>
<li>Download OpenJDK 17. To install OpenJDK 17, visit OpenJDK 17 release page and get the latest version available for your CPU architecture,<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://download.java.net/java/GA/jdk17.0.2/dfd4a8d0985749f896bed50d7138ee7f/8/GPL/openjdk-17.0.2_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure></li>
<li>Extract downloaded archive.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar xvf openjdk-17.0.2_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure></li>
<li>Move the folder created after extraction.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> jdk-17.0.2/ /usr/local/</span><br></pre></td></tr></table></figure></li>
<li>Set environment variables inside <code>/etc/profile.d/</code> directory.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> vi /etc/profile.d/jdk17.sh</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/jdk-17.0.2</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure></li>
<li>Source the files to make variables available in your current shell session.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile.d/jdk17.sh</span><br></pre></td></tr></table></figure></li>
<li>Confirm Java version using the following command.<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ java --version</span><br><span class="line">openjdk 17.0.2 2022-01-18</span><br><span class="line">OpenJDK Runtime Environment (build 17.0.2+8-86)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>HowTo</tag>
      </tags>
  </entry>
  <entry>
    <title>A Complete Guide to Base64 Encoding and Decoding</title>
    <url>/2025/01/17/a-complete-guide-to-base64-encoding-and-decoding/</url>
    <content><![CDATA[<p>Base64 encoding is a crucial technique in modern software development, used to convert binary data into a text format that can be safely transmitted across systems. This comprehensive guide will cover everything you need to know about Base64, from basic concepts to practical implementations.</p>
<h2 id="What-is-Base64"><a href="#What-is-Base64" class="headerlink" title="What is Base64?"></a>What is Base64?</h2><p>Base64 is an encoding scheme that converts binary data into an ASCII string format. It represents binary data using a set of 64 characters that are universally available across different systems. This encoding is particularly useful when you need to:</p>
<ul>
<li>Send binary data through text-only systems</li>
<li>Store binary data in databases</li>
<li>Include binary data in URLs</li>
<li>Embed images directly in HTML/CSS</li>
<li>Transfer files through email systems</li>
</ul>
<h2 id="The-Base64-Character-Set"><a href="#The-Base64-Character-Set" class="headerlink" title="The Base64 Character Set"></a>The Base64 Character Set</h2><p>Base64 uses the following 64 characters:</p>
<ul>
<li>A-Z (26 characters)</li>
<li>a-z (26 characters)</li>
<li>0-9 (10 characters)</li>
<li><code>+</code> and / (2 characters)</li>
<li>= (used for padding)</li>
</ul>
<p><strong>This is the Base64 alphabet defined in RFC 4648: </strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Character</th>
<th>Binary</th>
<th>Decimal</th>
<th>Character</th>
<th>Binary</th>
<th>Decimal</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>000000</td>
<td>0</td>
<td>g</td>
<td>100000</td>
<td>32</td>
</tr>
<tr>
<td>B</td>
<td>000001</td>
<td>1</td>
<td>h</td>
<td>100001</td>
<td>33</td>
</tr>
<tr>
<td>C</td>
<td>000010</td>
<td>2</td>
<td>i</td>
<td>100010</td>
<td>34</td>
</tr>
<tr>
<td>D</td>
<td>000011</td>
<td>3</td>
<td>j</td>
<td>100011</td>
<td>35</td>
</tr>
<tr>
<td>E</td>
<td>000100</td>
<td>4</td>
<td>k</td>
<td>100100</td>
<td>36</td>
</tr>
<tr>
<td>F</td>
<td>000101</td>
<td>5</td>
<td>l</td>
<td>100101</td>
<td>37</td>
</tr>
<tr>
<td>G</td>
<td>000110</td>
<td>6</td>
<td>m</td>
<td>100110</td>
<td>38</td>
</tr>
<tr>
<td>H</td>
<td>000111</td>
<td>7</td>
<td>n</td>
<td>100111</td>
<td>39</td>
</tr>
<tr>
<td>I</td>
<td>001000</td>
<td>8</td>
<td>o</td>
<td>101000</td>
<td>40</td>
</tr>
<tr>
<td>J</td>
<td>001001</td>
<td>9</td>
<td>p</td>
<td>101001</td>
<td>41</td>
</tr>
<tr>
<td>K</td>
<td>001010</td>
<td>10</td>
<td>q</td>
<td>101010</td>
<td>42</td>
</tr>
<tr>
<td>L</td>
<td>001011</td>
<td>11</td>
<td>r</td>
<td>101011</td>
<td>43</td>
</tr>
<tr>
<td>M</td>
<td>001100</td>
<td>12</td>
<td>s</td>
<td>101100</td>
<td>44</td>
</tr>
<tr>
<td>N</td>
<td>001101</td>
<td>13</td>
<td>t</td>
<td>101101</td>
<td>45</td>
</tr>
<tr>
<td>O</td>
<td>001110</td>
<td>14</td>
<td>u</td>
<td>101110</td>
<td>46</td>
</tr>
<tr>
<td>P</td>
<td>001111</td>
<td>15</td>
<td>v</td>
<td>101111</td>
<td>47</td>
</tr>
<tr>
<td>Q</td>
<td>010000</td>
<td>16</td>
<td>w</td>
<td>110000</td>
<td>48</td>
</tr>
<tr>
<td>R</td>
<td>010001</td>
<td>17</td>
<td>x</td>
<td>110001</td>
<td>49</td>
</tr>
<tr>
<td>S</td>
<td>010010</td>
<td>18</td>
<td>y</td>
<td>110010</td>
<td>50</td>
</tr>
<tr>
<td>T</td>
<td>010011</td>
<td>19</td>
<td>z</td>
<td>110011</td>
<td>51</td>
</tr>
<tr>
<td>U</td>
<td>010100</td>
<td>20</td>
<td>0</td>
<td>110100</td>
<td>52</td>
</tr>
<tr>
<td>V</td>
<td>010101</td>
<td>21</td>
<td>1</td>
<td>110101</td>
<td>53</td>
</tr>
<tr>
<td>W</td>
<td>010110</td>
<td>22</td>
<td>2</td>
<td>110110</td>
<td>54</td>
</tr>
<tr>
<td>X</td>
<td>010111</td>
<td>23</td>
<td>3</td>
<td>110111</td>
<td>55</td>
</tr>
<tr>
<td>Y</td>
<td>011000</td>
<td>24</td>
<td>4</td>
<td>111000</td>
<td>56</td>
</tr>
<tr>
<td>Z</td>
<td>011001</td>
<td>25</td>
<td>5</td>
<td>111001</td>
<td>57</td>
</tr>
<tr>
<td>a</td>
<td>011010</td>
<td>26</td>
<td>6</td>
<td>111010</td>
<td>58</td>
</tr>
<tr>
<td>b</td>
<td>011011</td>
<td>27</td>
<td>7</td>
<td>111011</td>
<td>59</td>
</tr>
<tr>
<td>c</td>
<td>011100</td>
<td>28</td>
<td>8</td>
<td>111100</td>
<td>60</td>
</tr>
<tr>
<td>d</td>
<td>011101</td>
<td>29</td>
<td>9</td>
<td>111101</td>
<td>61</td>
</tr>
<tr>
<td>e</td>
<td>011110</td>
<td>30</td>
<td>+</td>
<td>111110</td>
<td>62</td>
</tr>
<tr>
<td>f</td>
<td>011111</td>
<td>31</td>
<td>/</td>
<td>111111</td>
<td>63</td>
</tr>
</tbody>
</table>
</div>
<h2 id="How-Base64-Encoding-Works"><a href="#How-Base64-Encoding-Works" class="headerlink" title="How Base64 Encoding Works"></a>How Base64 Encoding Works</h2><p>The encoding process follows these steps:</p>
<ol>
<li>Binary data is split into 24-bit groups (3 bytes)</li>
<li>Each group is divided into four 6-bit chunks</li>
<li>Each 6-bit chunk is converted to a corresponding Base64 character</li>
<li>If the final group is less than 24 bits, padding (‘=’) is added</li>
</ol>
<p>For example, the encoded value of <code>Lin</code> is <code>TGlu</code>. Encoded in ASCII, the characters <code>L</code>, <code>i</code>, and <code>n</code> are stored as the byte values <code>76</code>, <code>105</code>, and <code>110</code>, which are the 8-bit binary values <code>01001100</code>, <code>01101001</code>, and <code>01101110</code>. </p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Character</th>
<th>byte value</th>
<th>8-bit binary value</th>
</tr>
</thead>
<tbody>
<tr>
<td>L</td>
<td>76</td>
<td>01001100</td>
</tr>
<tr>
<td>i</td>
<td>105</td>
<td>01101001</td>
</tr>
<tr>
<td>n</td>
<td>110</td>
<td>01101110</td>
</tr>
</tbody>
</table>
</div>
<p>These three values are joined together into a 24-bit string, producing </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">01001100 01101001 01101110</span><br></pre></td></tr></table></figure>
<p>Groups of 6 bits (6 bits have a maximum of 2^6 = 64 different binary values) are converted into individual numbers from start to end (in this case, there are four numbers in a 24-bit string), which are then converted into their corresponding Base64 character values.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Binary</th>
<th>010011</th>
<th>000110</th>
<th>100101</th>
<th>101110</th>
</tr>
</thead>
<tbody>
<tr>
<td>Decimal</td>
<td>19</td>
<td>5</td>
<td>37</td>
<td>46</td>
</tr>
<tr>
<td>Base64 Character</td>
<td>T</td>
<td>F</td>
<td>l</td>
<td>u</td>
</tr>
</tbody>
</table>
</div>
<p><code>=</code> padding characters might be added to make the last encoded block contain four Base64 characters.</p>
<p>Here’s a Python example demonstrating Base64 encoding:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># Encoding text to Base64</span></span><br><span class="line">text = <span class="string">&quot;Lin&quot;</span></span><br><span class="line">encoded = base64.b64encode(text.encode())</span><br><span class="line"><span class="built_in">print</span>(encoded)  <span class="comment"># Output: b&#x27;TGlu&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Decoding Base64 back to text</span></span><br><span class="line">decoded = base64.b64decode(encoded).decode()</span><br><span class="line"><span class="built_in">print</span>(decoded)  <span class="comment"># Output: Lin</span></span><br></pre></td></tr></table></figure>
<h2 id="Common-Use-Cases"><a href="#Common-Use-Cases" class="headerlink" title="Common Use Cases"></a>Common Use Cases</h2><h3 id="1-Data-URIs"><a href="#1-Data-URIs" class="headerlink" title="1. Data URIs"></a>1. Data URIs</h3><p>Base64 is commonly used in data URIs to embed images directly in HTML or CSS:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image/jpeg;base64,/9j/4AAQSkZJRg...&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Base64 encoded image&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-API-Communication"><a href="#2-API-Communication" class="headerlink" title="2. API Communication"></a>2. API Communication</h3><p>When sending binary data in JSON payloads:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;document.pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JVBERi0xLjcKCjEgMCBvYmoKPDwKL1R5cGUgL0NhdGFsb2...&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="3-Email-Attachments"><a href="#3-Email-Attachments" class="headerlink" title="3. Email Attachments"></a>3. Email Attachments</h3><p>MIME encoding uses Base64 for email attachments:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Content-Type: image/jpeg</span><br><span class="line">Content-Transfer-Encoding: base64</span><br><span class="line"></span><br><span class="line">/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsL...</span><br></pre></td></tr></table></figure>
<h2 id="Performance-Considerations"><a href="#Performance-Considerations" class="headerlink" title="Performance Considerations"></a>Performance Considerations</h2><p>When working with Base64, keep in mind:</p>
<ol>
<li>Size Overhead: Base64 encoding increases data size by approximately 33%</li>
<li>Processing Impact: Encoding/decoding requires CPU resources</li>
<li>Memory Usage: Large Base64 strings consume more memory than binary data</li>
</ol>
<h2 id="Implementation-in-Different-Languages"><a href="#Implementation-in-Different-Languages" class="headerlink" title="Implementation in Different Languages"></a>Implementation in Different Languages</h2><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Encoding</span></span><br><span class="line"><span class="keyword">const</span> encoded = <span class="title function_">btoa</span>(<span class="string">&#x27;Johnson Lin&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(encoded);  <span class="comment">// Output: Sm9obnNvbiBMaW4=</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Decoding</span></span><br><span class="line"><span class="keyword">const</span> decoded = <span class="title function_">atob</span>(encoded);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(decoded);  <span class="comment">// Output: Johnson Lin</span></span><br></pre></td></tr></table></figure>
<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base64Example</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// Encoding</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">encoded</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(<span class="string">&quot;Johnson Lin&quot;</span>.getBytes());</span><br><span class="line">        System.out.println(encoded);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Decoding</span></span><br><span class="line">        <span class="type">byte</span>[] decoded = Base64.getDecoder().decode(encoded);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(decoded));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Sm9obnNvbiBMaW4=</span></span><br><span class="line"><span class="comment">Johnson Lin</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Encoding</span></span><br><span class="line"><span class="variable">$encoded</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;Johnson Lin&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$encoded</span>;  <span class="comment">// Output: Sm9obnNvbiBMaW4=</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Decoding</span></span><br><span class="line"><span class="variable">$decoded</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$encoded</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$decoded</span>;  <span class="comment">// Output: Johnson Lin</span></span><br></pre></td></tr></table></figure>
<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># Encoding text to Base64</span></span><br><span class="line">text = <span class="string">&quot;Johnson Lin&quot;</span></span><br><span class="line">encoded = base64.b64encode(text.encode())</span><br><span class="line"><span class="built_in">print</span>(encoded)  <span class="comment"># Output: Sm9obnNvbiBMaW4=</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Decoding Base64 back to text</span></span><br><span class="line">decoded = base64.b64decode(encoded).decode()</span><br><span class="line"><span class="built_in">print</span>(decoded)  <span class="comment"># Output: Johnson Lin</span></span><br></pre></td></tr></table></figure>
<h2 id="Best-Practices"><a href="#Best-Practices" class="headerlink" title="Best Practices"></a>Best Practices</h2><ol>
<li>Always validate Base64 input before decoding</li>
<li>Consider using URL-safe Base64 for web applications</li>
<li>Handle padding correctly</li>
<li>Be aware of line length limitations in different systems</li>
<li>Consider compression before encoding large data</li>
</ol>
<h2 id="Troubleshooting-Common-Issues"><a href="#Troubleshooting-Common-Issues" class="headerlink" title="Troubleshooting Common Issues"></a>Troubleshooting Common Issues</h2><ol>
<li>Invalid Character Errors<ul>
<li>Check for proper padding</li>
<li>Verify character set compatibility</li>
<li>Remove whitespace and newlines</li>
</ul>
</li>
<li>Encoding/Decoding Failures<ul>
<li>Ensure correct character encoding (UTF-8)</li>
<li>Verify input is valid Base64</li>
<li>Check for platform-specific limitations</li>
</ul>
</li>
</ol>
<h2 id="Security-Considerations"><a href="#Security-Considerations" class="headerlink" title="Security Considerations"></a>Security Considerations</h2><p>While Base64 is not encryption, it’s important to:</p>
<ol>
<li>Never use Base64 alone for security purposes</li>
<li>Combine with proper encryption when handling sensitive data</li>
<li>Validate decoded data before processing</li>
<li>Be aware of potential injection attacks</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Base64 encoding remains a fundamental tool in modern software development. Understanding its proper implementation and best practices is crucial for building robust applications that handle binary data effectively.</p>
<p>By following this guide, you’ll be well-equipped to implement Base64 encoding and decoding in your applications while avoiding common pitfalls and security issues.</p>
<p>Remember to always consider your specific use case when deciding whether Base64 is the appropriate solution, and implement proper error handling and validation in your Base64-related code.</p>
]]></content>
      <categories>
        <category>Wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
      </tags>
  </entry>
  <entry>
    <title>Solution for VMware Virtual Machine Folder Sharing Not Working</title>
    <url>/2025/01/23/solution-for-vmware-virtual-machine-folder-sharing-not-working/</url>
    <content><![CDATA[<blockquote>
<p>After installing VMware Tools, if you’re unable to mount shared folders using <code>vmhgfs-fuse</code>, you can try this temporary workaround.</p>
</blockquote>
<p>Solution for VMware virtual machine folder sharing not working (<code>/mnt/hgfs/</code> shared folder not found):</p>
<ol>
<li>Disable folder sharing in VMware.</li>
<li>Restart the virtual machine.</li>
<li>Re-enable folder sharing in VMware.</li>
<li>Access <code>/mnt/hgfs/</code> to see the shared folder.</li>
</ol>
]]></content>
      <categories>
        <category>Programming Digest</category>
      </categories>
      <tags>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON Formatter</title>
    <url>//tools/json-formatter/</url>
    <content><![CDATA[<div class="card card-feature">
    <div class="card-body">
        <div class="row" id="dragParent" style="margin-left: auto; margin-right: auto;">
            <div class="col-md-5 input-area">
                <div class="input-gap" id="jsonTxtAreaGap">
                    <div id="line-numbers" class="textarea__lines text-muted"></div>
                </div>
                <div class="input-area-container" id="jsonTxtAreaContainer">
                    <textarea class="form-control no-scrollbar" placeholder="请输入json数据..."
                        id="json-src"></textarea>
                </div>
            </div>
            <div class="area-drag" id="dragEle">
                <span class="ti ti-layout-distribute-vertical"></span>
            </div>
            <div class="col-md-7 format-area">
                <div class="top-btn-area">
                    <button type="button" class="btn btn-icon zip" data-bs-toggle="tooltip"
                        data-bs-placement="top" title="压缩">
                        <span class="ti ti-stack-push"></span>
                    </button>
                    <button type="button" class="btn btn-icon xml" data-bs-toggle="tooltip"
                        data-bs-placement="top" title="转XML">
                        <span class="ti ti-file-x"></span>
                    </button>
                    <button type="button" class="btn btn-icon shown" data-bs-toggle="tooltip"
                        data-bs-placement="top" title="显示行号">
                        <span class="ti ti-list-numbers"></span>
                    </button>
                    <button type="button" class="btn btn-icon clear" data-bs-toggle="tooltip"
                        data-bs-placement="top" title="清空">
                        <span class="ti ti-trash"></span>
                    </button>
                    <button type="button" class="btn btn-icon save" data-bs-toggle="tooltip"
                        data-bs-placement="top" title="保存">
                        <span class="ti ti-file-download"></span>
                    </button>
                    <button type="button" class="btn btn-icon clipboard-btn" data-bs-toggle="tooltip"
                        data-bs-placement="top" title="复制" data-clipboard-target="#json-target">
                        <span class="ti ti-copy"></span>
                    </button>
                    <button type="button" class="btn btn-icon compress" data-bs-toggle="tooltip"
                        data-bs-placement="top" title="折叠">
                        <span class="ti ti-fold"></span>
                    </button>
                    <button type="button" class="btn btn-icon example" data-bs-toggle="tooltip"
                        data-bs-placement="top" title="示例">
                        <span class="ti ti-bulb"></span>
                    </button>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" checked name="cancelZY"
                            id="cancelZY" />
                        <label class="form-check-label" for="cancelZY">
                            保留转义
                        </label>
                    </div>
                    <div class="flex-grow-1">
                        <button type="button" class="btn btn-icon float-end d-none d-lg-block"
                            data-bs-toggle="tooltip" data-bs-placement="top" title="全屏"
                            id="formatFullScreen">
                            <span class="ti ti-arrows-maximize"></span>
                        </button>
                    </div>
                </div>
                <div class="bottom-format-area" id="jsonFormatArea">
                    <div class="line-num-container" id="lineNumContainer">
                        <div id="line-num" class="line-num text-muted">
                            <div>0</div>
                        </div>
                    </div>
                    <div id="jsonFormatContainer" class="json-format-area">
                        <div class="text-muted editable-tip">可点击键值进行编辑</div>
                        <div id="hidden-message-box" class="alert alert-danger alert-dismissible"
                            role="alert">
                            <button type="button" class="btn-close" data-bs-dismiss="alert"
                                aria-label="Close">
                            </button>
                            <div class="d-flex">
                                <span class="alert-icon text-danger me-2">
                                    <i class="ti ti-bell ti-xs"></i>
                                </span>
                                <p>提示：<span id="hidden-message">默认警告</span></p>
                            </div>
                        </div>
                        <div class="ro" id="json-target">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card mt-3">
    <div class="card-header">
        <h5 class="card-title">工具介绍</h5>
    </div>
    <div class="card-body">
        <p>
            JSON是一种取代XML的数据结构，与xml相比，它更小巧，但描述能力却不差。JSON就是一串字符串，只不过元素会使用特定的符号标注：
        <ul>
            <li><code><strong>&#123;&#125;</strong></code> 双括号表示对象；</li>
            <li><code><strong>[]</strong></code> 中括号表示数组；</li>
            <li><code><strong>""</strong></code> 双引号内是属性或值；</li>
            <li><code><strong>:</strong></code> 冒号表示后者是前者的值(这个值可以是字符串、数字、也可以是另一个数组或对象)</li>
        </ul>
        </p>
        <p>所以 <code><strong>&#123;"name": "Tom"&#125;</strong></code> 可以理解为是一个包含name为Tom的对象，而
            <code><strong>[&#123;"name": "Tom"&#125;, &#123;"name": "Jerry"&#125;]</strong></code> 就表示包含两个对象的数组。<br>
            <br>
            问：为什么 <code><strong>&#123;name:'json'&#125;</strong></code> 在检验时通过不了？<br>
            答：JSON官网规范规定，如果是字符串，那不管是键或值最好都用双引号引起来，所以上面的代码就是
            <code><strong>&#123;"name":"json"&#125;</strong></code>。<br>
            <br>
        </p>
        <p><strong>JSON拓展</strong>
        <ul>
            <li><a href="/wiki.html" target="_blank">什么是JSON</a></li>
            <li><a href="/code.html" target="_blank">JSON解析代码</a></li>
            <li><a href="/component.html" target="_blank">JSON组件</a></li>
            <li><a href="/jiaocheng/json_t/" target="_blank">JSON 教程</a></li>
        </ul>
        </p>
        <p><strong>工具的进阶玩法</strong><br>
            使用url参数传入json数据，搭配一些软件可以快速查看要解析的内容：<br>
            <code><strong>fullscreen</strong></code> 参数，访问时带上这个链接会自动进入<a href="/?<strong>fullscreen"
                target="_blank">专注模式</a>，畅享清爽简洁的在线解析视图。链接：<a href="/?fullscreen"
                target="_blank">json.cn/?<strong>fullscreen</strong></a>。<br>
            <code><strong>data</strong></code> 参数，通过这个参数，直接将json数据，传递给工具，示例：<a
                href="/#data=%7B%22name%22%3A%22Tom%22%2C%22age%22%3A30%7D"
                target="_blank">json.cn/#<strong>data={"name":"John","age":30}</strong></a><br>
            <code><strong>url</strong></code> 参数，工具会基于您的当前网络，尝试获取指定url的json数据，示例：<a
                href="/#url=https://static.json.cn/r/json/demo.json"
                target="_blank">json.cn/#<strong>url=https://static.json.cn/r/json/demo.json</strong></a><br>
            注意：<br>
            &nbsp;&nbsp;data和url是在#号后面，不是?号，这两个参数内容，会在读取后自动清空。<br>
            &nbsp;&nbsp;这样你的解析数据，仍然只会停留在本地，不会发往我们的服务器，也尽可能地避免了被搜索引擎以及统计代码所抓取。<br>
            &nbsp;&nbsp;不足的地方就是，当你刷新页面时，刚才的参数内容会丢失，如果你想查看刚才的完整url，可以在浏览器的历史记录里面找到。
        </p>
        <p><br>
            如果您经常使用本工具，邀您体验&nbsp;<a href="/?fullscreen" target="_blank">专注模式</a>，记得添加到收藏夹哦(*≧∪≦)。<br>
            有任何建议和问题反馈，请通过 <a href="/feedback.html" target="_blank">问题反馈</a> 告诉我们。访问 <a
                href="/changelog.html" target="_blank">更新日志</a> 查看更新详情。<code><strong>；-）</strong></code>
        </p>
    </div>
</div>]]></content>
  </entry>
  <entry>
    <title>Ollama Commands Overview</title>
    <url>/2025/01/29/ollama-commands/</url>
    <content><![CDATA[<h2 id="Ollama-Commands"><a href="#Ollama-Commands" class="headerlink" title="Ollama Commands"></a>Ollama Commands</h2><p>Ollama offers a variety of command-line tools (CLI) for interacting with locally running models.</p>
<p>To see a list of available commands, you can use:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>
<p>This will display the following:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Large language model runner</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  ollama [flags]</span><br><span class="line">  ollama [command]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  serve       Start ollama</span><br><span class="line">  create      Create a model from a Modelfile</span><br><span class="line">  show        Show information for a model</span><br><span class="line">  run         Run a model</span><br><span class="line">  stop        Stop a running model</span><br><span class="line">  pull        Pull a model from a registry</span><br><span class="line">  push        Push a model to a registry</span><br><span class="line">  list        List models</span><br><span class="line">  ps          List running models</span><br><span class="line">  cp          Copy a model</span><br><span class="line">  rm          Remove a model</span><br><span class="line">  help        Help about any command</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">  -h, --help      help for ollama</span><br><span class="line">  -v, --version   Show version information</span><br><span class="line"></span><br><span class="line">Use &quot;ollama [command] --help&quot; for more information about a command.</span><br></pre></td></tr></table></figure>
<h3 id="Basic-Usage"><a href="#Basic-Usage" class="headerlink" title="Basic Usage"></a>Basic Usage</h3><ul>
<li><strong>Run Ollama with flags</strong>:  </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama [flags]</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Run a specific command</strong>:  </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama [<span class="built_in">command</span>]</span><br></pre></td></tr></table></figure>
<h3 id="Available-Commands"><a href="#Available-Commands" class="headerlink" title="Available Commands"></a>Available Commands</h3><ul>
<li><code>serve</code>: Start the Ollama service.  </li>
<li><code>create</code>: Create a model using a Modelfile.  </li>
<li><code>show</code>: Display detailed information about a model.  </li>
<li><code>run</code>: Run a model.  </li>
<li><code>stop</code>: Stop a running model.  </li>
<li><code>pull</code>: Download a model from a registry.  </li>
<li><code>push</code>: Upload a model to a registry.  </li>
<li><code>list</code>: List all available models.  </li>
<li><code>ps</code>: List currently running models.  </li>
<li><code>cp</code>: Copy a model.  </li>
<li><code>rm</code>: Delete a model.  </li>
<li><code>help</code>: Get help for any command.</li>
</ul>
<h3 id="Flags"><a href="#Flags" class="headerlink" title="Flags"></a>Flags</h3><ul>
<li><code>-h, --help</code>: Show help information for Ollama.  </li>
<li><code>-v, --version</code>: Display the version of Ollama.</li>
</ul>
<h2 id="Model-Management"><a href="#Model-Management" class="headerlink" title="Model Management"></a>Model Management</h2><h3 id="Download-a-Model"><a href="#Download-a-Model" class="headerlink" title="Download a Model"></a>Download a Model</h3><p>To download a model from the registry:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama pull &lt;model-name&gt;</span><br></pre></td></tr></table></figure>
<p>Example:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama pull deepseek-r1:8b</span><br></pre></td></tr></table></figure>
<h3 id="Run-a-Model"><a href="#Run-a-Model" class="headerlink" title="Run a Model"></a>Run a Model</h3><p>To run a downloaded model:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run &lt;model-name&gt;</span><br></pre></td></tr></table></figure>
<p>Example:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1:8b</span><br></pre></td></tr></table></figure>
<h3 id="Stop-a-Running-Model"><a href="#Stop-a-Running-Model" class="headerlink" title="Stop a Running Model"></a>Stop a Running Model</h3><p>To stop the running Ollama service:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama stop &lt;model-name&gt;</span><br></pre></td></tr></table></figure>
<p>Example:  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ollama stop deepseek-r1:8b</span><br></pre></td></tr></table></figure>
<h3 id="List-Local-Models"><a href="#List-Local-Models" class="headerlink" title="List Local Models"></a>List Local Models</h3><p>To view all downloaded models:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama list</span><br></pre></td></tr></table></figure>
<h3 id="Delete-a-Model"><a href="#Delete-a-Model" class="headerlink" title="Delete a Model"></a>Delete a Model</h3><p>To remove a local model:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama <span class="built_in">rm</span> &lt;model-name&gt;</span><br></pre></td></tr></table></figure>
<p>Example:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama <span class="built_in">rm</span> deepseek-r1:8b</span><br></pre></td></tr></table></figure>
<h2 id="Custom-Models"><a href="#Custom-Models" class="headerlink" title="Custom Models"></a>Custom Models</h2><h3 id="Create-a-Custom-Model"><a href="#Create-a-Custom-Model" class="headerlink" title="Create a Custom Model"></a>Create a Custom Model</h3><p>To create a custom model from an existing one:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama create &lt;custom-model-name&gt; -f &lt;Modelfile&gt;</span><br></pre></td></tr></table></figure>
<p>Example:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama create my-model-name -f ./Modelfile</span><br></pre></td></tr></table></figure>
<h3 id="Push-a-Custom-Model"><a href="#Push-a-Custom-Model" class="headerlink" title="Push a Custom Model"></a>Push a Custom Model</h3><p>To upload a custom model to the registry:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama push &lt;model-name&gt;</span><br></pre></td></tr></table></figure>
<p>Example:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama push my-llama2</span><br></pre></td></tr></table></figure>
<h3 id="Copy-a-Model"><a href="#Copy-a-Model" class="headerlink" title="Copy a Model"></a>Copy a Model</h3><p>To duplicate an existing model:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama <span class="built_in">cp</span> &lt;source-model-name&gt; &lt;new-model-name&gt;</span><br></pre></td></tr></table></figure>
<p>Example:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama <span class="built_in">cp</span> llama2 my-llama2-copy</span><br></pre></td></tr></table></figure>
<h2 id="Service-Management"><a href="#Service-Management" class="headerlink" title="Service Management"></a>Service Management</h2><h3 id="Start-Ollama-Service"><a href="#Start-Ollama-Service" class="headerlink" title="Start Ollama Service"></a>Start Ollama Service</h3><p>To start the Ollama service in the background:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama serve</span><br></pre></td></tr></table></figure>
<h2 id="Other-Common-Commands"><a href="#Other-Common-Commands" class="headerlink" title="Other Common Commands"></a>Other Common Commands</h2><h3 id="View-Help"><a href="#View-Help" class="headerlink" title="View Help"></a>View Help</h3><p>To see all available commands:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>
<p>Or</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ollama -h</span><br></pre></td></tr></table></figure>
<h3 id="Check-Version"><a href="#Check-Version" class="headerlink" title="Check Version"></a>Check Version</h3><p>To check the installed version of Ollama:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama --version</span><br></pre></td></tr></table></figure>
<p>Or</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama -v</span><br></pre></td></tr></table></figure>
<p>The output looks something like this:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ollama version is 0.5.7</span><br></pre></td></tr></table></figure>
<h2 id="Model-Information"><a href="#Model-Information" class="headerlink" title="Model Information"></a>Model Information</h2><h3 id="View-Model-Details"><a href="#View-Model-Details" class="headerlink" title="View Model Details"></a>View Model Details</h3><p>To see detailed information about a model:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama show &lt;model-name&gt;</span><br></pre></td></tr></table></figure>
<p>Example:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama show deepseek-r1:8b</span><br></pre></td></tr></table></figure>
<p>The output is as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Model</span><br><span class="line">  architecture        llama</span><br><span class="line">  parameters          8.0B</span><br><span class="line">  context length      131072</span><br><span class="line">  embedding length    4096</span><br><span class="line">  quantization        Q4_K_M</span><br><span class="line"></span><br><span class="line">Parameters</span><br><span class="line">  stop    &quot;&lt;｜begin▁of▁sentence｜&gt;&quot;</span><br><span class="line">  stop    &quot;&lt;｜end▁of▁sentence｜&gt;&quot;</span><br><span class="line">  stop    &quot;&lt;｜User｜&gt;&quot;</span><br><span class="line">  stop    &quot;&lt;｜Assistant｜&gt;&quot;</span><br><span class="line"></span><br><span class="line">License</span><br><span class="line">  MIT License</span><br><span class="line">  Copyright (c) 2023 DeepSeek</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Introduction to Ollama</title>
    <url>/2025/01/29/ollama-intro/</url>
    <content><![CDATA[<p>Ollama is an open-source platform for large language models (LLMs), designed to make it easy for users to run, manage, and interact with LLMs directly on their local machines.  </p>
<p>It provides a straightforward way to load and use various pre-trained language models, supporting a wide range of natural language processing tasks such as text generation, translation, code writing, and question answering.  </p>
<p>What sets Ollama apart is its combination of ready-to-use models and tools with user-friendly interfaces and APIs. This enables quick implementation of tasks like text generation, dialogue systems, and semantic analysis.  </p>
<p>Unlike other NLP frameworks, Ollama simplifies workflows, making machine learning accessible to users without deep technical expertise.  </p>
<p>Additionally, Ollama supports multiple hardware acceleration options, including CPU-only inference and various underlying architectures (such as Apple Silicon), ensuring efficient utilization of diverse hardware resources.</p>
<h2 id="Core-Features-and-Highlights"><a href="#Core-Features-and-Highlights" class="headerlink" title="Core Features and Highlights"></a>Core Features and Highlights</h2><ul>
<li><strong>Support for Multiple Pre-trained Language Models</strong><br>Ollama offers a variety of ready-to-use pre-trained models, including popular large language models like GPT and BERT. Users can easily load and utilize these models for tasks such as text generation, sentiment analysis, and question answering.  </li>
<li><strong>Easy Integration and Usability</strong><br>Ollama provides a command-line interface (CLI) and Python SDK, simplifying integration with other projects and services. Developers can seamlessly incorporate Ollama into their existing applications without dealing with complex dependencies or configurations.  </li>
<li><strong>Local Deployment and Offline Usage</strong><br>Unlike cloud-based NLP services, Ollama allows developers to run models in local computing environments. This eliminates reliance on external servers, ensures data privacy, and delivers lower latency and greater control for high-concurrency requests.  </li>
<li><strong>Model Fine-tuning and Customization</strong><br>In addition to using pre-trained models, users can fine-tune models to suit specific needs. Developers can retrain models using their own datasets to enhance performance and accuracy.  </li>
<li><strong>Performance Optimization</strong><br>Ollama prioritizes efficiency with optimized inference mechanisms and support for batch processing. It effectively manages memory and computational resources, ensuring high performance even with large-scale data.  </li>
<li><strong>Cross-platform Support</strong><br>Ollama is compatible with multiple operating systems, including Windows, macOS, and Linux. This ensures a consistent experience whether developers are debugging locally or deploying in production environments.  </li>
<li><strong>Open Source and Community Support</strong><br>As an open-source project, Ollama allows developers to access, modify, and improve its codebase. It also boasts an active community where users can seek help, share insights, and collaborate on the project.</li>
</ul>
<h2 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h2><ul>
<li><strong>Content Creation</strong><br>Assists writers, journalists, and marketers in quickly generating high-quality content, such as blog posts, ad copy, and more.  </li>
<li><strong>Programming Assistance</strong><br>Helps developers generate code, debug programs, or optimize code structures.  </li>
<li><strong>Education and Research</strong><br>Supports students and researchers in learning, writing, and conducting studies, such as generating paper summaries or answering questions.  </li>
<li><strong>Cross-language Communication</strong><br>Provides high-quality translation capabilities, breaking down language barriers for users.  </li>
<li><strong>Personal Assistant</strong><br>Acts as a smart assistant, helping users with daily tasks like drafting emails or creating to-do lists.</li>
</ul>
<h2 id="How-Ollama-Differs-from-Other-LLMs"><a href="#How-Ollama-Differs-from-Other-LLMs" class="headerlink" title="How Ollama Differs from Other LLMs"></a>How Ollama Differs from Other LLMs</h2><div class="table-container">
<table>
<thead>
<tr>
<th><strong>Aspect</strong></th>
<th><strong>Ollama’s Features</strong></th>
<th><strong>Explanation</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Localization</strong></td>
<td>Focuses on local execution</td>
<td>Unlike cloud-dependent LLMs like ChatGPT, Ollama is ideal for users with high data privacy concerns.</td>
</tr>
<tr>
<td><strong>Flexibility</strong></td>
<td>Supports loading different models</td>
<td>Users can load various models based on their needs, without being limited to a single model.</td>
</tr>
<tr>
<td><strong>Open Source</strong></td>
<td>Fully open-source</td>
<td>Users can freely modify and extend its functionality to suit their specific requirements.</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Installing Ollama</title>
    <url>/2025/01/29/ollama-install/</url>
    <content><![CDATA[<p>Ollama supports multiple operating systems, including macOS, Windows, Linux, and Docker containers.  </p>
<p>It has modest hardware requirements, making it easy for users to run, manage, and interact with large language models locally.  </p>
<h2 id="Hardware-and-Software-Requirements"><a href="#Hardware-and-Software-Requirements" class="headerlink" title="Hardware and Software Requirements"></a><strong>Hardware and Software Requirements</strong></h2><ul>
<li><strong>CPU</strong>: A multi-core processor (4 cores or more recommended).  </li>
<li><strong>GPU</strong>: If you plan to run large models or perform fine-tuning, a GPU with high computational power (e.g., NVIDIA with CUDA support) is recommended.  </li>
<li><strong>RAM</strong>: At least 8GB of memory, with 16GB or more recommended for larger models.  </li>
<li><strong>Storage</strong>: Sufficient disk space to store pre-trained models, typically ranging from 10GB to hundreds of GB, depending on the model size.  </li>
<li><strong>Software</strong>: Ensure the latest version of Python is installed if you plan to use the Python SDK.</li>
</ul>
<p><strong>Official Download Link</strong>: <a href="https://ollama.com/download">https://ollama.com/download</a></p>
<p><img src="/image/ollama/02-1.png" alt=""></p>
<p>We can download the corresponding package based on the different systems.</p>
<h2 id="Installing-on-Windows"><a href="#Installing-on-Windows" class="headerlink" title="Installing on Windows"></a><strong>Installing on Windows</strong></h2><ol>
<li>Open your browser and visit the official Ollama website: <a href="https://ollama.com/download">https://ollama.com/download</a>. Download the Windows installer.  <ul>
<li>Direct download link: <a href="https://ollama.com/download/OllamaSetup.exe">https://ollama.com/download/OllamaSetup.exe</a>.</li>
</ul>
</li>
<li>Once downloaded, double-click the installer and follow the on-screen instructions to complete the installation.</li>
</ol>
<p><img src="/image/ollama/02-2.png" alt=""></p>
<p><strong>Verifying Installation</strong></p>
<p>Open Command Prompt or PowerShell and run the following command to verify the installation:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama --version</span><br></pre></td></tr></table></figure>
<p>If the version number is displayed, the installation was successful.  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ollama --version</span><br><span class="line">ollama version is 0.5.7</span><br></pre></td></tr></table></figure>
<p><strong>Changing Installation Path (Optional)</strong></p>
<p>To install Ollama in a custom directory, use the following command during installation:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">OllamaSetup.exe /DIR=<span class="string">&quot;e:\location\deepseek&quot;</span></span><br></pre></td></tr></table></figure>
<p>This will install Ollama to the specified directory.  </p>
<h2 id="Installing-on-macOS"><a href="#Installing-on-macOS" class="headerlink" title="Installing on macOS"></a><strong>Installing on macOS</strong></h2><ol>
<li>Open your browser and visit the official Ollama website: <a href="https://ollama.com/download">https://ollama.com/download</a>. Download the macOS installer.  <ul>
<li>Direct download link: <a href="https://ollama.com/download/Ollama-darwin.zip">https://ollama.com/download/Ollama-darwin.zip</a>.</li>
</ul>
</li>
<li>Once downloaded, double-click the installer and follow the on-screen instructions to complete the installation.</li>
</ol>
<p><strong>Verifying Installation</strong></p>
<p>After installation, run the following command to verify:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama --version</span><br></pre></td></tr></table></figure>
<p>If the version number is displayed, the installation was successful.  </p>
<h2 id="Installing-on-Linux"><a href="#Installing-on-Linux" class="headerlink" title="Installing on Linux"></a><strong>Installing on Linux</strong></h2><p>For Linux, you can use the one-click installation script. Open your terminal and run the following command:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://ollama.com/install.sh | sh</span><br></pre></td></tr></table></figure>
<p><strong>Verifying Installation</strong></p>
<p>After installation, run the following command to verify:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama --version</span><br></pre></td></tr></table></figure>
<p>If the version number is displayed, the installation was successful.  </p>
<h2 id="Installing-via-Docker"><a href="#Installing-via-Docker" class="headerlink" title="Installing via Docker"></a><strong>Installing via Docker</strong></h2><p>If you’re familiar with Docker, you can also install Ollama using the official Docker image available on Docker Hub: <a href="https://hub.docker.com/r/ollama/ollama">https://hub.docker.com/r/ollama/ollama</a>.  </p>
<ol>
<li>Pull the Docker image:  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull ollama/ollama</span><br></pre></td></tr></table></figure></li>
<li>Run the container:  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -p 11434:11434 ollama/ollama</span><br></pre></td></tr></table></figure></li>
<li>Access Ollama by visiting: <a href="http://localhost:11434">http://localhost:11434</a>.</li>
</ol>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Ollama Tutorial</title>
    <url>/2025/01/29/ollama-tutorial/</url>
    <content><![CDATA[<p><img src="/image/ollama/ollama.png" alt=""></p>
<p>Ollama is an open-source framework designed to make it easy to deploy and run large language models (LLMs) directly on your local machine. It supports multiple operating systems, including macOS, Windows, Linux, and even Docker containers. One of its standout features is model quantization, which significantly reduces GPU memory requirements, making it possible to run large models on everyday home computers.</p>
<h2 id="Who-Is-This-Tutorial-For"><a href="#Who-Is-This-Tutorial-For" class="headerlink" title="Who Is This Tutorial For?"></a>Who Is This Tutorial For?</h2><p>Ollama is ideal for developers, researchers, and users with high data privacy requirements. It enables quick deployment and operation of large language models (LLMs) in a local environment, offering flexible customization options. With Ollama, you can run models like Llama 3.3, DeepSeek-R1, Phi-4, Mistral, Gemma 2, and others directly on your local machine.</p>
<h2 id="What-You-Need-to-Know-Before-Starting-This-Tutorial"><a href="#What-You-Need-to-Know-Before-Starting-This-Tutorial" class="headerlink" title="What You Need to Know Before Starting This Tutorial?"></a>What You Need to Know Before Starting This Tutorial?</h2><p>This tutorial is designed for developers with a basic understanding of Python.  </p>
<p>You should also be familiar with the difference between Docker images and containers, and know how to pull images from Docker Hub and run containers.  </p>
<p>Additionally, a working knowledge of command-line tools (like Terminal or Command Prompt) is required. This includes basic operations such as creating, deleting, and moving files and directories, as well as running scripts and programs.</p>
<h2 id="Creating-a-New-Model"><a href="#Creating-a-New-Model" class="headerlink" title="Creating a New Model"></a>Creating a New Model</h2><p>You can use the <code>ollama create</code> command to build a model from a Modelfile.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ollama create model -of ./Modelfile</span><br></pre></td></tr></table></figure>
<h2 id="Useful-Links"><a href="#Useful-Links" class="headerlink" title="Useful Links"></a>Useful Links</h2><ul>
<li>Official Ollama Website: <a href="https://ollama.com/">https://ollama.com/</a>  </li>
<li>GitHub Repository: <a href="https://github.com/ollama/ollama">https://github.com/ollama/ollama</a>  </li>
<li>Official Documentation: <a href="https://github.com/ollama/ollama/tree/main/docs">https://github.com/ollama/ollama/tree/main/docs</a></li>
</ul>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Running Models with Ollama</title>
    <url>/2025/01/29/ollama-run-model/</url>
    <content><![CDATA[<p>To run a model in Ollama, use the <code>ollama run</code> command.  </p>
<p>For example, to run the <strong>DeepSeek-R1:8b</strong> model and interact with it, use the following command: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1:8b</span><br></pre></td></tr></table></figure>
<p>If the model isn’t already installed, Ollama will automatically download it. </p>
<p><img src="/image/ollama/03-1.png" alt=""></p>
<p>Once the download is complete, you can interact with the model directly in the terminal:  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ollama run deepseek-r1:8b</span><br><span class="line">pulling manifest</span><br><span class="line">pulling 6340dc3229b0... 100%  4.9 GB</span><br><span class="line">pulling 369ca498f347... 100%  387 B</span><br><span class="line">pulling 6e4c38e1172f... 100%  1.1 KB</span><br><span class="line">pulling f4d24e9138dd... 100%  148 B</span><br><span class="line">pulling 0cb05c6e4e02... 100%  487 B</span><br><span class="line">verifying sha256 digest</span><br><span class="line">writing manifest</span><br><span class="line">success</span><br><span class="line">&gt;&gt;&gt; hello</span><br><span class="line">&lt;think&gt;</span><br><span class="line"></span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">Hello! How can I assist you today? 😊</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; why is everyone&#x27;s fingerprint unique?</span><br><span class="line">&lt;think&gt;</span><br><span class="line">Okay, so the user asked &quot;why is everyone&#x27;s fingerprint unique?&quot; Hmm, that&#x27;s an interesting question. I remember</span><br><span class="line">learning about fingerprints in school, but I&#x27;m not exactly sure why they&#x27;re unique. Maybe it has something to</span><br><span class="line">do with genetics or something else.</span><br><span class="line"></span><br><span class="line">Wait, I think it&#x27;s because each person&#x27;s DNA is different. So, if two people had the same fingerprint, their</span><br><span class="line">DNA would also be the same, right? But no, that doesn&#x27;t make sense because identical twins can have the same</span><br><span class="line">fingerprints and DNA, but they&#x27;re still different people. Oh, but maybe the environment affects it too. Like,</span><br><span class="line">how we use our hands differently could change our fingerprints over time.</span><br><span class="line"></span><br><span class="line">I also remember hearing about something called &quot;friction ridges&quot; in fingerprints. Maybe those are what make</span><br><span class="line">each fingerprint unique because of how the skin cells are arranged. But I&#x27;m not entirely sure if that&#x27;s the</span><br><span class="line">full story. Maybe there&#x27;s more to it than just friction ridges.</span><br><span class="line"></span><br><span class="line">Oh, and then there&#x27;s the fact that some people might have identical fingerprints but still be different</span><br><span class="line">individuals. So, uniqueness isn&#x27;t the only thing determining individuality. There must be other factors like</span><br><span class="line">facial features or voiceprints that also contribute to identifying someone uniquely.</span><br><span class="line"></span><br><span class="line">I should probably look up more about how exactly friction ridges work and why they don&#x27;t make identical</span><br><span class="line">fingerprints common. Also, I wonder if there are any exceptions where two people could have similar</span><br><span class="line">fingerprints but still not be the same person. It&#x27;s a bit confusing, but I think it has something to do with</span><br><span class="line">other unique traits beyond just the fingerprint itself.</span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">The uniqueness of fingerprints is primarily due to the intricate structure of friction ridges found on the</span><br><span class="line">skin, which form when the hands are repeatedly used in different ways. These ridges create patterns that are as</span><br><span class="line">individual as a person&#x27;s DNA, making it highly unlikely for two people to have identical fingerprints. However,</span><br><span class="line">this isn&#x27;t the sole factor in determining individuality; other traits like facial features and voiceprints also</span><br><span class="line">play a role. Thus, while fingerprints contribute significantly to our identity, they aren&#x27;t alone in ensuring</span><br><span class="line">each person is unique.</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; Send a message (/? for help)</span><br></pre></td></tr></table></figure>
<p>To end the conversation, you can type <code>/bye</code>, press <code>Ctrl+D</code> or hit <code>Ctrl+Z</code>.</p>
<p>You can use the <code>ollama list</code> command to view installed models:  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ollama list</span><br><span class="line">NAME                ID              SIZE      MODIFIED</span><br><span class="line">deepseek-r1:8b      28f8fd6cdc67    4.9 GB    2 hours ago</span><br><span class="line">deepseek-r1:1.5b    a42b25d8c10a    1.1 GB    2 days ago</span><br><span class="line">deepseek-r1:7b      0a8c26691023    4.7 GB    2 days ago</span><br><span class="line">C:\Users\Administrator&gt;</span><br></pre></td></tr></table></figure>
<p>Below is a table of some models and their download commands:  </p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Model</strong></th>
<th><strong>Parameters</strong></th>
<th><strong>Size</strong></th>
<th><strong>Download Command</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>DeepSeek-R1</td>
<td>671B</td>
<td>404GB</td>
<td><code>ollama run deepseek-r1:671b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>70B</td>
<td>43GB</td>
<td><code>ollama run deepseek-r1:70b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>32B</td>
<td>20GB</td>
<td><code>ollama run deepseek-r1:32b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>14B</td>
<td>9.0GB</td>
<td><code>ollama run deepseek-r1:14b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>8B</td>
<td>4.9GB</td>
<td><code>ollama run deepseek-r1:8b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>7B</td>
<td>4.7GB</td>
<td><code>ollama run deepseek-r1:7b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>1.5B</td>
<td>1.1GB</td>
<td><code>ollama run deepseek-r1:1.5b</code></td>
</tr>
<tr>
<td>Llama 3.3</td>
<td>70B</td>
<td>43GB</td>
<td><code>ollama run llama3.3</code></td>
</tr>
<tr>
<td>Llama 3.2</td>
<td>3B</td>
<td>2.0GB</td>
<td><code>ollama run llama3.2</code></td>
</tr>
<tr>
<td>Llama 3.2</td>
<td>1B</td>
<td>1.3GB</td>
<td><code>ollama run llama3.2:1b</code></td>
</tr>
<tr>
<td>Llama 3.2 Vision</td>
<td>11B</td>
<td>7.9GB</td>
<td><code>ollama run llama3.2-vision</code></td>
</tr>
<tr>
<td>Llama 3.2 Vision</td>
<td>90B</td>
<td>55GB</td>
<td><code>ollama run llama3.2-vision:90b</code></td>
</tr>
<tr>
<td>Llama 3.1</td>
<td>8B</td>
<td>4.7GB</td>
<td><code>ollama run llama3.1</code></td>
</tr>
<tr>
<td>Llama 3.1</td>
<td>405B</td>
<td>231GB</td>
<td><code>ollama run llama3.1:405b</code></td>
</tr>
<tr>
<td>Phi 4</td>
<td>14B</td>
<td>9.1GB</td>
<td><code>ollama run phi4</code></td>
</tr>
<tr>
<td>Phi 3 Mini</td>
<td>3.8B</td>
<td>2.3GB</td>
<td><code>ollama run phi3</code></td>
</tr>
<tr>
<td>Gemma 2</td>
<td>2B</td>
<td>1.6GB</td>
<td><code>ollama run gemma2:2b</code></td>
</tr>
<tr>
<td>Gemma 2</td>
<td>9B</td>
<td>5.5GB</td>
<td><code>ollama run gemma2</code></td>
</tr>
<tr>
<td>Gemma 2</td>
<td>27B</td>
<td>16GB</td>
<td><code>ollama run gemma2:27b</code></td>
</tr>
<tr>
<td>Mistral</td>
<td>7B</td>
<td>4.1GB</td>
<td><code>ollama run mistral</code></td>
</tr>
<tr>
<td>Moondream 2</td>
<td>1.4B</td>
<td>829MB</td>
<td><code>ollama run moondream</code></td>
</tr>
<tr>
<td>Neural Chat</td>
<td>7B</td>
<td>4.1GB</td>
<td><code>ollama run neural-chat</code></td>
</tr>
<tr>
<td>Starling</td>
<td>7B</td>
<td>4.1GB</td>
<td><code>ollama run starling-lm</code></td>
</tr>
<tr>
<td>Code Llama</td>
<td>7B</td>
<td>3.8GB</td>
<td><code>ollama run codellama</code></td>
</tr>
<tr>
<td>Llama 2 Uncensored</td>
<td>7B</td>
<td>3.8GB</td>
<td><code>ollama run llama2-uncensored</code></td>
</tr>
<tr>
<td>LLaVA</td>
<td>7B</td>
<td>4.5GB</td>
<td><code>ollama run llava</code></td>
</tr>
<tr>
<td>Solar</td>
<td>10.7B</td>
<td>6.1GB</td>
<td><code>ollama run solar</code></td>
</tr>
</tbody>
</table>
</div>
<p>For a full list of supported models, visit: <a href="https://ollama.com/library">https://ollama.com/library</a>. </p>
<p><img src="/image/ollama/03-2.png" alt=""></p>
<h2 id="Using-Models-with-the-Python-SDK"><a href="#Using-Models-with-the-Python-SDK" class="headerlink" title="Using Models with the Python SDK"></a><strong>Using Models with the Python SDK</strong></h2><p>If you want to integrate Ollama into your Python projects, you can use the Ollama Python SDK to load and run models.  </p>
<h3 id="1-Install-the-Python-SDK"><a href="#1-Install-the-Python-SDK" class="headerlink" title="1. Install the Python SDK"></a><strong>1. Install the Python SDK</strong></h3><p>First, install the Ollama Python SDK by running the following command in your terminal:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install ollama</span><br></pre></td></tr></table></figure>
<h3 id="2-Write-a-Python-Script"><a href="#2-Write-a-Python-Script" class="headerlink" title="2. Write a Python Script"></a><strong>2. Write a Python Script</strong></h3><p>Here’s an example of a Python script that uses the <strong>DeepSeek-r1:8b</strong> model to generate text:  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ollama</span><br><span class="line"></span><br><span class="line">response = ollama.generate(</span><br><span class="line">    model=<span class="string">&quot;deepseek-r1:8b&quot;</span>,  <span class="comment"># Model name</span></span><br><span class="line">    prompt=<span class="string">&quot;why is everyone&#x27;s fingerprint unique?&quot;</span>  <span class="comment"># Prompt text</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(response)</span><br></pre></td></tr></table></figure>
<h3 id="3-Run-the-Python-Script"><a href="#3-Run-the-Python-Script" class="headerlink" title="3. Run the Python Script"></a><strong>3. Run the Python Script</strong></h3><p>Execute the script in your terminal:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python ollama-example.py</span><br></pre></td></tr></table></figure>
<p>You’ll see the model’s response based on your input. The output will look something like this: </p>
<p><img src="/image/ollama/03-3.png" alt=""></p>
<h3 id="4-Chat-Mode"><a href="#4-Chat-Mode" class="headerlink" title="4. Chat Mode"></a><strong>4. Chat Mode</strong></h3><p>Here’s an example of a conversational interaction with the model:  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ollama <span class="keyword">import</span> chat</span><br><span class="line"></span><br><span class="line">response = chat(</span><br><span class="line">    model=<span class="string">&quot;deepseek-r1:8b&quot;</span>,</span><br><span class="line">    messages=[</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;why is everyone&#x27;s fingerprint unique?&quot;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(response.message.content)</span><br></pre></td></tr></table></figure>
<p>This code will engage the model in a conversation and print its response. </p>
<p><img src="/image/ollama/03-4.png" alt=""></p>
<h3 id="5-Streaming-Responses"><a href="#5-Streaming-Responses" class="headerlink" title="5. Streaming Responses"></a><strong>5. Streaming Responses</strong></h3><p>For handling large data, you can stream responses from the model:  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ollama <span class="keyword">import</span> chat</span><br><span class="line"></span><br><span class="line">stream = chat(</span><br><span class="line">    model=<span class="string">&quot;deepseek-r1:8b&quot;</span>,</span><br><span class="line">    messages=[&#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;why is everyone&#x27;s fingerprint unique?&quot;</span>&#125;],</span><br><span class="line">    stream=<span class="literal">True</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> chunk <span class="keyword">in</span> stream:</span><br><span class="line">    <span class="built_in">print</span>(chunk[<span class="string">&quot;message&quot;</span>][<span class="string">&quot;content&quot;</span>], end=<span class="string">&quot;&quot;</span>, flush=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>This code streams the model’s response in real-time.</p>
<p><img src="/image/ollama/03-5.png" alt=""></p>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Ollama Core Concepts</title>
    <url>/2025/01/29/ollama-core-concepts/</url>
    <content><![CDATA[<p>Ollama is a localized machine learning framework designed for various natural language processing (NLP) tasks. It focuses on model loading, inference, and generation, making it easy for users to interact with large pre-trained models deployed locally.</p>
<h2 id="Models"><a href="#Models" class="headerlink" title="Models"></a><strong>Models</strong></h2><p>Models are the heart of Ollama. These are pre-trained machine learning models capable of performing tasks like text generation, summarization, sentiment analysis, and dialogue generation. Ollama supports a wide range of popular pre-trained models, including:</p>
<ul>
<li><strong>Deepseek-v3</strong>: A large language model by DeepSeek, specialized in text generation.</li>
<li><strong>LLama2</strong>: A large language model by Meta, designed for text generation.</li>
<li><strong>GPT</strong>: OpenAI’s GPT series, suitable for dialogue generation, text reasoning, and more.</li>
<li><strong>BERT</strong>: A model for sentence understanding and question-answering systems.</li>
<li><strong>Custom Models</strong>: Users can upload and use their own custom models for inference.</li>
</ul>
<p><strong>Key Features of Models:</strong></p>
<ul>
<li><strong>Inference</strong>: Generating output based on user input.</li>
<li><strong>Fine-tuning</strong>: Adapting pre-trained models to specific tasks or domains using custom datasets.</li>
</ul>
<p>Models are typically neural networks with millions (or billions) of parameters, trained on vast amounts of text data to learn language patterns and perform efficient reasoning.</p>
<p><strong>Supported Models:</strong></p>
<p>Ollama’s library of supported models can be accessed here: <a href="https://ollama.com/library">Ollama Model Library</a>. </p>
<p><img src="/image/ollama/05-1.png" alt=""></p>
<p>Click on the model to view the download command:</p>
<p><img src="/image/ollama/05-2.png" alt=""></p>
<p>Below are some examples of models and their download commands:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Model</strong></th>
<th><strong>Parameters</strong></th>
<th><strong>Size</strong></th>
<th><strong>Download Command</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>DeepSeek-R1</td>
<td>671B</td>
<td>404GB</td>
<td><code>ollama run deepseek-r1:671b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>70B</td>
<td>43GB</td>
<td><code>ollama run deepseek-r1:70b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>32B</td>
<td>20GB</td>
<td><code>ollama run deepseek-r1:32b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>14B</td>
<td>9.0GB</td>
<td><code>ollama run deepseek-r1:14b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>8B</td>
<td>4.9GB</td>
<td><code>ollama run deepseek-r1:8b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>7B</td>
<td>4.7GB</td>
<td><code>ollama run deepseek-r1:7b</code></td>
</tr>
<tr>
<td>DeepSeek-R1</td>
<td>1.5B</td>
<td>1.1GB</td>
<td><code>ollama run deepseek-r1:1.5b</code></td>
</tr>
<tr>
<td>Llama 3.3</td>
<td>70B</td>
<td>43GB</td>
<td><code>ollama run llama3.3</code></td>
</tr>
<tr>
<td>Phi 4</td>
<td>14B</td>
<td>9.1GB</td>
<td><code>ollama run phi4</code></td>
</tr>
<tr>
<td>Llama 3.2</td>
<td>3B</td>
<td>2.0GB</td>
<td><code>ollama run llama3.2</code></td>
</tr>
<tr>
<td>Llama 3.2</td>
<td>1B</td>
<td>1.3GB</td>
<td><code>ollama run llama3.2:1b</code></td>
</tr>
</tbody>
</table>
</div>
<h2 id="Tasks"><a href="#Tasks" class="headerlink" title="Tasks"></a><strong>Tasks</strong></h2><p>Ollama supports a variety of NLP tasks, each corresponding to different use cases for the models. Key tasks include:</p>
<ul>
<li><strong>Chat Generation</strong>: Generating natural dialogue responses in conversations.</li>
<li><strong>Text Generation</strong>: Creating natural language text based on prompts (e.g., articles, stories).</li>
<li><strong>Sentiment Analysis</strong>: Determining the emotional tone of a text (positive, negative, neutral).</li>
<li><strong>Text Summarization</strong>: Condensing long texts into concise summaries.</li>
<li><strong>Translation</strong>: Translating text between languages.</li>
</ul>
<p>Using Ollama’s command-line tools, users can specify tasks and load appropriate models to achieve their goals.</p>
<h2 id="Inference"><a href="#Inference" class="headerlink" title="Inference"></a><strong>Inference</strong></h2><p>Inference is the process of feeding input into a trained model to generate output. Ollama provides user-friendly command-line tools and APIs, allowing users to quickly input text and receive results.</p>
<p><strong>How Inference Works:</strong></p>
<ol>
<li><strong>Input</strong>: The user provides text input, such as a question, prompt, or dialogue.</li>
<li><strong>Model Processing</strong>: The model processes the input using its neural network to generate relevant output.</li>
<li><strong>Output</strong>: The model returns the generated text, which could be a response, article, translation, etc.</li>
</ol>
<p>Ollama’s API and CLI make it simple to interact with local models and perform inference tasks efficiently.</p>
<h2 id="Fine-tuning"><a href="#Fine-tuning" class="headerlink" title="Fine-tuning"></a><strong>Fine-tuning</strong></h2><p>Fine-tuning involves further training a pre-trained model on domain-specific data to improve its performance on specific tasks or domains. Ollama supports fine-tuning, enabling users to customize models using their own datasets.</p>
<p><strong>Fine-tuning Process:</strong></p>
<ol>
<li><strong>Prepare Dataset</strong>: Gather and format domain-specific data (e.g., text files or JSON).</li>
<li><strong>Load Pre-trained Model</strong>: Select a suitable pre-trained model (e.g., LLama2 or GPT).</li>
<li><strong>Train</strong>: Fine-tune the model using the custom dataset to adapt it to the target task.</li>
<li><strong>Save and Deploy</strong>: Save the fine-tuned model for future use and deploy it as needed.</li>
</ol>
<p>Fine-tuning helps models achieve higher accuracy and efficiency in specialized tasks.</p>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Using Ollama with Python</title>
    <url>/2025/01/29/ollama-python-sdk/</url>
    <content><![CDATA[<p>Ollama provides a Python SDK that allows you to interact with locally running models directly from your Python environment. This SDK makes it easy to integrate natural language processing tasks into your Python projects, enabling operations like text generation, conversational AI, and model management—all without the need for manual command-line interactions.</p>
<h2 id="Installing-the-Python-SDK"><a href="#Installing-the-Python-SDK" class="headerlink" title="Installing the Python SDK"></a>Installing the Python SDK</h2><p>To get started, you’ll need to install the Ollama Python SDK. You can do this using <code>pip</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install ollama</span><br></pre></td></tr></table></figure>
<p>Make sure you have Python 3.x installed and that your environment can access the Ollama local service.</p>
<h2 id="Starting-the-Local-Service"><a href="#Starting-the-Local-Service" class="headerlink" title="Starting the Local Service"></a>Starting the Local Service</h2><p>Before using the Python SDK, ensure that the Ollama local service is up and running. You can start it using the command line:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama serve</span><br></pre></td></tr></table></figure>
<p>Once the local service is running, the Python SDK will communicate with it to perform tasks like model inference.</p>
<h2 id="Using-the-Ollama-Python-SDK-for-Inference"><a href="#Using-the-Ollama-Python-SDK-for-Inference" class="headerlink" title="Using the Ollama Python SDK for Inference"></a>Using the Ollama Python SDK for Inference</h2><p>After installing the SDK and starting the local service, you can interact with Ollama using Python code. Here’s how:</p>
<ol>
<li>Import the necessary modules:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ollama <span class="keyword">import</span> chat, ChatResponse</span><br></pre></td></tr></table></figure></li>
<li>Send requests to a specified model to generate text or dialogue:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">response: ChatResponse = chat(model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, messages=[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;Who are you?&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Print the response content</span></span><br><span class="line"><span class="built_in">print</span>(response[<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Alternatively, access the response object directly</span></span><br><span class="line"><span class="comment"># print(response.message.content)</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>When you run this code, the output might look like this:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Greetings! I&#x27;m DeepSeek-R1, an artificial intelligence assistant created by DeepSeek. I&#x27;m at your service and would be delighted to assist you with any inquiries or tasks you may have.</span><br></pre></td></tr></table></figure>
<p><strong>Streaming Responses</strong></p>
<p>The Ollama SDK also supports streaming responses. You can enable this by setting <code>stream=True</code> when sending a request:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stream = chat(</span><br><span class="line">    model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>,</span><br><span class="line">    messages=[&#123;<span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;Who are you?&#x27;</span>&#125;],</span><br><span class="line">    stream=<span class="literal">True</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Print the response in chunks</span></span><br><span class="line"><span class="keyword">for</span> chunk <span class="keyword">in</span> stream:</span><br><span class="line">    <span class="built_in">print</span>(chunk[<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>], end=<span class="string">&#x27;&#x27;</span>, flush=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Custom-Clients"><a href="#Custom-Clients" class="headerlink" title="Custom Clients"></a>Custom Clients</h2><p>For more control over request configurations, such as custom headers or specifying the local service URL, you can create a custom client:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ollama <span class="keyword">import</span> Client</span><br><span class="line"></span><br><span class="line">client = Client(</span><br><span class="line">    host=<span class="string">&#x27;http://localhost:11434&#x27;</span>,</span><br><span class="line">    headers=&#123;<span class="string">&#x27;x-some-header&#x27;</span>: <span class="string">&#x27;some-value&#x27;</span>&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">response = client.chat(model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, messages=[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;Who are you?&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">])</span><br><span class="line"><span class="built_in">print</span>(response[<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>])</span><br></pre></td></tr></table></figure>
<p><strong>Asynchronous Clients</strong></p>
<p>If you need to handle requests asynchronously, you can use the <code>AsyncClient</code> class, which is ideal for high-concurrency scenarios:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> ollama <span class="keyword">import</span> AsyncClient</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">chat</span>():</span><br><span class="line">    message = &#123;<span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;Who are you?&#x27;</span>&#125;</span><br><span class="line">    response = <span class="keyword">await</span> AsyncClient().chat(model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, messages=[message])</span><br><span class="line">    <span class="built_in">print</span>(response[<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>])</span><br><span class="line"></span><br><span class="line">asyncio.run(chat())</span><br></pre></td></tr></table></figure>
<p><strong>Asynchronous Streaming</strong></p>
<p>For asynchronous streaming responses, you can use an asynchronous generator:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> ollama <span class="keyword">import</span> AsyncClient</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">chat</span>():</span><br><span class="line">    message = &#123;<span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;Who are you?&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">for</span> part <span class="keyword">in</span> <span class="keyword">await</span> AsyncClient().chat(model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, messages=[message], stream=<span class="literal">True</span>):</span><br><span class="line">        <span class="built_in">print</span>(part[<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>], end=<span class="string">&#x27;&#x27;</span>, flush=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">asyncio.run(chat())</span><br></pre></td></tr></table></figure>
<p>Here, the response is returned in parts asynchronously, allowing you to process each part immediately.</p>
<h2 id="Common-API-Methods"><a href="#Common-API-Methods" class="headerlink" title="Common API Methods"></a>Common API Methods</h2><p>The Ollama Python SDK provides several useful API methods for managing and interacting with models:</p>
<ol>
<li><strong>Chat</strong>: Generate conversational responses.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.chat(model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, messages=[&#123;<span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;Why is the sky blue?&#x27;</span>&#125;])</span><br></pre></td></tr></table></figure></li>
<li><strong>Generate</strong>: Generate text based on a prompt.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.generate(model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, prompt=<span class="string">&#x27;Why is the sky blue?&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><strong>List</strong>: List all available models.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.<span class="built_in">list</span>()</span><br></pre></td></tr></table></figure></li>
<li><strong>Show</strong>: Display details about a specific model.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.show(<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><strong>Create</strong>: Create a new model from an existing one.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.create(model=<span class="string">&#x27;example&#x27;</span>, from_=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, system=<span class="string">&quot;You are Mario from Super Mario Bros.&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li><strong>Copy</strong>: Copy a model to another location.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.copy(<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, <span class="string">&#x27;user/deepseek-r1:1.5b&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><strong>Delete</strong>: Delete a model.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.delete(<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><strong>Pull</strong>: Download a model from a remote repository.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.pull(<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><strong>Push</strong>: Upload a model to a remote repository.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.push(<span class="string">&#x27;user/deepseek-r1:1.5b&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><strong>Embed</strong>: Generate text embeddings.<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.embed(model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>, <span class="built_in">input</span>=<span class="string">&#x27;The sky is blue because of Rayleigh scattering&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
<li><strong>Ps</strong>: List running models.</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ollama.ps()</span><br></pre></td></tr></table></figure>
<h2 id="Error-Handling"><a href="#Error-Handling" class="headerlink" title="Error Handling"></a>Error Handling</h2><p>The Ollama SDK raises errors when requests fail or streaming issues occur. You can handle these errors using <code>try-except</code> blocks:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ollama</span><br><span class="line"></span><br><span class="line">model = <span class="string">&#x27;does-not-yet-exist&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = ollama.chat(model)</span><br><span class="line"><span class="keyword">except</span> ollama.ResponseError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Error:&#x27;</span>, e.error)</span><br><span class="line">    <span class="keyword">if</span> e.status_code == <span class="number">404</span>:</span><br><span class="line">        ollama.pull(model)</span><br></pre></td></tr></table></figure>
<p>In this example, if the model doesn’t exist, a <code>ResponseError</code> is raised, and you can choose to pull the model or handle the error accordingly.</p>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Interacting with Ollama Models</title>
    <url>/2025/01/29/ollama-cli/</url>
    <content><![CDATA[<p>Ollama offers multiple ways to interact with its models, with the most common being through command-line inference operations.</p>
<h2 id="Command-Line-Interaction"><a href="#Command-Line-Interaction" class="headerlink" title="Command-Line Interaction"></a>Command-Line Interaction</h2><p>The simplest way to interact with the model is directly through the command line.</p>
<p><strong>Running the Model</strong></p>
<p>Use the <code>ollama run</code> command to start the model and enter interactive mode:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run &lt;model-name&gt;</span><br></pre></td></tr></table></figure>
<p>For example, to download and run the <code>deepseek-r1:1.5b</code> model:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1:1.5b</span><br></pre></td></tr></table></figure>
<p>Once the model is running, you can directly input questions or instructions, and the model will generate responses in real-time.</p>
<p><strong>Example Interaction:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; Hi, can you help me write some code?</span><br><span class="line">&lt;think&gt;</span><br><span class="line"></span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">Of course! I&#x27;d be happy to help. What do you need assistance with? For example:</span><br><span class="line"></span><br><span class="line">- Do you want to learn a new programming language?</span><br><span class="line">- Need help with setting up a particular software or tool?</span><br><span class="line">- Or simply need some code snippets for a specific task?</span><br><span class="line"></span><br><span class="line">Let me know, and I can provide detailed guidance!</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; Write a Python &quot;Hello, World!&quot; program.</span><br><span class="line">&lt;think&gt;</span><br><span class="line">Alright, the user asked for a Python &quot;Hello, World!&quot; program. Okay, so they want me to write that in Python.</span><br><span class="line">Let&#x27;s break this down.</span><br><span class="line"></span><br><span class="line">First, I need to recall what the &quot;Hello, World!&quot; program does. It prints the string &quot;Hello, World!&quot; to the</span><br><span class="line">console. That’s pretty straightforward.</span><br><span class="line"></span><br><span class="line">I should think about how to implement this in Python. Well, one common way is using the print function. So,</span><br><span class="line">something like `print(&quot;Hello, World!&quot;)`.</span><br><span class="line"></span><br><span class="line">But wait, maybe they want me to write a program that demonstrates more concepts. Let&#x27;s see—maybe I can include</span><br><span class="line">variables or loops? But for now, just printing &quot;Hello, World!&quot; should be simple enough.</span><br><span class="line"></span><br><span class="line">I should also consider best practices. Do I need to handle any edge cases? Well, if it&#x27;s always the same</span><br><span class="line">string, no, but in a real program, maybe the message changes. But for this case, staying simple is probably</span><br><span class="line">best.</span><br><span class="line"></span><br><span class="line">Let me outline the steps:</span><br><span class="line"></span><br><span class="line">1. Print the word &quot;Hello&quot;.</span><br><span class="line">2. Print a comma.</span><br><span class="line">3. Print space.</span><br><span class="line">4. Continue to print &quot;, World!&quot;.</span><br><span class="line"></span><br><span class="line">That covers the entire string. I can write it concisely using the print function multiple times.</span><br><span class="line"></span><br><span class="line">Is there another way to do this? Maybe using f-strings or triple quotes for better readability? Let me think...</span><br><span class="line">Both are similar in Python and not too hard.</span><br><span class="line"></span><br><span class="line">But perhaps sticking with the basic print function is simplest for now. It’s easy to read and maintain.</span><br><span class="line"></span><br><span class="line">I should also mention that the string can be any text, so &quot;Hello, World!&quot; works well but could change if</span><br><span class="line">needed. But for this case, it&#x27;s just a placeholder.</span><br><span class="line"></span><br><span class="line">In terms of code length, I want it concise yet clear. Using multiple print statements is straightforward and</span><br><span class="line">efficient.</span><br><span class="line"></span><br><span class="line">Alright, let me put it all together in Python syntax.</span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">Certainly! Here’s how to write the &quot;Hello, World!&quot; program in Python:</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">print(&quot;Hello, World!&quot;)</span><br><span class="line">\``` </span><br><span class="line"></span><br><span class="line">This will output:</span><br><span class="line">\```</span><br><span class="line">Hello, World!</span><br><span class="line">\```</span><br><span class="line"></span><br><span class="line">Let me know if you&#x27;d like more examples or have a specific task!</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p><strong>Exiting Interactive Mode</strong></p>
<p>To exit the interactive mode, type <code>/bye</code> or press <code>Ctrl+D</code>.</p>
<h2 id="Single-Command-Interaction"><a href="#Single-Command-Interaction" class="headerlink" title="Single Command Interaction"></a>Single Command Interaction</h2><p>If you only need the model to generate a single response, you can pass the input directly through the command line.</p>
<h3 id="Using-Pipe-Input"><a href="#Using-Pipe-Input" class="headerlink" title="Using Pipe Input"></a>Using Pipe Input</h3><p>You can pipe input to the model:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Who are you?&quot;</span> | ollama run deepseek-r1:1.5b</span><br></pre></td></tr></table></figure>
<p>Output:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;echo &quot;Who are you?&quot; | ollama run deepseek-r1:1.5b</span><br><span class="line">&lt;think&gt;</span><br><span class="line"></span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">Greetings! I&#x27;m DeepSeek-R1, an artificial intelligence assistant created by DeepSeek. I&#x27;m at your service and would be delighted to assist you with any inquiries or tasks you may have.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;</span><br></pre></td></tr></table></figure>
<h3 id="Using-Command-Line-Arguments"><a href="#Using-Command-Line-Arguments" class="headerlink" title="Using Command-Line Arguments"></a>Using Command-Line Arguments</h3><p>You can also pass input directly as a command-line argument:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1:1.5b <span class="string">&quot;Python hello world code?&quot;</span></span><br></pre></td></tr></table></figure>
<p>Output:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ollama run deepseek-r1:1.5b &quot;Python hello world code?&quot;</span><br><span class="line">&lt;think&gt;</span><br><span class="line"></span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">Of course! Here&#x27;s a simple &quot;Hello World&quot; program in Python:</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">print(&quot;Hello, World!&quot;)</span><br><span class="line">\```</span><br><span class="line"></span><br><span class="line">When you run this code, it will output:</span><br><span class="line"></span><br><span class="line">\```</span><br><span class="line">Hello, World!</span><br><span class="line">\```</span><br><span class="line"></span><br><span class="line">Let me know if you&#x27;d like to see a more complex example or different functionality!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;</span><br><span class="line">\```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## Multi-Turn Conversations</span><br><span class="line">Ollama supports multi-turn conversations, allowing the model to remember context.</span><br><span class="line"></span><br><span class="line">**Example:**</span><br><span class="line"></span><br><span class="line">```plain</span><br><span class="line">&gt;&gt;&gt; Hi, can you help me write some Python code?</span><br><span class="line">&lt;think&gt;</span><br><span class="line">Okay, the user asked if I can help them write some Python code. I need to respond by offering assistance with any specific tasks they have in mind.</span><br><span class="line"></span><br><span class="line">I should let them know I&#x27;m here to assist with programming, problem-solving, or just general support. Maybe I&#x27;ll suggest a few things to get them started.</span><br><span class="line"></span><br><span class="line">I want to make sure my response is welcoming and encourages them to provide more details about what they need help with.</span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">Of course! I&#x27;d be happy to help you write Python code. What specific tasks do you need assistance with? Whether it&#x27;s solving a problem, implementing a feature, or just getting some advice, let me know so</span><br><span class="line">I can assist effectively!</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; I want to write a function to calculate the Fibonacci sequence.</span><br><span class="line">&lt;think&gt;</span><br><span class="line">Alright, the user wants a function to calculate the Fibonacci sequence. I should create a clear and functional Python function for them.</span><br><span class="line"></span><br><span class="line">First, I&#x27;ll outline the steps: the Fibonacci sequence starts with 0 and 1, each subsequent number is the sum of the previous two. The function will take an integer n and return the nth term in the</span><br><span class="line">sequence.</span><br><span class="line"></span><br><span class="line">I need to handle cases where n is larger than a certain value, like when it&#x27;s over 47 because beyond that, the numbers get too big for Python&#x27;s integers to manage efficiently. I&#x27;ll also consider using</span><br><span class="line">memoization to optimize performance by storing previously calculated values.</span><br><span class="line"></span><br><span class="line">I should write a helper function inside fib to make the code cleaner and more readable. This helper will compute the nth Fibonacci number using an iterative approach with caching.</span><br><span class="line"></span><br><span class="line">Finally, I&#x27;ll test the function with known inputs like n=0, 1, 2, etc., to ensure it works correctly.</span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">Sure! Let&#x27;s create a Python function called `fibonacci` that calculates the nth term in the Fibonacci sequence. The Fibonacci sequence is defined by starting with 0 and 1, where each subsequent number is</span><br><span class="line">the sum of the previous two numbers.</span><br><span class="line"></span><br><span class="line">Here&#x27;s how we can implement this:</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">def fibonacci(n):</span><br><span class="line">    # Check if n is a positive integer</span><br><span class="line">    if not isinstance(n, int) or n &lt; 0:</span><br><span class="line">        raise ValueError(&quot;n must be a non-negative integer&quot;)</span><br><span class="line"></span><br><span class="line">    # Base cases: F(0) = 0 and F(1) = 1</span><br><span class="line">    if n == 0:</span><br><span class="line">        return 0</span><br><span class="line">    elif n == 1:</span><br><span class="line">        return 1</span><br><span class="line"></span><br><span class="line">    # Create a memoization table to store previously computed values</span><br><span class="line">    fib_sequence = [0, 1]  # Initialize with F(0), F(1)</span><br><span class="line"></span><br><span class="line">    # Iterate from 2 to n-1 to compute the sequence up to F(n)</span><br><span class="line">    for i in range(2, n):</span><br><span class="line">        next_val = fib_sequence[i-2] + fib_sequence[i-1]</span><br><span class="line">        fib_sequence.append(next_val)</span><br><span class="line"></span><br><span class="line">    return fib_sequence[n - 1]</span><br><span class="line"></span><br><span class="line"># Test the function</span><br><span class="line">print(fibonacci(0))   # Output: 0</span><br><span class="line">print(fibonacci(1))   # Output: 1</span><br><span class="line">print(fibonacci(5))   # Output: 5 (F(5) = F(4) + F(3) = 3 + 2)</span><br><span class="line">\```</span><br><span class="line"></span><br><span class="line">### Explanation:</span><br><span class="line">1. **Base Cases**: The function starts with the base cases where `n=0` returns 0 and `n=1` returns 1.</span><br><span class="line">2. **Memoization**: We use a list called `fib_sequence` to store each computed Fibonacci number, which allows us to reuse previously calculated values and improve efficiency.</span><br><span class="line">3. **Iterative Calculation**: For numbers larger than the base cases, we iterate from 2 up to `n-1`, computing each value as the sum of the previous two in the sequence and appending it to the list.</span><br><span class="line">4. **Return Result**: Finally, we return the nth Fibonacci number by accessing the (n-1)th index of the `fib_sequence` list.</span><br><span class="line"></span><br><span class="line">This implementation is efficient for calculating Fibonacci numbers up to n=47 or beyond due to its use of memoization.</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; Send a message (/? for help)</span><br></pre></td></tr></table></figure>
<h2 id="File-Input"><a href="#File-Input" class="headerlink" title="File Input"></a>File Input</h2><p>You can also pass the contents of a file as input to the model.</p>
<p>For example, if the content of the <code>input.txt</code> file is:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Write a Python function to calculate the Fibonacci sequence.</span><br></pre></td></tr></table></figure>
<p>You can pass the file content as input:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run deepseek-r1:1.5b &lt; input.txt</span><br></pre></td></tr></table></figure>
<h2 id="Custom-Prompts"><a href="#Custom-Prompts" class="headerlink" title="Custom Prompts"></a>Custom Prompts</h2><p>You can define custom prompts or system instructions using a <code>Modelfile</code>, allowing the model to follow specific rules during interactions.</p>
<p><strong>Creating a Custom Model</strong></p>
<p>Write a <code>Modelfile</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FROM deepseek-r1:1.5b</span><br><span class="line">SYSTEM &quot;You are a programming assistant specialized in helping users write code.&quot;</span><br></pre></td></tr></table></figure>
<p>Then create a custom model:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama create coder-assistant -f Modelfile</span><br></pre></td></tr></table></figure>
<p>The output looks something like this:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gathering model components</span><br><span class="line">using existing layer sha256:aabd4debf0c8f08881923f2c25fc0fdeed24435271c2b3e92c4af36704040dbc</span><br><span class="line">using existing layer sha256:369ca498f347f710d068cbb38bf0b8692dd3fa30f30ca2ff755e211c94768150</span><br><span class="line">using existing layer sha256:6e4c38e1172f42fdbff13edf9a7a017679fb82b0fde415a3e8b3c31c6ed4a4e4</span><br><span class="line">creating new layer sha256:1036dcfe8bb2a3490d61eb73e932ffa8ae134954295de3e1e575191fbb26ea66</span><br><span class="line">using existing layer sha256:f4d24e9138dd4603380add165d2b0d970bef471fac194b436ebd50e6147c6588</span><br><span class="line">writing manifest</span><br><span class="line">success</span><br></pre></td></tr></table></figure>
<p>Run the custom model:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama run coder-assistant</span><br></pre></td></tr></table></figure>
<p>For example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\Downloads&gt;ollama run coder-assistant</span><br><span class="line">&gt;&gt;&gt; write a Python function that calculates the number of divisors of a given number</span><br><span class="line">&lt;think&gt;</span><br><span class="line">Okay, I need to write a Python function called count_divisors that takes a number as input and returns the total number of its divisors. Let me think about how to approach this.</span><br><span class="line"></span><br><span class="line">First, what is a divisor? It&#x27;s any integer that can divide the number without leaving a remainder. So for example, the divisors of 6 are 1, 2, 3, and 6.</span><br><span class="line"></span><br><span class="line">I remember from math class that one way to find all divisors of a number efficiently is by checking divisibility up to the square root of the number. This works because if there&#x27;s a divisor larger than</span><br><span class="line">the square root, it must pair with a smaller divisor. So I can iterate from 1 up to sqrt(n) and check for divisors.</span><br><span class="line"></span><br><span class="line">Wait, but what about numbers that are perfect squares? They have an odd square root, so in those cases, I need to make sure not to double count by handling the square root separately.</span><br><span class="line"></span><br><span class="line">Let me outline the steps:</span><br><span class="line"></span><br><span class="line">1. Initialize a counter to keep track of how many divisors there are.</span><br><span class="line">2. Iterate from 1 up to the integer part of sqrt(n).</span><br><span class="line">3. For each number i in this range, check if n is divisible by i (i.e., n % i == 0).</span><br><span class="line">4. If it is divisible, add both i and n/i to the count, but only once if they are different.</span><br><span class="line">5. Handle the case where i is exactly sqrt(n) separately to avoid adding the same divisor twice.</span><br><span class="line"></span><br><span class="line">Wait, another point: when I find a pair (i, j) such that i * j = n, I should make sure not to count both unless necessary. So for each i from 1 to sqrt(n), if it divides n, then if i is different from</span><br><span class="line">n/i, we count both. If i and n/i are the same (like when n is a perfect square), we only count once.</span><br><span class="line"></span><br><span class="line">Alternatively, another approach is to check each number starting from 1 up to sqrt(n). For each divisor i found, increment the count by 2 unless i is exactly sqrt(n) in which case we only add 1. But I</span><br><span class="line">think handling it as adding both when possible might be clearer for someone learning.</span><br><span class="line"></span><br><span class="line">Let me test this logic with an example. Take n = 6:</span><br><span class="line"></span><br><span class="line">- Start with i=1: 6 % 1 ==0, so check if 1 and 6/1 are different (which they are). Count +=2 → count is now 2.</span><br><span class="line">- Next i=2: 6%2==0, 2 !=3. So again, add 2 → count becomes 4.</span><br><span class="line">- i=3: sqrt(6) ≈2.45, so we stop before i=3? Wait, no, wait. The loop should run from 1 up to int(sqrt(n)) inclusive.</span><br><span class="line"></span><br><span class="line">Wait, in the example for n=6, sqrt(6) is about 2.449, so the integer part is 2. So i will go up to 2, and we don&#x27;t get to i=3 because that&#x27;s beyond the square root. But wait, if I do int(math.sqrt(n)),</span><br><span class="line">which in Python is done by import math.</span><br><span class="line"></span><br><span class="line">Wait, no, actually, for n=6, sqrt(n) is approximately 2.45, so int(sqrt(6)) would be 2. So i will run from 1 to 2 inclusive. Then after that, if there&#x27;s a pair beyond the square root, we need to account</span><br><span class="line">for it.</span><br><span class="line"></span><br><span class="line">Wait no, in this case, when n=6 and i is 2, 6%2 ==0. But then j would be 3, which is greater than sqrt(6), so our current approach of checking only up to sqrt(n) doesn&#x27;t account for the larger divisor.</span><br><span class="line">So perhaps we need to adjust.</span><br><span class="line"></span><br><span class="line">Wait, another way: when I find a divisor i in the loop (up to sqrt(n)), if i != n//i, then both are divisors and should be counted. If they are equal, count just once.</span><br><span class="line"></span><br><span class="line">So maybe I can restructure the code:</span><br><span class="line"></span><br><span class="line">Initialize count = 0</span><br><span class="line"></span><br><span class="line">for i from 1 to int(math.sqrt(n)) + 1:  # Wait, no, that would go beyond.</span><br><span class="line"></span><br><span class="line">Wait, better to run i up to and including sqrt(n). So for example, n=6, sqrt(6) is about 2.45, so the integer part is 2. So we loop from 1 to 2 inclusive.</span><br><span class="line"></span><br><span class="line">In each iteration:</span><br><span class="line"></span><br><span class="line">if i divides n (n % i ==0), then j = n // i</span><br><span class="line"></span><br><span class="line">if j !=i → count +=2</span><br><span class="line">else → count +=1</span><br><span class="line"></span><br><span class="line">Wait, but in this case, when I&#x27;m looping up to sqrt(n) and for each i that divides n, if it&#x27;s not equal to j, we add 2. If it is equal to j, which can only happen when the divisor is exactly at sqrt(n),</span><br><span class="line">then we add 1.</span><br><span class="line"></span><br><span class="line">But wait, let me test this logic with n=6:</span><br><span class="line"></span><br><span class="line">i starts at 1: 6%1==0 → j=6. 6 !=1 → count +=2 (count becomes 2)</span><br><span class="line">i=2: 6%2==0 → j=3. 3 !=2 → count +=2 (count is now 4)</span><br><span class="line"></span><br><span class="line">So the function would return 4, which is correct because divisors of 6 are 1,2,3,6.</span><br><span class="line"></span><br><span class="line">Another test case: n=4</span><br><span class="line"></span><br><span class="line">sqrt(4)=2, so i runs from 1 to 2.</span><br><span class="line"></span><br><span class="line">i=1 → j=4 → add 2 → count=2</span><br><span class="line">i=2 → j=2 → since equal, add 1 → count=3. Divisors are 1,2,4.</span><br><span class="line"></span><br><span class="line">So that works.</span><br><span class="line"></span><br><span class="line">Another test case: n=9</span><br><span class="line"></span><br><span class="line">sqrt(9)=3, i runs to 3.</span><br><span class="line"></span><br><span class="line">i=1→j=9→add 2</span><br><span class="line">i=3→j=3→add1</span><br><span class="line">Total count is 3 → divisors of 9 are 1,3,9. Correct.</span><br><span class="line"></span><br><span class="line">So the logic seems solid.</span><br><span class="line"></span><br><span class="line">Now, what about n=0? Well, in mathematics, 0 has infinitely many divisors because any number can divide zero. But since we&#x27;re dealing with integers and trying to compute this function, perhaps it&#x27;s</span><br><span class="line">better to handle edge cases where n is less than or equal to zero.</span><br><span class="line"></span><br><span class="line">Wait, let me think: if the input is a negative number, like -6, what should be done? Divisors of 6 include both positive and negative numbers. For example, divisors of -6 are ±1, ±2, ±3, ±6. So in</span><br><span class="line">that case, the total number would be 8.</span><br><span class="line"></span><br><span class="line">But wait, perhaps I&#x27;m supposed to count all integer divisors, including negatives. But for efficiency, we can note that if n is negative, it&#x27;s equivalent to its absolute value when considering divisors.</span><br><span class="line">Because any divisor of a positive number is also a divisor (with sign) of its negative counterpart.</span><br><span class="line"></span><br><span class="line">So the function should probably take the absolute value of the input n, but then in our code, since n can&#x27;t be zero (as per division by zero), perhaps it&#x27;s better to handle that case first.</span><br><span class="line"></span><br><span class="line">But according to the problem statement, I&#x27;m not sure whether n can be 0. But let me think: if someone passes 0 as a number, what is expected? Well, every non-zero integer divides zero, so there are</span><br><span class="line">infinitely many divisors. So in this function, perhaps we should return 0 or raise an error for n=0. Alternatively, perhaps it&#x27;s better to assume that the input will be a positive integer, and handle</span><br><span class="line">negatives by taking their absolute value.</span><br><span class="line"></span><br><span class="line">But since the problem statement does not specify this, I&#x27;ll proceed with assuming that the input is a non-zero integer, as per programming challenges often do. So in code:</span><br><span class="line"></span><br><span class="line">First, import math</span><br><span class="line"></span><br><span class="line">def count_divisors(n):</span><br><span class="line">    if n == 0:</span><br><span class="line">        return 0</span><br><span class="line">    # handle negative numbers by taking absolute value</span><br><span class="line">    n = abs(n)</span><br><span class="line">    count =0</span><br><span class="line">    sqrt_n = int(math.sqrt(n))</span><br><span class="line">    for i in range(1, sqrt_n +1):  # Loop up to and including sqrt_n</span><br><span class="line">        if n %i ==0:</span><br><span class="line">            j = n // i</span><br><span class="line">            if i !=j:</span><br><span class="line">                count +=2</span><br><span class="line">            else:</span><br><span class="line">                count +=1</span><br><span class="line">    return count</span><br><span class="line"></span><br><span class="line">Wait, but let me test this for n=6:</span><br><span class="line"></span><br><span class="line">sqrt(6)=2.45 → int is 2.</span><br><span class="line"></span><br><span class="line">Loop runs i from 1 to 2.</span><br><span class="line"></span><br><span class="line">i=1: j=6 → add 2 → count=2</span><br><span class="line">i=2: j=3 → add 2 → count=4</span><br><span class="line"></span><br><span class="line">Correct.</span><br><span class="line"></span><br><span class="line">Another test case, n=0: function returns 0. But since in code we return 0 for n==0 and let it be handled by the user if n is zero. Maybe that&#x27;s better than returning an error because the problem</span><br><span class="line">statement didn&#x27;t specify handling n=0.</span><br><span class="line"></span><br><span class="line">So this should work.</span><br><span class="line">&lt;/think&gt;</span><br><span class="line"></span><br><span class="line">To calculate the number of divisors of a given non-zero integer, follow these steps:</span><br><span class="line"></span><br><span class="line">1. **Handle Special Cases**: If the input number is 0, return 0 since every non-zero number divides 0 infinitely many times, but practically, we&#x27;ll handle it by returning 0 for this problem.</span><br><span class="line">2. **Take Absolute Value**: Convert the number to its absolute value to simplify divisor calculation since divisors of a negative number are the same as their positive counterparts.</span><br><span class="line">3. **Initialize Counters**: Set up a counter to keep track of the total number of divisors.</span><br><span class="line">4. **Calculate Divisors**: Loop from 1 to the square root of the number (inclusive). For each integer `i` in this range:</span><br><span class="line">   - If `i` is a divisor of the number, calculate the corresponding divisor `j = number / i`.</span><br><span class="line">   - If `i` and `j` are equal, add 1 to the count. Otherwise, add 2 to the count (since both `i` and `j`) are valid divisors.</span><br><span class="line">5. **Return Result**: After processing all potential divisors up to the square root, return the total count of divisors.</span><br><span class="line"></span><br><span class="line">Here&#x27;s a Python implementation that follows these steps:</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line">def count_divisors(n):</span><br><span class="line">    if n == 0:</span><br><span class="line">        return 0  # Handle zero as per problem statement</span><br><span class="line"></span><br><span class="line">    n = abs(n)  # Convert to positive number for divisor calculation purposes</span><br><span class="line"></span><br><span class="line">    total_divisors = 0</span><br><span class="line">    sqrt_n = int(math.sqrt(n))</span><br><span class="line"></span><br><span class="line">    for i in range(1, sqrt_n + 1):</span><br><span class="line">        if n % i == 0:</span><br><span class="line">            j = n // i</span><br><span class="line">            if i != j:</span><br><span class="line">                total_divisors += 2</span><br><span class="line">            else:</span><br><span class="line">                total_divisors += 1</span><br><span class="line"></span><br><span class="line">    return total_divisors</span><br><span class="line"></span><br><span class="line"># Example usage:</span><br><span class="line">print(count_divisors(6))  # Output: 4 (divisors are 1, 2, 3, 6)</span><br><span class="line">`` `</span><br><span class="line"></span><br><span class="line">This function efficiently calculates the number of divisors by leveraging mathematical properties and reducing redundant checks.</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Interacting with the Ollama API</title>
    <url>/2025/01/29/ollama-api/</url>
    <content><![CDATA[<p>Ollama provides an HTTP-based API that allows developers to programmatically interact with its models. This guide will walk you through the detailed usage of the Ollama API, including request formats, response formats, and example code.</p>
<h2 id="Starting-the-Ollama-Service"><a href="#Starting-the-Ollama-Service" class="headerlink" title="Starting the Ollama Service"></a>Starting the Ollama Service</h2><p>Before using the API, ensure the Ollama service is running. You can start it with the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ollama serve</span><br></pre></td></tr></table></figure>
<p>By default, the service runs at <code>http://localhost:11434</code>.</p>
<p><img src="https://cdn.nlark.com/yuque/0/2025/png/22047870/1739007957086-3355f967-5ef1-4a35-8a64-752e98a06579.png" alt=""></p>
<blockquote>
<p>All endpoints start with: <code>http://localhost:11434</code></p>
</blockquote>
<h2 id="Conventions"><a href="#Conventions" class="headerlink" title="Conventions"></a>Conventions</h2><p><strong>Model Names</strong></p>
<p>Model names follow a <code>model:tag</code> format. The <code>model</code> part can include an optional namespace, like <code>example/model</code>. For instance, <code>deepseek-r1:14b</code> and <code>llama3.2:1b</code> are valid examples. The <code>tag</code> is optional and defaults to <code>latest</code> if not specified. It’s used to pinpoint a specific version of the model.  </p>
<p><strong>Durations</strong></p>
<p>All durations are measured and returned in nanoseconds.</p>
<p><strong>Streaming Responses</strong></p>
<p>Some endpoints stream responses as JSON objects. You can disable streaming by passing <code>&#123;&quot;stream&quot;: false&#125;</code> in the request for these endpoints.  </p>
<h2 id="API-Endpoints"><a href="#API-Endpoints" class="headerlink" title="API Endpoints"></a>API Endpoints</h2><p>Ollama offers several key API endpoints:</p>
<h3 id="Generate-Text"><a href="#Generate-Text" class="headerlink" title="Generate Text"></a>Generate Text</h3><p>Sends a prompt to the model and retrieves the generated text.</p>
<p><strong>HTTP Method:</strong> <code>POST</code></p>
<p><strong>URL:</strong> <code>/api/generate</code></p>
<p><strong>Parameters</strong></p>
<ul>
<li><code>model</code>: (required) the model name</li>
<li><code>prompt</code>: the prompt to generate a response for</li>
<li><code>suffix</code>: the text after the model response</li>
<li><code>images</code>: (optional) a list of base64-encoded images (for multimodal models such as <code>llava</code>)</li>
</ul>
<p><strong>Advanced Parameters (Optional):</strong></p>
<ul>
<li><code>format</code>: the format to return a response in. Format can be <code>json</code> or a JSON schema</li>
<li><code>options</code>: additional model parameters listed in the documentation for the <a href="https://github.com/ollama/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values">Modelfile</a> such as <code>temperature</code></li>
<li><code>system</code>: system message to (overrides what is defined in the <code>Modelfile</code>)</li>
<li><code>template</code>: the prompt template to use (overrides what is defined in the <code>Modelfile</code>)</li>
<li><code>stream</code>: if <code>false</code> the response will be returned as a single response object, rather than a stream of objects</li>
<li><code>raw</code>: if <code>true</code> no formatting will be applied to the prompt. You may choose to use the <code>raw</code> parameter if you are specifying a full templated prompt in your request to the API</li>
<li><code>keep_alive</code>: controls how long the model will stay loaded into memory following the request (default: <code>5m</code>)</li>
<li><code>context</code> (deprecated): the context parameter returned from a previous request to <code>/generate</code>, this can be used to keep a short conversational memory</li>
</ul>
<p><strong>Request Format</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;model-name&gt;&quot;</span><span class="punctuation">,</span>  <span class="comment">// Model name</span></span><br><span class="line">  <span class="attr">&quot;prompt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;input-text&gt;&quot;</span><span class="punctuation">,</span> <span class="comment">// Input prompt</span></span><br><span class="line">  <span class="attr">&quot;stream&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>          <span class="comment">// Enable streaming (default: false)</span></span><br><span class="line">  <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>              <span class="comment">// Optional parameters</span></span><br><span class="line">    <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">0.7</span><span class="punctuation">,</span>     <span class="comment">// Temperature setting</span></span><br><span class="line">    <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">100</span>       <span class="comment">// Maximum token count</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><strong>Response Format</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;response&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;generated-text&gt;&quot;</span><span class="punctuation">,</span> <span class="comment">// Generated text</span></span><br><span class="line">  <span class="attr">&quot;done&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                    <span class="comment">// Whether the task is complete</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>Important</strong><br>It’s important to instruct the model to use JSON in the <code>prompt</code>. Otherwise, the model may generate large amounts whitespace.</p>
</blockquote>
<p><strong>Request Example:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://localhost:11434/api/generate --data <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    &quot;model&quot;: &quot;llama3.2:1b&quot;,</span></span><br><span class="line"><span class="string">    &quot;prompt&quot;: &quot;Write a bubble sort algorithm in Python&quot;,</span></span><br><span class="line"><span class="string">    &quot;format&quot;: &quot;json&quot;,</span></span><br><span class="line"><span class="string">    &quot;stream&quot;: false,</span></span><br><span class="line"><span class="string">    &quot;options&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;temperature&quot;: 0.7,</span></span><br><span class="line"><span class="string">        &quot;max_tokens&quot;: 100</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p><strong>Response (Success):</strong></p>
<p>A stream of JSON objects is returned:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;llama3.2:1b&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-02-08T10:58:03.1357634Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;response&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;\n\n\n    \&quot;bubble_sort\&quot;: [\n        &#123;\&quot;algorithm\&quot;: \&quot;Bubble Sort\&quot;, \&quot;description\&quot;: \&quot;Sorts the list by repeatedly swapping the adjacent elements if they are in wrong order\&quot;&#125;,\n        &#123;\&quot;steps\&quot;: &#123;\n            \&quot;n\&quot;: 10,  \&quot;list\&quot;: [4, 2, 9, 6, 5, 1, 8, 3, 7, 0],\n            \&quot;expected\&quot;: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n        &#125;&#125;\n    ]\n&#125;\n\n    \n\n\n   &quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;done&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;done_reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stop&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;context&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="number">128006</span><span class="punctuation">,</span><span class="number">9125</span><span class="punctuation">,</span><span class="number">128007</span><span class="punctuation">,</span><span class="number">271</span><span class="punctuation">,</span><span class="number">38766</span><span class="punctuation">,</span><span class="number">1303</span><span class="punctuation">,</span><span class="number">33025</span><span class="punctuation">,</span><span class="number">2696</span><span class="punctuation">,</span><span class="number">25</span><span class="punctuation">,</span><span class="number">6790</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">2366</span><span class="punctuation">,</span><span class="number">18</span><span class="punctuation">,</span><span class="number">271</span><span class="punctuation">,</span><span class="number">128009</span><span class="punctuation">,</span><span class="number">128006</span><span class="punctuation">,</span><span class="number">882</span><span class="punctuation">,</span><span class="number">128007</span><span class="punctuation">,</span><span class="number">271</span><span class="punctuation">,</span><span class="number">8144</span><span class="punctuation">,</span><span class="number">264</span><span class="punctuation">,</span><span class="number">24529</span><span class="punctuation">,</span><span class="number">3460</span><span class="punctuation">,</span><span class="number">12384</span><span class="punctuation">,</span><span class="number">304</span><span class="punctuation">,</span><span class="number">13325</span><span class="punctuation">,</span><span class="number">128009</span><span class="punctuation">,</span><span class="number">128006</span><span class="punctuation">,</span><span class="number">78191</span><span class="punctuation">,</span><span class="number">128007</span><span class="punctuation">,</span><span class="number">271</span><span class="punctuation">,</span><span class="number">54732</span><span class="punctuation">,</span><span class="number">262</span><span class="punctuation">,</span><span class="number">330</span><span class="punctuation">,</span><span class="number">78589</span><span class="punctuation">,</span><span class="number">18942</span><span class="punctuation">,</span><span class="number">794</span><span class="punctuation">,</span><span class="number">2330</span><span class="punctuation">,</span><span class="number">286</span><span class="punctuation">,</span><span class="number">5324</span><span class="punctuation">,</span><span class="number">20266</span><span class="punctuation">,</span><span class="number">794</span><span class="punctuation">,</span><span class="number">330</span><span class="punctuation">,</span><span class="number">76878</span><span class="punctuation">,</span><span class="number">16347</span><span class="punctuation">,</span><span class="number">498</span><span class="punctuation">,</span><span class="number">330</span><span class="punctuation">,</span><span class="number">4789</span><span class="punctuation">,</span><span class="number">794</span><span class="punctuation">,</span><span class="number">330</span><span class="punctuation">,</span><span class="number">10442</span><span class="punctuation">,</span><span class="number">82</span><span class="punctuation">,</span><span class="number">279</span><span class="punctuation">,</span><span class="number">1160</span><span class="punctuation">,</span><span class="number">555</span><span class="punctuation">,</span><span class="number">19352</span><span class="punctuation">,</span><span class="number">64819</span><span class="punctuation">,</span><span class="number">279</span><span class="punctuation">,</span><span class="number">24894</span><span class="punctuation">,</span><span class="number">5540</span><span class="punctuation">,</span><span class="number">422</span><span class="punctuation">,</span><span class="number">814</span><span class="punctuation">,</span><span class="number">527</span><span class="punctuation">,</span><span class="number">304</span><span class="punctuation">,</span><span class="number">5076</span><span class="punctuation">,</span><span class="number">2015</span><span class="punctuation">,</span><span class="number">7260</span><span class="punctuation">,</span><span class="number">286</span><span class="punctuation">,</span><span class="number">5324</span><span class="punctuation">,</span><span class="number">25047</span><span class="punctuation">,</span><span class="number">794</span><span class="punctuation">,</span><span class="number">341</span><span class="punctuation">,</span><span class="number">310</span><span class="punctuation">,</span><span class="number">330</span><span class="punctuation">,</span><span class="number">77</span><span class="punctuation">,</span><span class="number">794</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">605</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">330</span><span class="punctuation">,</span><span class="number">1638</span><span class="punctuation">,</span><span class="number">794</span><span class="punctuation">,</span><span class="number">510</span><span class="punctuation">,</span><span class="number">19</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">17</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">24</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">21</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">16</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">23</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">18</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">22</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">15</span><span class="punctuation">,</span><span class="number">1282</span><span class="punctuation">,</span><span class="number">310</span><span class="punctuation">,</span><span class="number">330</span><span class="punctuation">,</span><span class="number">7475</span><span class="punctuation">,</span><span class="number">794</span><span class="punctuation">,</span><span class="number">510</span><span class="punctuation">,</span><span class="number">15</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">16</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">17</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">18</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">19</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">20</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">21</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">22</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">23</span><span class="punctuation">,</span><span class="number">11</span><span class="punctuation">,</span><span class="number">220</span><span class="punctuation">,</span><span class="number">24</span><span class="punctuation">,</span><span class="number">933</span><span class="punctuation">,</span><span class="number">286</span><span class="punctuation">,</span><span class="number">8256</span><span class="punctuation">,</span><span class="number">262</span><span class="punctuation">,</span><span class="number">5243</span><span class="punctuation">,</span><span class="number">633</span><span class="punctuation">,</span><span class="number">62539</span><span class="punctuation">,</span><span class="number">262</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total_duration&quot;</span><span class="punctuation">:</span> <span class="number">6768781400</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;load_duration&quot;</span><span class="punctuation">:</span> <span class="number">22301300</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prompt_eval_count&quot;</span><span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prompt_eval_duration&quot;</span><span class="punctuation">:</span> <span class="number">249000000</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eval_count&quot;</span><span class="punctuation">:</span> <span class="number">126</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eval_duration&quot;</span><span class="punctuation">:</span> <span class="number">6494000000</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>The final response in the stream also includes additional data about the generation:</p>
<ul>
<li><code>total_duration</code>: time spent generating the response</li>
<li><code>load_duration</code>: time spent in nanoseconds loading the model</li>
<li><code>prompt_eval_count</code>: number of tokens in the prompt</li>
<li><code>prompt_eval_duration</code>: time spent in nanoseconds evaluating the prompt</li>
<li><code>eval_count</code>: number of tokens in the response</li>
<li><code>eval_duration</code>: time in nanoseconds spent generating the response</li>
<li><code>context</code>: an encoding of the conversation used in this response, this can be sent in the next request to keep a conversational memory</li>
<li><code>response</code>: empty if the response was streamed, if not streamed, this will contain the full response</li>
</ul>
<p>To calculate how fast the response is generated in tokens per second (token/s), divide <code>eval_count / eval_duration * 10^9</code>.</p>
<h3 id="Chat"><a href="#Chat" class="headerlink" title="Chat"></a>Chat</h3><p>Supports multi-turn conversations, with the model retaining context.</p>
<p><strong>HTTP Method:</strong> <code>POST</code></p>
<p><strong>URL:</strong> <code>/api/chat</code></p>
<p><strong>Parameters:</strong></p>
<ul>
<li><code>model</code>: (required) the model name</li>
<li><code>messages</code>: the messages of the chat, this can be used to keep a chat memory</li>
<li><code>tools</code>: list of tools in JSON for the model to use if supported</li>
</ul>
<p>The <code>message</code> object has the following fields:</p>
<ul>
<li><code>role</code>: the role of the message, either <code>system</code>, <code>user</code>, <code>assistant</code>, or <code>tool</code></li>
<li><code>content</code>: the content of the message</li>
<li><code>images</code> (optional): a list of images to include in the message (for multimodal models such as <code>llava</code>)</li>
<li><code>tool_calls</code> (optional): a list of tools in JSON that the model wants to use</li>
</ul>
<p><strong>Advanced parameters (optional):</strong></p>
<ul>
<li><code>format</code>: the format to return a response in. Format can be <code>json</code> or a JSON schema.</li>
<li><code>options</code>: additional model parameters listed in the documentation for the <a href="https://github.com/ollama/ollama/blob/main/docs/modelfile.md#valid-parameters-and-values">Modelfile</a> such as <code>temperature</code></li>
<li><code>stream</code>: if <code>false</code> the response will be returned as a single response object, rather than a stream of objects</li>
<li><code>keep_alive</code>: controls how long the model will stay loaded into memory following the request (default: <code>5m</code>)</li>
</ul>
<p><strong>Request Format</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;model-name&gt;&quot;</span><span class="punctuation">,</span>  <span class="comment">// Model name</span></span><br><span class="line">  <span class="attr">&quot;messages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>             <span class="comment">// List of messages</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span>       <span class="comment">// User role</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;input-text&gt;&quot;</span> <span class="comment">// User input</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;stream&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>          <span class="comment">// Enable streaming</span></span><br><span class="line">  <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>              <span class="comment">// Optional parameters</span></span><br><span class="line">    <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">0.7</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><strong>Response Format</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span>    <span class="comment">// Assistant role</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;generated-text&gt;&quot;</span> <span class="comment">// Generated text</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;done&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="List-Local-Models"><a href="#List-Local-Models" class="headerlink" title="List Local Models"></a>List Local Models</h3><p>Lists all locally downloaded models.</p>
<p><strong>HTTP Method:</strong> <code>POST</code></p>
<p><strong>URL:</strong> <code>/api/tag</code></p>
<p><strong>Response Format:</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;model-name&gt;&quot;</span><span class="punctuation">,</span> <span class="comment">// Model name</span></span><br><span class="line">      <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;model-size&gt;&quot;</span><span class="punctuation">,</span> <span class="comment">// Model size</span></span><br><span class="line">      <span class="attr">&quot;modified_at&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;timestamp&gt;&quot;</span> <span class="comment">// Last modified timestamp</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="Pull-a-Model"><a href="#Pull-a-Model" class="headerlink" title="Pull a Model"></a>Pull a Model</h3><p>Downloads a model from the model repository.</p>
<p><strong>HTTP Method:</strong> <code>POST</code></p>
<p><strong>URL:</strong> <code>/api/pull</code></p>
<p><strong>Parameters</strong></p>
<ul>
<li><code>model</code>: name of the model to pull</li>
<li><code>insecure</code>: (optional) allow insecure connections to the library. Only use this if you are pulling from your own library during development.</li>
<li><code>stream</code>: (optional) if <code>false</code> the response will be returned as a single response object, rather than a stream of objects</li>
</ul>
<p><strong>Request Format</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;model-name&gt;&quot;</span> <span class="comment">// Model name</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><strong>Response Format</strong>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;downloading&quot;</span><span class="punctuation">,</span> <span class="comment">// Download status</span></span><br><span class="line">  <span class="attr">&quot;digest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;model-digest&gt;&quot;</span> <span class="comment">// Model digest</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="Usage-Examples"><a href="#Usage-Examples" class="headerlink" title="Usage Examples"></a>Usage Examples</h2><h3 id="Generate-Text-1"><a href="#Generate-Text-1" class="headerlink" title="Generate Text"></a>Generate Text</h3><p>Using <code>curl</code> to send a request:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://localhost:11434/api/generate -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;model&quot;: &quot;deepseek-coder&quot;,</span></span><br><span class="line"><span class="string">  &quot;prompt&quot;: &quot;Can you help me write some code?&quot;,</span></span><br><span class="line"><span class="string">  &quot;stream&quot;: false</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="Multi-turn-Chat"><a href="#Multi-turn-Chat" class="headerlink" title="Multi-turn Chat"></a>Multi-turn Chat</h3><p>Using <code>curl</code> to send a request:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://localhost:11434/api/chat -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;model&quot;: &quot;deepseek-coder&quot;,</span></span><br><span class="line"><span class="string">  &quot;messages&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;role&quot;: &quot;user&quot;,</span></span><br><span class="line"><span class="string">      &quot;content&quot;: &quot;Can you help me write a Python script?&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ],</span></span><br><span class="line"><span class="string">  &quot;stream&quot;: false</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="List-Local-Models-1"><a href="#List-Local-Models-1" class="headerlink" title="List Local Models"></a>List Local Models</h3><p>Using <code>curl</code> to send a request:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://localhost:11434/api/tags</span><br></pre></td></tr></table></figure>
<h3 id="Pull-a-Model-1"><a href="#Pull-a-Model-1" class="headerlink" title="Pull a Model"></a>Pull a Model</h3><p>Using <code>curl</code> to send a request:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://localhost:11434/api/pull -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;name&quot;: &quot;deepseek-coder&quot;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="Streaming-Responses"><a href="#Streaming-Responses" class="headerlink" title="Streaming Responses"></a>Streaming Responses</h2><p>Ollama supports streaming responses, which is useful for real-time text generation.</p>
<h3 id="Enabling-Streaming"><a href="#Enabling-Streaming" class="headerlink" title="Enabling Streaming"></a>Enabling Streaming</h3><p>Set <code>&quot;stream&quot;: true</code> in the request to receive responses line by line.</p>
<p>Example:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://localhost:11434/api/generate -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;model&quot;: &quot;deepseek-coder&quot;,</span></span><br><span class="line"><span class="string">  &quot;prompt&quot;: &quot;Can you help me write some code?&quot;,</span></span><br><span class="line"><span class="string">  &quot;stream&quot;: true</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="Response-Format"><a href="#Response-Format" class="headerlink" title="Response Format"></a>Response Format</h3><p>Each line returns a JSON object:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;response&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;partial-text&gt;&quot;</span><span class="punctuation">,</span> <span class="comment">// Partially generated text</span></span><br><span class="line">  <span class="attr">&quot;done&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span>                 <span class="comment">// Whether the task is complete</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="Programming-Language-Examples"><a href="#Programming-Language-Examples" class="headerlink" title="Programming Language Examples"></a>Programming Language Examples</h2><h3 id="Python-using-requests-library"><a href="#Python-using-requests-library" class="headerlink" title="Python (using requests library)"></a>Python (using <code>requests</code> library)</h3><p>Generate Text:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.post(</span><br><span class="line">    <span class="string">&quot;http://localhost:11434/api/generate&quot;</span>,</span><br><span class="line">    json=&#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: <span class="string">&quot;deepseek-coder&quot;</span>,</span><br><span class="line">        <span class="string">&quot;prompt&quot;</span>: <span class="string">&quot;Can you help me write some code?&quot;</span>,</span><br><span class="line">        <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(response.json())</span><br></pre></td></tr></table></figure>
<p>Multi-turn Chat:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">response = requests.post(</span><br><span class="line">    <span class="string">&quot;http://localhost:11434/api/chat&quot;</span>,</span><br><span class="line">    json=&#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: <span class="string">&quot;deepseek-coder&quot;</span>,</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">                <span class="string">&quot;content&quot;</span>: <span class="string">&quot;Can you help me write a Python script?&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(response.json())</span><br></pre></td></tr></table></figure>
<h3 id="JavaScript-using-fetch-API"><a href="#JavaScript-using-fetch-API" class="headerlink" title="JavaScript (using fetch API)"></a>JavaScript (using <code>fetch</code> API)</h3><p>Generate Text:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&quot;http://localhost:11434/api/generate&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span> &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">    <span class="attr">model</span>: <span class="string">&quot;deepseek-coder&quot;</span>,</span><br><span class="line">    <span class="attr">prompt</span>: <span class="string">&quot;Can you help me write some code?&quot;</span>,</span><br><span class="line">    <span class="attr">stream</span>: <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data));</span><br></pre></td></tr></table></figure>
<p>Multi-turn Chat:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&quot;http://localhost:11434/api/chat&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span> &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">    <span class="attr">model</span>: <span class="string">&quot;deepseek-coder&quot;</span>,</span><br><span class="line">    <span class="attr">messages</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">role</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">        <span class="attr">content</span>: <span class="string">&quot;Can you help me write a Python script?&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">stream</span>: <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data));</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>Parameter Name</strong></th>
<th><strong>Type</strong></th>
<th><strong>Requirement</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Header</strong></td>
<td></td>
<td><strong>Required</strong></td>
<td>Request message header.</td>
</tr>
<tr>
<td><strong>Token</strong></td>
<td>String</td>
<td><strong>Required</strong></td>
<td>User token after login. If not logged in, this will be an empty string.</td>
</tr>
<tr>
<td><strong>Version</strong></td>
<td>String</td>
<td><strong>Required</strong></td>
<td>API version number.</td>
</tr>
<tr>
<td><strong>SystemId</strong></td>
<td>Integer</td>
<td><strong>Required</strong></td>
<td>Organization ID, representing the system ID making the request.</td>
</tr>
<tr>
<td><strong>Timestamp</strong></td>
<td>Long</td>
<td><strong>Required</strong></td>
<td>Current UNIX timestamp.</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Ollama Tutorial</category>
      </categories>
      <tags>
        <tag>Ollama</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>How To Run DeepSeek Locally On Windows?</title>
    <url>/2025/02/06/how-to-run-deepseek-locally-on-windows/</url>
    <content><![CDATA[<p>Here is a step-by-step guide on how to run DeepSeek locally on Windows:</p>
<h2 id="Install-Ollama"><a href="#Install-Ollama" class="headerlink" title="Install Ollama"></a>Install Ollama</h2><ol>
<li><strong>Visit the Ollama Website</strong>: Open your web browser and go to <a href="https://ollama.com/">Ollama’s official website</a>.</li>
<li><strong>Download the Windows Installer</strong>: On the <a href="https://ollama.com/download">Ollama download page</a>, click the “Download for Windows” button. Save the file to your computer, usually in the downloads folder.</li>
<li><strong>Run the Installer</strong>: Locate the downloaded file (e.g., OllamaSetup.exe) and double-click to run it. Follow the on-screen instructions to complete the installation.</li>
</ol>
<p><img src="/image/2025/02/0601.png" alt=""></p>
<p><img src="/image/2025/02/0602.png" alt=""></p>
<ol>
<li><strong>Verify Installation</strong>: Open the Command Prompt by pressing Win+R, typing “cmd”, and  hitting Enter. Type “<em>ollama —version</em>“. If installed correctly, it will display the current version of Ollama.</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ollama --version</span><br><span class="line">ollama version is 0.5.7</span><br></pre></td></tr></table></figure>
<p>You can also see this small icon in the Windows taskbar, indicating that Ollama is running successfully.</p>
<p><img src="/image/2025/02/0603.png" alt=""></p>
<h2 id="Install-the-DeepSeek-Model"><a href="#Install-the-DeepSeek-Model" class="headerlink" title="Install the DeepSeek Model"></a>Install the DeepSeek Model</h2><ol>
<li><strong>Visit the Ollama Models Page</strong>: After installing Ollama, go to the <a href="https://ollama.com/library">Ollama models page</a>. Locate the DeepSeek model.</li>
<li><strong>Copy the Installation Command</strong>: You will see commands like “<em>ollama run deepseek-r1:1.5b</em>“. Copy the command corresponding to the model version you want to install.</li>
<li><strong>Modify and Execute the Command</strong>: Open the Command Prompt and instead of “run”, use “pull” to download the model without immediately running it. For example, “<em>ollama pull deepseek-r1:1.5b</em>“. Press Enter and wait for the download to complete.</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\deepseek&gt; ollama pull deepseek<span class="literal">-r1</span>:<span class="number">1.5</span>b</span><br><span class="line">pulling manifest</span><br><span class="line">pulling aabd4debf0c8... <span class="number">100</span>% ▕████████████████████████████████████████████████████████▏ <span class="number">1.1</span> GB</span><br><span class="line">pulling <span class="number">369</span>ca498f347... <span class="number">100</span>% ▕████████████████████████████████████████████████████████▏  <span class="number">387</span> B</span><br><span class="line">pulling <span class="number">6</span>e4c38e1172f... <span class="number">100</span>% ▕████████████████████████████████████████████████████████▏ <span class="number">1.1</span> KB</span><br><span class="line">pulling f4d24e9138dd... <span class="number">100</span>% ▕████████████████████████████████████████████████████████▏  <span class="number">148</span> B</span><br><span class="line">pulling a85fe2a2e58e... <span class="number">100</span>% ▕████████████████████████████████████████████████████████▏  <span class="number">487</span> B</span><br><span class="line">verifying sha256 digest</span><br><span class="line">writing manifest</span><br><span class="line">success</span><br></pre></td></tr></table></figure>
<h2 id="Run-DeepSeek"><a href="#Run-DeepSeek" class="headerlink" title="Run DeepSeek"></a>Run DeepSeek</h2><ol>
<li><strong>Open Command Prompt</strong>: Press Win+R, type “cmd”, and hit Enter.</li>
<li><strong>Start DeepSeek</strong>: Type the command you used for pulling but replace “pull” with “run”. For instance, “<code>ollama run deepseek-r1:1.5b</code>“. Press Enter and the model will start, and you can begin interacting with it.</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ollama run deepseek-r1:1.5b</span><br><span class="line">&gt;&gt;&gt; Send a message (/? for help)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Interact-with-the-Model"><a href="#Interact-with-the-Model" class="headerlink" title="Interact with the Model"></a>Interact with the Model</h2><p>Now, we can chat with the DeepSeek-R1 model. My first question is: <em>How to Install Redis on Ubuntu with Snap?</em></p>
<p><img src="/image/2025/02/0604.png" alt=""></p>
<p>However, using the DeepSeek-R1 model in the Windows Command Prompt has one drawback: your chat history won’t be saved. To fix this, you’ll need to install its user interface.</p>
<h2 id="Optional-Install-a-Graphical-Interface"><a href="#Optional-Install-a-Graphical-Interface" class="headerlink" title="(Optional) Install a Graphical Interface"></a>(Optional) Install a Graphical Interface</h2><ol>
<li><strong>Install Docker</strong>: Download the Docker installer from <a href="https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe?utm_source=docker&amp;utm_medium=webreferral&amp;utm_campaign=docs-driven-download-win-amd64&amp;gl=1rjke9fgcl_auMjAxNTA4ODQwMy4xNzI1ODYzMTMxgaMTc3ODM4NTkyMy4xNzI0MDM2OTcwga_XJWPQMJYHQ*MTczMDI2OTA1NC42LjEuMTczMDI2OTQwNC4zOC4wLjA">Docker’s official website</a>. Run the installer and follow the setup instructions.</li>
<li><strong>Deploy Open WebUI</strong>: After installing Docker, open the command prompt and run the command “docker run -d -p 3000:8080 —add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data —name open-webui —restart always ghcr.io/open-webui/open-webui:main”. Wait for the installation to complete. Then, you can access the DeepSeek interface in your web browser at “localhost:3000”.</li>
</ol>
<p><img src="/image/2025/02/0605.png" alt=""></p>
<p><img src="/image/2025/02/0606.png" alt=""></p>
<p>To set up an account, just enter your name, email, and password. Make sure to remember these details, as you’ll need them every time you open DeepSeek-R1 on localhost.</p>
<p><img src="/image/2025/02/0607.png" alt=""></p>
<p>When you’re ready to exit, sign out of DeepSeek in your web browser by clicking your profile icon in the top-right or bottom-left corner, where you’ll find the sign-out option. Then, open the Docker app and click ‘Stop.’ Once that’s done, you can close Docker.</p>
<p><img src="/image/2025/02/0608.png" alt=""></p>
<p><img src="/image/2025/02/0609.png" alt=""></p>
<p>Keep in mind that for DeepSeek-R1 to work in your web browser locally, both Ollama and Docker need to be running in the background. So, first, open Ollama, then launch Docker. Make sure the container is running in Docker; if it’s not, just start it. Once everything’s up and running, go to localhost:3000 in your browser and sign in with the same account to use DeepSeek-R1.</p>
]]></content>
      <categories>
        <category>Large Language Model</category>
      </categories>
      <tags>
        <tag>LLM</tag>
        <tag>DeepSeek</tag>
      </tags>
  </entry>
</search>
